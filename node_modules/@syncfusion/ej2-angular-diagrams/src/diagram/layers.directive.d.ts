import { ViewContainerRef } from '@angular/core';
import { ComplexBase, ArrayBase } from '@syncfusion/ej2-angular-base';
/**
 * Layers Directive
 * ```html
 * <e-layers>
 * <e-layer></e-layer>
 * </e-layers>
 * ```
 */
import * as ɵngcc0 from '@angular/core';
export declare class LayerDirective extends ComplexBase<LayerDirective> {
    private viewContainerRef;
    directivePropList: any;
    /**
     * Defines the description of the layer
     *
     * @aspdefaultvalueignore
     * @blazordefaultvalueignore
     * @default undefined
     */
    addInfo: any;
    /**
     * Defines the id of a diagram layer
     * @default ''
     */
    id: any;
    /**
     * Enables or disables editing objects in a particular layer
     * @default false
     */
    lock: any;
    /**
     * Defines the collection of the objects that are added to a particular layer
     * @aspdefaultvalueignore
     * @blazordefaultvalueignore
     * @default undefined
     * @isblazornullabletype true
     */
    objects: any;
    /**
     * Enables or disables the visibility of objects in a particular layer
     * @default true
     */
    visible: any;
    /**
     * Defines the zOrder of the layer
     * @default -1
     */
    zIndex: any;
    constructor(viewContainerRef: ViewContainerRef);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<LayerDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<LayerDirective, "e-layers>e-layer", never, { "addInfo": "addInfo"; "id": "id"; "lock": "lock"; "objects": "objects"; "visible": "visible"; "zIndex": "zIndex"; }, {}, never>;
}
/**
 * Layer Array Directive
 * @private
 */
export declare class LayersDirective extends ArrayBase<LayersDirective> {
    constructor();
    static ɵfac: ɵngcc0.ɵɵFactoryDef<LayersDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<LayersDirective, "ej-diagram>e-layers", never, {}, {}, ["children"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5ZXJzLmRpcmVjdGl2ZS5kLnRzIiwic291cmNlcyI6WyJsYXllcnMuZGlyZWN0aXZlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFZpZXdDb250YWluZXJSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbXBsZXhCYXNlLCBBcnJheUJhc2UgfSBmcm9tICdAc3luY2Z1c2lvbi9lajItYW5ndWxhci1iYXNlJztcbi8qKlxuICogTGF5ZXJzIERpcmVjdGl2ZVxuICogYGBgaHRtbFxuICogPGUtbGF5ZXJzPlxuICogPGUtbGF5ZXI+PC9lLWxheWVyPlxuICogPC9lLWxheWVycz5cbiAqIGBgYFxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBMYXllckRpcmVjdGl2ZSBleHRlbmRzIENvbXBsZXhCYXNlPExheWVyRGlyZWN0aXZlPiB7XG4gICAgcHJpdmF0ZSB2aWV3Q29udGFpbmVyUmVmO1xuICAgIGRpcmVjdGl2ZVByb3BMaXN0OiBhbnk7XG4gICAgLyoqXG4gICAgICogRGVmaW5lcyB0aGUgZGVzY3JpcHRpb24gb2YgdGhlIGxheWVyXG4gICAgICpcbiAgICAgKiBAYXNwZGVmYXVsdHZhbHVlaWdub3JlXG4gICAgICogQGJsYXpvcmRlZmF1bHR2YWx1ZWlnbm9yZVxuICAgICAqIEBkZWZhdWx0IHVuZGVmaW5lZFxuICAgICAqL1xuICAgIGFkZEluZm86IGFueTtcbiAgICAvKipcbiAgICAgKiBEZWZpbmVzIHRoZSBpZCBvZiBhIGRpYWdyYW0gbGF5ZXJcbiAgICAgKiBAZGVmYXVsdCAnJ1xuICAgICAqL1xuICAgIGlkOiBhbnk7XG4gICAgLyoqXG4gICAgICogRW5hYmxlcyBvciBkaXNhYmxlcyBlZGl0aW5nIG9iamVjdHMgaW4gYSBwYXJ0aWN1bGFyIGxheWVyXG4gICAgICogQGRlZmF1bHQgZmFsc2VcbiAgICAgKi9cbiAgICBsb2NrOiBhbnk7XG4gICAgLyoqXG4gICAgICogRGVmaW5lcyB0aGUgY29sbGVjdGlvbiBvZiB0aGUgb2JqZWN0cyB0aGF0IGFyZSBhZGRlZCB0byBhIHBhcnRpY3VsYXIgbGF5ZXJcbiAgICAgKiBAYXNwZGVmYXVsdHZhbHVlaWdub3JlXG4gICAgICogQGJsYXpvcmRlZmF1bHR2YWx1ZWlnbm9yZVxuICAgICAqIEBkZWZhdWx0IHVuZGVmaW5lZFxuICAgICAqIEBpc2JsYXpvcm51bGxhYmxldHlwZSB0cnVlXG4gICAgICovXG4gICAgb2JqZWN0czogYW55O1xuICAgIC8qKlxuICAgICAqIEVuYWJsZXMgb3IgZGlzYWJsZXMgdGhlIHZpc2liaWxpdHkgb2Ygb2JqZWN0cyBpbiBhIHBhcnRpY3VsYXIgbGF5ZXJcbiAgICAgKiBAZGVmYXVsdCB0cnVlXG4gICAgICovXG4gICAgdmlzaWJsZTogYW55O1xuICAgIC8qKlxuICAgICAqIERlZmluZXMgdGhlIHpPcmRlciBvZiB0aGUgbGF5ZXJcbiAgICAgKiBAZGVmYXVsdCAtMVxuICAgICAqL1xuICAgIHpJbmRleDogYW55O1xuICAgIGNvbnN0cnVjdG9yKHZpZXdDb250YWluZXJSZWY6IFZpZXdDb250YWluZXJSZWYpO1xufVxuLyoqXG4gKiBMYXllciBBcnJheSBEaXJlY3RpdmVcbiAqIEBwcml2YXRlXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIExheWVyc0RpcmVjdGl2ZSBleHRlbmRzIEFycmF5QmFzZTxMYXllcnNEaXJlY3RpdmU+IHtcbiAgICBjb25zdHJ1Y3RvcigpO1xufVxuIl19