{"version":3,"file":"ej2-diagrams.umd.min.js","sources":["../src/diagram/utility/path-util.js","../src/diagram/primitives/matrix.js","../src/diagram/objects/dictionary/basic-shapes.js","../src/diagram/objects/dictionary/common.js","../src/diagram/objects/dictionary/flow-shapes.js","../src/diagram/utility/connector.js","../src/diagram/objects/tooltip.js","../src/diagram/objects/connector.js","../src/diagram/ruler/ruler.js","../src/diagram/utility/constraints-util.js","../src/diagram/objects/dictionary/umlactivity-shapes.js","../src/diagram/interaction/container-interaction.js","../src/diagram/utility/swim-lane-util.js","../src/diagram/utility/diagram-util.js","../src/diagram/utility/uml-util.js","../src/diagram/utility/dom-util.js","../src/diagram/utility/base-util.js","../src/diagram/interaction/actions.js","../src/diagram/objects/bpmn.js","../src/diagram/layout/symmetrical-layout.js","../src/diagram/primitives/size.js","../src/diagram/primitives/point.js","../src/diagram/primitives/rect.js","../src/diagram/core/appearance.js","../src/diagram/enum/enum.js","../src/diagram/core/elements/diagram-element.js","../src/diagram/core/containers/container.js","../src/diagram/core/elements/text-element.js","../src/diagram/core/containers/canvas.js","../src/diagram/core/elements/path-element.js","../src/diagram/core/elements/image-element.js","../src/diagram/core/elements/native-element.js","../src/diagram/objects/port.js","../src/diagram/objects/annotation.js","../src/diagram/objects/node-base.js","../src/diagram/core/elements/html-element.js","../src/diagram/objects/preview.js","../src/ruler/ruler.js","../src/diagram/interaction/selector.js","../src/diagram/diagram/keyboard-commands.js","../src/diagram/core/containers/grid.js","../src/diagram/objects/icon.js","../src/diagram/core/containers/stack-panel.js","../src/diagram/diagram/layoutinfo.js","../src/diagram/objects/node.js","../src/diagram/rendering/canvas-renderer.js","../src/diagram/rendering/svg-renderer.js","../src/diagram/rendering/renderer.js","../src/diagram/diagram/page-settings.js","../src/diagram/objects/service.js","../src/diagram/diagram/grid-lines.js","../src/diagram/diagram/ruler-settings.js","../src/diagram/diagram/data-mapping.js","../src/diagram/diagram/data-source.js","../src/diagram/layout/layout-base.js","../src/diagram/utility/diff-map.js","../src/diagram/interaction/tool.js","../src/diagram/interaction/connector-editing.js","../src/diagram/interaction/event-handlers.js","../src/diagram/diagram/layer.js","../src/diagram/interaction/command-manager.js","../src/diagram/interaction/scroller.js","../src/diagram/interaction/spatial-search/quad.js","../src/diagram/interaction/spatial-search/spatial-search.js","../src/diagram/diagram/serialization-settings.js","../src/diagram/diagram/custom-cursor.js","../src/diagram/diagram.js","../src/diagram/print-settings.js","../src/diagram/data-binding/data-binding.js","../src/diagram/objects/context-menu.js","../src/diagram/objects/connector-bridging.js","../src/diagram/objects/snapping.js","../src/diagram/objects/undo-redo.js","../src/diagram/objects/layout-animation.js","../src/diagram/interaction/line-routing.js","../src/diagram/layout/hierarchical-tree.js","../src/diagram/layout/mind-map.js","../src/diagram/layout/radial-tree.js","../src/diagram/layout/complex-hierarchical-tree.js","../src/symbol-palette/symbol-palette.js","../src/overview/overview.js"],"sourcesContent":["/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function processPathData(data) {\n    var collection = [];\n    var j;\n    var arrayCollection = parsePathData(data);\n    if (arrayCollection.length > 0) {\n        for (var i = 0; i < arrayCollection.length; i++) {\n            var ob = arrayCollection[i];\n            var char = '';\n            char = ob[0];\n            switch (char.toLowerCase()) {\n                case 'm':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                        if (char === 'm') {\n                            char = 'l';\n                        }\n                        else if (char === 'M') {\n                            char = 'L';\n                        }\n                    }\n                    break;\n                case 'l':\n                case 't':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                    }\n                    break;\n                case 'h':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j] });\n                    }\n                    break;\n                case 'v':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, y: ob[j] });\n                    }\n                    break;\n                case 'z':\n                    collection.push({ command: char });\n                    break;\n                case 'c':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, x1: ob[j], y1: ob[j + 1], x2: ob[j + 2], y2: ob[j + 3], x: ob[j + 4], y: ob[j + 5]\n                        });\n                        j = j + 5;\n                    }\n                    break;\n                case 's':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x2: ob[j], y2: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'q':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x1: ob[j], y1: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'a':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, r1: ob[j], r2: ob[j + 1], angle: ob[j + 2], largeArc: ob[j + 3],\n                            sweep: ob[j + 4], x: ob[j + 5], y: ob[j + 6]\n                        });\n                        j = j + 6;\n                    }\n                    break;\n            }\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function parsePathData(data) {\n    var tokenizer = /([a-z]+)|([+-]?(?:\\d+\\.?\\d*|\\.\\d+))/gi;\n    var current = [];\n    var commands = [];\n    var match = {};\n    tokenizer.lastIndex = 0;\n    var isExponential = false;\n    match = tokenizer.exec(data);\n    while (match) {\n        if (match[1] === 'e') {\n            var s1 = '';\n            isExponential = true;\n        }\n        else if (match[1]) {\n            if (match[1].toLowerCase() === 'zm') {\n                if (current.length) {\n                    commands.push(current);\n                }\n                commands.push(['Z']);\n                current = [match[1].substring(1, 2)];\n            }\n            else {\n                if (current.length) {\n                    commands.push(current);\n                }\n                current = [match[1]];\n            }\n            isExponential = false;\n        }\n        else {\n            if (!current.length) {\n                current = [];\n            }\n            if (!isExponential) {\n                current.push(Number(match[2]));\n            }\n            isExponential = false;\n        }\n        match = tokenizer.exec(data);\n    }\n    if (current.length) {\n        commands.push(current);\n    }\n    return commands;\n}\n/**\n * Used to find the path for rounded rect\n */\nexport function getRectanglePath(cornerRadius, height, width) {\n    var x = 0;\n    var y = 0;\n    var path = '';\n    var points = [{ x: x + cornerRadius, y: y }, { x: x + width - cornerRadius, y: y },\n        { x: x + width, y: y + cornerRadius }, { x: x + width, y: y + height - cornerRadius },\n        { x: x + width - cornerRadius, y: y + height }, { x: x + cornerRadius, y: y + height },\n        { x: x, y: y + height - cornerRadius }, { x: x, y: y + cornerRadius }\n    ];\n    var corners = [{ x: x + width, y: y }, { x: x + width, y: y + height }, { x: x, y: y + height }, { x: x, y: y }];\n    var corner = 0;\n    var point2;\n    var next;\n    path = 'M' + points[0].x + ' ' + points[0].y;\n    var i;\n    for (i = 0; i < points.length; i = i + 2) {\n        point2 = points[i + 1];\n        path += 'L' + point2.x + ' ' + point2.y;\n        next = points[i + 2] || points[0];\n        path += 'Q' + corners[corner].x + ' ' + corners[corner].y + ' ' + next.x + ' ' + next.y;\n        corner++;\n    }\n    return path;\n}\n/**\n * Used to find the path for polygon shapes\n */\nexport function getPolygonPath(collection) {\n    var path = '';\n    var seg;\n    path = 'M' + collection[0].x + ' ' + collection[0].y;\n    var i;\n    for (i = 1; i < collection.length; i++) {\n        seg = collection[i];\n        path += 'L' + seg.x + ' ' + seg.y;\n    }\n    path += 'Z';\n    return path;\n}\n/** @private */\nexport function pathSegmentCollection(collection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var initx;\n    var inity;\n    var segments = [];\n    for (x = 0, y = 0, i = 0, length = collection.length; i < length; ++i) {\n        var obj = collection[i];\n        var seg = obj;\n        var char = '';\n        char = seg.command;\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        var prev = segments[segments.length - 1];\n        switch (char) {\n            case 'M':\n                segments.push({ command: 'M', x: x, y: y });\n                break;\n            case 'L':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y });\n                break;\n            case 'H':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y0 });\n                break;\n            case 'V':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x0, y: y });\n                break;\n            case 'C':\n                segments.push({ command: 'C', x0: x0, y0: y0, x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y });\n                break;\n            case 'S':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'C' || prev.command === 'S') {\n                        ctrl = { x: prev.x2, y: prev.y2 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'C', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x2: x2, y2: y2, x: x, y: y });\n                }\n                break;\n            case 'Q':\n                //ctx.quadraticCurveTo(x1, y1, x, y);\n                segments.push({ command: 'Q', x0: x0, y0: y0, x1: x1, y1: y1, x: x, y: y });\n                break;\n            case 'T':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'Q') {\n                        ctrl = { x: prev.x1, y: prev.y1 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'Q', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x: x, y: y });\n                }\n                break;\n            case 'A':\n                var newSeg = seg;\n                newSeg.command = 'A';\n                segments.push(newSeg);\n                break;\n            case 'Z':\n            case 'z':\n                segments.push({ command: 'Z' });\n                x = x0;\n                y = y0;\n                break;\n        }\n        if (char === 'M' || char === 'm') {\n            initx = x;\n            inity = y;\n        }\n        x0 = x;\n        y0 = y;\n    }\n    return segments;\n}\n/** @private */\nexport function transformPath(arr, sX, sY, s, bX, bY, iX, iY) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var newSeg;\n    for (x = 0, y = 0, i = 0, length = arr.length; i < length; ++i) {\n        var obj = arr[i];\n        var seg = obj;\n        var char = seg.command;\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if (s) {\n            if (x !== undefined) {\n                x = scalePathData(x, sX, bX, iX);\n            }\n            if (y !== undefined) {\n                y = scalePathData(y, sY, bY, iY);\n            }\n            if (x1 !== undefined) {\n                x1 = scalePathData(x1, sX, bX, iX);\n            }\n            if (y1 !== undefined) {\n                y1 = scalePathData(y1, sY, bY, iY);\n            }\n            if (x2 !== undefined) {\n                x2 = scalePathData(x2, sX, bX, iX);\n            }\n            if (y2 !== undefined) {\n                y2 = scalePathData(y2, sY, bY, iY);\n            }\n        }\n        else {\n            if (x !== undefined) {\n                x = Number((x + sX).toFixed(2));\n            }\n            if (y !== undefined) {\n                y = Number((y + sY).toFixed(2));\n            }\n            if (x1 !== undefined) {\n                x1 = Number((x1 + sX).toFixed(2));\n            }\n            if (y1 !== undefined) {\n                y1 = Number((y1 + sY).toFixed(2));\n            }\n            if (x2 !== undefined) {\n                x2 = Number((x2 + sX).toFixed(2));\n            }\n            if (y2 !== undefined) {\n                y2 = Number((y2 + sY).toFixed(2));\n            }\n        }\n        var scaledPath = { x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2, r1: seg.r1, r2: seg.r2 };\n        newSeg = updatedSegment(seg, char, scaledPath, s, sX, sY);\n        if (newSeg) {\n            arr[i] = newSeg;\n        }\n        // Record the start of a subpath\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    var pathData = getPathString(arr);\n    return pathData;\n}\n/** @private */\nexport function updatedSegment(segment, char, obj, isScale, sX, sY) {\n    switch (char) {\n        case 'M':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'L':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'H':\n            segment.x = obj.x;\n            break;\n        case 'V':\n            segment.y = obj.y;\n            break;\n        case 'C':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'S':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'Q':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            break;\n        case 'T':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'A':\n            var r1 = obj.r1;\n            var r2 = obj.r2;\n            if (isScale) {\n                obj.r1 = r1 = (r1 * sX);\n                obj.r2 = r2 = (r2 * sY);\n            }\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.r1 = obj.r1;\n            segment.r2 = obj.r2;\n            break;\n        case 'z':\n        case 'Z':\n            segment = { command: 'Z' };\n            break;\n    }\n    return segment;\n}\n/** @private */\nexport function scalePathData(val, scaleFactor, oldOffset, newOffset) {\n    if (val !== oldOffset) {\n        if (newOffset !== oldOffset) {\n            val = (((val * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)))\n                + (newOffset - Number(oldOffset)));\n        }\n        else {\n            val = ((Number(val) * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)));\n        }\n    }\n    else {\n        if (newOffset !== oldOffset) {\n            val = newOffset;\n        }\n    }\n    return Number(val.toFixed(2));\n}\n/** @private */\nexport function splitArrayCollection(arrayCollection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    for (x = 0, y = 0, i = 0, length = arrayCollection.length; i < length; ++i) {\n        var path = arrayCollection[i];\n        var seg = path;\n        var char = seg.command;\n        if (/[MLHVCSQTA]/.test(char)) {\n            if ('x' in seg) {\n                seg.x = x = seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y = seg.y;\n            }\n        }\n        else {\n            if ('x1' in seg) {\n                seg.x1 = x1 = x + seg.x1;\n            }\n            if ('x2' in seg) {\n                seg.x2 = x2 = x + seg.x2;\n            }\n            if ('y1' in seg) {\n                seg.y1 = y1 = y + seg.y1;\n            }\n            if ('y2' in seg) {\n                seg.y2 = y2 = y + seg.y2;\n            }\n            if ('x' in seg) {\n                seg.x = x += seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y += seg.y;\n            }\n            var newSeg = void 0;\n            switch (char) {\n                case 'm':\n                case 'M':\n                    newSeg = { command: 'M', x: x, y: y };\n                    break;\n                case 'l':\n                case 'L':\n                    newSeg = { command: 'L', x: x, y: y };\n                    break;\n                case 'h':\n                case 'H':\n                    newSeg = { command: 'H', x: x };\n                    break;\n                case 'v':\n                case 'V':\n                    newSeg = { command: 'V', y: y };\n                    break;\n                case 'c':\n                case 'C':\n                    newSeg = { command: 'C', x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2 };\n                    break;\n                case 's':\n                case 'S':\n                    newSeg = { command: 'S', x: x, y: y, x2: x2, y2: y2 };\n                    break;\n                case 'q':\n                case 'Q':\n                    newSeg = { command: 'Q', x: x, y: y, x1: x1, y1: y1 };\n                    break;\n                case 't':\n                case 'T':\n                    newSeg = { command: 'T', x: x, y: y };\n                    break;\n                case 'a':\n                case 'A':\n                    newSeg = { command: 'A', x: x, y: y };\n                    newSeg.r1 = seg.r1;\n                    newSeg.r2 = seg.r2;\n                    newSeg.angle = seg.angle;\n                    newSeg.largeArc = seg.largeArc;\n                    newSeg.sweep = seg.sweep;\n                    break;\n                case 'z':\n                case 'Z':\n                    newSeg = { command: 'Z' };\n                    x = x0;\n                    y = y0;\n                    newSeg = arrayCollection[i];\n                    break;\n            }\n            if (newSeg) {\n                arrayCollection[i] = newSeg;\n            }\n        }\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    return arrayCollection;\n}\n/** @private */\nexport function getPathString(arrayCollection) {\n    var getNewString = '';\n    var i;\n    for (i = 0; i < arrayCollection.length; i++) {\n        if (i === 0) {\n            getNewString += getString(arrayCollection[i]);\n        }\n        else {\n            getNewString += ' ' + getString(arrayCollection[i]);\n        }\n    }\n    return getNewString;\n}\n/** @private */\nexport function getString(obj) {\n    var string = '';\n    switch (obj.command) {\n        case 'Z':\n        case 'z':\n            string = obj.command;\n            break;\n        case 'M':\n        case 'm':\n        case 'L':\n        case 'l':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'C':\n        case 'c':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'Q':\n        case 'q':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'A':\n        case 'a':\n            var cmd = obj.command;\n            var ang = obj.angle;\n            var l = (obj.largeArc ? '1' : '0');\n            var s = (obj.sweep ? '1' : '0');\n            string = cmd + ' ' + obj.r1 + ' ' + obj.r2 + ' ' + ang + ' ' + l + ' ' + s + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'H':\n        case 'h':\n            string = obj.command + ' ' + obj.x;\n            break;\n        case 'V':\n        case 'v':\n            string = obj.command + ' ' + obj.y;\n            break;\n        case 'S':\n        case 's':\n            string = obj.command + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'T':\n        case 't':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n    }\n    return string;\n}\n","/**\n * Matrix module is used to transform points based on offsets, angle\n */\n/** @private */\nexport var MatrixTypes;\n(function (MatrixTypes) {\n    MatrixTypes[MatrixTypes[\"Identity\"] = 0] = \"Identity\";\n    MatrixTypes[MatrixTypes[\"Translation\"] = 1] = \"Translation\";\n    MatrixTypes[MatrixTypes[\"Scaling\"] = 2] = \"Scaling\";\n    MatrixTypes[MatrixTypes[\"Unknown\"] = 4] = \"Unknown\";\n})(MatrixTypes || (MatrixTypes = {}));\n/** @private */\nvar Matrix = /** @class */ (function () {\n    function Matrix(m11, m12, m21, m22, offsetX, offsetY, type) {\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m21 = m21;\n        this.m22 = m22;\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        // if (type === undefined) {\n        //     this.type = MatrixTypes.Unknown;\n        // } else {\n        //     this.type = type;\n        // }\n        this.type = type;\n    }\n    return Matrix;\n}());\nexport { Matrix };\n/** @private */\nexport function identityMatrix() {\n    return new Matrix(1, 0, 0, 1, 0, 0, MatrixTypes.Identity);\n}\n/** @private */\nexport function transformPointByMatrix(matrix, point) {\n    var pt = multiplyPoint(matrix, point.x, point.y);\n    return { x: Math.round(pt.x * 100) / 100, y: Math.round(pt.y * 100) / 100 };\n}\n/** @private */\nexport function transformPointsByMatrix(matrix, points) {\n    var transformedPoints = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        transformedPoints.push(transformPointByMatrix(matrix, point));\n    }\n    return transformedPoints;\n}\n/** @private */\nexport function rotateMatrix(matrix, angle, centerX, centerY) {\n    angle %= 360.0;\n    multiplyMatrix(matrix, createRotationRadians(angle * 0.017453292519943295, centerX ? centerX : 0, centerY ? centerY : 0));\n}\n/** @private */\nexport function scaleMatrix(matrix, scaleX, scaleY, centerX, centerY) {\n    if (centerX === void 0) { centerX = 0; }\n    if (centerY === void 0) { centerY = 0; }\n    multiplyMatrix(matrix, createScaling(scaleX, scaleY, centerX, centerY));\n}\n/** @private */\nexport function translateMatrix(matrix, offsetX, offsetY) {\n    if (matrix.type & MatrixTypes.Identity) {\n        matrix.type = MatrixTypes.Translation;\n        setMatrix(matrix, 1.0, 0.0, 0.0, 1.0, offsetX, offsetY);\n        return;\n    }\n    if (matrix.type & MatrixTypes.Unknown) {\n        matrix.offsetX += offsetX;\n        matrix.offsetY += offsetY;\n        return;\n    }\n    matrix.offsetX += offsetX;\n    matrix.offsetY += offsetY;\n    matrix.type |= MatrixTypes.Translation;\n}\n/** @private */\nfunction createScaling(scaleX, scaleY, centerX, centerY) {\n    var result = identityMatrix();\n    result.type = !(centerX || centerY) ? MatrixTypes.Scaling : MatrixTypes.Scaling | MatrixTypes.Translation;\n    setMatrix(result, scaleX, 0.0, 0.0, scaleY, centerX - scaleX * centerX, centerY - scaleY * centerY);\n    return result;\n}\n/** @private */\nfunction createRotationRadians(angle, centerX, centerY) {\n    var result = identityMatrix();\n    var num = Math.sin(angle);\n    var num2 = Math.cos(angle);\n    var offsetX = centerX * (1.0 - num2) + centerY * num;\n    var offsetY = centerY * (1.0 - num2) - centerX * num;\n    result.type = MatrixTypes.Unknown;\n    setMatrix(result, num2, num, -num, num2, offsetX, offsetY);\n    return result;\n}\n/** @private */\nfunction multiplyPoint(matrix, x, y) {\n    switch (matrix.type) {\n        case MatrixTypes.Identity: break;\n        case MatrixTypes.Translation:\n            x += matrix.offsetX;\n            y += matrix.offsetY;\n            break;\n        case MatrixTypes.Scaling:\n            x *= matrix.m11;\n            y *= matrix.m22;\n            break;\n        case MatrixTypes.Translation | MatrixTypes.Scaling:\n            x *= matrix.m11;\n            x += matrix.offsetX;\n            y *= matrix.m22;\n            y += matrix.offsetY;\n            break;\n        default:\n            var num = y * matrix.m21 + matrix.offsetX;\n            var num2 = x * matrix.m12 + matrix.offsetY;\n            x *= matrix.m11;\n            x += num;\n            y *= matrix.m22;\n            y += num2;\n            break;\n    }\n    return { x: x, y: y };\n}\n/** @private */\nexport function multiplyMatrix(matrix1, matrix2) {\n    var type = matrix1.type;\n    var type2 = matrix2.type;\n    if (type2 === MatrixTypes.Identity) {\n        return;\n    }\n    if (type === MatrixTypes.Identity) {\n        assignMatrix(matrix1, matrix2);\n        matrix1.type = matrix2.type;\n        return;\n    }\n    if (type2 === MatrixTypes.Translation) {\n        matrix1.offsetX += matrix2.offsetX;\n        matrix1.offsetY += matrix2.offsetY;\n        if (type !== MatrixTypes.Unknown) {\n            matrix1.type |= MatrixTypes.Translation;\n        }\n        return;\n    }\n    if (type !== MatrixTypes.Translation) {\n        var num = type << 4 | type2;\n        switch (num) {\n            case 34:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                return;\n            case 35:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                matrix1.offsetX = matrix2.offsetX;\n                matrix1.offsetY = matrix2.offsetY;\n                matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n                return;\n            case 36: break;\n            default:\n                {\n                    switch (num) {\n                        case 50:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX *= matrix2.m11;\n                            matrix1.offsetY *= matrix2.m22;\n                            return;\n                        case 51:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX = matrix2.m11 * matrix1.offsetX + matrix2.offsetX;\n                            matrix1.offsetY = matrix2.m22 * matrix1.offsetY + matrix2.offsetY;\n                            return;\n                        case 52: break;\n                        default:\n                            switch (num) {\n                                case 66:\n                                case 67:\n                                case 68: break;\n                                default: return;\n                            }\n                            break;\n                    }\n                    break;\n                }\n        }\n        var result = identityMatrix();\n        var m11New = matrix1.m11 * matrix2.m11 + matrix1.m12 * matrix2.m21;\n        var m12New = matrix1.m11 * matrix2.m12 + matrix1.m12 * matrix2.m22;\n        var m21New = matrix1.m21 * matrix2.m11 + matrix1.m22 * matrix2.m21;\n        var m22New = matrix1.m21 * matrix2.m12 + matrix1.m22 * matrix2.m22;\n        var offsetX_1 = matrix1.offsetX * matrix2.m11 + matrix1.offsetY * matrix2.m21 + matrix2.offsetX;\n        var offsetY_1 = matrix1.offsetX * matrix2.m12 + matrix1.offsetY * matrix2.m22 + matrix2.offsetY;\n        setMatrix(result, m11New, m12New, m21New, m22New, offsetX_1, offsetY_1);\n        if (result.m21 || result.m12) {\n            result.type = MatrixTypes.Unknown;\n        }\n        else {\n            if (result.m11 && result.m11 !== 1.0 || result.m22 && result.m22 !== 1.0) {\n                result.type = MatrixTypes.Scaling;\n            }\n            if (result.offsetX || result.offsetY) {\n                result.type |= MatrixTypes.Translation;\n            }\n            if ((result.type & (MatrixTypes.Translation | MatrixTypes.Scaling)) === MatrixTypes.Identity) {\n                result.type = MatrixTypes.Identity;\n            }\n            result.type = MatrixTypes.Scaling | MatrixTypes.Translation;\n        }\n        assignMatrix(matrix1, result);\n        matrix1.type = result.type;\n        return;\n    }\n    var offsetX = matrix1.offsetX;\n    var offsetY = matrix1.offsetY;\n    matrix1.offsetX = offsetX * matrix2.m11 + offsetY * matrix2.m21 + matrix2.offsetX;\n    matrix1.offsetY = offsetX * matrix2.m12 + offsetY * matrix2.m22 + matrix2.offsetY;\n    if (type2 === MatrixTypes.Unknown) {\n        matrix1.type = MatrixTypes.Unknown;\n        return;\n    }\n    matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n}\n/** @private */\nfunction setMatrix(mat, m11, m12, m21, m22, x, y) {\n    mat.m11 = m11;\n    mat.m12 = m12;\n    mat.m21 = m21;\n    mat.m22 = m22;\n    mat.offsetX = x;\n    mat.offsetY = y;\n}\n/** @private */\nfunction assignMatrix(matrix1, matrix2) {\n    matrix1.m11 = matrix2.m11;\n    matrix1.m12 = matrix2.m12;\n    matrix1.m21 = matrix2.m21;\n    matrix1.m22 = matrix2.m22;\n    matrix1.offsetX = matrix2.offsetX;\n    matrix1.offsetY = matrix2.offsetY;\n    matrix1.type = matrix2.type;\n}\n","/**\n * BasicShapeDictionary defines the shape of the built-in basic shapes\n */\n/** @private */\nexport function getBasicShape(shape) {\n    return basicShapes[shape.toString()];\n}\nvar basicShapes = {\n    //Rectangle,\n    'Rectangle': 'M0,0 L50,0 L50,50 L0,50 z',\n    //Ellipse,\n    'Ellipse': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    //Hexagon,\n    'Hexagon': 'M30,0 L60,0 L90,30 L60,60 L30,60 L0,30 L30,0 z',\n    //Parallelogram,\n    'Parallelogram': 'M30,0 L60,0 L45,30 L15,30 z',\n    //Triangle,\n    'Triangle': 'M45,0 L90,45 L0,45 L45,0 z',\n    //Plus,\n    'Plus': 'M696.6084,158.2656 L674.8074,158.2656 L674.8074,136.4656 L658.4084,136.4656 L658.4084,158.2656 L636.6084,158.2656' +\n        'L636.6084,174.6646 L658.4084,174.6646 L658.4084,196.4656 L674.8074,196.4656 L674.8074,174.6646 L696.6084,174.6646' +\n        'L696.6084,158.2656 z',\n    //Star,\n    'Star': 'M540.3643,137.9336 L546.7973,159.7016 L570.3633,159.7296 L550.7723,171.9366 L558.9053,194.9966 L540.3643,179.4996' +\n        'L521.8223,194.9966 L529.9553,171.9366 L510.3633,159.7296 L533.9313,159.7016 L540.3643,137.9336 z',\n    //Pentagon,\n    'Pentagon': 'M30,0 L60,30 L50,70 L10,70 L0,30 L30,0 z',\n    //Heptagon,\n    'Heptagon': 'M223.7783,195.7134 L207.1303,174.8364 L213.0713,148.8034 L237.1303,137.2174 L261.1883,148.8034 L267.1303,174.8364' +\n        'L250.4813,195.7134 L223.7783,195.7134 z',\n    //Octagon,\n    'Octagon': 'M98.7319,196.4653 L81.1579,178.8923 L81.1579,154.0393 L98.7319,136.4653 L123.5849,136.4653' +\n        'L141.1579,154.0393 L141.1579,178.8923 L123.5849,196.4653 L98.7319,196.4653 z',\n    //Trapezoid,\n    'Trapezoid': 'M127.2842,291.4492 L95.0322,291.4492 L81.1582,256.3152 L141.1582,256.3152 L127.2842,291.4492 z',\n    //Decagon,\n    'Decagon': 'M657.3379,302.4141 L642.3369,291.5161 L636.6089,273.8821 L642.3369,256.2481 L657.3379,245.3511 L675.8789,245.3511' +\n        'L690.8789,256.2481 L696.6089,273.8821' +\n        'L690.8789,291.5161 L675.8789,302.4141 L657.3379,302.4141 z',\n    //RightTriangle,\n    'RightTriangle': 'M836.293,292.9238 L776.293,292.9238 L776.293,254.8408 L836.293,292.9238 z',\n    //Cylinder,\n    'Cylinder': 'M 542.802,362.009C 542.802,368.452 525.341,373.676 503.802,373.676C 482.263,373.676 464.802,368.452 464.802,362.009' +\n        'L 464.802,466.484C 464.802,472.928 482.263,478.151 503.802,478.151' +\n        'C 525.341,478.151 542.802,472.928 542.802,466.484L 542.802,362.016C 542.802,368.459 525.341,373.534 503.802,373.534' +\n        'C 482.263,373.534 464.802,368.31 464.802,361.867' +\n        'L 464.802,362.016C 464.802,355.572 482.263,350.349 503.802,350.349C 525.341,350.349 542.802,355.572 542.802,362.016',\n    //Diamond,\n    'Diamond': 'M397.784,287.875 L369.5,316.159 L341.216,287.875 L369.5,259.591 L397.784,287.875 z'\n};\n","/**\n * ShapeDictionary defines the shape of the default nodes and ports\n */\n/** @private */\nexport function getPortShape(shape) {\n    return portShapes[shape.toString()];\n}\n/** @private */\nexport function getDecoratorShape(shape, decorator) {\n    if (shape === 'Custom') {\n        return decorator.pathData;\n    }\n    return decoratorShapes[shape];\n}\n/**\n * @private\n * @param {IconShapeModel} icon\n * sets the path data for different icon shapes\n */\nexport function getIconShape(icon) {\n    var data;\n    switch (icon.shape) {\n        case 'Minus':\n            data = 'M0,50 L100,50';\n            break;\n        case 'Plus':\n            data = 'M0,-50 L0,50 M-50,0 L50,0';\n            break;\n        case 'ArrowUp':\n            data = 'M0,100 L50,0 L100,100 Z';\n            break;\n        case 'ArrowDown':\n            data = 'M0,0 L50,100 L100,0 Z';\n            break;\n        case 'Path':\n            data = icon.pathData;\n            break;\n    }\n    return data;\n}\nvar portShapes = {\n    'X': 'M14,14 L106,106 M106,14 L14,106',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n};\nvar decoratorShapes = {\n    'OpenArrow': 'M15.9,23 L5,16 L15.9,9 L17,10.7 L8.7,16 L17,21.3Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n    'Fletch': 'M14.8,10c0,0-3.5,6,0.2,12c0,0-2.5-6-10.9-6C4.1,16,11.3,16,14.8,10z',\n    'OpenFetch': 'M6,17c-0.6,0-1-0.4-1-1s0.4-1,1-1c10.9,0,11-5,11-5' +\n        'c0-0.6,0.4-1,1-1s1,0.4,1,1C19,10.3,18.9,17,6,17C6,17,6,17,6,17z ' +\n        'M18,23c-0.5,0-1-0.4-1-1c0-0.2-0.3-5-11-5c-0.6,0-1-0.5-1-1s0.4-1,1-1c0,0,0,0,0,0' +\n        'c12.9,0,13,6.7,13,7    C19,22.6,18.6,23,18,23z',\n    'IndentedArrow': 'M17,10c0,0-4.5,5.5,0,12L5,16L17,10z',\n    'OutdentedArrow': 'M14.6,10c0,0,5.4,6,0,12L5,16L14.6,10z',\n    'DoubleArrow': 'M19,10 L19,22 L13,16Z M12,10 L12,22 L6,16Z',\n    'Arrow': 'M15,10 L15,22 L5,16Z',\n    'Diamond': 'M12,23l-7-7l7-7l6.9,7L12,23z',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z'\n};\n","/**\n * FlowShapeDictionary defines the shape of the built-in flow shapes\n */\n/** @private */\nexport function getFlowShape(shape) {\n    return flowShapes[shape.toString()];\n}\nvar flowShapes = {\n    // Process,\n    'Process': 'M419.511,76.687L359.511,76.687L359.511,43.086L419.511,43.086z',\n    // Decision,\n    'Decision': 'M 253.005,115.687L 200.567,146.071L 148.097,115.687L 200.534,85.304L 253.005,115.687 Z',\n    // Document,\n    'Document': 'M 60 31.9 c 0 0 -11 -7.7 -30 0 s -30 0 -30 0 V 0 h 60 V 31.9 Z',\n    // PreDefinedProcess,\n    'PreDefinedProcess': 'M 0,0 L 50,0 L 50,50 L 0,50 Z  M 8.334,0 L 8.334,50 M 41.667,0 L 41.667,50',\n    // Terminator,\n    'Terminator': 'M 269.711,29.33C 269.71,44.061 257.77,56 243.04,56L 158.058,56C 143.33,56 131.39,44.061 131.39,29.33L 131.39,29.33' +\n        'C 131.391,14.6057 143.33,2.669 158.058,2.669L 243.044,2.669C 257.772,2.669 269.711,14.6057 269.711,29.333 Z',\n    // PaperTap,\n    'PaperTap': 'M0.0009,17.2042 L0.0009,47.165 C0.001,47.165 14.403,53.5455 25.00,47.165 C35.599,40.7852 44.403,43.5087 50.00,47.165' +\n        'L50.001,17.2042 M50.001,32.7987 L50.001,2.8405 C50.001,2.8405 35.599,-3.5427 25.001,2.8405' +\n        'C14.403,9.2237 5.599,6.494 0.0009,2.8405 L0.0009,32.7987',\n    // DirectData,\n    'DirectData': 'M 132.62 0 L 17.38 0 C 7.78 0 0 13.43 0 30 C 0 46.57 7.78 60 17.38 60 L 132.62 60 M 132.62 0' +\n        'C 123.02 0 115.24 13.43 115.24 30 C 115.24 46.57 123.02 60 132.62 60 C 142.22 60 150 46.57 150 30 C 150 13.43 142.22 0 132.62 0 z ',\n    // SequentialData,\n    'SequentialData': 'M0.0029,24.999 C0.0029,11.1922 10.433,0.0021 23.295,0.0021 C36.159,0.00216 46.585,11.1922 46.585,24.999' +\n        'C46.585,38.8057 36.159,49.9979 23.295,49.9979 C10.433,49.9979 0.0029,38.8057 0.0029,24.999 z M23.294,49.999 L50.002,49.999',\n    // Sort,\n    'Sort': 'M50.001,24.9971 L25.001,49.9971 L0.00097,24.9971 L25.001,-0.00286865 L50.001,24.9971 z' +\n        ' M0.000976562,24.9971 L50.001,24.9971',\n    // MultiDocument,\n    'MultiDocument': 'M43.6826,40 C44.8746,40.6183 45.8586,41.3502 46.8366,42.1122 L46.8366,4.74487 L3.09857,4.74487 L3.09857,10.9544' +\n        ' M46.837,35.143 C48.027,35.765 49.025,36.604 50.003,37.369 L50.003,0.002 L6.264,0.002 L6.264,4.744 M43.682,47.113 L43.682,10.765' +\n        ' L0.0025,10.7652 L0.0025,47.1132 C0.0025,47.1132 12.5846,53.6101 21.8426,47.1132 C31.1006,40.6163 38.792,43.393 43.6826,47.1132 z',\n    // Collate,\n    'Collate': 'M50.001,0.0028 L25.001,25.0029 L0.00097,0.0028 L50.001,0.002 z M0.0009,50.002 L25.001,25.002' +\n        'L50.001,50.002 L0.0009,50.0029 z',\n    // SummingJunction,\n    'SummingJunction': 'M7.3252,42.6768 L42.6772,7.3247 M42.6768,42.6768 L7.3248,7.3247 M0.0009,25.001 ' +\n        'C0.0009,11.193 11.197,0.0009 25.001,0.0009' +\n        ' C38.809,0.0009 50.001,11.193 50.001,25.001 C50.001,38.809 38.809,50.001 25.001,50.001 C11.197,50.00 0.0009,38.809 0.0009,25.00 z',\n    // Or,\n    'Or': 'M 0 50 L 100 50 M 50 100 L 50 0.0 M 0 50 C 0 22.384 22.392 0 50 0 C 77.616 0 100 22.384 100 50' +\n        ' C 100 77.616 77.616 100 50 100 C 22.392 100 0 77.616 0 50 Z',\n    // InternalStorage,\n    'InternalStorage': 'M 0 3.81946A 2.5,3.81946 0 0,1 2.5,0L 47.5 0A 2.5,3.81946 0 0,1 50,3.81946' +\n        'L 50 45.836A 2.5,3.819446 0 0,1 47.5,49.652778' +\n        'L 2.5 49.652778A 2.5,3.819446 0 0,1 0,45.8336L 0 3.819446ZM 0 11.45834L 50 11.4583334M 12.5 0L 12.5 49.652778',\n    // Extract,\n    'Extract': 'M0,35 L30,0 L60,35 Z',\n    // ManualOperation,\n    'ManualOperation': 'M46.4,28.8 L14.8,28.8 L0,0 L60,0 Z',\n    // Merge,\n    'Merge': 'M60,0 L30,35 L0,0 Z',\n    // OffPageReference,\n    'OffPageReference': 'M60,33.3 L30.1,39 L0,33.3 L0,0 L60,0 Z',\n    // SequentialAccessStorage,\n    'SequentialAccessStorage': 'M 60 30 C 60 13.4 46.6 0 30 0 S 0 13.4 0 30 s 13.4 30 30 30 h 28.6 v -6.5 h -9.9' +\n        'C 55.5 48 60 39.5 60 30 Z',\n    // Annotation,\n    'Annotation': 'M49.9984,50.0029 L-0.00271199,50.0029 L-0.00271199,0.00286865 L49.9984,0.00286865',\n    // Annotation2,\n    'Annotation2': 'M49.9977,50.0029 L25.416,50.0029 L25.416,0.00286865 L49.9977,0.00286865 M25.4166,25.0029 L-0.00227869,25.0029',\n    // Data,\n    'Data': 'M 10 0 L 40 0 L 30 40 L 0 40 Z',\n    // Card,\n    'Card': 'M275,60 L400,60 L400,110 L260,110 L260,75 Z',\n    // Delay,\n    'Delay': 'M0,0 L12.029,0 C14.212999,0 16,1.7869979 16,3.9709952 C16,6.1549926 14.212999,7.9409904 12.029,7.9409904 L0,7.9409904 z',\n    // Preparation,\n    'Preparation': 'M 1048.17 572 C 1051.06 568.86 1055.17 567.05 1059.5 567 L 1094.51 567'\n        + ' C 1098.84 567.05 1102.95 568.86 1105.84 572' +\n        ' L 1126.43 595 C 1127.01 596.28 1127.01 597.72 1126.43 599 L 1105.84 622 C 1102.95 625.14 1098.84 626.95 1094.51 627' +\n        ' L 1059.5 627 C 1055.17 626.95 1051.06 625.14 1048.17 622 L 1027.58 599 C 1027 597.72 1027 596.28 1027.58 595 L 1048.17 572 Z',\n    // Display,\n    'Display': 'M47.8809,19.2914 L32.7968,-0.00594145 L11.3902,-0.00594145 C7.93166,-0.00594145 0.00124586,11.187 0.00124586,24.9968' +\n        'C0.00124586,38.8032 7.93166,49.9962 11.3902,49.9962 L32.7968,49.99 L47.615,31.038 C47.615,31.0388 52.798,24.9968 47.880,19.2914 z',\n    // ManualInput,\n    'ManualInput': 'M 912 732 L 1006.85 707 C 1008.2 707 1009.5 707.53 1010.46 708.46 C 1011.41 709.4 1011.95 710.67 1011.95 712' +\n        ' L 1011.95 762C 1012 764.41 1010.28 766.52 1007.87 767 L 917.1 767 C 915.75 767 914.45 766.47 913.49 765.54' +\n        ' C 912.54 764.6 912 763.33 912 762 L 912 732 Z',\n    // LoopLimit,\n    'LoopLimit': 'M 8 9 L 27 9 L 33 15 L 33 26 C 33 27 33 27 32 27 L 4 27 C 3 27 2 27 2 26 L 2 15 L 8 9 Z',\n    // StoredData\n    'StoredData': 'M 5.55 0L 50 0A 1.5,30 0 0,1 50,0A 5.555,25 0 0,0 50,50A 1.5,30 0 0,1 50,50L 5.555 50A 5.55,25 0 0,1 5.555,0Z',\n};\n","import { Point } from './../primitives/point';\nimport { Rect } from './../primitives/rect';\nimport { getPoints, intersect3 } from './diagram-util';\nimport { NoOfSegments } from '../enum/enum';\nimport { StraightSegment, BezierSegment, OrthogonalSegment } from './../objects/connector';\nimport { PathElement } from './../core/elements/path-element';\nimport { cornersPointsBeforeRotation, rotatePoint } from './base-util';\n/**\n * Connector modules are used to dock and update the connectors\n */\n/** @private */\nexport function findConnectorPoints(element, layoutOrientation) {\n    var intermeditatePoints;\n    var sourcePoint;\n    if (element.type === 'Straight' || !element.sourceWrapper) {\n        sourcePoint = getSourcePoint(element);\n    }\n    else {\n        sourcePoint = element.sourceWrapper.corners.center;\n    }\n    intermeditatePoints = terminateConnection(element, sourcePoint, element.targetPoint, layoutOrientation);\n    setLineEndPoint(element, intermeditatePoints[0], false);\n    setLineEndPoint(element, intermeditatePoints[intermeditatePoints.length - 1], true);\n    return intermeditatePoints;\n}\nfunction getSourcePoint(element) {\n    var srcPoint;\n    if (element.sourcePortWrapper) {\n        var srcPort = element.sourcePortWrapper;\n        var srcNode = element.sourceWrapper;\n        var pt = { x: srcPort.offsetX, y: srcPort.offsetY };\n        var direction = getPortDirection(pt, cornersPointsBeforeRotation(srcNode), srcNode.bounds, false);\n        srcPoint = pt;\n    }\n    else if (element.sourceID && element.sourceWrapper) {\n        if (element.targetWrapper) {\n            var sPoint = element.sourceWrapper.corners.center;\n            var tPoint = element.targetWrapper.corners.center;\n            srcPoint = getIntersection(element, element.sourceWrapper, sPoint, tPoint, false);\n        }\n        else {\n            srcPoint = element.sourcePoint;\n        }\n    }\n    else {\n        srcPoint = element.sourcePoint;\n    }\n    return srcPoint;\n}\nfunction getDirection(source, target, layoutOrientation) {\n    if (layoutOrientation === 'LeftToRight') {\n        source.direction = source.direction ? source.direction : 'Right';\n        target.direction = target.direction ? target.direction : 'Left';\n    }\n    else if (layoutOrientation === 'RightToLeft') {\n        source.direction = source.direction ? source.direction : 'Left';\n        target.direction = target.direction ? target.direction : 'Right';\n    }\n    else if (layoutOrientation === 'TopToBottom') {\n        source.direction = source.direction ? source.direction : 'Bottom';\n        target.direction = target.direction ? target.direction : 'Top';\n    }\n    else if (layoutOrientation === 'BottomToTop') {\n        source.direction = source.direction ? source.direction : 'Top';\n        target.direction = target.direction ? target.direction : 'Bottom';\n    }\n}\nfunction terminateConnection(element, srcPoint, tarPoint, layoutOrientation) {\n    var sourceNode = element.sourceWrapper;\n    var targetNode = element.targetWrapper;\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var srcCorner;\n    var tarCorner;\n    var intermeditatePoints = [];\n    var segPoint;\n    var srcDir;\n    var tarDir;\n    var minSpace = 13;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCorner, point: srcPoint, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCorner, point: tarPoint, direction: tarDir, margin: targetMargin };\n    var sourceCorners;\n    var targetCorners;\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        sourceCorners = cornersPointsBeforeRotation(sourceNode);\n        targetCorners = cornersPointsBeforeRotation(targetNode);\n        source.corners = sourceNode.corners;\n        target.corners = targetNode.corners;\n    }\n    if (sourcePort !== undefined) {\n        var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        source.direction = getPortDirection(port, sourceCorners, sourceNode.bounds, false);\n    }\n    if (targetPort !== undefined) {\n        var tarPortPt = { x: targetPort.offsetX, y: targetPort.offsetY };\n        target.direction = getPortDirection(tarPortPt, targetCorners, targetNode.bounds, false);\n    }\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        if (source.direction === undefined || target.direction === undefined) {\n            if (layoutOrientation) {\n                getDirection(source, target, layoutOrientation);\n            }\n            else {\n                if (source.corners.top > target.corners.bottom &&\n                    Math.abs(source.corners.top - target.corners.bottom) >\n                        (source.margin.top + source.margin.bottom)) {\n                    source.direction = source.direction ? source.direction : 'Top';\n                    target.direction = target.direction ? target.direction : 'Bottom';\n                }\n                else if (source.corners.bottom < target.corners.top &&\n                    Math.abs(source.corners.bottom - target.corners.top) >\n                        (source.margin.bottom + source.margin.top)) {\n                    source.direction = source.direction ? source.direction : 'Bottom';\n                    target.direction = target.direction ? target.direction : 'Top';\n                }\n                else if ((source.corners.right < target.corners.left &&\n                    Math.abs(source.corners.right - target.corners.left) >\n                        (source.margin.right + source.margin.left)) ||\n                    ((source.corners.right + minSpace < target.corners.left) ||\n                        (target.corners.right >= source.corners.left - minSpace && source.corners.left > target.corners.left))) {\n                    source.direction = source.direction ? source.direction : 'Right';\n                    target.direction = target.direction ? target.direction : 'Left';\n                }\n                else if ((source.corners.left > target.corners.right &&\n                    Math.abs(source.corners.left - target.corners.right) > (source.margin.left + source.margin.right)) ||\n                    ((target.corners.right + minSpace < source.corners.left ||\n                        (source.corners.right >= target.corners.left - minSpace\n                            && source.corners.left < target.corners.left)))) {\n                    source.direction = source.direction ? source.direction : 'Left';\n                    target.direction = target.direction ? target.direction : 'Right';\n                }\n                else {\n                    if (sourceNode.id !== targetNode.id && (!sourceCorners.equals(sourceCorners, targetCorners)) &&\n                        targetCorners.containsPoint(sourceCorners.topCenter, source.margin.top)) {\n                        source.direction = source.direction ? source.direction : 'Bottom';\n                        target.direction = target.direction ? target.direction : 'Top';\n                    }\n                    else {\n                        source.direction = source.direction ? source.direction : 'Top';\n                        target.direction = target.direction ? target.direction : 'Bottom';\n                    }\n                }\n            }\n        }\n        return defaultOrthoConnection(element, source.direction, target.direction, source.point, target.point);\n    }\n    //It will be called only when there is only one end node\n    checkLastSegmentasTerminal(element);\n    if (element.sourceWrapper || element.targetWrapper) {\n        connectToOneEnd(element, source, target);\n    }\n    if (element.type === 'Straight' || element.type === 'Bezier') {\n        intermeditatePoints = intermeditatePointsForStraight(element, source, target);\n    }\n    else {\n        if (element.type === 'Orthogonal' && element.segments && element.segments.length > 0 &&\n            element.segments[0].length !== null &&\n            element.segments[0].direction !== null) {\n            intermeditatePoints = findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort);\n        }\n        else {\n            var extra = void 0;\n            if (!source.direction) {\n                source.direction = (target.direction) ? ((element.targetPortWrapper !== undefined) ? target.direction : getOppositeDirection(target.direction)) :\n                    Point.direction(source.point, target.point);\n            }\n            else {\n                extra = adjustSegmentLength(sourceNode.bounds, source, 20);\n            }\n            element.segments[0].points = intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n        }\n    }\n    return intermeditatePoints;\n}\nfunction updateSegmentPoints(source, segment) {\n    var segPoint;\n    var angle;\n    var extra;\n    source.direction = segment.direction;\n    segment.points = [];\n    segment.points.push(source.point);\n    extra = (segment.direction === 'Left' || segment.direction === 'Top') ? -(segment.length) : segment.length;\n    angle = (segment.direction === 'Left' || segment.direction === 'Right') ? 0 : 90;\n    segPoint = addLineSegment(source.point, extra, angle);\n    segment.points.push(segPoint);\n    return segPoint;\n}\nfunction pointToPoint(element, source, target) {\n    var point;\n    var direction;\n    var portdirection;\n    source.corners = (element.sourceWrapper) ? element.sourceWrapper.corners : undefined;\n    if (element.sourcePortWrapper) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n        if (source.corners && (source.direction === 'Bottom' || source.direction === 'Top')) {\n            if (target.point.x > source.corners.left && target.point.x < source.corners.right) {\n                direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else if (source.corners && (source.direction === 'Left' || source.direction === 'Right')) {\n            if (target.point.y > source.corners.top && target.point.y < source.corners.bottom) {\n                direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n    }\n    if (element.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_1;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.center.y) &&\n            (target.point.y >= source.corners.top && target.point.y <= source.corners.center.y)) {\n            source.direction = 'Top';\n            length_1 = source.point.y - source.corners.top + 20;\n        }\n        else if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y > source.corners.center.y\n            && source.point.y <= source.corners.bottom) &&\n            (target.point.y > source.corners.center.y && target.point.y <= source.corners.bottom)) {\n            source.direction = 'Bottom';\n            length_1 = source.corners.bottom - source.point.y + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.center.x) &&\n            (target.point.x >= source.corners.left && target.point.x <= source.corners.center.x)) {\n            source.direction = 'Left';\n            length_1 = source.point.x - source.corners.left + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x <= source.corners.right\n            && source.point.x > source.corners.center.x) &&\n            (target.point.x <= source.corners.right && target.point.x < source.corners.center.x)) {\n            source.direction = 'Right';\n            length_1 = source.corners.right - source.point.x + 20;\n        }\n        if (source.direction && length_1) {\n            point = orthoConnection3Segment(element, source, target, length_1, true);\n        }\n    }\n    else {\n        source.direction = (direction) ? direction : findSourceDirection(source.direction, source.point, target.point);\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction pointToNode(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    findDirection(element.targetWrapper, source, target, element);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (source.direction === target.direction && (source.direction === 'Left' || source.direction === 'Right')) {\n        source.direction = direction;\n        point = orthoConnection3Segment(element, source, target, element.targetWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        findDirection(element.targetWrapper, source, target, element);\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction addPoints(element, source, target) {\n    var refPoint;\n    target.corners = element.targetWrapper.corners;\n    var direction;\n    var length;\n    if (source.direction !== 'Left' && source.direction !== 'Right') {\n        if (target.corners.center.y === source.point.y &&\n            (!(target.corners.left <= source.point.x && source.point.x <= target.corners.right))) {\n            direction = 'Top';\n            length = target.corners.height / 2 + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Bottom') ||\n            (target.corners.center.y > source.point.y && source.point.y >= target.corners.top)) {\n            direction = 'Top';\n            length = (source.point.y - target.corners.top) + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Top') ||\n            (target.corners.center.y < source.point.y && source.point.y <= target.corners.bottom)) {\n            direction = 'Bottom';\n            length = (target.corners.bottom - source.point.y) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.top <= source.point.y && source.point.y <= source.corners.bottom) {\n            direction = source.direction;\n            length = (source.point.y > target.point.y) ? (source.point.y - source.corners.top + 20) :\n                (source.corners.bottom - source.point.y + 20);\n        }\n    }\n    else {\n        if (target.corners.center.x === source.point.x &&\n            (!(target.corners.top < source.point.y && source.point.y <= target.corners.bottom))) {\n            direction = 'Left';\n            length = target.corners.width / 2 + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Right')\n            || (target.corners.center.x > source.point.x && source.point.x >= target.corners.left)) {\n            direction = 'Left';\n            length = (source.point.x - target.corners.left) + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Left') ||\n            (target.corners.center.x <= source.point.x && source.point.x <= target.corners.right)) {\n            direction = 'Right';\n            length = (target.corners.right - source.point.x) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.left <= source.point.x && source.point.x <= source.corners.right) {\n            direction = source.direction;\n            length = (source.point.x > target.point.x) ? (source.point.x - source.corners.left + 20) :\n                (source.corners.right - source.point.x + 20);\n        }\n    }\n    var extra = (direction === 'Left' || direction === 'Top') ? -(length) : length;\n    var angle = (direction === 'Left' || direction === 'Right') ? 0 : 90;\n    refPoint = source.point;\n    source.point = addLineSegment(source.point, extra, angle);\n    source.direction = Point.direction(source.point, target.point);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        (source.corners.center.x === target.corners.center.x || source.corners.center.y === target.corners.center.y)) {\n        source.direction = target.direction;\n    }\n    var point = orthoConnection3Segment(element, source, target);\n    point.splice(0, 0, refPoint);\n    return point;\n}\nfunction findSegmentDirection(element, source, target, portDir) {\n    var update = false;\n    switch (target.direction) {\n        case 'Left':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Right' &&\n                source.point.x > target.point.x && source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)\n                || (((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) &&\n                    source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (portDir === 'Right') ? ((source.point.y > target.point.y) ? 'Top' : 'Bottom') :\n                    (source.point.x < target.point.x ? 'Right' : 'Left');\n                update = true;\n            }\n            else if (source.point.x > target.point.x && (source.point.y > target.point.y || source.point.y < target.point.y)\n                && (!(target.corners.top > source.point.y && target.corners.bottom < source.point.y))) {\n                source.direction = 'Left';\n            }\n            else if ((source.point.x < target.point.x && source.point.y > target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y <= target.point.y)\n                    && ((target.corners.top < source.point.y && target.corners.center.y >= source.point.y)))) {\n                source.direction = 'Top';\n            }\n            else if ((source.point.x < target.point.x && source.point.y < target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y > target.point.y)\n                    && ((target.corners.bottom < source.point.y && target.corners.center.y > source.point.y)))) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y === target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Right':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                ((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) && source.point.x > target.point.x &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                update = true;\n            }\n            else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                portDir === 'Left' && source.point.x < target.point.x && (source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                update = true;\n            }\n            else if (source.point.x < target.point.x && target.corners.top <= source.point.y\n                && target.corners.bottom >= source.point.y && source.point.y === target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.x < target.point.x && (source.point.y > target.point.y ||\n                source.point.y < target.point.y)) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y === target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            break;\n        case 'Top':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Bottom' &&\n                source.point.y > target.point.y && source.point.x >= source.corners.left &&\n                source.point.x <= source.corners.right) || (((portDir === 'Right' && source.point.x > target.point.x) ||\n                (portDir === 'Left' && target.point.y > source.point.y && target.point.x > source.point.x)) &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom))) {\n                source.direction = (portDir === 'Bottom') ? ((source.point.x > target.point.x) ? 'Left' : 'Right') :\n                    (source.point.y < target.point.y) ? 'Bottom' : 'Top';\n                update = true;\n            }\n            else if (source.point.x === target.point.x && source.point.y < target.point.y) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.corners.left &&\n                source.point.x < target.corners.right) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y >= target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y < target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Bottom':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && ((((portDir === 'Right') ||\n                (portDir === 'Left' && target.point.x > source.point.x)) && (source.point.y > target.point.y) &&\n                source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) ||\n                (((portDir === 'Top' && source.point.y < target.point.y)) &&\n                    (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n                if (portDir === 'Right' || portDir === 'Left') {\n                    source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                }\n                else {\n                    source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                }\n                update = true;\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                target.corners.right > source.point.x) {\n                if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                    target.corners.center.x >= source.point.x) {\n                    source.direction = 'Left';\n                }\n                else if (source.point.y < target.point.y && source.point.x < target.corners.right &&\n                    target.corners.center.x < source.point.x) {\n                    source.direction = 'Right';\n                }\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y > target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y <= target.point.y && (source.point.x > target.point.x || target.point.x > source.point.x)) {\n                source.direction = 'Bottom';\n            }\n            break;\n    }\n    return update;\n}\nfunction pointToPort(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    var portdirection;\n    var length;\n    if (element.sourcePortWrapper !== undefined) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n    }\n    var update = findSegmentDirection(element, source, target, portdirection);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        target.direction === getOppositeDirection(portdirection) &&\n        ((((target.direction === 'Left' && source.point.x > target.point.x) || (target.direction === 'Right' &&\n            source.point.x < target.point.x)) && source.point.y >= source.corners.top &&\n            source.point.y <= source.corners.bottom) || (target.direction === 'Bottom' && source.point.y < target.point.y &&\n            (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n        point = addPoints(element, source, target);\n    }\n    else if (source.direction === target.direction) {\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else if ((((target.direction === 'Left' && source.point.x > target.point.x) ||\n        (target.direction === 'Right' && source.point.x < target.point.x)) && (source.direction === 'Top' || source.direction === 'Bottom')\n        && ((source.point.y <= target.point.y) &&\n            ((target.corners.top <= source.point.y && target.corners.bottom >= source.point.y)))) ||\n        ((target.direction === 'Top' && source.point.y > target.point.y) ||\n            (target.direction === 'Bottom' && source.point.y < target.point.y) &&\n                ((target.corners.left <= source.point.x && target.corners.right >= source.point.x)))) {\n        point = addPoints(element, source, target);\n    }\n    else {\n        if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Left' || source.direction === 'Right') &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom)\n                && (target.direction === 'Top' || target.direction === 'Bottom') &&\n                (target.corners.center.x === source.corners.center.x))) {\n            source.direction = (target.direction === 'Top') ? 'Bottom' : 'Top';\n            length = (target.direction === 'Top') ? (source.corners.bottom - source.point.y + 20) :\n                (source.point.y - source.corners.top + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Top' || source.direction === 'Bottom') &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right) &&\n                (target.direction === 'Left' || target.direction === 'Right') && (target.corners.center.y === source.corners.center.y))) {\n            source.direction = (target.direction === 'Left') ? 'Right' : 'Left';\n            length = (target.direction === 'Left') ? (source.corners.right - source.point.x + 20) :\n                (source.point.x - source.corners.left + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (update) {\n            if (source.direction === 'Left' || source.direction === 'Right') {\n                length = (source.direction === 'Left') ? (source.point.x - source.corners.left + 20) :\n                    (source.corners.right - source.point.x + 20);\n            }\n            else {\n                length = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n                    (source.corners.bottom - source.point.y + 20);\n            }\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else {\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    return point;\n}\nfunction findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort) {\n    var j;\n    var point;\n    var intermeditatePoints = [];\n    var direction;\n    var port;\n    var seg;\n    checkLastSegmentasTerminal(element);\n    var removeSegment;\n    if (element.segments.length > 0) {\n        for (var i = 0; i < element.segments.length; i++) {\n            var seg_1 = element.segments[i];\n            if (i === 0 && element.sourcePortWrapper !== undefined) {\n                port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n                direction = getPortDirection(port, cornersPointsBeforeRotation(sourceNode), sourceNode.bounds, false);\n                if (seg_1.direction === getOppositeDirection(direction)) {\n                    seg_1.direction = direction;\n                }\n            }\n            if (i > 0 && element.segments[i - 1].direction === seg_1.direction) {\n                i = checkConsectiveSegmentAsSame(element, i, source);\n            }\n            else {\n                var lastSegment = element.segments[i - 1];\n                source.point = (seg_1.direction) ? updateSegmentPoints(source, seg_1) :\n                    lastSegment.points[lastSegment.points.length - 1];\n            }\n            if (i === element.segments.length - 1) {\n                if (!targetPort && !targetNode) {\n                    point = pointToPoint(element, source, target);\n                }\n                else if (element.targetWrapper && element.targetPortWrapper === undefined) {\n                    checkSourcePointInTarget(element, source);\n                    point = pointToNode(element, source, target);\n                }\n                else {\n                    point = pointToPort(element, source, target);\n                }\n                if (point) {\n                    checkPreviousSegment(point, element, source);\n                    seg_1.points = [];\n                    if (point.length >= 2) {\n                        for (j = 0; j < point.length; j++) {\n                            seg_1.points.push(point[j]);\n                        }\n                    }\n                    else {\n                        removeSegment = i;\n                    }\n                }\n            }\n            if (sourcePort && i === 0) {\n                var sourcePoint = checkPortdirection(element, sourcePort, sourceNode);\n                if (sourcePoint) {\n                    source.point = sourcePoint;\n                }\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === element.segments.length - 1) {\n                element.segments[removeSegment - 1].direction = null;\n                element.segments[removeSegment - 1].length = null;\n            }\n            element.segments.splice(removeSegment, 1);\n        }\n        intermeditatePoints = returnIntermeditatePoints(element, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction checkPortdirection(element, sourcePort, sourceNode) {\n    var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n    var point;\n    var bounds = cornersPointsBeforeRotation(sourceNode);\n    var direction = getPortDirection(port, bounds, sourceNode.bounds, false);\n    var seg = element.segments[0];\n    if (seg.direction !== direction) {\n        pointsFromNodeToPoint(seg, direction, bounds, seg.points[0], seg.points[seg.points.length - 1], false);\n        point = seg.points[seg.points.length - 1];\n        seg.direction = Point.direction(seg.points[seg.points.length - 2], seg.points[seg.points.length - 1]);\n    }\n    return point;\n}\nfunction checkPreviousSegment(tPoints, connector, source) {\n    var actualSegment = connector.segments[connector.segments.length - 2];\n    var actualLastPoint = actualSegment.points[actualSegment.points.length - 1];\n    var direction;\n    if (((actualSegment.direction === 'Top' || actualSegment.direction === 'Bottom') && (actualLastPoint.x === tPoints[1].x)) ||\n        ((actualSegment.direction === 'Left' || actualSegment.direction === 'Right') && (actualLastPoint.y === tPoints[1].y))) {\n        actualSegment.points[actualSegment.points.length - 1] = tPoints[1];\n        direction = Point.direction(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        if (connector.sourceWrapper !== undefined && connector.sourcePortWrapper === undefined &&\n            direction === getOppositeDirection(actualSegment.direction)) {\n            if (actualSegment.direction === 'Left' || actualSegment.direction === 'Right') {\n                actualSegment.points[0].x = (actualSegment.direction === 'Right') ?\n                    actualSegment.points[0].x - connector.sourceWrapper.corners.width :\n                    actualSegment.points[0].x + connector.sourceWrapper.corners.width;\n            }\n            else {\n                actualSegment.points[0].y = (actualSegment.direction === 'Bottom') ?\n                    actualSegment.points[0].y - connector.sourceWrapper.corners.height :\n                    actualSegment.points[0].y + connector.sourceWrapper.corners.height;\n            }\n        }\n        actualSegment.direction = direction;\n        actualSegment.length = Point.distancePoints(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        tPoints.splice(0, 1);\n    }\n}\nfunction connectToOneEnd(element, source, target) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var node = element.sourceWrapper;\n    var fixedPoint = source.point;\n    var nodeMargin = { left: 0, right: 0, top: 0, bottom: 0 };\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var refPoint;\n    var nodeDirection = 'Top';\n    if (!node) {\n        node = element.targetWrapper;\n        nodeMargin = target.margin;\n    }\n    else {\n        fixedPoint = target.point;\n        nodeMargin = source.margin;\n    }\n    if (element.type === 'Orthogonal') {\n        if ((element.segments && element.segments.length > 0) && element.sourceWrapper &&\n            element.segments[0].direction) {\n            source.direction = element.segments[0].direction;\n            nodeConnectingPoint = findPoint(node.corners, source.direction);\n            refPoint = findPoint(node.corners, getOppositeDirection(source.direction));\n            nodeConnectingPoint = getIntersection(element, node, nodeConnectingPoint, refPoint, false);\n        }\n        else {\n            var source_1 = { corners: null, direction: null, point: fixedPoint, margin: nodeMargin };\n            var target_1 = { corners: null, direction: null, point: null, margin: null };\n            findDirection(node, source_1, target_1, element);\n            nodeConnectingPoint = target_1.point;\n            nodeDirection = target_1.direction;\n        }\n    }\n    else {\n        var segmentPoint = void 0;\n        if (element.segments && element.segments.length > 1) {\n            if (node === element.sourceWrapper) {\n                segmentPoint = element.segments[0].point;\n            }\n            else {\n                segmentPoint = element.segments[element.segments.length - 2].point;\n            }\n        }\n        nodeConnectingPoint = getIntersection(element, node, node.bounds.center, (element.segments && element.segments.length > 1) ? segmentPoint : fixedPoint, node === element.targetWrapper);\n    }\n    if (node === element.sourceWrapper) {\n        source.direction = source.direction || nodeDirection;\n        source.point = nodeConnectingPoint;\n        if (element.sourcePortWrapper) {\n            source.point = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n            if (element.sourcePadding) {\n                source.point = addPaddingToConnector(element, source, target, false);\n            }\n        }\n    }\n    else {\n        target.direction = target.direction || nodeDirection;\n        target.point = nodeConnectingPoint;\n        if (element.targetPortWrapper) {\n            target.point = { x: targetPort.offsetX, y: targetPort.offsetY };\n            if (element.targetPadding) {\n                target.point = addPaddingToConnector(element, source, target, true);\n            }\n        }\n    }\n}\nfunction addPaddingToConnector(element, source, target, isTarget) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var padding = (isTarget) ? element.targetPadding : element.sourcePadding;\n    var paddingPort = (isTarget) ? targetPort : sourcePort;\n    var rect = new Rect(paddingPort.bounds.x - padding, paddingPort.bounds.y - padding, paddingPort.actualSize.width + 2 * padding, paddingPort.actualSize.height + 2 * padding);\n    var segmentPoints = [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft];\n    segmentPoints[segmentPoints.length] = segmentPoints[0];\n    var length = segmentPoints.length;\n    var thisSegment = { x1: source.point.x, y1: source.point.y, x2: target.point.x, y2: target.point.y };\n    var point = (isTarget) ? target.point : source.point;\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || point;\n}\nfunction checkSourceAndTargetIntersect(sourceWrapper, targetWrapper, connector) {\n    var sourceSegment = createSegmentsCollection(sourceWrapper, connector.sourcePadding);\n    var targetSegment = createSegmentsCollection(targetWrapper, connector.targetPadding);\n    for (var i = 0; i < sourceSegment.length - 1; i++) {\n        var srcSegment = sourceSegment[i];\n        for (var j = 0; j < targetSegment.length - 1; j++) {\n            var tarSegmet = targetSegment[j];\n            if (intersect3(srcSegment, tarSegmet).enabled) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction createSegmentsCollection(sourceWrapper, padding) {\n    var segments = [];\n    var points = getPoints(sourceWrapper, sourceWrapper.corners, padding);\n    points.push(points[0]);\n    for (var i = 0; i < points.length - 1; i++) {\n        segments.push(createLineSegment(points[i], points[i + 1]));\n    }\n    return segments;\n}\nfunction createLineSegment(sPt, tPt) {\n    var line = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return line;\n}\n/** @private */\nexport function swapBounds(object, bounds, outerBounds) {\n    var rectBounds;\n    var rotateAngle = object.rotateAngle + object.parentTransform;\n    if (rotateAngle) {\n        if (rotateAngle < 45) {\n            return bounds;\n        }\n        else if (rotateAngle <= 135) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.middleLeft, topRight: bounds.topLeft,\n                middleLeft: bounds.bottomCenter, center: outerBounds.center, middleRight: bounds.topCenter,\n                bottomLeft: bounds.bottomRight, bottomCenter: bounds.middleRight, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 225) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.bottomCenter, topRight: bounds.bottomRight,\n                middleLeft: bounds.middleRight, center: outerBounds.center, middleRight: bounds.middleLeft,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.topCenter, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top,\n                bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 315) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.topRight, topCenter: bounds.middleRight, topRight: bounds.bottomRight,\n                middleLeft: bounds.topCenter, center: outerBounds.center, middleRight: bounds.bottomCenter,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.middleLeft, bottomRight: bounds.bottomLeft,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else {\n            return bounds;\n        }\n        return rectBounds;\n    }\n    return bounds;\n}\n/* tslint:disable */\nfunction defaultOrthoConnection(ele, srcDir, tarDir, sPt, tPt) {\n    var sourceEle = ele.sourceWrapper;\n    var targetEle = ele.targetWrapper;\n    var srcPort = ele.sourcePortWrapper;\n    var tarPort = ele.targetPortWrapper;\n    var intermeditatePoints = [];\n    var refPoint;\n    var seg;\n    var srcCor = sourceEle.corners;\n    var tarCor = targetEle.corners;\n    var point = tarCor.center;\n    var i;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCor, point: sPt, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCor, point: tPt, direction: tarDir, margin: targetMargin };\n    var srcBounds = swapBounds(sourceEle, srcCor, ele.sourceWrapper.bounds);\n    var tarBounds = swapBounds(targetEle, tarCor, ele.targetWrapper.bounds);\n    var isInterSect = false;\n    if (ele.sourceWrapper && ele.targetWrapper) {\n        isInterSect = checkSourceAndTargetIntersect(ele.sourceWrapper, ele.targetWrapper, ele);\n    }\n    if (srcPort !== undefined) {\n        source.point = { x: srcPort.offsetX, y: srcPort.offsetY };\n        switch (source.direction) {\n            case 'Bottom':\n            case 'Top':\n                source.point.y = source.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                source.point.x = source.point.x;\n                break;\n        }\n        if (ele.sourcePadding && !isInterSect) {\n            if (tarPort) {\n                target.point = {\n                    x: tarPort.offsetX,\n                    y: tarPort.offsetY\n                };\n            }\n            source.point = addPaddingToConnector(ele, source, target, false);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            if (ele.segments && ele.segments.length > 0 && ele.segments[0].direction) {\n                source.direction = ele.segments[0].direction;\n            }\n            source.point = findPoint(srcBounds, source.direction);\n            refPoint = findPoint(srcBounds, getOppositeDirection(source.direction));\n            source.point = getIntersection(ele, sourceEle, source.point, refPoint, false);\n        }\n        else {\n            source.point = sourceEle.corners.center;\n        }\n    }\n    if (tarPort !== undefined) {\n        target.point = {\n            x: tarPort.offsetX,\n            y: tarPort.offsetY\n        };\n        switch (target.direction) {\n            case 'Bottom':\n            case 'Top':\n                target.point.y = target.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                target.point.x = target.point.x;\n                break;\n        }\n        if (ele.targetPadding && !isInterSect) {\n            target.point = addPaddingToConnector(ele, source, target, true);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            target.point = findPoint(tarBounds, target.direction);\n            refPoint = findPoint(tarBounds, getOppositeDirection(target.direction));\n            target.point = getIntersection(ele, targetEle, target.point, refPoint, true);\n        }\n        else {\n            target.point = targetEle.corners.center;\n        }\n    }\n    if (ele.type !== 'Orthogonal') {\n        var segment = void 0;\n        var first = void 0;\n        checkLastSegmentasTerminal(ele);\n        if (ele.sourcePortWrapper === undefined) {\n            source.point = source.corners.center;\n            if (ele.segments && ele.segments.length > 0) {\n                first = ele.segments[0];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var tarPoint = (segment !== undefined) ? segment.point : target.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[0].vector1.angle && ele.segments[0].vector1.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                tarPoint = Point.transform(source.point, ele.segments[0].vector1.angle, value / 2);\n            }\n            source.point = isInterSect ? ele.sourceWrapper.bounds.center : getIntersection(ele, sourceEle, source.point, tarPoint, false);\n        }\n        if (ele.targetPortWrapper === undefined) {\n            target.point = target.corners.center;\n            if (ele.segments && ele.segments.length > 1) {\n                first = ele.segments[ele.segments.length - 2];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var srcPoint = (segment) ? segment.point : source.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[ele.segments.length - 1].vector2.angle &&\n                ele.segments[ele.segments.length - 1].vector2.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                srcPoint = Point.transform(target.point, ele.segments[0].vector2.angle, value / 2);\n            }\n            target.point = isInterSect ? ele.targetWrapper.bounds.center : getIntersection(ele, targetEle, srcPoint, target.point, true);\n        }\n        intermeditatePoints = intermeditatePointsForStraight(ele, source, target);\n    }\n    else {\n        if (ele.type === 'Orthogonal' && (ele.segments && ele.segments.length > 0) &&\n            ele.segments[0].direction !== null) {\n            intermeditatePoints = findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle);\n        }\n        else {\n            if (!ele.segments[0]) {\n                var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n                ele.segments.push(segment);\n            }\n            ele.segments[0].points = intermeditatePoints = findOrthoSegments(ele, source, target);\n        }\n    }\n    return intermeditatePoints;\n}\n/* tslint:enable */\nfunction intermeditatePointsForStraight(element, source, target) {\n    var intermeditatePoints = [];\n    if (element.segments && element.segments.length > 0) {\n        var i = void 0;\n        var segPoint = [];\n        var srcPoint = source.point;\n        for (i = 0; i < element.segments.length; i++) {\n            var seg = element.segments[i];\n            segPoint = [];\n            segPoint.push(srcPoint);\n            if (i !== element.segments.length - 1) {\n                segPoint.push(seg.point);\n                srcPoint = seg.point;\n            }\n            else {\n                segPoint.push(target.point);\n            }\n            element.segments[i].points = segPoint;\n            if (element.segments.length > 1 && Point.equals(seg.points[0], seg.points[1])) {\n                (element.segments).splice(i, 1);\n            }\n            if (seg) {\n                for (var j = 0; j < seg.points.length; j++) {\n                    if (j > 0 || i === 0) {\n                        intermeditatePoints.push(seg.points[j]);\n                    }\n                }\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findSourceDirection(dir, srcPoint, tarPoint) {\n    var direction = (dir === 'Top' || dir === 'Bottom') ?\n        ((tarPoint.x > srcPoint.x) ? 'Right' : 'Left') :\n        ((tarPoint.y > srcPoint.y) ? 'Bottom' : 'Top');\n    return direction;\n}\nfunction checkLastSegmentasTerminal(ele) {\n    if (ele.type === 'Straight' || ele.type === 'Bezier') {\n        if ((ele.segments.length === 0 || (ele.segments.length > 0 &&\n            (!Point.isEmptyPoint(ele.segments[ele.segments.length - 1].point))))) {\n            var segment = void 0;\n            segment = (ele.type === 'Bezier') ? new BezierSegment(ele, 'segments', { type: 'Bezier' }, true) :\n                new StraightSegment(ele, 'segments', { type: 'Straight' }, true);\n            (ele.segments).push(segment);\n        }\n    }\n    else {\n        if (ele.segments.length === 0 || ele.segments[ele.segments.length - 1].direction) {\n            var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n            ele.segments.push(segment);\n        }\n    }\n}\nfunction checkConsectiveSegmentAsSame(ele, i, source) {\n    var seg = ele.segments[i];\n    var extra = (seg.direction === 'Left' || seg.direction === 'Top') ? -(seg.length) : seg.length;\n    var angle = (seg.direction === 'Left' || seg.direction === 'Right') ? 0 : 90;\n    var segPoint = addLineSegment(source.point, extra, angle);\n    ele.segments[i - 1].length += seg.length;\n    ele.segments[i - 1].points[1] = source.point = segPoint;\n    ele.segments.splice(i, 1);\n    i--;\n    return i;\n}\nfunction nodeOrPortToNode(ele, source, target) {\n    var point;\n    var portdirection;\n    if (ele.sourcePortWrapper) {\n        var port = { x: ele.sourcePortWrapper.offsetX, y: ele.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(ele.sourceWrapper), ele.sourceWrapper.bounds, false);\n    }\n    findDirection(ele.targetWrapper, source, target, ele);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (ele.sourcePortWrapper !== undefined && source.direction === target.direction &&\n        ((source.direction === 'Top' || source.direction === 'Bottom') && (source.corners.center.x === target.corners.center.x)\n            || (source.direction === 'Left' || source.direction === 'Right') && (source.corners.center.y === target.corners.center.y))) {\n        source.direction = direction;\n        point = (direction === 'Top' || direction === 'Bottom') ?\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.height / 2 + 20) :\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        if (direction === 'Left' || direction === 'Right') {\n            target.direction = direction;\n            target.point = (direction === 'Left') ? target.corners.middleLeft : target.corners.middleRight;\n        }\n        else {\n            findDirection(ele.targetWrapper, source, target, ele);\n        }\n        point = orthoConnection3Segment(ele, source, target);\n    }\n    else if (target.point.x >= source.corners.left && target.point.x <= source.corners.right &&\n        source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var length_2 = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n            (source.corners.bottom - source.point.y + 20);\n        point = orthoConnection3Segment(ele, source, target, length_2);\n    }\n    else if (ele.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_3;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.bottom)) {\n            source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n            length_3 = source.corners.height / 2 + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.right)) {\n            source.direction = (target.point.x > source.point.x) ? 'Right' : 'Left';\n            length_3 = source.corners.width / 2 + 20;\n        }\n        if (source.direction && length_3) {\n            point = orthoConnection3Segment(ele, source, target, length_3, true);\n        }\n        else {\n            source.direction = direction;\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    else if (ele.sourcePortWrapper && portdirection === target.direction && (portdirection === 'Top' || portdirection === 'Bottom') &&\n        (source.corners.center.x === target.corners.center.x)) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var len = (source.direction === 'Bottom') ? (source.corners.bottom - source.point.y + 20) :\n            (source.point.y - source.corners.top + 20);\n        point = orthoConnection3Segment(ele, source, target, len);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction checkSourcePointInTarget(ele, source) {\n    if (ele.targetWrapper !== undefined && ele.targetPortWrapper === undefined) {\n        if (cornersPointsBeforeRotation(ele.targetWrapper).containsPoint(source.point)) {\n            var target = ele.targetWrapper;\n            var segment = ele.segments[ele.segments.length - 2];\n            var lastPoint = segment.points[segment.points.length - 1];\n            var direction = getOppositeDirection(segment.direction);\n            if (direction === 'Bottom') {\n                if (lastPoint.y < target.corners.bottom) {\n                    segment.points[segment.points.length - 1].y = target.corners.bottom + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Top') {\n                if (lastPoint.y > target.corners.top) {\n                    segment.points[segment.points.length - 1].y = target.corners.top - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Left') {\n                if (lastPoint.x > target.corners.left) {\n                    segment.points[segment.points.length - 1].x = target.corners.left - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Right') {\n                if (lastPoint.x < target.corners.right) {\n                    segment.points[segment.points.length - 1].x = target.corners.right + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            source.point = segment.points[segment.points.length - 1];\n        }\n    }\n}\nfunction findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle) {\n    var point;\n    var intermeditatePoints = [];\n    var seg;\n    var j;\n    var removeSegment;\n    checkLastSegmentasTerminal(ele);\n    for (var i = 0; i < ele.segments.length; i++) {\n        seg = ele.segments[i];\n        if (srcPort && source.direction === getOppositeDirection(seg.direction)) {\n            seg.direction = source.direction;\n        }\n        if (i > 0 && ele.segments[i - 1].direction === seg.direction) {\n            i = checkConsectiveSegmentAsSame(ele, i, source);\n        }\n        else {\n            if (seg.direction) {\n                source.point = updateSegmentPoints(source, ele.segments[i]);\n            }\n            else {\n                var segment = ele.segments[i - 1];\n                source.point = segment.points[segment.points.length - 1];\n            }\n        }\n        if (i === ele.segments.length - 1) {\n            checkSourcePointInTarget(ele, source);\n            if (tarPort === undefined) {\n                point = nodeOrPortToNode(ele, source, target);\n            }\n            else {\n                point = pointToPort(ele, source, target);\n            }\n            checkPreviousSegment(point, ele, source);\n            seg.points = [];\n            if (point.length >= 2) {\n                for (j = 0; j < point.length; j++) {\n                    seg.points.push(point[j]);\n                }\n            }\n            else {\n                removeSegment = i;\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === ele.segments.length - 1) {\n                ele.segments[removeSegment - 1].direction = null;\n                ele.segments[removeSegment - 1].length = null;\n            }\n            ele.segments.splice(removeSegment, 1);\n        }\n        if (srcPort && i === 0) {\n            var sourcePoint = checkPortdirection(ele, srcPort, sourceEle);\n            if (sourcePoint) {\n                source.point = sourcePoint;\n            }\n        }\n    }\n    return returnIntermeditatePoints(ele, intermeditatePoints);\n}\nfunction returnIntermeditatePoints(element, intermeditatePoints) {\n    for (var i = 0; i < element.segments.length; i++) {\n        var seg = element.segments[i];\n        for (var j = 0; j < seg.points.length; j++) {\n            if (j > 0 || i === 0) {\n                intermeditatePoints.push(seg.points[j]);\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findDirection(node, source, target, ele) {\n    var nodeDirection;\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var nodeCorners = swapBounds(node, node.corners, node.bounds);\n    var nodeMargin = source.margin;\n    var fixedPoint = source.point;\n    if (nodeCorners.bottomCenter.y + nodeMargin.bottom < fixedPoint.y) {\n        nodeDirection = 'Bottom';\n        nodeConnectingPoint = nodeCorners.bottomCenter;\n    }\n    else if (nodeCorners.topCenter.y - nodeMargin.top > fixedPoint.y) {\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n    }\n    else if (nodeCorners.middleLeft.x - nodeMargin.left > fixedPoint.x) {\n        nodeDirection = 'Left';\n        nodeConnectingPoint = nodeCorners.middleLeft;\n    }\n    else if (nodeCorners.middleRight.x + nodeMargin.right < fixedPoint.x) {\n        nodeDirection = 'Right';\n        nodeConnectingPoint = nodeCorners.middleRight;\n    }\n    else {\n        var top_1 = Math.abs(fixedPoint.y - nodeCorners.topCenter.y);\n        var right = Math.abs(fixedPoint.x - nodeCorners.middleRight.x);\n        var bottom = Math.abs(fixedPoint.y - nodeCorners.bottomCenter.y);\n        var left = Math.abs(fixedPoint.x - nodeCorners.middleLeft.x);\n        var shortes = Number.MAX_VALUE;\n        shortes = top_1;\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n        if (shortes > right) {\n            shortes = right;\n            nodeDirection = 'Right';\n            nodeConnectingPoint = nodeCorners.middleRight;\n        }\n        if (shortes > bottom) {\n            shortes = bottom;\n            nodeDirection = 'Bottom';\n            nodeConnectingPoint = nodeCorners.bottomCenter;\n        }\n        if (shortes > left) {\n            //shortes = left;\n            nodeDirection = 'Left';\n            nodeConnectingPoint = nodeCorners.middleLeft;\n        }\n    }\n    target.point = nodeConnectingPoint;\n    target.direction = nodeDirection;\n    var refPoint = findPoint(nodeCorners, getOppositeDirection(target.direction));\n    target.point = getIntersection(ele, node, target.point, refPoint, node === ele.targetWrapper);\n}\nfunction findOrthoSegments(ele, source, target, extra) {\n    var swap = false;\n    var intermeditatePoints = [];\n    var seg;\n    swap = getSwapping(source.direction, target.direction);\n    if (swap) {\n        swapPoints(source, target);\n    }\n    if (source.direction === 'Right' && target.direction === 'Left') {\n        seg = getRightToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Right') {\n        seg = getRightToRightSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Top') {\n        seg = getRightToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Bottom') {\n        seg = getRightToBottomSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Top') {\n        seg = getBottomToTopSegmentCount(source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Bottom') {\n        source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        seg = getBottomToBottomSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Left') {\n        seg = getBottomToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Left') {\n        seg = getLeftToLeftSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Top') {\n        seg = getLeftToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Top' && target.direction === 'Top') {\n        seg = getTopToTopSegmentCount(ele, source, target);\n    }\n    if (swap) {\n        swapPoints(source, target);\n    }\n    intermeditatePoints = addOrthoSegments(ele, seg, source, target, extra);\n    return intermeditatePoints;\n}\n/** @private */\nexport function findAngle(s, e) {\n    var r = { x: e.x, y: s.y };\n    var sr = Point.findLength(s, r);\n    var re = Point.findLength(r, e);\n    var es = Point.findLength(e, s);\n    var ang = Math.asin(re / es);\n    ang = ang * 180 / Math.PI;\n    if (s.x < e.x) {\n        if (s.y > e.y) {\n            ang = 360 - ang;\n        }\n    }\n    else {\n        if (s.y < e.y) {\n            ang = 180 - ang;\n        }\n        else {\n            ang = 180 + ang;\n        }\n    }\n    return ang;\n}\n/** @private */\nexport function findPoint(cor, direction) {\n    var point;\n    switch (direction) {\n        case 'Left':\n            point = cor.middleLeft;\n            break;\n        case 'Top':\n            point = cor.topCenter;\n            break;\n        case 'Right':\n            point = cor.middleRight;\n            break;\n        case 'Bottom':\n            point = cor.bottomCenter;\n            break;\n    }\n    return point;\n}\nfunction pointsFromNodeToPoint(seg, direction, bounds, point, endPoint, isTarget) {\n    var minSpace = 13;\n    var x;\n    var points = [];\n    var y;\n    points.push(point);\n    var straight;\n    straight = (point.y === endPoint.y && (direction === 'Left' && endPoint.x < point.x ||\n        direction === 'Right' && endPoint.x > point.x)) ||\n        (point.x === endPoint.x && (direction === 'Top' && endPoint.y < point.y ||\n            direction === 'Bottom' && endPoint.y > point.y));\n    if (!straight) {\n        if (direction === 'Top' || direction === 'Bottom') {\n            if (direction === 'Top' && endPoint.y < point.y && endPoint.y > point.y - minSpace ||\n                direction === 'Bottom' && endPoint.y > point.y && endPoint.y < point.y + minSpace) {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: endPoint.y });\n            }\n            else if (Math.abs(point.x - endPoint.x) > minSpace &&\n                (direction === 'Top' && endPoint.y < point.y || direction === 'Bottom' && endPoint.y > point.y)) {\n                //twosegments\n                points.push({ x: point.x, y: endPoint.y });\n            }\n            else {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                x = (endPoint.x < point.x) ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: endPoint.x, y: y });\n            }\n        }\n        else {\n            if (direction === 'Left' && endPoint.x < point.x && endPoint.x > point.x - minSpace || direction === 'right' &&\n                endPoint.x > point.x && endPoint.x < point.x + minSpace) {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: point.y + (endPoint.y - point.y) / 2 });\n                points.push({ x: endPoint.x, y: point.y + (endPoint.y - point.y) / 2 });\n            }\n            else if (Math.abs(point.y - endPoint.y) > minSpace &&\n                (direction === 'Left' && endPoint.x < point.x || direction === 'Right' && endPoint.x > point.x)) {\n                points.push({ x: endPoint.x, y: point.y });\n                //twosegments\n            }\n            else {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: endPoint.y });\n            }\n        }\n        if (isTarget) {\n            points.push(seg.points[0]);\n            points.reverse();\n        }\n        seg.points = points;\n    }\n}\nfunction addLineSegment(point, extra, angle) {\n    var segEnd = Point.transform(point, angle, extra);\n    return segEnd;\n}\n/** @private */\nexport function getIntersection(ele, bounds, sPt, tPt, isTar) {\n    sPt = { x: sPt.x, y: sPt.y };\n    tPt = { x: tPt.x, y: tPt.y };\n    var angle = Point.findAngle(tPt, sPt);\n    var child;\n    var intersection;\n    var wrapper = isTar ? ele.targetWrapper : ele.sourceWrapper;\n    var padding = (isTar ? ele.targetPadding : ele.sourcePadding);\n    var rect;\n    var segmentPoints;\n    var point = isTar || ele.type === 'Orthogonal' ? sPt : tPt;\n    var sourcePoint = Point.transform(sPt, angle, Math.max(wrapper.actualSize.height / 2, wrapper.actualSize.width / 2));\n    child = wrapper;\n    var sPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt);\n    var tPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, tPt);\n    if (ele.type === 'Orthogonal') {\n        var constValue = 5;\n        if (sPt1.x === tPt1.x) {\n            if (sPt1.y < tPt1.y) {\n                sPt1.y -= constValue;\n            }\n            else {\n                sPt1.y += constValue;\n            }\n        }\n        if (sPt1.y === tPt1.y) {\n            if (sPt1.x < tPt1.x) {\n                sPt1.x -= constValue;\n            }\n            else {\n                sPt1.x += constValue;\n            }\n        }\n        sPt = rotatePoint(wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt1);\n    }\n    else {\n        var angle_1 = isTar ? Point.findAngle(sPt, tPt) : Point.findAngle(tPt, sPt);\n        if (isTar) {\n            var angle_2 = Point.findAngle(sPt, tPt);\n            tPt = Point.transform({ x: tPt.x, y: tPt.y }, angle_2, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n        else {\n            var angle_3 = Point.findAngle(tPt, sPt);\n            sPt = Point.transform({ x: sPt.x, y: sPt.y }, angle_3, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n    }\n    if ((ele.sourcePadding || ele.targetPadding)) {\n        rect = new Rect(wrapper.bounds.x - padding, wrapper.bounds.y - padding, wrapper.actualSize.width + 2 * padding, wrapper.actualSize.height + 2 * padding);\n    }\n    if (wrapper instanceof PathElement && wrapper.data) {\n        segmentPoints = rect ? [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft] : child.getPoints();\n        if (((child.data.split('m').length - 1) + (child.data.split('M').length - 1)) === 1) {\n            segmentPoints[segmentPoints.length] = segmentPoints[0];\n        }\n    }\n    else {\n        segmentPoints = rect ? [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft] : getPoints(wrapper, wrapper.corners);\n        segmentPoints[segmentPoints.length] = segmentPoints[0];\n    }\n    var length = segmentPoints.length;\n    var thisSegment = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || sPt;\n}\nfunction setLineEndPoint(element, point, isTarget) {\n    point.x = Math.round(point.x * 100) / 100;\n    point.y = Math.round(point.y * 100) / 100;\n    if (isTarget) {\n        element.targetPoint = point;\n    }\n    else {\n        element.sourcePoint = point;\n    }\n    return point;\n}\n/** @private */\nexport function getIntersectionPoints(thisSegment, pts, minimal, point) {\n    var length = pts.length;\n    var min;\n    var segment = {\n        x1: pts[0].x, y1: pts[0].y, x2: pts[1].x,\n        y2: pts[1].y\n    };\n    var intersection = intersectSegment(thisSegment, segment);\n    if (intersection) {\n        // if (!minimal) { return intersection; } //commented because minimal is always true\n        min = Point.distancePoints(intersection, point);\n    }\n    if (isNaN(min) || min > 0) {\n        for (var i = 1; i < length - 1; i++) {\n            segment = {\n                x1: pts[i].x, y1: pts[i].y,\n                x2: pts[i + 1].x, y2: pts[i + 1].y\n            };\n            var intersect = intersectSegment(thisSegment, segment);\n            if (intersect) {\n                // if (!minimal) { return intersect; }//commented because minimal is always true\n                var dist = Point.distancePoints(intersect, point);\n                if (isNaN(min) || min > dist) {\n                    min = dist;\n                    intersection = intersect;\n                }\n                if (min >= 0 && min <= 1) {\n                    break;\n                }\n            }\n        }\n    }\n    return intersection;\n}\nfunction intersectSegment(segment1, segment2) {\n    var x1 = segment1.x1;\n    var y1 = segment1.y1;\n    var x2 = segment1.x2;\n    var y2 = segment1.y2;\n    var x3 = segment2.x1;\n    var y3 = segment2.y1;\n    var x4 = segment2.x2;\n    var y4 = segment2.y2;\n    var a1;\n    var a2;\n    var b1;\n    var b2;\n    var c1;\n    var c2;\n    var x;\n    var y;\n    var r1;\n    var r2;\n    var r3;\n    var r4;\n    var denom;\n    var offset;\n    var num;\n    a1 = y2 - y1;\n    b1 = x1 - x2;\n    c1 = (x2 * y1) - (x1 * y2);\n    r3 = ((a1 * x3) + (b1 * y3) + c1);\n    r4 = ((a1 * x4) + (b1 * y4) + c1);\n    if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n        return null;\n    }\n    a2 = y4 - y3;\n    b2 = x3 - x4;\n    c2 = (x4 * y3) - (x3 * y4);\n    r1 = (a2 * x1) + (b2 * y1) + c2;\n    r2 = (a2 * x2) + (b2 * y2) + c2;\n    if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n        return null;\n    }\n    denom = (a1 * b2) - (a2 * b1);\n    if (denom === 0) {\n        return null;\n    }\n    if (denom < 0) {\n        offset = -denom / 2;\n    }\n    else {\n        offset = denom / 2;\n    }\n    offset = 0;\n    num = (b1 * c2) - (b2 * c1);\n    if (num < 0) {\n        x = (num - offset) / denom;\n    }\n    else {\n        x = (num + offset) / denom;\n    }\n    num = (a2 * c1) - (a1 * c2);\n    if (num < 0) {\n        y = (num - offset) / denom;\n    }\n    else {\n        y = (num + offset) / denom;\n    }\n    return { x: x, y: y };\n}\nfunction sameSign(a, b) {\n    return ((a * b) >= 0);\n}\nfunction getRightToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var pts;\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var margin = 10;\n    if (swap) {\n        var point = void 0;\n        point = left;\n        left = right;\n        right = point;\n    }\n    if (!(source.corners.bottom + margin < target.corners.top - margin ||\n        source.corners.top - margin > target.corners.bottom + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffY === 0 && (source.corners.right < target.corners.left\n        || (swap && source.corners.right < target.corners.left))) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.point.x + source.margin.right < target.point.x - target.margin.left) {\n        pts = NoOfSegments.Three;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(left) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.bottom <= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.top >= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY <= target.corners.top) ||\n        (srcPort === undefined && source.corners.right <= target.corners.top)) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY >= target.corners.bottom) ||\n        (srcPort === undefined && source.corners.right >= target.corners.bottom)) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getRightToRightSegmentCount(element, sourceObj, targetObj) {\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var pts;\n    var diffX = sourceObj.point.x - targetObj.point.x;\n    var diffY = sourceObj.point.y - targetObj.point.y;\n    targetObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    sourceObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (sourceObj.corners.right >= targetObj.corners.right) {\n        if ((sourcePort !== undefined && (sourcePort.offsetY < targetObj.corners.top ||\n            sourcePort.offsetY > targetObj.corners.bottom)) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y < targetObj.corners.top)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY > targetObj.corners.bottom + targetObj.margin.bottom\n            && sourceObj.corners.top > targetObj.corners.bottom) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY < targetObj.corners.top\n            && sourceObj.corners.bottom > targetObj.corners.top) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (sourceObj.corners.right < targetObj.corners.left ||\n            targetObj.corners.right < sourceObj.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.bottom < tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.bottom < targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.top > tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.top > targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && ((sourcePort !== undefined && sourcePort.offsetX < targetObj.corners.left &&\n        sourcePort.offsetX !== tarPort.offsetX && sourcePort.offsetY !== tarPort.offsetY &&\n        (Math.abs(sourceObj.corners.right - targetObj.corners.left) <= 20)) ||\n        (sourcePort === undefined && sourceObj.corners.right < targetObj.corners.left &&\n            sourceObj.corners.center.x !== targetObj.corners.center.x && sourceObj.corners.center.y !== targetObj.corners.center.y)))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (sourceObj.corners.right < targetObj.corners.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getRightToTopSegmentCount(element, source, target, swap) {\n    var tarPort = element.targetPortWrapper;\n    var srcPort = element.sourcePortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var pts;\n    target.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n    source.margin = { top: 5, bottom: 5, left: 5, right: 5 };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.bottom < target.corners.top - target.margin.top)) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined && Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (tarPort !== undefined && Math.abs(tarPort.offsetX - source.corners.topCenter.x) >= 25 &&\n        source.corners.middleRight.y < tarPort.offsetY) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getRightToBottomSegmentCount(element, source, target, swap) {\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var bottom = { x: target.point.x, y: Math.max(target.point.y, target.corners.bottom) };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleRight.y > target.corners.bottom + target.margin.bottom)) {\n        if (source.corners.top > target.corners.bottom) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.bottomCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.bottomCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToTopSegmentCount(source, target) {\n    var pts;\n    var diffX = source.point.x - target.point.x;\n    var diffY = source.point.y - target.point.y;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var margin = 10;\n    if (!(source.corners.right + margin < target.corners.left - margin ||\n        source.corners.left - margin > target.corners.right + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffX === 0 && source.corners.bottom < target.corners.top) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.corners.bottom + source.margin.bottom < target.corners.top - target.margin.top) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.right + source.margin.right < target.corners.left - target.margin.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.left - source.margin.left > target.corners.right + target.margin.right) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getBottomToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var pts;\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n        (srcPort === undefined && source.corners.bottomCenter.x < target.corners.bottomLeft.x - target.margin.left)) {\n        if (source.corners.right < target.corners.left) {\n            if ((tarPort !== undefined && source.corners.bottom + source.margin.bottom < tarPort.offsetY) ||\n                (tarPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.top > tarPort.offsetY) ||\n            (tarPort === undefined && source.corners.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (tarPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(tarPort.offsetY - source.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToBottomSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var difX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(target.point.y - target.point.y));\n    var pts;\n    if (source.corners.bottom < target.corners.bottom) {\n        if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n            (srcPort === undefined && source.corners.bottomCenter.x < target.corners.left - target.margin.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right + target.margin.right) ||\n            (srcPort === undefined && source.corners.bottomCenter.x > target.corners.right + target.margin.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (difX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n        (tarPort === undefined && source.corners.left > target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n        (tarPort === undefined &&\n            source.corners.right < target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (difX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getLeftToTopSegmentCount(element, source, target, swap) {\n    var pts;\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var left = { x: Math.min(source.point.x, source.corners.left), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    if (swap) {\n        var port = void 0;\n        port = sourcePort;\n        sourcePort = tarPort;\n        tarPort = port;\n    }\n    if ((sourcePort !== undefined && sourcePort.offsetY < target.corners.top - target.margin.top) ||\n        (sourcePort === undefined && (source.corners.bottom < target.corners.top - target.margin.top ||\n            source.corners.middleLeft.y < target.corners.top - target.margin.top))) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.left - source.margin.left > tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.left - source.margin.left > target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.right < target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (sourcePort !== undefined &&\n        Math.abs(source.corners.left - target.corners.right) <= 25 &&\n        Math.abs(sourcePort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(left))) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getLeftToLeftSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var pts;\n    if (source.corners.left < target.corners.left) {\n        if ((targetPort !== undefined && source.corners.bottom + source.margin.bottom < targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.top - source.margin.top > targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.top - source.margin.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.right < target.corners.left ||\n            target.corners.right < source.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.middleLeft.y < target.corners.top)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleLeft.y > target.corners.bottom + target.margin.bottom)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getTopToTopSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (source.corners.top < target.corners.top) {\n        if ((targetPort !== undefined && source.corners.left > targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.left > target.corners.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.right < targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.right < target.corners.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right) ||\n        (srcPort === undefined && source.corners.left > target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX < target.corners.left) ||\n        (srcPort === undefined && source.corners.bottomRight.x < target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction addOrthoSegments(element, seg, source, target, segLength) {\n    var src = element.sourceWrapper;\n    var tar = element.targetWrapper;\n    var tarPort = element.targetPortWrapper;\n    var intermeditatePoints;\n    var srcCorner = src.corners;\n    var tarCorner = tar.corners;\n    var extra = 20;\n    if (source.direction !== target.direction || seg === NoOfSegments.Five) {\n        if (source.direction === getOppositeDirection(target.direction) || seg === NoOfSegments.Three) {\n            switch (source.direction) {\n                case 'Left':\n                    if (srcCorner.middleLeft.x > tarCorner.middleRight.x) {\n                        extra = Math.min(extra, (srcCorner.middleLeft.x - tarCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Right':\n                    if (srcCorner.middleRight.x < tarCorner.middleLeft.x) {\n                        extra = Math.min(extra, (tarCorner.middleLeft.x - srcCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Top':\n                    if (srcCorner.topCenter.y > tarCorner.bottomCenter.y) {\n                        extra = Math.min(extra, (srcCorner.topCenter.y - tarCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n                case 'Bottom':\n                    if (srcCorner.bottomCenter.y < tarCorner.topCenter.y) {\n                        extra = Math.min(extra, (tarCorner.topCenter.y - srcCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n            }\n        }\n    }\n    extra = adjustSegmentLength(srcCorner, source, extra);\n    if (segLength) {\n        extra = Math.max(extra, segLength);\n    }\n    if (seg === NoOfSegments.One) {\n        intermeditatePoints = [source.point, target.point];\n    }\n    if (seg === NoOfSegments.Two) {\n        intermeditatePoints = orthoConnection2Segment(source, target);\n    }\n    if (seg === NoOfSegments.Three) {\n        intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n    }\n    if (seg === NoOfSegments.Four) {\n        var prevDir = undefined;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints, extra);\n    }\n    if (seg === NoOfSegments.Five) {\n        intermeditatePoints = orthoConnection5Segment(source, target, extra);\n    }\n    return intermeditatePoints;\n}\nfunction adjustSegmentLength(bounds, source, extra) {\n    switch (source.direction) {\n        case 'Left':\n            if (source.point.x > bounds.left) {\n                extra = (source.point.x - bounds.left) > extra ? ((source.point.x - bounds.left) + extra) : extra;\n            }\n            break;\n        case 'Right':\n            if (source.point.x < bounds.right) {\n                extra = (bounds.right - source.point.x) > extra ? ((bounds.right - source.point.x) + extra) : extra;\n            }\n            break;\n        case 'Top':\n            if (source.point.y > bounds.top) {\n                extra = (source.point.y - bounds.top) > extra ? ((source.point.y - bounds.top) + extra) : extra;\n            }\n            break;\n        case 'Bottom':\n            if (source.point.y < bounds.bottom) {\n                extra = (bounds.bottom - source.point.y) > extra ? ((bounds.bottom - source.point.y) + extra) : extra;\n            }\n            break;\n    }\n    return extra;\n}\n/** @private */\nexport function orthoConnection2Segment(source, target) {\n    var intermeditatePoints;\n    switch (source.direction) {\n        case 'Left':\n        case 'Right':\n            var point1 = { x: target.point.x, y: source.point.y };\n            intermeditatePoints = (Point.equals(source.point, point1) || Point.equals(target.point, point1)) ?\n                [source.point, target.point] : [source.point, point1, target.point];\n            break;\n        case 'Top':\n        case 'Bottom':\n            var point2 = { x: source.point.x, y: target.point.y };\n            intermeditatePoints = (Point.equals(source.point, point2) || Point.equals(target.point, point2)) ?\n                [source.point, target.point] : [source.point, point2, target.point];\n            break;\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection3Segment(element, source, target, extra, allow) {\n    if (!extra) {\n        extra = 20;\n    }\n    var srcPort = element.sourcePortWrapper;\n    var intermeditatePoints;\n    var segmentValue;\n    var next;\n    var diffx = target.point.x - source.point.x;\n    var diffy = target.point.y - source.point.y;\n    var temp;\n    if (!allow && (Math.abs(diffx) < 0.001 || Math.abs(diffy) < 0.001)) {\n        if (target.direction === undefined) {\n            intermeditatePoints = [source.point, target.point];\n            return intermeditatePoints;\n        }\n    }\n    if (element.targetWrapper === undefined && Math.abs(diffx) <= 31 && Math.abs(diffy) <= 31) {\n        if ((source.direction === 'Left' || source.direction === 'Right')) {\n            if (Math.abs(diffy) < 12) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else {\n            if (Math.abs(diffx) < 12) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n        if (Math.abs(diffx) > 12 || Math.abs(diffy) > 12) {\n            return orthoConnection2Segment(source, target);\n        }\n        else {\n            extra += 5;\n        }\n    }\n    if (source.direction === 'Left' || source.direction === 'Right') {\n        if (source.direction === 'Right') {\n            if (target.direction !== undefined && target.direction === 'Right') {\n                extra = Math.max(source.point.x, target.point.x) - source.point.x + extra;\n            }\n            if (source.point.x > target.point.x && srcPort === undefined) {\n                extra = -extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Left') {\n                extra = source.point.x - Math.min(source.point.x, target.point.x) + extra;\n            }\n            if (source.point.x > target.point.x || srcPort !== undefined || source.direction === 'Left') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.y - source.point.y;\n        segmentValue = addLineSegment(source.point, extra, 0);\n        temp = target.point.y - segmentValue.y;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.y - segmentValue.y, 90);\n        }\n    }\n    else if (source.direction === 'Top' || source.direction === 'Bottom') {\n        if (source.direction === 'Bottom') {\n            if (target.direction !== undefined && target.direction === 'Bottom') {\n                extra = Math.max(source.point.y, target.point.y) - source.point.y + extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Top') {\n                extra = source.point.y - Math.min(source.point.y, target.point.y) + extra;\n            }\n            if (source.point.y > target.point.y || (srcPort !== undefined) || source.direction === 'Top') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.x - source.point.x;\n        if (source.direction === 'Top') {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        else {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        temp = target.point.x - segmentValue.x;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.x - segmentValue.x, 0);\n        }\n    }\n    if (temp === 0) {\n        return intermeditatePoints = [\n            source.point,\n            target.point\n        ];\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue,\n        next,\n        target.point\n    ];\n    return intermeditatePoints;\n}\nfunction orthoConnection5Segment(source, target, extra) {\n    if (extra === void 0) { extra = 20; }\n    var intermeditatePoints;\n    var length = extra;\n    var sLeft = source.corners.left - source.margin.left;\n    var sRight = source.corners.right + source.margin.right;\n    var sBottom = source.corners.bottom + source.margin.bottom;\n    var sTop = source.corners.top - source.margin.top;\n    var tLeft = target.corners.left - target.margin.left;\n    var tRight = target.corners.right + target.margin.right;\n    var tBottom = target.corners.bottom + target.margin.bottom;\n    var tTop = target.corners.top - target.margin.top;\n    var segmentValue;\n    switch (source.direction) {\n        case 'Left':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sLeft > tLeft && sLeft <= tRight && extra >= 20) {\n                length = source.point.x - target.corners.left + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 180);\n            break;\n        case 'Top':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sTop > tTop && sTop <= tBottom && extra >= 20) {\n                length = source.point.y - target.corners.top + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 270);\n            break;\n        case 'Right':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sRight < tRight && sRight >= tLeft && extra >= 20) {\n                length = target.corners.right - source.point.x + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 0);\n            break;\n        case 'Bottom':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sBottom < tBottom && sBottom >= tTop && extra >= 20) {\n                length = target.corners.bottom - source.point.y + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 90);\n            break;\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue\n    ];\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        var prevDir = source.direction;\n        source.direction = segmentValue.x > target.point.x ? 'Left' : 'Right';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    else {\n        var prevDir = source.direction;\n        source.direction = segmentValue.y > target.point.y ? 'Top' : 'Bottom';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection4Segment(source, target, prevDir, interPt, e) {\n    if (e === void 0) { e = 20; }\n    var segmentValue;\n    if (prevDir === undefined) {\n        source.margin = { left: 2, right: 2, top: 2, bottom: 2 };\n        target.margin = { left: 0, right: 5, top: 0, bottom: 5 };\n    }\n    else {\n        if (source.direction === 'Bottom') {\n            if (target.corners.top > source.corners.bottom && target.corners.top - source.corners.bottom < 20) {\n                e = (target.corners.top - source.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Top') {\n            if (target.corners.bottom < source.corners.top && source.corners.top - target.corners.bottom < 20) {\n                e = (source.corners.top - target.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Right') {\n            if (target.corners.left > source.corners.right && target.corners.left - source.corners.right < 20) {\n                e = (target.corners.left - source.corners.right) / 2;\n            }\n        }\n        else if (source.direction === 'Left') {\n            if (target.corners.right < source.corners.left && source.corners.left - target.corners.right < 20) {\n                e = (source.corners.left - target.corners.right) / 2;\n            }\n        }\n    }\n    switch (source.direction) {\n        case 'Left':\n            e = getLeftLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 180);\n            break;\n        case 'Right':\n            e = getRightLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 0);\n            break;\n        case 'Top':\n            e = getTopLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 270);\n            break;\n        case 'Bottom':\n            e = getBottomLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 90);\n    }\n    if (interPt !== undefined) {\n        interPt.push(segmentValue);\n    }\n    else {\n        interPt = [\n            source.point,\n            segmentValue\n        ];\n    }\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        getOrtho3Seg(segmentValue, 'horizontal', source, target, interPt);\n    }\n    else if (source.direction === 'Right' || source.direction === 'Left') {\n        getOrtho3Seg(segmentValue, 'vertical', source, target, interPt);\n    }\n    return interPt;\n}\nfunction getOrtho3Seg(sPt, orientation, src, tar, points) {\n    var point1;\n    var point2;\n    var point3;\n    if (orientation === 'horizontal') {\n        src.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n        tar.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n    }\n    else if (orientation === 'vertical') {\n        src.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n        tar.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n    }\n    var extra = 20;\n    if (orientation === 'horizontal') {\n        switch (tar.direction) {\n            case 'Left':\n                if (src.corners.right + src.margin.right < tar.corners.left - tar.margin.left &&\n                    (tar.corners.left - src.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(tar.corners.left - src.corners.right) / 2, 20);\n                    extra = src.corners.right - sPt.x + gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.min(tar.corners.left, sPt.x) - sPt.x - 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.min(tar.corners.left, src.corners.left) - sPt.x - 20;\n                    }\n                    else {\n                        extra = tar.corners.left - sPt.x - 20;\n                    }\n                }\n                break;\n            case 'Right':\n                if (src.corners.left - src.margin.left > tar.corners.right + tar.margin.right &&\n                    (src.corners.left - tar.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(src.corners.left - tar.corners.right) / 2, 20);\n                    extra = src.corners.left - sPt.x - gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.max(tar.corners.right, sPt.x) - sPt.x + 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.max(tar.corners.right, src.corners.right) - sPt.x + 20;\n                    }\n                    else {\n                        extra = tar.corners.right - sPt.x + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 0);\n        point2 = addLineSegment(point1, tar.point.y - sPt.y, 90);\n        point3 = tar.point;\n    }\n    else if (orientation === 'vertical') {\n        switch (tar.direction) {\n            case 'Top':\n                if (src.corners.bottom + src.margin.bottom < tar.corners.top - tar.margin.top &&\n                    (tar.corners.top - src.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(tar.corners.top - src.corners.bottom) / 2, 20);\n                    extra = src.corners.bottom - sPt.y + gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.min(tar.corners.top, sPt.y) - sPt.y - 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.min(tar.corners.top, src.corners.top) - sPt.y - 20;\n                    }\n                    else {\n                        extra = tar.corners.top - sPt.y - 20;\n                    }\n                }\n                break;\n            case 'Bottom':\n                if (src.corners.top - src.margin.top > tar.corners.bottom + tar.margin.bottom &&\n                    (src.corners.top - tar.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(src.corners.top - tar.corners.bottom) / 2, 20);\n                    extra = src.corners.top - sPt.y - gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.max(tar.corners.bottom, sPt.y) - sPt.y + 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.max(tar.corners.bottom, src.corners.bottom) - sPt.y + 20;\n                    }\n                    else {\n                        extra = tar.corners.bottom - sPt.y + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 90);\n        point2 = addLineSegment(point1, tar.point.x - sPt.x, 0);\n        point3 = tar.point;\n    }\n    points.push(point1);\n    points.push(point2);\n    points.push(point3);\n}\nfunction getTopLength(source, target, preDir, length) {\n    if (source.corners.top - source.margin.top > target.corners.top + target.margin.top &&\n        source.corners.top - source.margin.top <= target.corners.bottom + target.margin.bottom) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        length += source.point.y - source.corners.top;\n    }\n    else {\n        if ((preDir !== undefined && preDir !== 'Left') && target.direction === 'Right' && source.point.x < target.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((preDir !== undefined && preDir !== 'Right') && target.direction === 'Left'\n            && target.point.x < source.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            length += source.point.y - source.corners.top;\n        }\n    }\n    return length;\n}\nfunction getLeftLength(source, target, prevDir, segLength) {\n    if (source.corners.left - source.margin.left > target.corners.left - target.margin.left &&\n        source.corners.left - source.margin.left <= target.corners.right + target.margin.right) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        segLength += source.point.x - source.corners.left;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') &&\n            target.direction === 'Top' && target.point.y < source.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            segLength += source.point.x - source.corners.left;\n        }\n    }\n    return segLength;\n}\nfunction getRightLength(source, target, length, prevDir) {\n    if (source.corners.right + source.margin.right < target.corners.right + target.margin.right &&\n        source.corners.right + source.margin.right >= target.corners.left - target.margin.left) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        length += source.corners.right - source.point.x;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') && target.direction === 'Top' && target.point.y < source.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            length += source.corners.right - source.point.x;\n        }\n    }\n    return length;\n}\nfunction getBottomLength(source, target, segLength, prevDir) {\n    if (source.corners.bottom + source.margin.bottom < target.corners.bottom + target.margin.bottom &&\n        source.corners.bottom + source.margin.bottom >= target.corners.top - target.margin.top) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        segLength += source.corners.bottom - source.point.y;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Left') &&\n            target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Right') &&\n            target.direction === 'Left' && target.point.x < source.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            segLength += source.corners.bottom - source.point.y;\n        }\n    }\n    return segLength;\n}\nfunction getSwapping(srcDir, tarDir) {\n    var swap = false;\n    switch (srcDir) {\n        case 'Left':\n            switch (tarDir) {\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Top':\n            switch (tarDir) {\n                case 'Left':\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Bottom':\n            switch (tarDir) {\n                case 'Right':\n                    swap = true;\n                    break;\n            }\n            break;\n    }\n    return swap;\n}\nfunction swapPoints(source, target) {\n    var direction = source.direction;\n    source.direction = target.direction;\n    target.direction = direction;\n    var point = source.point;\n    source.point = target.point;\n    target.point = point;\n    var corner = source.corners;\n    source.corners = target.corners;\n    target.corners = corner;\n}\nexport function getPortDirection(point, corner, bounds, closeEdge) {\n    var direction;\n    var boundsValue = corner === undefined ? bounds : corner;\n    var one = boundsValue.topLeft;\n    var two = boundsValue.topRight;\n    var three = boundsValue.bottomRight;\n    var four = boundsValue.bottomLeft;\n    var center = boundsValue.center;\n    var angle = findAngle(center, point);\n    var fourty5 = findAngle(center, three);\n    var one35 = findAngle(center, four);\n    var two25 = findAngle(center, one);\n    var three15 = findAngle(center, two);\n    if (angle > two25 && angle < three15) {\n        direction = 'Top';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - one.x) < Math.abs(point.x - two.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Left');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - bounds.width, two.y, width, height), point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= fourty5 && angle < one35) {\n        direction = 'Bottom';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - four.x) < Math.abs(point.x - three.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Left');\n        //     } else {\n        //         let value: Rect = new Rect(three.x - bounds.width, three.y - bounds.height / 4, bounds.width, bounds.height / 4);\n        //         direction = checkCloseEdge(direction, value, point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= one35 && angle <= two25) {\n        direction = 'Left';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - one.y) < Math.abs(point.y - four.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else if (angle >= three15 || angle < fourty5) {\n        direction = 'Right';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - two.y) < Math.abs(point.y - three.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - width, two.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, \n        //new Rect(three.x - width, three.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else {\n        direction = 'Right';\n    }\n    return direction;\n}\n// function checkCloseEdge(direction: string, threshold: Rect, port: PointModel, nearest: string): string {\n// if (threshold) {\n//     switch (direction) {\n//         case 'Bottom':\n//         case 'Top':\n//             let left: number = Math.abs(threshold.left - port.x);\n//             let right: number = Math.abs(threshold.right - port.x);\n//             let ver: number = direction === 'Top' ? Math.abs(threshold.top - port.y) : Math.abs(threshold.bottom - port.y);\n//             if (left < right) {\n//                 if (left < ver) {\n//                     return 'Left';\n//                 }\n//             } else {\n//                 if (right < ver) {\n//                     return 'Right';\n//                 }\n//             }\n//             break;\n//         case 'Left':\n//         case 'Right':\n//             let top: number = Math.abs(threshold.top - port.y);\n//             let bottom: number = Math.abs(threshold.bottom - port.y);\n//             let hor: number = direction === 'Left' ? Math.abs(threshold.left - port.x) : Math.abs(threshold.right - port.x);\n//             if (top < bottom) {\n//                 if (top < hor) {\n//                     return 'Top';\n//                 }\n//             } else {\n//                 if (bottom < hor) {\n//                     return 'Bottom';\n//                 }\n//             }\n//             break;\n//     }\n// }\n//Meant for dock port\n//    return direction;\n//  }\n/** @private */\nexport function getOuterBounds(obj) {\n    var outerBounds;\n    outerBounds = obj.wrapper.children[0].bounds;\n    if (obj.sourceDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[1].bounds);\n    }\n    if (obj.targetDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[2].bounds);\n    }\n    return outerBounds;\n}\nexport function getOppositeDirection(direction) {\n    switch (direction) {\n        case 'Top':\n            return 'Bottom';\n        case 'Bottom':\n            return 'Top';\n        case 'Left':\n            return 'Right';\n        case 'Right':\n            return 'Left';\n    }\n    return 'auto';\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Tooltip } from '@syncfusion/ej2-popups';\n/**\n * Defines the tooltip that should be shown when the mouse hovers over node.\n * An object that defines the description, appearance and alignments of tooltip\n */\nvar DiagramTooltip = /** @class */ (function (_super) {\n    __extends(DiagramTooltip, _super);\n    function DiagramTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DiagramTooltip.prototype, \"content\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], DiagramTooltip.prototype, \"position\", void 0);\n    __decorate([\n        Property('Mouse')\n    ], DiagramTooltip.prototype, \"relativeMode\", void 0);\n    __decorate([\n        Property(true)\n    ], DiagramTooltip.prototype, \"showTipPointer\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"width\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"height\", void 0);\n    __decorate([\n        Property('Auto')\n    ], DiagramTooltip.prototype, \"openOn\", void 0);\n    __decorate([\n        Property()\n    ], DiagramTooltip.prototype, \"animation\", void 0);\n    return DiagramTooltip;\n}(ChildProperty));\nexport { DiagramTooltip };\n/**\n * @private\n * defines the Tooltip.\n * @param {Diagram} diagram\n */\nexport function initTooltip(diagram) {\n    var tooltipOption = new Tooltip;\n    tooltipOption = updateTooltipContent(diagram.tooltip, tooltipOption);\n    var tooltip = new Tooltip(tooltipOption);\n    tooltip.beforeCollision = beforeCollision;\n    tooltip.beforeOpen = beforeOpen;\n    tooltip.cssClass = 'e-diagram-tooltip';\n    tooltip.opensOn = 'custom';\n    tooltip.appendTo('#' + diagram.element.id);\n    tooltip.close();\n    return tooltip;\n}\nfunction beforeOpen(args) {\n    if ((this.content === '' || this.content === undefined)) {\n        args.element.style.display = 'none';\n    }\n}\nfunction beforeCollision(args) {\n    if ((args.collidedPosition && args.collidedPosition !== this.position)) {\n        args.element.style.display = 'none';\n    }\n}\n/**\n * @private\n * updates the contents of the tooltip.\n * @param {Diagram} diagram\n * @param {NodeModel | ConnectorModel} node\n */\nexport function updateTooltip(diagram, node) {\n    var tooltip;\n    var tooltipObject = diagram.tooltipObject;\n    tooltip = node ? node.tooltip : diagram.tooltip;\n    updateTooltipContent(tooltip, tooltipObject);\n    return tooltipObject;\n}\nfunction updateTooltipContent(tooltip, tooltipObject) {\n    if (tooltip.content) {\n        tooltipObject.content = tooltip.content;\n        tooltipObject.position = tooltip.position;\n        tooltipObject.showTipPointer = tooltip.showTipPointer;\n        tooltipObject.width = tooltip.width;\n        tooltipObject.height = tooltip.height;\n        if (!tooltip.animation) {\n            tooltipObject.animation = { close: { effect: 'None' } };\n        }\n        else {\n            tooltipObject.animation = tooltip.animation;\n        }\n    }\n    else {\n        tooltipObject.close();\n    }\n    return tooltipObject;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory, CollectionFactory, isBlazor } from '@syncfusion/ej2-base';\nimport { ShapeStyle, StrokeStyle } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { Transform, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { findAngle, findConnectorPoints, getOuterBounds } from '../utility/connector';\nimport { getAnnotationPosition, alignLabelOnSegments, updateConnector, setUMLActivityDefaults } from '../utility/diagram-util';\nimport { findDistance, findPath, updatePathElement, setConnectorDefaults } from '../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { flipConnector } from './../utility/diagram-util';\nimport { PathElement } from '../core/elements/path-element';\nimport { PathAnnotation } from './annotation';\nimport { Canvas } from '../core/containers/canvas';\nimport { getDecoratorShape } from './dictionary/common';\nimport { DiagramAction } from '../enum/enum';\nimport { NodeBase } from './node-base';\nimport { DiagramTooltip } from './tooltip';\nimport { identityMatrix, rotateMatrix, scaleMatrix, transformPointsByMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { getTemplateContent } from '../utility/dom-util';\nimport { SymbolSize } from './preview';\nvar getConnectorType = function (obj) {\n    if (isBlazor()) {\n        return DiagramConnectorShape;\n    }\n    else {\n        if (obj) {\n            switch (obj.type) {\n                case 'Bpmn':\n                    return BpmnFlow;\n                case 'UmlActivity':\n                    return ActivityFlow;\n                case 'UmlClassifier':\n                    return RelationShip;\n                default:\n                    return ConnectorShape;\n            }\n        }\n        return ConnectorShape;\n    }\n};\nvar getSegmentType = function (obj) {\n    if (obj) {\n        if (isBlazor()) {\n            return DiagramConnectorSegment;\n        }\n        else {\n            switch (obj.type) {\n                case 'Straight':\n                    return StraightSegment;\n                case 'Bezier':\n                    return BezierSegment;\n                case 'Orthogonal':\n                    return OrthogonalSegment;\n                default:\n                    return StraightSegment;\n            }\n        }\n    }\n    return undefined;\n};\n/**\n * Decorators are used to decorate the end points of the connector with some predefined path geometry\n */\nvar Decorator = /** @class */ (function (_super) {\n    __extends(Decorator, _super);\n    function Decorator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"height\", void 0);\n    __decorate([\n        Property('Arrow')\n    ], Decorator.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({ fill: 'black', strokeColor: 'black', strokeWidth: 1 }, ShapeStyle)\n    ], Decorator.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0.5 }, Point)\n    ], Decorator.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('')\n    ], Decorator.prototype, \"pathData\", void 0);\n    return Decorator;\n}(ChildProperty));\nexport { Decorator };\n/**\n * Describes the length and angle between the control point and the start point of bezier segment\n */\nvar Vector = /** @class */ (function (_super) {\n    __extends(Vector, _super);\n    function Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"angle\", void 0);\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"distance\", void 0);\n    return Vector;\n}(ChildProperty));\nexport { Vector };\n/**\n * Sets the type of the connector\n */\nvar ConnectorShape = /** @class */ (function (_super) {\n    __extends(ConnectorShape, _super);\n    function ConnectorShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], ConnectorShape.prototype, \"type\", void 0);\n    return ConnectorShape;\n}(ChildProperty));\nexport { ConnectorShape };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar ActivityFlow = /** @class */ (function (_super) {\n    __extends(ActivityFlow, _super);\n    function ActivityFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Object')\n    ], ActivityFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property(30)\n    ], ActivityFlow.prototype, \"exceptionFlowHeight\", void 0);\n    return ActivityFlow;\n}(ConnectorShape));\nexport { ActivityFlow };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar BpmnFlow = /** @class */ (function (_super) {\n    __extends(BpmnFlow, _super);\n    function BpmnFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Sequence')\n    ], BpmnFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property('Normal')\n    ], BpmnFlow.prototype, \"sequence\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"message\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"association\", void 0);\n    return BpmnFlow;\n}(ConnectorShape));\nexport { BpmnFlow };\n/**\n * Defines the behavior of connector segments\n */\nvar ConnectorSegment = /** @class */ (function (_super) {\n    __extends(ConnectorSegment, _super);\n    // tslint:disable-next-line:no-any\n    function ConnectorSegment(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        _this.points = [];\n        return _this;\n    }\n    __decorate([\n        Property('Straight')\n    ], ConnectorSegment.prototype, \"type\", void 0);\n    __decorate([\n        Property(true)\n    ], ConnectorSegment.prototype, \"allowDrag\", void 0);\n    return ConnectorSegment;\n}(ChildProperty));\nexport { ConnectorSegment };\n/**\n * Defines the behavior of straight segments\n */\nvar StraightSegment = /** @class */ (function (_super) {\n    __extends(StraightSegment, _super);\n    function StraightSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class StraightSegment\n     */\n    StraightSegment.prototype.getClassName = function () {\n        return 'StraightSegment';\n    };\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], StraightSegment.prototype, \"point\", void 0);\n    return StraightSegment;\n}(ConnectorSegment));\nexport { StraightSegment };\n/**\n * Defines the behavior of bezier segments\n */\nvar BezierSegment = /** @class */ (function (_super) {\n    __extends(BezierSegment, _super);\n    function BezierSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BezierSegment\n     */\n    BezierSegment.prototype.getClassName = function () {\n        return 'BezierSegment';\n    };\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point1\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point2\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector1\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector2\", void 0);\n    return BezierSegment;\n}(StraightSegment));\nexport { BezierSegment };\n/**\n * Defines the behavior of orthogonal segments\n */\nvar OrthogonalSegment = /** @class */ (function (_super) {\n    __extends(OrthogonalSegment, _super);\n    function OrthogonalSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class OrthogonalSegment\n     */\n    OrthogonalSegment.prototype.getClassName = function () {\n        return 'OrthogonalSegment';\n    };\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"direction\", void 0);\n    return OrthogonalSegment;\n}(ConnectorSegment));\nexport { OrthogonalSegment };\n/**\n * Defines the behavior of orthogonal segments\n */\nvar DiagramConnectorSegment = /** @class */ (function (_super) {\n    __extends(DiagramConnectorSegment, _super);\n    function DiagramConnectorSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class OrthogonalSegment\n     */\n    DiagramConnectorSegment.prototype.getClassName = function () {\n        return 'DiagramConnectorSegment';\n    };\n    __decorate([\n        Property('Straight')\n    ], DiagramConnectorSegment.prototype, \"type\", void 0);\n    __decorate([\n        Property(true)\n    ], DiagramConnectorSegment.prototype, \"allowDrag\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], DiagramConnectorSegment.prototype, \"point\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], DiagramConnectorSegment.prototype, \"point1\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], DiagramConnectorSegment.prototype, \"point2\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], DiagramConnectorSegment.prototype, \"vector1\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], DiagramConnectorSegment.prototype, \"vector2\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramConnectorSegment.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramConnectorSegment.prototype, \"direction\", void 0);\n    return DiagramConnectorSegment;\n}(ChildProperty));\nexport { DiagramConnectorSegment };\n/**\n * Get the direction of the control points while the bezier is connected to the node\n */\nexport function getDirection(bounds, points, excludeBounds) {\n    var center = bounds.center;\n    var direction;\n    var part = excludeBounds ? 45 : (180 / (2 + 2 / (bounds.height / bounds.width)));\n    var fourty5 = part;\n    var one35 = (180 - part);\n    var two25 = one35 + (2 * part);\n    var three15 = 360 - part;\n    var angle = findAngle(points, center);\n    if (angle > fourty5 && angle < one35) {\n        return direction = 'top';\n    }\n    else if (angle > one35 && angle < two25) {\n        return direction = 'right';\n    }\n    else if (angle > two25 && angle < three15) {\n        return direction = 'bottom';\n    }\n    else {\n        return direction = 'left';\n    }\n}\nexport function isEmptyVector(element) {\n    if (!element.distance && !element.angle) {\n        return true;\n    }\n    return false;\n}\n/**\n * Get the bezier points if control points are not given.\n */\nexport function getBezierPoints(sourcePoint, targetPoint, direction) {\n    var distance = 60;\n    var value = { x: 0, y: 0 };\n    if (!direction) {\n        if (Math.abs(targetPoint.x - sourcePoint.x) > Math.abs(targetPoint.y - sourcePoint.y)) {\n            direction = sourcePoint.x < targetPoint.x ? 'right' : 'left';\n        }\n        else {\n            direction = sourcePoint.y < targetPoint.y ? 'bottom' : 'top';\n        }\n    }\n    switch (direction) {\n        case 'bottom':\n        case 'top':\n            distance = Math.min(Math.abs(sourcePoint.y - targetPoint.y) * 0.45, distance);\n            value = { x: sourcePoint.x, y: sourcePoint.y + (direction === 'bottom' ? distance : -distance) };\n            break;\n        case 'right':\n        case 'left':\n            distance = Math.min(Math.abs(sourcePoint.x - targetPoint.x) * 0.45, distance);\n            value = { x: sourcePoint.x + (direction === 'right' ? distance : -distance), y: sourcePoint.y };\n            break;\n    }\n    return value;\n}\n/**\n * Get the bezier curve bounds.\n */\nexport function getBezierBounds(startPoint, controlPoint1, controlPoint2, endPoint, connector) {\n    var minx = 0;\n    var miny = 0;\n    var maxx = 0;\n    var maxy = 0;\n    var tolerancevalue = 3;\n    var max = Number((connector.distance(controlPoint1, startPoint) +\n        connector.distance(controlPoint2, controlPoint1) +\n        connector.distance(endPoint, controlPoint2)) / tolerancevalue);\n    if (max !== 0) {\n        for (var i = 0; i <= max; i++) {\n            var t = i / max;\n            var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.x +\n                3 * t * t * (1 - t) * controlPoint2.x +\n                t * t * t * endPoint.x;\n            var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.y +\n                3 * t * t * (1 - t) * controlPoint2.y +\n                t * t * t * endPoint.y;\n            if (i === 0) {\n                minx = maxx = x;\n                miny = maxy = y;\n            }\n            else {\n                minx = Math.min(x, minx);\n                miny = Math.min(y, miny);\n                maxx = Math.max(x, maxx);\n                maxy = Math.max(y, maxy);\n            }\n        }\n    }\n    return {\n        x: minx, y: miny, width: maxx - minx, height: maxy - miny,\n        left: minx, top: miny, right: (minx + (maxx - minx)), bottom: (miny + (maxy - miny)),\n        center: { x: (minx + (maxx - minx)) / 2, y: (miny + (maxy - miny)) / 2 },\n    };\n}\n/**\n * Get the intermediate bezier curve for point over connector\n */\nexport function bezierPoints(connector, startPoint, point1, point2, endPoint, i, max) {\n    var pt = { x: 0, y: 0 };\n    var t = i / max;\n    var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n        3 * t * (1 - t) * (1 - t) * point1.x +\n        3 * t * t * (1 - t) * point2.x +\n        t * t * t * endPoint.x;\n    pt.x = x;\n    var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n        3 * t * (1 - t) * (1 - t) * point1.y +\n        3 * t * t * (1 - t) * point2.y +\n        t * t * t * endPoint.y;\n    pt.y = y;\n    return pt;\n}\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar MultiplicityLabel = /** @class */ (function (_super) {\n    __extends(MultiplicityLabel, _super);\n    function MultiplicityLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], MultiplicityLabel.prototype, \"optional\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"lowerBounds\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"upperBounds\", void 0);\n    return MultiplicityLabel;\n}(ChildProperty));\nexport { MultiplicityLabel };\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar ClassifierMultiplicity = /** @class */ (function (_super) {\n    __extends(ClassifierMultiplicity, _super);\n    function ClassifierMultiplicity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('OneToOne')\n    ], ClassifierMultiplicity.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"target\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"source\", void 0);\n    return ClassifierMultiplicity;\n}(ChildProperty));\nexport { ClassifierMultiplicity };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar RelationShip = /** @class */ (function (_super) {\n    __extends(RelationShip, _super);\n    function RelationShip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlClassifier')\n    ], RelationShip.prototype, \"type\", void 0);\n    __decorate([\n        Property('Aggregation')\n    ], RelationShip.prototype, \"relationship\", void 0);\n    __decorate([\n        Property('Directional')\n    ], RelationShip.prototype, \"associationType\", void 0);\n    __decorate([\n        Complex({}, ClassifierMultiplicity)\n    ], RelationShip.prototype, \"multiplicity\", void 0);\n    return RelationShip;\n}(ConnectorShape));\nexport { RelationShip };\n/**\n * Connector shape for blazor\n */\nvar DiagramConnectorShape = /** @class */ (function (_super) {\n    __extends(DiagramConnectorShape, _super);\n    function DiagramConnectorShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], DiagramConnectorShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Directional')\n    ], DiagramConnectorShape.prototype, \"associationType\", void 0);\n    __decorate([\n        Property('Aggregation')\n    ], DiagramConnectorShape.prototype, \"relationship\", void 0);\n    __decorate([\n        Complex({}, ClassifierMultiplicity)\n    ], DiagramConnectorShape.prototype, \"multiplicity\", void 0);\n    __decorate([\n        Property('Sequence')\n    ], DiagramConnectorShape.prototype, \"bpmnFlow\", void 0);\n    __decorate([\n        Property('Default')\n    ], DiagramConnectorShape.prototype, \"message\", void 0);\n    __decorate([\n        Property('Normal')\n    ], DiagramConnectorShape.prototype, \"sequence\", void 0);\n    __decorate([\n        Property('Default')\n    ], DiagramConnectorShape.prototype, \"association\", void 0);\n    __decorate([\n        Property('Object')\n    ], DiagramConnectorShape.prototype, \"umlActivityFlow\", void 0);\n    __decorate([\n        Property(30)\n    ], DiagramConnectorShape.prototype, \"exceptionFlowHeight\", void 0);\n    return DiagramConnectorShape;\n}(ChildProperty));\nexport { DiagramConnectorShape };\n/**\n * Connectors are used to create links between nodes\n */\nvar Connector = /** @class */ (function (_super) {\n    __extends(Connector, _super);\n    // tslint:disable-next-line:no-any\n    function Connector(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.bridges = [];\n        /** @private */\n        _this.status = 'None';\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        if (defaultValue && defaultValue.shape && defaultValue.shape.type !== 'None') {\n            setConnectorDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    /** @private */\n    // tslint:disable-next-line:no-any\n    Connector.prototype.init = function (diagram) {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        var bpmnElement;\n        var container = new Canvas();\n        var segment = new PathElement();\n        segment.id = this.id + '_path';\n        var srcDecorator = new PathElement();\n        var targetDecorator = new PathElement();\n        segment = this.getSegmentElement(this, segment);\n        var bounds;\n        var points = [];\n        points = this.getConnectorPoints(this.type);\n        points = this.clipDecorators(this, points);\n        bounds = Rect.toBounds(points);\n        container.width = bounds.width;\n        container.height = bounds.height;\n        container.offsetX = bounds.x + container.pivot.x * bounds.width;\n        container.offsetY = bounds.y + container.pivot.y * bounds.height;\n        switch (this.shape.type) {\n            case 'Bpmn':\n                var flow = (isBlazor() ? this.shape.bpmnFlow : this.shape.flow);\n                switch (flow) {\n                    case 'Sequence':\n                        bpmnElement = this.getBpmnSequenceFlow();\n                        break;\n                    case 'Association':\n                        bpmnElement = new PathElement();\n                        bpmnElement.visible = false;\n                        this.getBpmnAssociationFlow();\n                        break;\n                    case 'Message':\n                        bpmnElement = this.getBpmnMessageFlow();\n                        segment = this.getSegmentElement(this, segment);\n                        this.updateShapePosition(this, bpmnElement);\n                        break;\n                }\n                break;\n            case 'UmlActivity':\n                var activityFlow = (isBlazor() ? this.shape.umlActivityFlow :\n                    this.shape.flow);\n                switch (activityFlow) {\n                    case 'Object':\n                        this.getUMLObjectFlow();\n                        break;\n                    case 'Exception':\n                        this.getUMLExceptionFlow(segment);\n                        break;\n                }\n                break;\n            case 'UmlClassifier':\n                this.getConnectorRelation();\n                break;\n        }\n        var anglePoints = this.intermediatePoints;\n        if (this.type === 'Bezier') {\n            var firstSegment = this.segments[0];\n            var lastSegment = this.segments[this.segments.length - 1];\n            anglePoints = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n                !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n        }\n        var accessContent = 'getDescription';\n        var getDescription = diagram[accessContent];\n        var strokeWidth = this.sourceWrapper ? this.sourceWrapper.style.strokeWidth / 2 / 2 : 0;\n        srcDecorator = this.getDecoratorElement(points[0], anglePoints[1], this.sourceDecorator, true, getDescription);\n        targetDecorator = this.getDecoratorElement(points[points.length - 1], anglePoints[anglePoints.length - 2], this.targetDecorator, false, getDescription);\n        srcDecorator.id = this.id + '_srcDec';\n        targetDecorator.id = this.id + '_tarDec';\n        segment.style = this.style;\n        /* tslint:disable:no-string-literal */\n        segment.style['fill'] = 'transparent';\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(this, diagram);\n            segment.description = wrapperContent ? wrapperContent : this.id;\n        }\n        container.style.strokeColor = 'transparent';\n        container.style.fill = 'transparent';\n        container.style.strokeWidth = 0;\n        container.children = [segment, srcDecorator, targetDecorator];\n        container.id = this.id;\n        if (bpmnElement !== undefined) {\n            container.children.push(bpmnElement);\n        }\n        container.offsetX = segment.offsetX;\n        container.offsetY = segment.offsetY;\n        container.width = segment.width;\n        container.height = segment.height;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            container.children.push(this.getAnnotationElement(this.annotations[i], this.intermediatePoints, bounds, getDescription, diagram.element.id, diagram.annotationTemplate));\n        }\n        this.wrapper = container;\n        return container;\n    };\n    Connector.prototype.getConnectorRelation = function () {\n        var shape = this.shape;\n        if (shape.relationship === 'Association') {\n            this.segments[0].type = 'Straight';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        else if (shape.relationship === 'Inheritance') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        else if (shape.relationship === 'Composition') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n        }\n        else if (shape.relationship === 'Aggregation') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n        }\n        else if (shape.relationship === 'Dependency') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'OpenArrow';\n        }\n        else if (shape.relationship === 'Realization') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if (shape.associationType === 'BiDirectional') {\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'None';\n        }\n        var text1 = '';\n        var lower;\n        var upper;\n        var sourceText = '';\n        var targetText = '';\n        var text = '';\n        if (shape.multiplicity.source) {\n            shape.multiplicity.source.lowerBounds = shape.multiplicity.source.lowerBounds;\n            shape.multiplicity.source.upperBounds = shape.multiplicity.source.upperBounds;\n        }\n        if (shape.multiplicity.target) {\n            shape.multiplicity.target.lowerBounds = shape.multiplicity.target.lowerBounds;\n            shape.multiplicity.target.upperBounds = shape.multiplicity.target.upperBounds;\n        }\n        lower = shape.multiplicity.source;\n        upper = shape.multiplicity.target;\n        text = lower.upperBounds ? lower.lowerBounds + '...' + lower.upperBounds : lower.lowerBounds;\n        text1 = upper.upperBounds ? upper.lowerBounds + '...' + upper.upperBounds : upper.lowerBounds;\n        if (shape.multiplicity.type === 'ManyToOne') {\n            shape.multiplicity.target.optional = false;\n            sourceText = text ? text : '*';\n            targetText = '1';\n        }\n        if (shape.multiplicity.type === 'OneToMany') {\n            shape.multiplicity.source.optional = false;\n            targetText = text1 ? text1 : '*';\n            sourceText = '1';\n        }\n        if (shape.multiplicity.type === 'ManyToOne') {\n            sourceText = text ? text : '*';\n            targetText = text1 ? text1 : '*';\n        }\n        if (shape.multiplicity.type === 'OneToOne') {\n            shape.multiplicity.target.optional = false;\n            shape.multiplicity.source.optional = false;\n            sourceText = '1';\n            targetText = '1';\n        }\n        this.annotations = [\n            {\n                id: this.id + 'sourcelabel', content: sourceText, offset: 0, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            },\n            {\n                id: this.id + 'targetlabel', content: targetText, offset: 1, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            }\n        ];\n    };\n    Connector.prototype.getBpmnSequenceFlow = function () {\n        var segment = new PathElement();\n        var pathseq = new PathElement();\n        var pathseqData;\n        if ((this.shape.sequence) === 'Normal' && this.type !== 'Bezier') {\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.sequence) === 'Default') {\n            segment = this.getSegmentElement(this, segment);\n            var anglePoints = this.intermediatePoints;\n            pathseq = updatePathElement(anglePoints, this);\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.sequence) === 'Conditional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Diamond';\n            pathseq.id = this.id + this.shape.type;\n        }\n        return pathseq;\n    };\n    /** @private */\n    Connector.prototype.getUMLObjectFlow = function () {\n        if (this.annotations) {\n            for (var i = 0; i < this.annotations.length; i++) {\n                this.annotations[i].content = '[' + this.annotations[i].content + ']';\n            }\n        }\n    };\n    /** @private */\n    Connector.prototype.getUMLExceptionFlow = function (segment) {\n        this.type = 'Straight';\n        var height = (this.shape.exceptionFlowHeight) / 2;\n        var midPt = { x: (this.targetPoint.x + this.sourcePoint.x) / 2, y: (this.targetPoint.y + this.sourcePoint.y) / 2 };\n        var xDist = midPt.x - this.sourcePoint.x;\n        var yDist = midPt.y - this.sourcePoint.y;\n        var dist = Math.sqrt(xDist * xDist + yDist * yDist);\n        var fractionOfTotal = (height) / dist;\n        var midPt2 = { x: midPt.x - xDist * fractionOfTotal, y: midPt.y - yDist * fractionOfTotal };\n        var midPt1 = { x: midPt.x + xDist * fractionOfTotal, y: midPt.y + yDist * fractionOfTotal };\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, 315, midPt.x, midPt.y);\n        this.segments = [];\n        var segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt1) }, true);\n        (this.segments).push(segments);\n        segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt2) }, true);\n        (this.segments).push(segments);\n        segment = this.getSegmentElement(this, segment);\n    };\n    Connector.prototype.getBpmnAssociationFlow = function () {\n        if ((this.shape.association) === 'Default') {\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'Directional') {\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'BiDirectional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Arrow';\n        }\n    };\n    Connector.prototype.getBpmnMessageFlow = function () {\n        var segmentMessage = new PathElement();\n        this.targetDecorator.shape = 'Arrow';\n        this.targetDecorator.width = 5;\n        this.targetDecorator.height = 10;\n        this.sourceDecorator.shape = 'Circle';\n        if (((this.shape.message) === 'InitiatingMessage') ||\n            ((this.shape.message) === 'NonInitiatingMessage')) {\n            segmentMessage.id = this.id + '_' + (this.shape.message);\n            segmentMessage.width = 25;\n            segmentMessage.height = 15;\n            segmentMessage.data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n            segmentMessage.horizontalAlignment = 'Center';\n            segmentMessage.verticalAlignment = 'Center';\n            segmentMessage.transform = Transform.Self;\n            segmentMessage.style.fill = (this.shape.message) === 'NonInitiatingMessage' ? 'lightgrey' : 'white';\n        }\n        return segmentMessage;\n    };\n    /** @private */\n    Connector.prototype.distance = function (pt1, pt2) {\n        return findDistance(pt1, pt2);\n    };\n    /**   @private  */\n    Connector.prototype.findPath = function (sourcePt, targetPt) {\n        return findPath(sourcePt, targetPt);\n    };\n    /** @private */\n    Connector.prototype.getAnnotationElement = function (annotation, points, bounds, getDescription, diagramId, annotationTemplate) {\n        annotation.id = annotation.id || randomId();\n        var textele;\n        if (isBlazor() && annotation.annotationType === 'Template') {\n            annotation.template = annotation.template ? annotation.template : '';\n        }\n        if (diagramId && (annotation.template || annotation.annotationType === 'Template'\n            || (annotationTemplate && annotation.content === ''))) {\n            textele = new DiagramHtmlElement(this.id, diagramId, annotation.id, annotationTemplate);\n            textele = getTemplateContent(textele, annotation, annotationTemplate);\n        }\n        else {\n            textele = new TextElement();\n            textele.content = annotation.content;\n            textele.style.textOverflow = 'Wrap';\n        }\n        textele.constraints = annotation.constraints;\n        textele.visible = annotation.visibility;\n        textele.rotateAngle = annotation.rotateAngle;\n        textele.horizontalAlignment = annotation.horizontalAlignment;\n        textele.verticalAlignment = annotation.verticalAlignment;\n        textele.width = annotation.width;\n        textele.height = annotation.height;\n        if (bounds.width !== undefined && !annotation.template) {\n            textele.width = (annotation.width || bounds.width) - annotation.margin.left - annotation.margin.right;\n        }\n        textele.margin = annotation.margin;\n        textele.id = this.id + '_' + annotation.id;\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        textele.style = annotation.style;\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        var description = getFunction(getDescription);\n        if (description) {\n            wrapperContent = description(annotation, this);\n        }\n        textele.description = wrapperContent ? wrapperContent : textele.id;\n        this.updateAnnotation(annotation, points, bounds, textele);\n        return textele;\n    };\n    /** @private */\n    Connector.prototype.updateAnnotation = function (annotation, points, bounds, textElement, canRefresh) {\n        var getPointloop;\n        var newPoint;\n        var align;\n        var hAlign;\n        var vAlign;\n        var offsetPoint;\n        var pivotPoint = { x: 0, y: 0 };\n        if (!(textElement instanceof DiagramHtmlElement) && (!canRefresh)) {\n            textElement.refreshTextElement();\n        }\n        textElement.width = (annotation.width || bounds.width);\n        getPointloop = getAnnotationPosition(points, annotation, bounds);\n        newPoint = getPointloop.point;\n        if (annotation.segmentAngle) {\n            textElement.rotateAngle = annotation.rotateAngle + getPointloop.angle;\n            textElement.rotateAngle = (textElement.rotateAngle + 360) % 360;\n        }\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        offsetPoint = { x: ((newPoint.x - bounds.x) / bounds.width), y: ((newPoint.y - bounds.y) / bounds.height) };\n        pivotPoint.x = bounds.width * offsetPoint.x;\n        pivotPoint.y = bounds.height * offsetPoint.y;\n        align = alignLabelOnSegments(annotation, getPointloop.angle, points);\n        hAlign = align.hAlign;\n        vAlign = align.vAlign;\n        var horizor;\n        var verzor;\n        if (hAlign === 'left') {\n            horizor = 'Left';\n            pivotPoint.x += annotation.displacement.x;\n        }\n        else if (hAlign === 'right') {\n            horizor = 'Right';\n            pivotPoint.x -= annotation.displacement.x;\n        }\n        else if (hAlign === 'center') {\n            horizor = 'Center';\n        }\n        if (vAlign === 'top') {\n            verzor = 'Top';\n            pivotPoint.y += annotation.displacement.y;\n        }\n        else if (vAlign === 'bottom') {\n            verzor = 'Bottom';\n            pivotPoint.y -= annotation.displacement.y;\n        }\n        else if (vAlign === 'center') {\n            verzor = 'Center';\n        }\n        textElement.horizontalAlignment = horizor;\n        textElement.verticalAlignment = verzor;\n        textElement.setOffsetWithRespectToBounds(pivotPoint.x, pivotPoint.y, 'Absolute');\n        textElement.relativeMode = 'Point';\n    };\n    /** @private */\n    Connector.prototype.getConnectorPoints = function (type, points, layoutOrientation) {\n        var width = Math.abs(this.sourcePoint.x - this.targetPoint.x);\n        var height = Math.abs(this.sourcePoint.y - this.targetPoint.y);\n        points = findConnectorPoints(this, layoutOrientation);\n        var newPoints = points.slice(0);\n        if (newPoints && newPoints.length > 0) {\n            this.sourcePoint = newPoints[0];\n            this.targetPoint = newPoints[newPoints.length - 1];\n        }\n        return newPoints;\n    };\n    /** @private */\n    Connector.prototype.clipDecorator = function (connector, points, isSource, diagramAction) {\n        var point = { x: 0, y: 0 };\n        var start = { x: 0, y: 0 };\n        var end = { x: 0, y: 0 };\n        var length = points.length;\n        start = !isSource ? points[length - 1] : points[0];\n        end = !isSource ? points[length - 2] : points[1];\n        var len = Point.distancePoints(start, end);\n        len = (len === 0) ? 1 : len;\n        var strokeWidth = 1;\n        var node = isSource ? connector.sourceWrapper : connector.targetWrapper;\n        if (node) {\n            strokeWidth = node.style.strokeWidth;\n            if (diagramAction && ((diagramAction) & DiagramAction.DecoratorPropertyChange)) {\n                strokeWidth = 1;\n            }\n        }\n        var width = strokeWidth - 1;\n        point.x = (Math.round(start.x + width * (end.x - start.x) / len));\n        point.y = (Math.round(start.y + width * (end.y - start.y) / len));\n        if ((isSource && connector.sourceDecorator.shape !== 'None') ||\n            (!isSource && connector.targetDecorator.shape !== 'None')) {\n            point = Point.adjustPoint(point, end, true, (diagramAction & DiagramAction.DecoratorPropertyChange) ? 0 : (strokeWidth / 2));\n        }\n        return point;\n    };\n    /** @private */\n    Connector.prototype.clipDecorators = function (connector, pts, diagramAction) {\n        if (connector.sourceDecorator.shape !== 'None') {\n            pts[0] = this.clipDecorator(connector, pts, true, diagramAction);\n        }\n        if (connector.targetDecorator.shape !== 'None') {\n            pts[pts.length - 1] = this.clipDecorator(connector, pts, false, diagramAction);\n        }\n        return pts;\n    };\n    /** @private */\n    Connector.prototype.updateSegmentElement = function (connector, points, element, diagramActions) {\n        var segmentPath;\n        var bounds = new Rect();\n        var point;\n        segmentPath = this.getSegmentPath(connector, points, diagramActions);\n        if (connector.type === 'Bezier') {\n            if (this.segments.length > 0) {\n                for (var i = 0; i < this.segments.length; i++) {\n                    var segment = this.segments[i];\n                    var connectorSegment = connector.segments[i];\n                    var point1 = !Point.isEmptyPoint(segment.point1) ? connectorSegment.point1 : connectorSegment.bezierPoint1;\n                    var point2 = !Point.isEmptyPoint(segment.point2) ? connectorSegment.point2 : connectorSegment.bezierPoint2;\n                    bounds.uniteRect(getBezierBounds(segment.points[0], point1, point2, segment.points[1], connector));\n                }\n            }\n        }\n        else {\n            bounds = Rect.toBounds(points);\n        }\n        element.width = bounds.width;\n        element.height = bounds.height;\n        element.offsetX = bounds.x + element.width / 2;\n        element.offsetY = bounds.y + element.height / 2;\n        element.data = segmentPath;\n        if (connector.wrapper) {\n            connector.wrapper.offsetX = element.offsetX;\n            connector.wrapper.offsetY = element.offsetY;\n            connector.wrapper.width = bounds.width;\n            connector.wrapper.height = bounds.height;\n        }\n        return element;\n    };\n    /** @private */\n    Connector.prototype.getSegmentElement = function (connector, segmentElement, layoutOrientation, diagramActions) {\n        var bounds;\n        var segmentPath;\n        var points = [];\n        flipConnector(connector);\n        points = this.getConnectorPoints(connector.type, undefined, layoutOrientation);\n        this.intermediatePoints = points;\n        segmentElement.staticSize = true;\n        segmentElement = this.updateSegmentElement(connector, points, segmentElement, diagramActions);\n        return segmentElement;\n    };\n    /** @private */\n    Connector.prototype.getDecoratorElement = function (offsetPoint, adjacentPoint, decorator, isSource, getDescription) {\n        var decEle = new PathElement();\n        var getPath;\n        var angle;\n        decEle.transform = Transform.Self;\n        this.updateDecoratorElement(decEle, offsetPoint, adjacentPoint, decorator);\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(decorator, this);\n            decEle.description = wrapperContent ? wrapperContent :\n                ('Specifies the ' + isSource ? 'source' : 'target' + 'port element of the connector');\n        }\n        return decEle;\n    };\n    Connector.prototype.bridgePath = function (connector, path, pointIndex) {\n        var pathData = path;\n        if (connector.bridges.length > 0) {\n            if (connector.type === 'Straight' && connector.segments.length < 2) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (!bridge.rendered) {\n                        pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                        pathData += bridge.path;\n                        bridge.rendered = true;\n                    }\n                }\n            }\n            else if (connector.type === 'Orthogonal' || (connector.type === 'Straight' && connector.segments.length > 1)) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (bridge.segmentPointIndex === pointIndex) {\n                        if (!bridge.rendered) {\n                            if (bridge.segmentPointIndex === pointIndex) {\n                                pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                                pathData += bridge.path;\n                                bridge.rendered = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return pathData;\n    };\n    /** @private */\n    Connector.prototype.updateDecoratorElement = function (element, pt, adjacentPoint, decorator) {\n        var getPath;\n        var angle;\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n        angle = Point.findAngle(pt, adjacentPoint);\n        getPath = getDecoratorShape(decorator.shape, decorator);\n        var size = new Size(decorator.width, decorator.height);\n        element.pivot.x = decorator.pivot.x;\n        element.pivot.y = decorator.pivot.y;\n        element.style = decorator.style;\n        element.rotateAngle = angle;\n        element.data = getPath;\n        element.canMeasurePath = true;\n        element.width = size.width;\n        element.height = size.height;\n    };\n    /** @private */\n    Connector.prototype.getSegmentPath = function (connector, points, diagramAction) {\n        var path = '';\n        var getPt;\n        var end;\n        var st;\n        var pts = [];\n        var j = 0;\n        while (j < points.length) {\n            pts.push({ x: points[j].x, y: points[j].y });\n            j++;\n        }\n        for (var m = 0; m < connector.bridges.length; m++) {\n            var bridge = connector.bridges[m];\n            bridge.rendered = false;\n        }\n        pts = this.clipDecorators(connector, pts, diagramAction);\n        if (this.cornerRadius > 0 && this.type !== 'Bezier') {\n            for (var j_1 = 0; j_1 < pts.length - 1; j_1++) {\n                getPt = pts[j_1];\n                if (j_1 === 0) {\n                    path = 'M' + getPt.x + ' ' + getPt.y;\n                }\n                var segLength = Point.distancePoints(pts[j_1], pts[j_1 + 1]);\n                if (segLength > 0) {\n                    if (j_1 < pts.length - 2) {\n                        if (segLength < this.cornerRadius * 2) {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, segLength / 2);\n                        }\n                        else {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, this.cornerRadius);\n                        }\n                    }\n                    else {\n                        end = pts[j_1 + 1];\n                    }\n                    if (j_1 > 0) {\n                        if (segLength < this.cornerRadius * 2) {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, segLength / 2);\n                            if (j_1 < pts.length - 2) {\n                                end = null;\n                            }\n                        }\n                        else {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, this.cornerRadius);\n                        }\n                    }\n                    if (st) {\n                        path += 'Q' + getPt.x + ' ' + getPt.y + ' ' + st.x + ' ' + st.y;\n                    }\n                    if (end) {\n                        if (connector.bridges.length > 0) {\n                            path = this.bridgePath(connector, path, j_1);\n                            if (connector.type === 'Orthogonal') {\n                                path = this.bridgePath(connector, path, j_1 + 1);\n                            }\n                        }\n                        path += ' L' + end.x + ' ' + end.y;\n                    }\n                }\n            }\n        }\n        else {\n            if (this.type === 'Bezier') {\n                var direction = void 0;\n                var segments = this.segments;\n                for (var j_2 = 0; j_2 < segments.length; j_2++) {\n                    if (pts.length > 2) {\n                        segments[j_2].bezierPoint1 = { x: 0, y: 0 };\n                        segments[j_2].bezierPoint2 = { x: 0, y: 0 };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point1) && !segments[j_2].vector1.angle && !segments[j_2].vector1.distance) {\n                        if ((connector.sourceID || this.sourcePortID) && this.sourceWrapper) {\n                            direction = getDirection(this.sourceWrapper.bounds, pts[j_2], true);\n                        }\n                        segments[j_2].bezierPoint1 = getBezierPoints(pts[j_2], pts[j_2 + 1], direction);\n                    }\n                    else if (segments[j_2].vector1.angle || segments[j_2].vector1.distance) {\n                        segments[j_2].bezierPoint1 = Point.transform(pts[j_2], segments[j_2].vector1.angle, segments[j_2].vector1.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint1 = {\n                            x: segments[j_2].point1.x || segments[j_2].bezierPoint1.x,\n                            y: segments[j_2].point1.y || segments[j_2].bezierPoint1.y\n                        };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point2) && !segments[j_2].vector2.angle && !segments[j_2].vector2.distance) {\n                        if ((connector.targetID || this.targetPortID) && this.targetWrapper) {\n                            direction = getDirection(this.targetWrapper.bounds, pts[j_2 + 1], true);\n                        }\n                        segments[j_2].bezierPoint2 = getBezierPoints(pts[j_2 + 1], pts[j_2], direction);\n                    }\n                    else if (segments[j_2].vector2.angle || segments[j_2].vector2.distance) {\n                        segments[j_2].bezierPoint2 = Point.transform(pts[j_2 + 1], segments[j_2].vector2.angle, segments[j_2].vector2.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint2 = {\n                            x: segments[j_2].point2.x || segments[j_2].bezierPoint2.x,\n                            y: segments[j_2].point2.y || segments[j_2].bezierPoint2.y\n                        };\n                    }\n                }\n                pts.splice(1, 0, { x: segments[0].bezierPoint1.x, y: segments[0].bezierPoint1.y });\n                pts.splice(pts.length - 1, 0, {\n                    x: segments[segments.length - 1].bezierPoint2.x, y: segments[segments.length - 1].bezierPoint2.y\n                });\n                pts = this.clipDecorators(connector, pts, diagramAction);\n                for (var j_3 = 0; j_3 < segments.length; j_3++) {\n                    if (j_3 === 0) {\n                        path = 'M' + pts[0].x + ' ' + pts[0].y;\n                    }\n                    var lastPoint = (j_3 === segments.length - 1) ? pts[pts.length - 1].x + ' ' + pts[pts.length - 1].y :\n                        segments[j_3].points[segments[j_3].points.length - 1].x + ' ' + segments[j_3].points[segments[j_3].points.length - 1].y;\n                    path += 'C' +\n                        segments[j_3].bezierPoint1.x + ' ' + segments[j_3].bezierPoint1.y + ' ' + segments[j_3].bezierPoint2.x + ' '\n                        + segments[j_3].bezierPoint2.y + ' ' + lastPoint;\n                }\n            }\n            else {\n                for (var k = 0; k < pts.length; k++) {\n                    getPt = pts[k];\n                    if (k === 0) {\n                        path = 'M' + getPt.x + ' ' + getPt.y;\n                    }\n                    if (k > 0) {\n                        path = this.bridgePath(connector, path, k);\n                        path += ' ' + 'L' + getPt.x + ' ' + getPt.y;\n                    }\n                }\n            }\n        }\n        return path;\n    };\n    /** @private */\n    Connector.prototype.updateShapeElement = function (connector) {\n        var element;\n        switch (connector.shape.type) {\n            case 'Bpmn':\n                if (connector.wrapper.children[3] instanceof PathElement) {\n                    element = connector.wrapper.children[3];\n                }\n                if (connector.shape.flow === 'Message' ||\n                    (isBlazor() && connector.shape.bpmnFlow === 'Message')) {\n                    this.updateShapePosition(connector, element);\n                }\n                break;\n            case 'UmlActivity':\n                if (connector.shape.flow === 'Exception' || (isBlazor() &&\n                    connector.shape.umlActivityFlow === 'Exception')) {\n                    this.getUMLExceptionFlow(connector.wrapper.children[0]);\n                }\n                break;\n        }\n    };\n    /** @private */\n    Connector.prototype.updateShapePosition = function (connector, element) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        var length = 0;\n        var anglePoints = this.intermediatePoints;\n        for (var i = 0; i < anglePoints.length - 1; i++) {\n            length = length + this.distance(anglePoints[i], anglePoints[i + 1]);\n            var offsetLength = length * segmentOffset;\n            if (length >= offsetLength) {\n                angle = findAngle(anglePoints[i], anglePoints[i + 1]);\n                pt = Point.transform(anglePoints[i], angle, offsetLength);\n            }\n        }\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n    };\n    /** @hidden */\n    Connector.prototype.scale = function (sw, sh, width, height, refObject) {\n        var tx = 0;\n        var ty = 0;\n        if (this.wrapper && this.wrapper.outerBounds) {\n            var outerBounds = getOuterBounds(this);\n            var connWidth = (this.wrapper.bounds.width || this.style.strokeWidth || 1) - 2;\n            var connHeight = (this.wrapper.bounds.height || this.style.strokeWidth || 1) - 2;\n            tx = (outerBounds.width - connWidth);\n            ty = (outerBounds.height - connHeight);\n            sw = (width - (Math.max(tx, ty))) / connWidth;\n            sh = (height - (Math.max(tx, ty))) / connHeight;\n            tx = ty = Math.min(tx, ty);\n        }\n        sw = sh = Math.min(sw, sh);\n        var matrix = identityMatrix();\n        refObject = refObject || this.wrapper;\n        rotateMatrix(matrix, -refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        scaleMatrix(matrix, sw, sh, refObject.offsetX, refObject.offsetY);\n        rotateMatrix(matrix, refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        var points = transformPointsByMatrix(matrix, this.intermediatePoints);\n        this.sourcePoint = points[0];\n        this.targetPoint = points[points.length - 1];\n        points = this.intermediatePoints = findConnectorPoints(this);\n        updateConnector(this, points);\n        return { x: tx, y: ty };\n    };\n    /**\n     * @private\n     * Returns the name of class Connector\n     */\n    Connector.prototype.getClassName = function () {\n        return 'Connector';\n    };\n    __decorate([\n        ComplexFactory(getConnectorType)\n    ], Connector.prototype, \"shape\", void 0);\n    __decorate([\n        Property(ConnectorConstraints.Default)\n    ], Connector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"bridgeSpace\", void 0);\n    __decorate([\n        Collection([], PathAnnotation)\n    ], Connector.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"sourcePoint\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"targetPoint\", void 0);\n    __decorate([\n        CollectionFactory(getSegmentType)\n    ], Connector.prototype, \"segments\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"hitPadding\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"connectionPadding\", void 0);\n    __decorate([\n        Property('Straight')\n    ], Connector.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ shape: 'None' }, Decorator)\n    ], Connector.prototype, \"sourceDecorator\", void 0);\n    __decorate([\n        Complex({ shape: 'Arrow' }, Decorator)\n    ], Connector.prototype, \"targetDecorator\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Connector.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourcePortID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetPortID\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"sourcePadding\", void 0);\n    __decorate([\n        Complex({}, SymbolSize)\n    ], Connector.prototype, \"previewSize\", void 0);\n    __decorate([\n        Complex({}, SymbolSize)\n    ], Connector.prototype, \"dragSize\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"targetPadding\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 1, strokeColor: 'black' }, StrokeStyle)\n    ], Connector.prototype, \"style\", void 0);\n    __decorate([\n        Property(null)\n    ], Connector.prototype, \"wrapper\", void 0);\n    return Connector;\n}(NodeBase));\nexport { Connector };\n","import { createHtmlElement, removeElement } from '../utility/dom-util';\nimport { Ruler } from '../../ruler/index';\nimport { Size } from '../primitives/size';\nimport { getFunction } from '../utility/base-util';\n/**\n * defines the helper methods for the ruler\n */\n/**\n * @private\n */\nexport function renderOverlapElement(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var attributes = {\n        'id': diagram.element.id + '_overlapRuler',\n        style: 'height:' + rulerSize.height + 'px;width:' + rulerSize.width + 'px;position:absolute;left:0;top:0',\n        class: 'e-ruler-overlap'\n    };\n    var overlap = createHtmlElement('div', attributes);\n    diagram.element.insertBefore(overlap, diagram.element.firstChild);\n}\n/**\n * @private\n */\nexport function renderRuler(diagram, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var margin = isHorizontal ? ('margin-left:' + rulerSize.width + 'px;') : ('margin-top:' + rulerSize.height + 'px;');\n    if (!div) {\n        var style = 'height:' + (isHorizontal ? rulerSize.height : (rulerGeometry.height + 100)) + 'px;overflow:hidden;width:' +\n            (isHorizontal ? (rulerGeometry.width + 100) : rulerSize.width) + 'px;position:absolute;font-size:11px;' + margin;\n        var attributes = {\n            'id': diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'),\n            style: style\n        };\n        div = createHtmlElement('div', attributes);\n    }\n    diagram.element.insertBefore(div, diagram.element.firstChild);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    var ruler = new Ruler(diagramRuler);\n    ruler.orientation = isHorizontal ? 'Horizontal' : 'Vertical';\n    ruler.length = (isHorizontal ? rulerGeometry.width : rulerGeometry.height) + diagramRuler.segmentWidth;\n    ruler.appendTo('#' + diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler = ruler : diagram.vRuler = ruler;\n    var rulerObj = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler.element = rulerObj : diagram.vRuler.element = rulerObj;\n}\n/**\n * @private\n */\nexport function updateRuler(diagram) {\n    var hOffset = -diagram.scroller.horizontalOffset;\n    var vOffset = -diagram.scroller.verticalOffset;\n    if (diagram && diagram.rulerSettings.showRulers) {\n        diagram.hRuler.length = 0;\n        diagram.vRuler.length = 0;\n        if (hOffset !== undefined && diagram.hRuler.element) {\n            updateRulerDimension(diagram, diagram.hRuler, hOffset, true);\n        }\n        if (vOffset !== undefined && diagram.vRuler.element) {\n            updateRulerDimension(diagram, diagram.vRuler, vOffset, false);\n        }\n    }\n    else {\n        removeRulerElements(diagram);\n    }\n}\n/**\n * @private\n */\nexport function removeRulerElements(diagram) {\n    removeElement(diagram.element.id + '_hRuler');\n    removeElement(diagram.element.id + '_vRuler');\n    removeElement(diagram.element.id + '_overlapRuler');\n}\n/** @private */\nexport function getRulerSize(diagram) {\n    var top = 0;\n    var left = 0;\n    if (diagram.rulerSettings.showRulers) {\n        top = diagram.rulerSettings.horizontalRuler.thickness;\n        left = diagram.rulerSettings.verticalRuler.thickness;\n    }\n    return new Size(left, top);\n}\n/** @private */\nexport function getRulerGeometry(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var height = diagram.scroller.viewPortHeight;\n    var width = diagram.scroller.viewPortWidth;\n    if (width < diagram.element.clientWidth - rulerSize.width) {\n        width = diagram.element.clientWidth - rulerSize.width;\n    }\n    if (height < diagram.element.clientHeight - rulerSize.height) {\n        height = diagram.element.clientHeight - rulerSize.height;\n    }\n    if (diagram.hRuler && diagram.hRuler.length) {\n        width = diagram.hRuler.length;\n    }\n    if (diagram.vRuler && diagram.vRuler.length) {\n        height = diagram.vRuler.length;\n    }\n    return new Size(width, height);\n}\n/**\n * @private\n */\nexport function removeRulerMarkers() {\n    var markers = document.getElementsByClassName('e-d-ruler-marker');\n    var marker;\n    var i;\n    if (markers && markers.length > 0) {\n        for (i = markers.length - 1; i >= 0; i--) {\n            marker = markers[i];\n            if (marker) {\n                marker.parentNode.removeChild(marker);\n            }\n        }\n    }\n}\nexport function drawRulerMarkers(diagram, currentPoint) {\n    if (diagram.rulerSettings.showRulers) {\n        diagram.hRuler.drawRulerMarker(diagram.hRuler.element, currentPoint, diagram.scroller.horizontalOffset);\n        diagram.vRuler.drawRulerMarker(diagram.vRuler.element, currentPoint, diagram.scroller.verticalOffset);\n    }\n}\nfunction updateRulerDimension(diagram, ruler, offset, isHorizontal) {\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    updateRulerDiv(diagram, rulerGeometry, isHorizontal);\n    updateRulerSpace(diagram, rulerGeometry, isHorizontal);\n    ruler.offset = offset;\n    ruler.scale = diagram.scroller.currentZoom;\n    ruler.length = (isHorizontal ? rulerGeometry.width : rulerGeometry.height) + 100;\n    ruler.arrangeTick = getFunction(diagramRuler.arrangeTick);\n    ruler.dataBind();\n    var rulerObj = isHorizontal ? diagram.hRuler.element : diagram.vRuler.element;\n    if (isHorizontal) {\n        rulerObj.style.marginLeft = (rulerSize.width - ruler.hRulerOffset) + 'px';\n    }\n    else {\n        rulerObj.style.marginTop = (rulerSize.height - ruler.vRulerOffset) + 'px';\n    }\n}\nfunction updateRulerSpace(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler_ruler_space' : '_vRuler_ruler_space'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + (ruler.segmentWidth * 2)) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + (ruler.segmentWidth * 2))) + 'px';\n    }\n}\nfunction updateRulerDiv(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + ruler.segmentWidth) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + ruler.segmentWidth)) + 'px';\n        div = document.getElementById(diagram.element.id + '_overlapRuler');\n        if (div) {\n            isHorizontal ? (div.style.height = ruler.thickness + 'px') : (div.style.width = ruler.thickness + 'px');\n        }\n    }\n}\n","import { Node } from './../objects/node';\nimport { NodeConstraints, ConnectorConstraints, DiagramConstraints, DiagramTools, DiagramAction, RendererAction } from '../enum/enum';\nimport { AnnotationConstraints, PortConstraints } from '../enum/enum';\nimport { Connector } from './../objects/connector';\nimport { Selector } from './../objects/node';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\n/**\n * constraints-util module contains the common constraints\n */\n/** @private */\nexport function canSelect(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Select;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Select;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Select;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canMove(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Drag;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Drag;\n        }\n        else if (node instanceof Selector) {\n            state = 1;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Drag;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canEnablePointerEvents(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.PointerEvents;\n    }\n    else {\n        state = node.constraints & NodeConstraints.PointerEvents;\n    }\n    return state;\n}\n/** @private */\nexport function canDelete(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.Delete;\n    }\n    else {\n        state = node.constraints & NodeConstraints.Delete;\n    }\n    return state;\n}\n/** @private */\nexport function canBridge(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.Bridging) {\n        state = connector.constraints & ConnectorConstraints.Bridging;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritBridging) {\n        state = diagram.constraints & DiagramConstraints.Bridging;\n    }\n    else {\n        state = 0;\n    }\n    return state;\n}\n/** @private */\nexport function canEnableRouting(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.LineRouting) {\n        state = connector.constraints & ConnectorConstraints.LineRouting;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritLineRouting) {\n        state = diagram.constraints & DiagramConstraints.LineRouting;\n    }\n    return state;\n}\n/** @private */\nexport function canDragSourceEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragSourceEnd;\n}\n/** @private */\nexport function canDragTargetEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragTargetEnd;\n}\n/** @private */\nexport function canDragSegmentThumb(connector) {\n    return connector.constraints & ConnectorConstraints.DragSegmentThumb;\n}\n/** @private */\nexport function canRotate(node) {\n    if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n        return node.constraints & AnnotationConstraints.Rotate;\n    }\n    else {\n        return node.constraints & NodeConstraints.Rotate;\n    }\n}\n/** @private */\nexport function canShadow(node) {\n    return node.constraints & NodeConstraints.Shadow;\n}\n/** @private */\nexport function canInConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.InConnect)) {\n        return node.constraints & NodeConstraints.InConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortInConnect(port) {\n    if (port && port.constraints) {\n        if (!(port.constraints & PortConstraints.None) && (port.constraints & PortConstraints.InConnect)) {\n            return port.constraints & PortConstraints.InConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canOutConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.OutConnect)) {\n        return node.constraints & NodeConstraints.OutConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortOutConnect(port) {\n    if (port && port.constraints) {\n        if (!(port.constraints & PortConstraints.None) && (port.constraints & PortConstraints.OutConnect)) {\n            return port.constraints & PortConstraints.OutConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canResize(node, direction) {\n    var returnValue = 0;\n    if (node instanceof ShapeAnnotation || node instanceof PathAnnotation) {\n        returnValue = node.constraints & AnnotationConstraints.Resize;\n    }\n    else if (node) {\n        if (direction === 'SouthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthEast;\n        }\n        else if (direction === 'East') {\n            returnValue = node.constraints & NodeConstraints.ResizeEast;\n        }\n        else if (direction === 'NorthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthEast;\n        }\n        else if (direction === 'South') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouth;\n        }\n        else if (direction === 'North') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorth;\n        }\n        else if (direction === 'SouthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthWest;\n        }\n        else if (direction === 'West') {\n            returnValue = node.constraints & NodeConstraints.ResizeWest;\n        }\n        else if (direction === 'NorthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthWest;\n        }\n    }\n    return returnValue;\n}\n/** @private */\nexport function canAllowDrop(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.AllowDrop;\n    }\n    else {\n        state = node.constraints & NodeConstraints.AllowDrop;\n    }\n    return state;\n}\n/** @private */\nexport function canVitualize(diagram) {\n    return diagram.constraints & DiagramConstraints.Virtualization;\n}\n/** @private */\nexport function canEnableToolTip(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        if (node.constraints & ConnectorConstraints.Tooltip) {\n            state = node.constraints & ConnectorConstraints.Tooltip;\n        }\n        else if (node.constraints & ConnectorConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    else {\n        if (node.constraints & NodeConstraints.Tooltip) {\n            state = node.constraints & NodeConstraints.Tooltip;\n        }\n        else if (node.constraints & NodeConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    return state;\n}\n/** @private */\nexport function canSingleSelect(model) {\n    return model.tool & DiagramTools.SingleSelect;\n}\n/** @private */\nexport function canMultiSelect(model) {\n    return model.tool & DiagramTools.MultipleSelect;\n}\n/** @private */\nexport function canZoomPan(model) {\n    return model.tool & DiagramTools.ZoomPan;\n}\n/** @private */\nexport function canContinuousDraw(model) {\n    return model.tool & DiagramTools.ContinuousDraw;\n}\n/** @private */\nexport function canDrawOnce(model) {\n    return model.tool & DiagramTools.DrawOnce;\n}\n/** @private */\nexport function defaultTool(model) {\n    return (model.tool & DiagramTools.SingleSelect) || (model.tool & DiagramTools.MultipleSelect);\n}\n/** @private */\nexport function canZoom(model) {\n    return model.constraints & DiagramConstraints.Zoom;\n}\n/** @private */\nexport function canPan(model) {\n    return model.constraints & DiagramConstraints.Pan;\n}\n/** @private */\nexport function canUserInteract(model) {\n    return model.constraints & DiagramConstraints.UserInteraction;\n}\n/** @private */\nexport function canApiInteract(model) {\n    return model.constraints & DiagramConstraints.ApiUpdate;\n}\n/** @private */\nexport function canPanX(model) {\n    return ((model.constraints & DiagramConstraints.PanX));\n}\n/** @private */\nexport function canPanY(model) {\n    return ((model.constraints & DiagramConstraints.PanY));\n}\n/** @private */\nexport function canZoomTextEdit(diagram) {\n    return ((diagram.constraints & DiagramConstraints.ZoomTextEdit));\n}\n/** @private */\nexport function canPageEditable(model) {\n    return canApiInteract(model) || (model.diagramActions & DiagramAction.ToolAction);\n}\n/** @private */\nexport function enableReadOnly(annotation, node) {\n    var enumValue = 0;\n    enumValue = (node instanceof Connector) ? ConnectorConstraints.ReadOnly : NodeConstraints.ReadOnly;\n    if (node.shape.type === 'Text') {\n        return node.constraints & NodeConstraints.ReadOnly;\n    }\n    else if (node.constraints & enumValue) {\n        if (annotation.constraints & AnnotationConstraints.InheritReadOnly) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    else if (annotation.constraints & AnnotationConstraints.ReadOnly) {\n        return 1;\n    }\n    return 0;\n}\n/** @private */\nexport function canDraw(port, diagram) {\n    return port.constraints & PortConstraints.Draw;\n}\n/** @private */\nexport function canDrag(port, diagram) {\n    return port.constraints & PortConstraints.Drag;\n}\n/** @private */\nexport function canPreventClearSelection(diagramActions) {\n    if (diagramActions & DiagramAction.PreventClearSelection) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function canDrawThumbs(rendererActions) {\n    if (!(rendererActions & RendererAction.DrawSelectorBorder)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function avoidDrawSelector(rendererActions) {\n    if ((rendererActions & RendererAction.PreventRenderSelector)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n","/**\n * UMLActivityShapeDictionary defines the shape of the built-in uml activity shapes\n */\n/** @private */\nexport function getUMLActivityShape(shape) {\n    return umlActivityShapes[shape.toString()];\n}\nvar umlActivityShapes = {\n    // Action,\n    'Action': 'M 90 82.895 C 90 86.819 86.776 90 82.8 90 H 7.2 C 3.224 90 0 86.819 0 82.895' +\n        ' V 7.105 C 0 3.181 3.224 0 7.2 0 h 75.6 C 86.776 0 90 3.181 90 7.105 V 82.895 Z',\n    // Decision,\n    'Decision': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // MergeNode,\n    'MergeNode': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // InitialNode,\n    'InitialNode': 'M10,19.5c-5.238,0-9.5-4.262-9.5-9.5S4.762,0.5,10,0.5s9.5,4.262,9.5,9.5S15.238,19.5,10,19.5z',\n    // ForkNode,\n    'ForkNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // JoinNode,\n    'JoinNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // TimeEvent,\n    'TimeEvent': 'M50.001,0.00286865 L25.001,25.0029 L0.000976562,0.00286865 L50.001,0.00286865 z' +\n        ' M0.000976562,50.0029 L25.001,25.0029 L50.001,50.0029 L0.000976562,50.0029 z',\n    // AcceptingEvent,\n    'AcceptingEvent': 'M17.8336 32.164 L29.64 24 L17.32 16 L48.1664 16 L48.5 32 Z',\n    // SendSignal,\n    'SendSignal': 'M48.164 31.8336 L56 23.832 L47.836 16 L16.168 16 L16.1668 31.8336 Z',\n    // ReceiveSignal,\n    'ReceiveSignal': 'M48.1664 31.8336 L39.836 24 L47.836 16 L16.168 16 L16.168 31.836 Z',\n    // StructuredNode,\n    'StructuredNode': 'M0,0 L50,0 L50,50 L0,50 z',\n    // Note,\n    'Note': 'M20 12 L4 12 L4 22 L22 22 L22 14 L20 14 L20 12 L22 14 Z',\n};\n","import { isBlazor } from '@syncfusion/ej2-base';\nimport { Node } from '../objects/node';\nimport { Diagram } from '../diagram';\nimport { Selector } from '../objects/node';\nimport { Size } from '../primitives/size';\nimport { cloneObject } from './../utility/base-util';\nimport { getObjectType } from './../utility/diagram-util';\nimport { Rect } from '../primitives/rect';\nimport { getAdornerLayerSvg } from '../utility/dom-util';\nimport { swimLaneMeasureAndArrange, checkLaneSize, checkPhaseOffset, canLaneInterchange } from '../utility/swim-lane-util';\nimport { updatePhaseMaxWidth, updateHeaderMaxWidth, updateConnectorsProperties } from '../utility/swim-lane-util';\nimport { considerSwimLanePadding } from '../utility/swim-lane-util';\nimport { DiagramAction, DiagramConstraints, NodeConstraints } from '../enum/enum';\n/**\n * Interaction for Container\n */\n//#region canvas Container interaction\n/** @private */\nexport function updateCanvasBounds(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    var connectorList = [];\n    var groupAction = false;\n    if (checkParentAsContainer(diagram, obj, true)) {\n        diagram.protectPropertyChange(true);\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((isBoundsUpdate || (wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y)))) {\n                var columnIndex = void 0;\n                var parentWrapper = void 0;\n                var y = wrapper.bounds.y;\n                var x = wrapper.bounds.x;\n                var parent_1 = diagram.nameTable[container.parentId] || container;\n                var shape = parent_1.shape;\n                if (shape.type === 'SwimLane') {\n                    groupAction = updateLaneBoundsAfterAddChild(container, parent_1, obj, diagram, true);\n                }\n                else {\n                    var parent_2 = diagram.nameTable[container.parentId] || container;\n                    var shape_1 = parent_2.shape;\n                    parentWrapper = parent_2.wrapper;\n                    if (wrapper.actualSize.width < wrapper.outerBounds.width &&\n                        (!(wrapper.bounds.x > wrapper.outerBounds.x))) {\n                        if (container.rowIndex !== undefined) {\n                            columnIndex = parent_2.columns.length - 1;\n                            parentWrapper.updateColumnWidth(container.columnIndex, wrapper.outerBounds.width, true);\n                            if (shape_1.orientation === 'Horizontal' && shape_1.phaseSize) {\n                                updatePhaseMaxWidth(parent_2, diagram, wrapper, container.columnIndex);\n                            }\n                            updateHeaderMaxWidth(diagram, parent_2);\n                            diagram.drag(parent_2, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                        }\n                        else {\n                            diagram.scale(container, (1 + ((wrapper.outerBounds.width - wrapper.actualSize.width) / wrapper.actualSize.width)), 1, ((wrapper.outerBounds.x < wrapper.bounds.x) ? { x: 1, y: 0.5 } : { x: 0, y: 0.5 }));\n                        }\n                    }\n                    if (wrapper.actualSize.height < wrapper.outerBounds.height &&\n                        (!(wrapper.bounds.y > wrapper.outerBounds.y))) {\n                        if (container.rowIndex !== undefined) {\n                            parentWrapper.updateRowHeight(container.rowIndex, wrapper.outerBounds.height, true);\n                            diagram.drag(parent_2, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                        }\n                        else {\n                            diagram.scale(container, 1, (1 + ((wrapper.outerBounds.height - wrapper.actualSize.height) / wrapper.actualSize.height)), ((wrapper.outerBounds.y < wrapper.bounds.y) ? { x: 0.5, y: 1 } : { x: 0.5, y: 0 }));\n                        }\n                    }\n                }\n            }\n            diagram.select([obj]);\n            updateConnectorsProperties(connectorList, diagram);\n        }\n        diagram.protectPropertyChange(false);\n    }\n    return groupAction;\n}\nexport function removeChildInContainer(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    var connectorList = [];\n    if (checkParentAsContainer(diagram, obj, true)) {\n        var isProtectedOnChange = 'isProtectedOnChange';\n        var propertyChangeValue = diagram[isProtectedOnChange];\n        diagram.protectPropertyChange(true);\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((!isBoundsUpdate && (!(wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y))))) {\n                if (!(obj.constraints & NodeConstraints.AllowMovingOutsideLane)) {\n                    var undoObj = cloneObject(obj);\n                    diagram.clearSelection();\n                    removeChildrenInLane(diagram, obj);\n                    obj.parentId = '';\n                    var entry = {\n                        type: 'ChildCollectionChanged', category: 'Internal',\n                        undoObject: undoObj, redoObject: cloneObject(obj)\n                    };\n                    diagram.addHistoryEntry(entry);\n                    if (diagram.commandHandler.isContainer) {\n                        diagram.commandHandler.isContainer = false;\n                        diagram.endGroupAction();\n                    }\n                }\n            }\n        }\n        diagram.protectPropertyChange(propertyChangeValue);\n    }\n}\n/** @private */\nexport function findBounds(obj, columnIndex, isHeader) {\n    var rect = new Rect();\n    var rows = (obj.shape.type === 'SwimLane') ?\n        obj.wrapper.children[0].rows : obj.wrapper.rows;\n    for (var i = ((isHeader) ? 1 : 0); i < rows.length; i++) {\n        rect.uniteRect(rows[i].cells[columnIndex].bounds);\n    }\n    return rect;\n}\n/** @private */\nexport function createHelper(diagram, obj) {\n    var newObj;\n    var cloneObject = {};\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var prop = _a[_i];\n        cloneObject[prop] = obj[prop];\n    }\n    if (getObjectType(obj) === Node) {\n        newObj = new Node(diagram, 'nodes', cloneObject, true);\n        newObj.id = obj.id;\n        diagram.initObject(newObj);\n    }\n    diagram.updateDiagramObject(newObj);\n    return newObj;\n}\n/** @private */\nexport function renderContainerHelper(diagram, obj) {\n    diagram.enableServerDataBinding(false);\n    var object;\n    var container;\n    var nodes;\n    if ((!isBlazor()) || (isBlazor() && (diagram.diagramActions & DiagramAction.ToolAction))) {\n        if (diagram.selectedObject.helperObject) {\n            nodes = diagram.selectedObject.helperObject;\n        }\n        else if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n            if (obj instanceof Selector && obj.nodes.length + obj.connectors.length === 1) {\n                object = (obj.nodes.length > 0) ? obj.nodes[0] : obj.connectors[0];\n                container = diagram.selectedItems.wrapper.children[0];\n            }\n            else {\n                object = obj;\n                if (isBlazor()) {\n                    if (obj === diagram.selectedItems.nodes[0]) {\n                        container = diagram.selectedItems.wrapper;\n                    }\n                    else {\n                        container = obj.wrapper;\n                    }\n                }\n                else {\n                    container = diagram.selectedItems.wrapper;\n                }\n            }\n            diagram.selectedObject.actualObject = object;\n            if ((!diagram.currentSymbol) && (((object.isLane && canLaneInterchange(object, diagram) &&\n                checkParentAsContainer(diagram, object))\n                || ((!object.isLane) && checkParentAsContainer(diagram, object))) ||\n                ((diagram.constraints & DiagramConstraints.LineRouting) && diagram.selectedItems.nodes.length > 0))) {\n                var node = {\n                    id: 'helper',\n                    rotateAngle: container.rotateAngle,\n                    offsetX: container.offsetX, offsetY: container.offsetY,\n                    minWidth: container.minWidth, minHeight: container.minHeight,\n                    maxWidth: container.maxWidth, maxHeight: container.maxHeight,\n                    width: container.actualSize.width,\n                    height: container.actualSize.height,\n                    style: { strokeDashArray: '2 2', fill: 'transparent', strokeColor: '#7D7D7D', strokeWidth: 2 }\n                };\n                nodes = createHelper(diagram, node);\n                diagram.selectedObject.helperObject = nodes;\n            }\n        }\n    }\n    diagram.enableServerDataBinding(true);\n    return nodes;\n}\n/** @private */\nexport function checkParentAsContainer(diagram, obj, isChild) {\n    var parentNode = (isChild) ? diagram.nameTable[obj.parentId] :\n        (diagram.nameTable[obj.parentId] || obj);\n    if (parentNode && parentNode.container) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkChildNodeInContainer(diagram, obj) {\n    var parentNode = diagram.nameTable[obj.parentId];\n    if (parentNode.container.type === 'Canvas') {\n        obj.margin.left = (obj.offsetX - parentNode.wrapper.bounds.x - (obj.width / 2));\n        obj.margin.top = (obj.offsetY - parentNode.wrapper.bounds.y - (obj.height / 2));\n    }\n    diagram.nodePropertyChange(obj, {}, {\n        width: obj.width, height: obj.height,\n        offsetX: obj.offsetX, offsetY: obj.offsetY,\n        margin: {\n            left: obj.margin.left,\n            right: obj.margin.right, top: obj.margin.top,\n            bottom: obj.margin.bottom\n        }, rotateAngle: obj.rotateAngle\n    });\n    if (!parentNode.isLane) {\n        parentNode.wrapper.measure(new Size());\n        parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n    }\n}\nfunction removeChildrenInLane(diagram, node) {\n    if (node.parentId && node.parentId !== '') {\n        var prevParentNode = diagram.nameTable[node.parentId];\n        if (prevParentNode.isLane && prevParentNode.parentId) {\n            var swimlane = diagram.nameTable[prevParentNode.parentId];\n            var canvasId = (prevParentNode.id.slice(swimlane.id.length));\n            var prevParentId = canvasId.substring(0, canvasId.length - 1);\n            var lanes = swimlane.shape.lanes;\n            var lane = void 0;\n            for (var i = 0; i < lanes.length; i++) {\n                lane = lanes[i];\n                if (prevParentId === lane.id) {\n                    for (var j = 0; j < lane.children.length; j++) {\n                        if (lane.children[j].id === node.id) {\n                            lane.children.splice(j, 1);\n                            j--;\n                        }\n                    }\n                }\n            }\n        }\n        diagram.deleteChild(node);\n    }\n}\n/**\n * @private\n */\nexport function addChildToContainer(diagram, parent, node, isUndo, historyAction) {\n    if (!diagram.currentSymbol) {\n        diagram.protectPropertyChange(true);\n        var swimlane = diagram.nameTable[parent.parentId];\n        node = diagram.getObject(node.id) || node;\n        var child = (diagram.nodes.indexOf(node) !== -1) ? node.id : node;\n        if (parent.container.type === 'Canvas' && !historyAction) {\n            var left = (node.wrapper.offsetX - node.wrapper.actualSize.width / 2) -\n                (parent.wrapper.offsetX - parent.wrapper.actualSize.width / 2);\n            var top_1 = (node.wrapper.offsetY - node.wrapper.actualSize.height / 2) -\n                (parent.wrapper.offsetY - parent.wrapper.actualSize.height / 2);\n            node.margin.left = left;\n            node.margin.top = top_1;\n        }\n        else if (swimlane) {\n            var swimLaneBounds = swimlane.wrapper.bounds;\n            var parentBounds = parent.wrapper.bounds;\n            if (swimlane.shape.orientation === 'Horizontal') {\n                node.margin.left -= parentBounds.x - swimLaneBounds.x;\n            }\n            else {\n                var laneHeaderId = parent.parentId + swimlane.shape.lanes[0].id + '_0_header';\n                node.margin.top -= parentBounds.y - swimLaneBounds.y - diagram.nameTable[laneHeaderId].wrapper.bounds.height;\n            }\n        }\n        var container = diagram.nameTable[parent.id];\n        if (!container.children) {\n            container.children = [];\n        }\n        if (container.children.indexOf(node.id) === -1) {\n            removeChildrenInLane(diagram, node);\n            if (diagram.getObject(node.id)) {\n                diagram.removeElements(node);\n            }\n            var undoObj = cloneObject(node);\n            diagram.addChild(container, child);\n            node = diagram.getObject(node.id);\n            if (container.isLane && container.parentId) {\n                swimlane = diagram.nameTable[container.parentId];\n                var lanes = swimlane.shape.lanes;\n                var canvasId = (container.id.slice(swimlane.id.length));\n                var currentParentId = canvasId.substring(0, canvasId.length - 1);\n                for (var i = 0; i < lanes.length; i++) {\n                    if (container.isLane && currentParentId === lanes[i].id) {\n                        // tslint:disable-next-line:no-any\n                        if (!(node.parentObj instanceof Diagram)) {\n                            // tslint:disable-next-line:no-any\n                            node.parentObj = lanes[i];\n                        }\n                        lanes[i].children.push(node);\n                    }\n                }\n            }\n            diagram.updateDiagramObject(node);\n            if (!container.parentId) {\n                diagram.updateDiagramObject(container);\n            }\n            else if (!isUndo) {\n                updateLaneBoundsAfterAddChild(container, swimlane, node, diagram);\n            }\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'ChildCollectionChanged', category: 'Internal',\n                    undoObject: undoObj, redoObject: cloneObject(node), historyAction: historyAction ? 'AddNodeToLane' : undefined\n                };\n                diagram.addHistoryEntry(entry);\n            }\n        }\n        diagram.protectPropertyChange(false);\n    }\n}\nexport function updateLaneBoundsAfterAddChild(container, swimLane, node, diagram, isBoundsUpdate) {\n    var undoObject = cloneObject(container);\n    var isUpdateRow;\n    var isGroupAction = false;\n    var padding = swimLane.shape.padding;\n    var containerBounds = container.wrapper.bounds;\n    var containerOuterBounds = container.wrapper.outerBounds;\n    var nodeBounds = node.wrapper.bounds;\n    if (swimLane && swimLane.shape.type === 'SwimLane' &&\n        (containerBounds.right < nodeBounds.right + padding ||\n            containerBounds.bottom < nodeBounds.bottom + padding)) {\n        var grid = swimLane.wrapper.children[0];\n        var x = grid.bounds.x;\n        var y = grid.bounds.y;\n        var size = void 0;\n        if (containerBounds.right < nodeBounds.right + padding &&\n            containerOuterBounds.x <= containerBounds.x) {\n            size = nodeBounds.right - containerBounds.right;\n            isUpdateRow = false;\n            grid.updateColumnWidth(container.columnIndex, containerBounds.width + size, true, padding);\n        }\n        if (containerBounds.bottom < nodeBounds.bottom + padding &&\n            containerOuterBounds.y <= containerBounds.y) {\n            size = nodeBounds.bottom - containerBounds.bottom;\n            isUpdateRow = true;\n            grid.updateRowHeight(container.rowIndex, containerBounds.height + size, true, padding);\n        }\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            if (isBoundsUpdate) {\n                diagram.startGroupAction();\n                isGroupAction = true;\n            }\n            if (isUpdateRow !== undefined) {\n                var entry = {\n                    category: 'Internal',\n                    type: (isUpdateRow) ? 'RowHeightChanged' : 'ColumnWidthChanged',\n                    undoObject: undoObject, redoObject: cloneObject(container)\n                };\n                diagram.addHistoryEntry(entry);\n            }\n        }\n        swimLane.width = swimLane.wrapper.width = grid.width;\n        swimLane.height = swimLane.wrapper.height = grid.height;\n        swimLaneMeasureAndArrange(swimLane);\n        if (swimLane.shape.orientation === 'Horizontal') {\n            updatePhaseMaxWidth(swimLane, diagram, container.wrapper, container.columnIndex);\n        }\n        updateHeaderMaxWidth(diagram, swimLane);\n        diagram.drag(swimLane, x - grid.bounds.x, y - grid.bounds.y);\n        checkPhaseOffset(swimLane, diagram);\n        checkLaneSize(swimLane);\n    }\n    considerSwimLanePadding(diagram, node, padding);\n    diagram.updateDiagramElementQuad();\n    return isGroupAction;\n}\n//#endregion\n//# reginon stack panel interaction\n/** @private */\nexport function renderStackHighlighter(element, isVertical, position, diagram, isUml, isSwimlane) {\n    var adornerSvg = getAdornerLayerSvg(diagram.element.id);\n    diagram.diagramRenderer.renderStackHighlighter(element, adornerSvg, diagram.scroller.transform, isVertical, position, isUml, isSwimlane);\n}\n/** @private */\nexport function moveChildInStack(sourceNode, target, diagram, action) {\n    var obj = sourceNode;\n    var parent = diagram.nameTable[obj.parentId];\n    var sourceParent = diagram.nameTable[obj.parentId];\n    if (target && sourceParent && sourceParent.container && sourceParent.container.type === 'Stack' &&\n        target.container && target.container.type === 'Stack' && (sourceParent.id !== target.parentId)) {\n        var value = sourceParent.wrapper.children.indexOf(obj.wrapper);\n        if (value > -1) {\n            diagram.nameTable[obj.id].parentId = target.id;\n            sourceParent.wrapper.children.splice(value, 1);\n        }\n    }\n    if (target && target.parentId && obj.parentId && action === 'Drag' &&\n        sourceParent.container && sourceParent.container.type === 'Stack') {\n        var targetIndex = parent.wrapper.children.indexOf(target.wrapper);\n        var sourceIndex = parent.wrapper.children.indexOf(obj.wrapper);\n        var undoElement = {\n            targetIndex: targetIndex, target: target,\n            sourceIndex: sourceIndex, source: sourceNode\n        };\n        parent.wrapper.children.splice(sourceIndex, 1);\n        parent.wrapper.children.splice(targetIndex, 0, obj.wrapper);\n        var redoElement = {\n            targetIndex: sourceIndex, target: target,\n            sourceIndex: targetIndex, source: sourceNode\n        };\n        var entry = {\n            type: 'StackChildPositionChanged', redoObject: redoElement,\n            undoObject: undoElement, category: 'Internal'\n        };\n        diagram.commandHandler.addHistoryEntry(entry);\n    }\n}\n//#end region\n//# region Swimlane rendering\n//#end region\n","import { Node } from '../objects/node';\nimport { GridPanel, RowDefinition, ColumnDefinition } from '../core/containers/grid';\nimport { Lane, Phase } from '../objects/node';\nimport { DiagramAction, NodeConstraints, DiagramConstraints, DiagramEvent } from '../enum/enum';\nimport { cloneObject, randomId } from './../utility/base-util';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { Canvas } from '../core/containers/canvas';\nimport { Rect } from '../primitives/rect';\nimport { checkParentAsContainer, findBounds } from '../interaction/container-interaction';\nimport { canSelect } from './constraints-util';\n/**\n * SwimLane modules are used to rendering and interaction.\n */\n/** @private */\nexport function initSwimLane(grid, diagram, node) {\n    if (!node.width && node.shape.phases.length === 0) {\n        node.width = 100;\n    }\n    var row = [];\n    var columns = [];\n    var index = 0;\n    var shape = node.shape;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    if (shape.header && shape.hasHeader) {\n        createRow(row, shape.header.height);\n    }\n    initGridRow(row, orientation, node);\n    initGridColumns(columns, orientation, node);\n    grid.setDefinitions(row, columns);\n    if (shape.header && shape.hasHeader) {\n        headerDefine(grid, diagram, node);\n        index++;\n    }\n    if (shape.phases.length > 0 && shape.phaseSize) {\n        for (var k = 0; k < shape.phases.length; k++) {\n            if (shape.phases[k].id === '') {\n                shape.phases[k].id = randomId();\n            }\n            phaseDefine(grid, diagram, node, index, orientation, k);\n        }\n        index++;\n    }\n    if (shape.lanes.length > 0) {\n        for (var k = 0; k < shape.lanes.length; k++) {\n            if (shape.lanes[k].id === '') {\n                shape.lanes[k].id = randomId();\n            }\n            laneCollection(grid, diagram, node, index, k, orientation);\n            index++;\n        }\n    }\n}\n/** @private */\nexport function addObjectToGrid(diagram, grid, parent, object, isHeader, isPhase, isLane, canvas) {\n    var node = new Node(diagram, 'nodes', object, true);\n    node.parentId = parent.id;\n    node.isHeader = (isHeader) ? true : false;\n    node.isPhase = (isPhase) ? true : false;\n    node.isLane = (isLane) ? true : false;\n    var id = (isPhase) ? 'PhaseHeaderParent' : 'LaneHeaderParent';\n    if (canvas) {\n        node[id] = canvas;\n    }\n    node.constraints &= ~(NodeConstraints.InConnect | NodeConstraints.OutConnect);\n    node.constraints |= NodeConstraints.HideThumbs;\n    diagram.initObject(node);\n    diagram.nodes.push(node);\n    if (node.wrapper.children.length > 0) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child instanceof DiagramElement) {\n                child.isCalculateDesiredSize = false;\n            }\n            if (child instanceof TextElement) {\n                child.canConsiderBounds = false;\n                if (!isHeader && (parent.shape.orientation === 'Vertical' && isPhase) ||\n                    (parent.shape.orientation !== 'Vertical' && isLane)) {\n                    child.isLaneOrientation = true;\n                    child.refreshTextElement();\n                }\n            }\n        }\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n    }\n    return node.wrapper;\n}\n/** @private */\nexport function headerDefine(grid, diagram, object) {\n    var maxWidth = 0;\n    var columns = grid.columnDefinitions();\n    var shape = object.shape;\n    for (var i = 0; i < columns.length; i++) {\n        maxWidth += columns[i].width;\n    }\n    shape.header.id = shape.header.id || randomId();\n    var node = {\n        id: object.id + shape.header.id,\n        annotations: [cloneObject(shape.header.annotation)],\n        style: shape.header.style ? shape.header.style : undefined,\n        offsetX: object.offsetX, offsetY: object.offsetY,\n        rowIndex: 0, columnIndex: 0,\n        maxWidth: maxWidth,\n        container: { type: 'Canvas', orientation: 'Horizontal' }\n    };\n    if (!canSelect(object)) {\n        node.constraints &= ~NodeConstraints.Select;\n    }\n    var wrapper = addObjectToGrid(diagram, grid, object, node, true);\n    grid.addObject(wrapper, 0, 0, 1, grid.columnDefinitions().length);\n}\n/** @private */\nexport function phaseDefine(grid, diagram, object, indexValue, orientation, phaseIndex) {\n    var rowValue = 0;\n    var colValue = 0;\n    var maxWidth;\n    var shape = object.shape;\n    if (orientation) {\n        colValue = phaseIndex;\n        rowValue = indexValue;\n        maxWidth = grid.columnDefinitions()[phaseIndex].width;\n    }\n    else {\n        rowValue = shape.header && shape.hasHeader ? phaseIndex + 1 : phaseIndex;\n    }\n    var phaseObject = {\n        annotations: [cloneObject(shape.phases[phaseIndex].header.annotation)],\n        maxWidth: maxWidth,\n        id: object.id + shape.phases[phaseIndex].id + '_header',\n        offsetX: object.offsetX, offsetY: object.offsetY,\n        style: shape.phases[phaseIndex].style,\n        rowIndex: rowValue, columnIndex: colValue,\n        container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n    };\n    phaseObject.annotations[0].rotateAngle = orientation ? 0 : 270;\n    if (!canSelect(object)) {\n        phaseObject.constraints &= ~NodeConstraints.Select;\n    }\n    shape.phases[phaseIndex].header.id = phaseObject.id;\n    var wrapper = addObjectToGrid(diagram, grid, object, phaseObject, false, true, false, shape.phases[phaseIndex].id);\n    grid.addObject(wrapper, rowValue, colValue);\n}\n/** @private */\nexport function laneCollection(grid, diagram, object, indexValue, laneIndex, orientation) {\n    var laneNode;\n    var parentWrapper;\n    var gridCell;\n    var canvas;\n    var childWrapper;\n    var shape = object.shape;\n    var value = shape.phases.length || 1;\n    var isHeader = (shape.header && shape.hasHeader) ? 1 : 0;\n    var colValue = 0;\n    var rowValue = orientation ? indexValue : isHeader;\n    var phaseCount = (shape.phaseSize && shape.phases.length > 0) ? 1 : 0;\n    for (var l = 0; l < value; l++) {\n        colValue = orientation ? l : laneIndex + phaseCount;\n        gridCell = grid.rows[rowValue].cells[colValue];\n        canvas = {\n            id: object.id + shape.lanes[laneIndex].id + l,\n            rowIndex: rowValue, columnIndex: colValue,\n            width: gridCell.minWidth, height: gridCell.minHeight,\n            offsetX: object.offsetX, offsetY: object.offsetY,\n            style: shape.lanes[laneIndex].style,\n            constraints: NodeConstraints.Default | NodeConstraints.ReadOnly | NodeConstraints.AllowDrop,\n            container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n        };\n        if (!canSelect(object)) {\n            canvas.constraints &= ~NodeConstraints.Select;\n        }\n        parentWrapper = addObjectToGrid(diagram, grid, object, canvas, false, false, true);\n        parentWrapper.children[0].isCalculateDesiredSize = false;\n        if (l === 0) {\n            laneNode = {\n                id: object.id + shape.lanes[laneIndex].id + '_' + l + '_header',\n                style: shape.lanes[laneIndex].header.style,\n                annotations: [cloneObject(shape.lanes[laneIndex].header.annotation)],\n                offsetX: object.offsetX, offsetY: object.offsetY,\n                rowIndex: rowValue, columnIndex: colValue,\n                container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n            };\n            laneNode.annotations[0].rotateAngle = orientation ? 270 : 0;\n            shape.lanes[laneIndex].header.id = laneNode.id;\n            (orientation) ? laneNode.width = shape.lanes[laneIndex].header.width :\n                laneNode.height = shape.lanes[laneIndex].header.height;\n            if (!canSelect(object)) {\n                laneNode.constraints &= ~NodeConstraints.Select;\n            }\n            childWrapper = addObjectToGrid(diagram, grid, object, laneNode, false, false, true, shape.lanes[laneIndex].id);\n            parentWrapper.children.push(childWrapper);\n        }\n        grid.addObject(parentWrapper, rowValue, colValue);\n        if (!orientation) {\n            rowValue++;\n        }\n        colValue = orientation ? l : laneIndex + 1;\n    }\n}\n/** @private */\nexport function createRow(row, height) {\n    var rows = new RowDefinition();\n    rows.height = height;\n    row.push(rows);\n}\n/** @private */\nexport function createColumn(width) {\n    var cols = new ColumnDefinition();\n    cols.width = width;\n    return cols;\n}\n/** @private */\nexport function initGridRow(row, orientation, object) {\n    var totalHeight = 0;\n    var height;\n    var shape = object.shape;\n    if (row.length > 0) {\n        for (var i = 0; i < row.length; i++) {\n            totalHeight += row[i].height;\n        }\n    }\n    if (orientation) {\n        if (shape.phases.length > 0 && shape.phaseSize) {\n            totalHeight += shape.phaseSize;\n            createRow(row, shape.phaseSize);\n        }\n        if (shape.lanes.length > 0) {\n            for (var i = 0; i < shape.lanes.length; i++) {\n                height = shape.lanes[i].height;\n                totalHeight += height;\n                if (i === shape.lanes.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n    }\n    else {\n        if (shape.phases.length > 0) {\n            var phaseHeight = 0;\n            for (var i = 0; i < shape.phases.length; i++) {\n                var phaseOffset = shape.phases[i].offset;\n                if (i === 0) {\n                    phaseHeight += phaseOffset;\n                }\n                else {\n                    phaseOffset -= phaseHeight;\n                    phaseHeight += phaseOffset;\n                }\n                height = phaseOffset;\n                totalHeight += height;\n                if (i === shape.phases.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n        else {\n            createRow(row, object.height);\n        }\n    }\n}\n/** @private */\nexport function initGridColumns(columns, orientation, object) {\n    var totalWidth = 0;\n    var shape = object.shape;\n    var phaseOffset;\n    var cols;\n    var k;\n    var j;\n    var value;\n    if (shape.phases.length > 0 && shape.orientation === 'Horizontal') {\n        for (j = 0; j < shape.phases.length; j++) {\n            phaseOffset = shape.phases[j].offset;\n            if (j === 0) {\n                totalWidth += phaseOffset;\n            }\n            else {\n                phaseOffset -= totalWidth;\n                totalWidth += phaseOffset;\n            }\n            cols = createColumn(phaseOffset);\n            if (j === shape.phases.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n    }\n    else if (!orientation) {\n        value = (shape.phaseSize && shape.phases.length > 0) ? shape.lanes.length\n            + 1 : shape.lanes.length;\n        if (shape.phaseSize && shape.phases.length > 0) {\n            totalWidth += shape.phaseSize;\n            cols = createColumn(shape.phaseSize);\n            columns.push(cols);\n        }\n        for (k = 0; k < shape.lanes.length; k++) {\n            totalWidth += shape.lanes[k].width;\n            cols = createColumn(shape.lanes[k].width);\n            if (k === shape.lanes.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n        if ((shape.phases.length === 0 && shape.lanes.length === 0)) {\n            cols = createColumn(object.width);\n            columns.push(cols);\n        }\n    }\n    else {\n        cols = createColumn(object.width);\n        columns.push(cols);\n    }\n}\n/** @private */\nexport function getConnectors(diagram, grid, rowIndex, isRowUpdate) {\n    var connectors = [];\n    var conn = 0;\n    var childNode;\n    var node;\n    var k;\n    var i;\n    var j;\n    var canvas;\n    var row;\n    var length = grid.rowDefinitions().length;\n    var edges;\n    for (var i_1 = 0; i_1 < length; i_1++) {\n        row = grid.rows[i_1];\n        for (j = 0; j < row.cells.length; j++) {\n            canvas = row.cells[j].children[0];\n            if (canvas && canvas.children && canvas.children.length) {\n                for (k = 1; k < canvas.children.length; k++) {\n                    childNode = canvas.children[k];\n                    node = diagram.getObject(childNode.id);\n                    if (node && (node.inEdges.length > 0 || node.outEdges.length > 0)) {\n                        edges = node.inEdges.concat(node.outEdges);\n                        for (conn = 0; conn < edges.length; conn++) {\n                            if (connectors.indexOf(edges[conn]) === -1) {\n                                connectors.push(edges[conn]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return connectors;\n}\n/** @private */\nexport function swimLaneMeasureAndArrange(obj) {\n    var canvas = obj.wrapper;\n    canvas.measure(new Size(obj.width, obj.height));\n    if (canvas.children[0] instanceof GridPanel) {\n        var grid = canvas.children[0];\n        var isMeasure = false;\n        if (grid.width && grid.width < grid.desiredSize.width) {\n            isMeasure = true;\n            grid.width = grid.desiredSize.width;\n        }\n        if (grid.height && grid.height < grid.desiredSize.height) {\n            isMeasure = true;\n            grid.height = grid.desiredSize.height;\n        }\n        if (isMeasure) {\n            grid.measure(new Size(grid.width, grid.height));\n        }\n    }\n    canvas.arrange(canvas.desiredSize);\n}\n/** @private */\nexport function ChangeLaneIndex(diagram, obj, startRowIndex) {\n    var container = obj.wrapper.children[0];\n    var i;\n    var j;\n    var k;\n    var object;\n    var subChild;\n    var row;\n    var cell;\n    var child;\n    for (i = startRowIndex; i < container.rows.length; i++) {\n        row = container.rows[i];\n        for (j = 0; j < row.cells.length; j++) {\n            cell = row.cells[j];\n            if (cell.children && cell.children.length > 0) {\n                for (k = 0; k < cell.children.length; k++) {\n                    child = cell.children[k];\n                    object = diagram.nameTable[child.id];\n                    if (object.isLane && child.children.length > 1) {\n                        subChild = diagram.nameTable[child.children[1].id];\n                        if (subChild && subChild.isLane) {\n                            subChild.rowIndex = i;\n                            subChild.columnIndex = j;\n                        }\n                    }\n                    object.rowIndex = i;\n                    object.columnIndex = j;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChildNodesInSwimLane(diagram, obj) {\n    var grid = obj.wrapper.children[0];\n    var shape = obj.shape;\n    var padding = shape.padding;\n    var lanes = shape.lanes;\n    var top = grid.bounds.y;\n    var rowvalue;\n    var columnValue;\n    var phaseCount = (shape.phaseSize > 0) ? shape.phases.length : 0;\n    var node;\n    var canvas;\n    var cell;\n    var i;\n    var j;\n    var k;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    var col = orientation ? shape.phases.length || 1 : lanes.length + 1;\n    var row = orientation ? ((shape.header && shape.hasHeader) ? 1 : 0) +\n        (shape.phases.length > 0 ? 1 : 0) + (shape.lanes.length)\n        : (shape.header && shape.hasHeader ? 1 : 0) + shape.phases.length;\n    if (phaseCount === 0 && !orientation && shape.lanes.length) {\n        row += 1;\n    }\n    if (orientation) {\n        rowvalue = (shape.header && shape.hasHeader ? 1 : 0) + (phaseCount > 0 ? 1 : 0);\n        columnValue = 0;\n    }\n    else {\n        rowvalue = (shape.header && shape.hasHeader ? 1 : 0);\n        columnValue = phaseCount > 0 ? 1 : 0;\n    }\n    if (lanes.length > 0) {\n        top += (shape.header && shape.hasHeader) ? shape.header.height : 0;\n        for (i = 0; i < lanes.length; i++) {\n            for (j = 0; j < lanes[i].children.length; j++) {\n                node = lanes[i].children[j];\n                node.offsetX = lanes[i].width;\n                node.offsetY = lanes[i].height;\n                diagram.initObject(node);\n                diagram.nodes.push(node);\n                canvas = node.wrapper;\n                if (orientation) {\n                    for (k = columnValue; k < col; k++) {\n                        cell = grid.rows[rowvalue].cells[k];\n                        if (canvas.margin.left < (cell.bounds.right - grid.bounds.x)) {\n                            node.parentId = cell.children[0].id;\n                            if (k > columnValue) {\n                                canvas.margin.left = canvas.margin.left - (cell.bounds.left - grid.bounds.left);\n                            }\n                            else {\n                                if ((cell.children[0].children[1].actualSize.width + padding) >= canvas.margin.left) {\n                                    canvas.margin.left = cell.children[0].children[1].actualSize.width + padding;\n                                }\n                            }\n                            if (canvas.margin.left < padding) {\n                                canvas.margin.left = padding;\n                            }\n                            if (canvas.margin.top < padding) {\n                                canvas.margin.top = padding;\n                            }\n                            addChildToLane(canvas, node, diagram);\n                            break;\n                        }\n                    }\n                }\n                else {\n                    for (var k_1 = rowvalue; k_1 < row; k_1++) {\n                        cell = grid.rows[k_1].cells[columnValue];\n                        if (canvas.margin.top < (cell.bounds.bottom - top)) {\n                            node.parentId = cell.children[0].id;\n                            if (k_1 > rowvalue) {\n                                canvas.margin.top = canvas.margin.top - (cell.bounds.top - top);\n                            }\n                            else {\n                                if ((cell.children[0].children[1].actualSize.height + padding) >= canvas.margin.top) {\n                                    canvas.margin.top = cell.children[0].children[1].actualSize.height + padding;\n                                }\n                            }\n                            if (canvas.margin.left < padding) {\n                                canvas.margin.left = padding;\n                            }\n                            if (canvas.margin.top < padding) {\n                                canvas.margin.top = padding;\n                            }\n                            addChildToLane(canvas, node, diagram);\n                            break;\n                        }\n                    }\n                }\n            }\n            orientation ? rowvalue++ : columnValue++;\n        }\n    }\n    grid.measure(new Size(obj.width, obj.height));\n    grid.arrange(grid.desiredSize);\n    updateChildOuterBounds(grid, obj);\n    obj.width = obj.wrapper.width = grid.width;\n    obj.height = obj.wrapper.height = grid.height;\n    updateHeaderMaxWidth(diagram, obj);\n    obj.wrapper.measure(new Size(obj.width, obj.height));\n    obj.wrapper.arrange(grid.desiredSize);\n    checkLaneChildrenOffset(obj);\n    checkPhaseOffset(obj, diagram);\n    checkLaneSize(obj);\n}\nfunction addChildToLane(canvas, node, diagram) {\n    canvas.measure(new Size(node.width, node.height));\n    canvas.arrange(canvas.desiredSize);\n    var parent = diagram.getObject(node.parentId);\n    diagram.addChild(parent, node.id);\n}\n/** @private */\nexport function updateChildOuterBounds(grid, obj) {\n    var columnDefinitions = grid.columnDefinitions();\n    var rowDefinitions = grid.rowDefinitions();\n    var i;\n    var k;\n    var j;\n    var cell;\n    var child;\n    var row;\n    var rowIndex = findStartLaneIndex(obj);\n    if (obj.shape.orientation === 'Vertical') {\n        if (rowIndex === 0) {\n            rowIndex = (obj.shape.header && obj.shape.hasHeader) ? 1 : 0;\n        }\n    }\n    var padding = obj.shape.padding;\n    for (i = 0; i < columnDefinitions.length; i++) {\n        grid.updateColumnWidth(i, columnDefinitions[i].width, true, padding);\n    }\n    for (i = rowIndex; i < rowDefinitions.length; i++) {\n        grid.updateRowHeight(i, rowDefinitions[i].height, true, padding);\n    }\n    for (k = 0; k < rowDefinitions.length; k++) {\n        row = grid.rows[k];\n        for (i = 0; i < columnDefinitions.length; i++) {\n            cell = row.cells[i];\n            if (cell.children && cell.children.length > 0) {\n                for (j = 0; j < cell.children.length; j++) {\n                    child = cell.children[j];\n                    if (child.maxWidth) {\n                        child.maxWidth = cell.actualSize.width;\n                    }\n                    if (child.maxHeight) {\n                        child.maxHeight = cell.actualSize.height;\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function checkLaneSize(obj) {\n    if (obj.shape.type === 'SwimLane' && !obj.shape.isLane && !obj.shape.isPhase) {\n        var lane = void 0;\n        var i = void 0;\n        var columns = void 0;\n        var size = void 0;\n        var laneCount = 0;\n        var lanes = obj.shape.lanes;\n        var laneIndex = findStartLaneIndex(obj);\n        var rows = obj.wrapper.children[0].rowDefinitions();\n        for (i = 0; i < lanes.length; i++, laneIndex++) {\n            lane = lanes[i];\n            if (obj.shape.orientation === 'Horizontal') {\n                size = rows[laneIndex].height;\n                if (lane.height !== size) {\n                    lane.height = size;\n                }\n            }\n            else {\n                columns = obj.wrapper.children[0].columnDefinitions();\n                size = columns[laneIndex].width;\n                if (lane.width !== size) {\n                    lane.width = size;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function checkPhaseOffset(obj, diagram) {\n    var shape = obj.shape;\n    var phases = shape.phases;\n    var i;\n    var offset;\n    var phaseRow;\n    var phase;\n    var gridRowIndex = (shape.header && shape.hasHeader) ? 1 : 0;\n    var grid = obj.wrapper.children[0];\n    var top = grid.bounds.y + ((shape.header && shape.hasHeader) ? shape.header.height : 0);\n    if (obj.shape.type === 'SwimLane') {\n        obj = diagram.getObject(obj.id) || obj;\n        if (phases.length > 0) {\n            grid = obj.wrapper.children[0];\n            if (shape.orientation === 'Horizontal') {\n                phaseRow = (shape.header && shape.hasHeader) ? grid.rows[1] : grid.rows[0];\n                for (i = 0; i < phases.length; i++) {\n                    phase = phaseRow.cells[i].children[0];\n                    offset = phase.bounds.right - grid.bounds.x;\n                    if (phases[i].offset !== offset) {\n                        phases[i].offset = offset;\n                    }\n                    diagram.nameTable[phase.id].maxWidth = phase.maxWidth;\n                }\n            }\n            else {\n                for (i = 0; i < phases.length; i++) {\n                    phase = grid.rows[gridRowIndex + i].cells[0].children[0];\n                    offset = phase.bounds.bottom - top;\n                    if (phases[i].offset !== offset) {\n                        phases[i].offset = offset;\n                    }\n                    diagram.nameTable[phase.id].maxWidth = phase.maxWidth;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function updateConnectorsProperties(connectors, diagram) {\n    if (connectors && connectors.length > 0) {\n        var edges = void 0;\n        if (diagram.lineRoutingModule && (diagram.constraints & DiagramConstraints.LineRouting)) {\n            diagram.lineRoutingModule.renderVirtualRegion(diagram, true);\n        }\n        for (var i = 0; i < connectors.length; i++) {\n            edges = diagram.getObject(connectors[i]);\n            if (diagram.lineRoutingModule && (diagram.constraints & DiagramConstraints.LineRouting) && edges.type === 'Orthogonal') {\n                diagram.lineRoutingModule.refreshConnectorSegments(diagram, edges, true);\n            }\n            else {\n                diagram.connectorPropertyChange(edges, {}, {\n                    sourceID: edges.sourceID, targetID: edges.targetID\n                });\n            }\n        }\n    }\n}\n/** @private */\nexport function laneInterChanged(diagram, obj, target, position) {\n    var index;\n    var undoElement;\n    var entry;\n    var redoElement;\n    var sourceIndex;\n    var targetIndex;\n    var temp;\n    var sourceLaneIndex;\n    var targetLaneIndex;\n    var rowIndex;\n    var swimLane = (diagram.getObject(obj.parentId));\n    var shape = swimLane.shape;\n    var grid = swimLane.wrapper.children[0];\n    var lanes = shape.lanes;\n    var connectors = getConnectors(diagram, grid, obj.rowIndex, true);\n    if ((shape.orientation === 'Horizontal' && obj.rowIndex !== target.rowIndex) ||\n        (shape.orientation === 'Vertical' && obj.columnIndex !== target.columnIndex)) {\n        if (shape.orientation === 'Horizontal') {\n            sourceIndex = obj.rowIndex;\n            targetIndex = target.rowIndex;\n            index = ((shape.header && shape.hasHeader) ? 1 : 0) + (shape.phases.length && shape.phaseSize ? 1 : 0);\n            sourceLaneIndex = obj.rowIndex - index;\n            targetLaneIndex = target.rowIndex - index;\n            if (lanes[sourceLaneIndex].canMove) {\n                if (sourceLaneIndex < targetLaneIndex) {\n                    if (position && target.wrapper.offsetY > position.y) {\n                        targetIndex += (targetLaneIndex > 0) ? -1 : 1;\n                        targetLaneIndex += (targetLaneIndex > 0) ? -1 : 1;\n                    }\n                }\n                else {\n                    if (position && target.wrapper.offsetY < position.y) {\n                        targetIndex += 1;\n                        targetLaneIndex += 1;\n                    }\n                }\n                if (sourceIndex !== targetIndex) {\n                    grid.updateRowIndex(sourceIndex, targetIndex);\n                }\n            }\n        }\n        else {\n            sourceIndex = obj.columnIndex;\n            targetIndex = target.columnIndex;\n            index = (shape.phases.length && shape.phaseSize) ? 1 : 0;\n            sourceLaneIndex = obj.columnIndex - index;\n            targetLaneIndex = target.columnIndex - index;\n            rowIndex = (shape.header && shape.hasHeader) ? 1 : 0;\n            if (lanes[sourceLaneIndex].canMove) {\n                if (sourceLaneIndex < targetLaneIndex) {\n                    if (position && target.wrapper.offsetX > position.x) {\n                        targetIndex += (targetLaneIndex > 0) ? -1 : 1;\n                        targetLaneIndex += (targetLaneIndex > 0) ? -1 : 1;\n                    }\n                }\n                else {\n                    if (position && target.wrapper.offsetX < position.x) {\n                        targetIndex += 1;\n                        targetLaneIndex += 1;\n                    }\n                }\n                if (sourceIndex !== targetIndex) {\n                    if ((shape.phaseSize === 0 || shape.phases.length === 0) && (targetIndex === 0 || sourceIndex === 0)) {\n                        if (shape.header && shape.hasHeader) {\n                            var changeHeaderIndex = (targetIndex === 0) ? sourceIndex : targetIndex;\n                            grid.rows[0].cells[changeHeaderIndex].children = grid.rows[0].cells[0].children;\n                            grid.rows[0].cells[changeHeaderIndex].columnSpan = grid.rows[0].cells[0].columnSpan;\n                            grid.rows[0].cells[0].children = [];\n                        }\n                    }\n                    grid.updateColumnIndex(0, sourceIndex, targetIndex);\n                }\n            }\n        }\n        if (sourceIndex !== targetIndex) {\n            temp = lanes[sourceLaneIndex];\n            if (temp.canMove) {\n                undoElement = {\n                    target: cloneObject(target), source: cloneObject(obj)\n                };\n                temp = lanes[sourceLaneIndex];\n                lanes.splice(sourceLaneIndex, 1);\n                lanes.splice(targetLaneIndex, 0, temp);\n                redoElement = {\n                    target: cloneObject(undoElement.source), source: cloneObject(undoElement.target)\n                };\n                entry = {\n                    type: 'LanePositionChanged', redoObject: redoElement,\n                    undoObject: undoElement, category: 'Internal'\n                };\n                if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                    diagram.commandHandler.addHistoryEntry(entry);\n                }\n                ChangeLaneIndex(diagram, swimLane, 0);\n                updateConnectorsProperties(connectors, diagram);\n                updateSwimLaneChildPosition(lanes, diagram);\n                swimLane.wrapper.measure(new Size(swimLane.width, swimLane.height));\n                swimLane.wrapper.arrange(swimLane.wrapper.desiredSize);\n                diagram.updateDiagramObject(swimLane);\n            }\n        }\n    }\n    diagram.updateDiagramElementQuad();\n}\n/** @private */\nexport function updateSwimLaneObject(diagram, obj, swimLane, helperObject) {\n    var parentNode = diagram.getObject(swimLane.id);\n    var shape = parentNode.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    var lanes = shape.lanes;\n    var phases = shape.phases;\n    var helperWidth = helperObject.wrapper.actualSize.width;\n    var helperHeight = helperObject.wrapper.actualSize.height;\n    var objWidth = obj.wrapper.actualSize.width;\n    var objHeight = obj.wrapper.actualSize.height;\n    if (parentNode.shape.type === 'SwimLane') {\n        if (shape.orientation === 'Horizontal') {\n            if (obj.isPhase) {\n                phases[obj.columnIndex].offset += (helperWidth - objWidth);\n            }\n            else {\n                index = (shape.phaseSize && shape.phases.length > 0) ? index + 1 : index;\n                lanes[(obj.rowIndex - index)].height += (helperHeight - objHeight);\n            }\n        }\n        else {\n            if (obj.isPhase) {\n                phases[(obj.rowIndex - index)].offset += (helperHeight - objHeight);\n            }\n            else {\n                index = (shape.phaseSize && shape.phases.length > 0) ? 1 : 0;\n                lanes[(obj.columnIndex - index)].width += (helperWidth - objWidth);\n            }\n        }\n    }\n}\n/** @private */\nexport function findLaneIndex(swimLane, laneObj) {\n    var laneIndex;\n    var shape = swimLane.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    if (shape.orientation === 'Horizontal') {\n        index += shape.phases.length > 0 ? 1 : 0;\n        laneIndex = laneObj.rowIndex - index;\n    }\n    else {\n        laneIndex = laneObj.columnIndex - (shape.phaseSize && shape.phases.length > 0 ? 1 : 0);\n    }\n    return laneIndex;\n}\n/** @private */\nexport function findPhaseIndex(phase, swimLane) {\n    var phaseIndex;\n    var shape = swimLane.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    phaseIndex = (shape.orientation === 'Horizontal') ? phase.columnIndex : phase.rowIndex - index;\n    return phaseIndex;\n}\n/** @private */\nexport function findStartLaneIndex(swimLane) {\n    var index = 0;\n    var shape = swimLane.shape;\n    if (shape.orientation === 'Horizontal') {\n        index = (shape.header && shape.hasHeader) ? 1 : 0;\n    }\n    if (shape.phases.length > 0 && shape.phaseSize) {\n        index += 1;\n    }\n    return index;\n}\n/** @private */\nexport function updatePhaseMaxWidth(parent, diagram, wrapper, columnIndex) {\n    var shape = parent.shape;\n    if (shape.phases.length > 0) {\n        var node = diagram.nameTable[shape.phases[columnIndex].header.id];\n        if (node && node.maxWidth < wrapper.outerBounds.width) {\n            node.maxWidth = wrapper.outerBounds.width;\n            node.wrapper.maxWidth = wrapper.outerBounds.width;\n        }\n    }\n}\n/** @private */\nexport function updateHeaderMaxWidth(diagram, swimLane) {\n    if (swimLane.shape.header && swimLane.shape.hasHeader) {\n        var grid = swimLane.wrapper.children[0];\n        var id = grid.rows[0].cells[0].children[0].id;\n        var headerNode = diagram.nameTable[id];\n        if (headerNode && headerNode.isHeader && headerNode.maxWidth < swimLane.width) {\n            headerNode.maxWidth = swimLane.width;\n            headerNode.wrapper.maxWidth = swimLane.width;\n        }\n    }\n}\n/** @private */\nexport function addLane(diagram, parent, lane, count) {\n    var args;\n    var swimLane = diagram.nameTable[parent.id];\n    if (swimLane.shape.type === 'SwimLane') {\n        diagram.protectPropertyChange(true);\n        var grid = swimLane.wrapper.children[0];\n        var bounds = grid.bounds;\n        var shape = swimLane.shape;\n        var redoObj = void 0;\n        var orientation_1 = false;\n        var connectors = void 0;\n        var entry = void 0;\n        var index = void 0;\n        var laneObj = void 0;\n        var laneIndex = void 0;\n        var children = void 0;\n        var j = void 0;\n        var i = void 0;\n        var k = void 0;\n        var cell = void 0;\n        var child = void 0;\n        var point = void 0;\n        laneObj = new Lane(shape, 'lanes', lane, true);\n        index = (shape.header && shape.hasHeader) ? 1 : 0;\n        if (shape.orientation === 'Horizontal') {\n            orientation_1 = true;\n            index = shape.phases.length > 0 ? index + 1 : index;\n        }\n        connectors = getConnectors(diagram, grid, 0, true);\n        laneIndex = (count !== undefined) ? count : shape.lanes.length;\n        index += laneIndex;\n        args = {\n            element: laneObj, cause: diagram.diagramActions, state: 'Changing', type: 'Addition', cancel: false, laneIndex: laneIndex\n        };\n        diagram.triggerEvent(DiagramEvent.collectionChange, args);\n        if (!args.cancel) {\n            if (orientation_1) {\n                var rowDef = new RowDefinition();\n                rowDef.height = lane.height;\n                grid.addRow(index, rowDef, false);\n                swimLane.height = (swimLane.height !== undefined) ? swimLane.height + lane.height : swimLane.height;\n                swimLane.wrapper.height = grid.height = swimLane.height;\n            }\n            else {\n                var colDef = new ColumnDefinition();\n                colDef.width = lane.width;\n                grid.addColumn(laneIndex + 1, colDef, false);\n                if (swimLane.width) {\n                    swimLane.width += lane.width;\n                    swimLane.wrapper.width = grid.width = swimLane.width;\n                }\n                if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                    grid.rows[0].cells[0].columnSpan += 1;\n                }\n            }\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                laneObj.id += randomId();\n            }\n            if (count !== undefined) {\n                shape.lanes.splice(count, 0, laneObj);\n            }\n            else {\n                shape.lanes.push(laneObj);\n            }\n            args = {\n                element: laneObj, cause: diagram.diagramActions, state: 'Changed', type: 'Addition', cancel: false, laneIndex: laneIndex\n            };\n            diagram.triggerEvent(DiagramEvent.collectionChange, args);\n            laneCollection(grid, diagram, swimLane, index, laneIndex, orientation_1);\n            redoObj = (shape.orientation === 'Horizontal') ?\n                diagram.nameTable[grid.rows[index].cells[0].children[0].id] :\n                ((shape.header && shape.hasHeader) ? diagram.nameTable[grid.rows[1].cells[index].children[0].id] :\n                    diagram.nameTable[grid.rows[0].cells[index].children[0].id]);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                entry = {\n                    type: 'LaneCollectionChanged', changeType: 'Insert', undoObject: cloneObject(laneObj),\n                    redoObject: cloneObject(redoObj), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n            }\n            var startRowIndex = (shape.orientation === 'Horizontal') ?\n                index : ((shape.header && shape.hasHeader) ? 1 : 0);\n            ChangeLaneIndex(diagram, swimLane, startRowIndex);\n            swimLaneMeasureAndArrange(swimLane);\n            updateHeaderMaxWidth(diagram, swimLane);\n            children = lane.children;\n            if (children && children.length > 0) {\n                for (j = 0; j < children.length; j++) {\n                    child = children[j];\n                    point = { x: child.wrapper.offsetX, y: child.wrapper.offsetY };\n                    if (shape.orientation === 'Horizontal') {\n                        cell = grid.rows[index].cells[i];\n                        for (i = 0; i < grid.rows[index].cells.length; i++) {\n                            addChildNodeToNewLane(diagram, grid.rows[index].cells[i], point, child);\n                        }\n                    }\n                    else {\n                        for (k = 0; k < grid.rows.length; k++) {\n                            cell = grid.rows[k].cells[index];\n                            addChildNodeToNewLane(diagram, cell, point, child);\n                        }\n                    }\n                }\n            }\n            updateConnectorsProperties(connectors, diagram);\n            diagram.drag(swimLane, bounds.x - grid.bounds.x, bounds.y - grid.bounds.y);\n        }\n        diagram.protectPropertyChange(false);\n    }\n}\nfunction addChildNodeToNewLane(diagram, cell, point, child) {\n    if (cell.children && cell.children.length > 0) {\n        var canvas = cell.children[0];\n        var parent_1 = diagram.nameTable[canvas.id];\n        if (canvas.bounds.containsPoint(point)) {\n            diagram.addChild(parent_1, child);\n        }\n    }\n}\nexport function addPhase(diagram, parent, newPhase) {\n    if (parent.shape.type === 'SwimLane') {\n        var gridRowIndex = void 0;\n        var gridColIndex = void 0;\n        var phaseNode = void 0;\n        var phase = void 0;\n        var previousPhase = void 0;\n        var nextPhase = void 0;\n        var phaseIndex = void 0;\n        var laneHeaderSize = void 0;\n        var i = void 0;\n        var x = parent.wrapper.bounds.x;\n        var y = parent.wrapper.bounds.y;\n        var shape = parent.shape;\n        var padding = shape.padding;\n        var phasesCollection = shape.phases;\n        var width = void 0;\n        var grid = parent.wrapper.children[0];\n        var orientation_2 = shape.orientation === 'Horizontal' ? true : false;\n        gridRowIndex = (shape.header && shape.hasHeader) ? 0 : -1;\n        if (shape.phases.length > 0) {\n            gridRowIndex += 1;\n            gridColIndex = 0;\n        }\n        laneHeaderSize = (orientation_2) ? shape.lanes[0].header.width : shape.lanes[0].header.height;\n        if (newPhase.offset > laneHeaderSize) {\n            for (i = 0; i < phasesCollection.length; i++) {\n                phase = phasesCollection[i];\n                previousPhase = (i > 0) ? phasesCollection[i - 1] : phase;\n                if (phase.offset > newPhase.offset) {\n                    width = (i > 0) ? newPhase.offset - previousPhase.offset : newPhase.offset;\n                    if (orientation_2) {\n                        var nextCol = grid.columnDefinitions()[i];\n                        nextCol.width -= width;\n                        nextPhase = diagram.nameTable[shape.phases[i].header.id];\n                        nextPhase.maxWidth = nextPhase.wrapper.maxWidth = nextCol.width;\n                        grid.updateColumnWidth(i, nextCol.width, false);\n                        var addPhase_1 = new ColumnDefinition();\n                        addPhase_1.width = width;\n                        phaseIndex = i;\n                        grid.addColumn(i, addPhase_1, false);\n                        break;\n                    }\n                    else {\n                        var nextRow = grid.rowDefinitions()[i + gridRowIndex];\n                        nextRow.height -= width;\n                        nextPhase = diagram.nameTable[shape.phases[i].header.id];\n                        grid.updateRowHeight(i + gridRowIndex, nextRow.height, false);\n                        var addPhase_2 = new RowDefinition();\n                        addPhase_2.height = width;\n                        phaseIndex = i;\n                        grid.addRow(i + gridRowIndex, addPhase_2, false);\n                        break;\n                    }\n                }\n            }\n            if (diagram.diagramActions & DiagramAction.UndoRedo && phaseIndex === undefined) {\n                var entry = diagram.historyManager.currentEntry.next;\n                if (entry.isLastPhase) {\n                    phaseIndex = phasesCollection.length;\n                    addLastPhase(phaseIndex, parent, entry, grid, orientation_2, newPhase);\n                }\n            }\n            var phaseObj = new Phase((parent.shape), 'phases', newPhase, true);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                phaseObj.id += randomId();\n            }\n            shape.phases.splice(phaseIndex, 0, phaseObj);\n            phaseDefine(grid, diagram, parent, gridRowIndex, orientation_2, phaseIndex);\n            if (orientation_2) {\n                phaseNode = diagram.nameTable[grid.rows[gridRowIndex].cells[phaseIndex].children[0].id];\n                if (phaseIndex === 0 && shape.header && shape.hasHeader) {\n                    grid.rows[0].cells[0].children = grid.rows[0].cells[1].children;\n                    grid.rows[0].cells[1].children = [];\n                    var fristRow = grid.rows[0];\n                    for (var i_2 = 0; i_2 < fristRow.cells.length; i_2++) {\n                        fristRow.cells[i_2].minWidth = undefined;\n                        if (i_2 === 0) {\n                            fristRow.cells[i_2].columnSpan = grid.rows[0].cells.length;\n                        }\n                        else {\n                            fristRow.cells[i_2].columnSpan = 1;\n                        }\n                    }\n                }\n                addHorizontalPhase(diagram, parent, grid, phaseIndex, orientation_2);\n                var col = grid.columnDefinitions();\n                grid.updateColumnWidth(phaseIndex, col[phaseIndex].width, true, padding);\n                phaseNode.maxWidth = phaseNode.wrapper.maxWidth = col[phaseIndex].width;\n                if (col.length > phaseIndex + 1) {\n                    var nextPhaseNode = diagram.nameTable[grid.rows[gridRowIndex].cells[phaseIndex + 1].children[0].id];\n                    grid.updateColumnWidth(phaseIndex + 1, col[phaseIndex + 1].width, true, padding);\n                    nextPhaseNode.maxWidth = nextPhaseNode.wrapper.maxWidth = col[phaseIndex + 1].width;\n                }\n                parent.width = parent.wrapper.width = parent.wrapper.children[0].width = grid.width;\n            }\n            else {\n                phaseNode = diagram.nameTable[grid.rows[gridRowIndex + phaseIndex].cells[0].children[0].id];\n                var row = grid.rowDefinitions();\n                var size = row[gridRowIndex + phaseIndex].height;\n                addVerticalPhase(diagram, parent, grid, gridRowIndex + phaseIndex, orientation_2);\n                grid.updateRowHeight(gridRowIndex + phaseIndex, size, true, padding);\n                if (row.length > gridRowIndex + phaseIndex + 1) {\n                    size = row[gridRowIndex + phaseIndex + 1].height;\n                    grid.updateRowHeight(gridRowIndex + phaseIndex + 1, size, true, padding);\n                }\n                parent.height = parent.wrapper.height = parent.wrapper.children[0].height = grid.actualSize.height;\n            }\n            swimLaneMeasureAndArrange(parent);\n            parent.width = parent.wrapper.actualSize.width;\n            updateHeaderMaxWidth(diagram, parent);\n            diagram.drag(parent, x - parent.wrapper.bounds.x, y - parent.wrapper.bounds.y);\n            checkPhaseOffset(parent, diagram);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'PhaseCollectionChanged', changeType: 'Insert', undoObject: cloneObject(phaseObj),\n                    redoObject: cloneObject(phaseNode), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n            }\n            diagram.updateDiagramObject(parent);\n        }\n    }\n}\nexport function addLastPhase(phaseIndex, parent, entry, grid, orientation, newPhase) {\n    var shape = parent.shape;\n    var prevPhase = shape.phases[phaseIndex - 2];\n    var prevOffset = entry.previousPhase.offset;\n    if (orientation) {\n        var nextCol = grid.columnDefinitions()[phaseIndex - 1];\n        var addPhase_3 = new ColumnDefinition();\n        if (phaseIndex > 1) {\n            addPhase_3.width = (nextCol.width) - (prevOffset - prevPhase.offset);\n            nextCol.width = prevOffset - prevPhase.offset;\n        }\n        else {\n            addPhase_3.width = nextCol.width - prevOffset;\n            nextCol.width = prevOffset;\n        }\n        grid.updateColumnWidth(phaseIndex - 1, nextCol.width, false);\n        grid.addColumn(phaseIndex, addPhase_3, false);\n    }\n    else {\n        var nextCol = grid.rowDefinitions()[phaseIndex];\n        var addPhase_4 = new RowDefinition();\n        if (phaseIndex > 1) {\n            addPhase_4.height = entry.undoObject.offset - prevOffset;\n            nextCol.height = prevOffset - prevPhase.offset;\n        }\n        else {\n            addPhase_4.height = nextCol.height - prevOffset;\n            nextCol.height = prevOffset;\n        }\n        grid.updateRowHeight(phaseIndex, nextCol.height, false);\n        grid.addRow(1 + phaseIndex, addPhase_4, false);\n    }\n}\nexport function addHorizontalPhase(diagram, node, grid, index, orientation) {\n    var shape = node.shape;\n    var nextCell;\n    var i;\n    var prevCell;\n    var gridCell;\n    var row;\n    var laneIndex = findStartLaneIndex(node);\n    if (shape.header && shape.hasHeader) {\n        grid.rows[0].cells[0].columnSpan = grid.rows[0].cells.length;\n    }\n    for (i = laneIndex; i < grid.rows.length; i++) {\n        row = grid.rows[i];\n        prevCell = row.cells[index - 1];\n        gridCell = row.cells[index];\n        nextCell = row.cells[index + 1];\n        addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, i, index);\n    }\n    ChangeLaneIndex(diagram, node, 1);\n}\nexport function addVerticalPhase(diagram, node, grid, rowIndex, orientation) {\n    var prevCell;\n    var gridCell;\n    var nextCell;\n    var row = grid.rows[rowIndex];\n    var nextRow = grid.rows[rowIndex + 1];\n    var prevRow = grid.rows[rowIndex - 1];\n    for (var i = 1; i < row.cells.length; i++) {\n        gridCell = row.cells[i];\n        nextCell = (nextRow) ? nextRow.cells[i] : undefined;\n        prevCell = prevRow.cells[i];\n        addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, rowIndex, i);\n    }\n    ChangeLaneIndex(diagram, node, 1);\n}\nfunction addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, rowIndex, columnIndex) {\n    var x;\n    var y;\n    var shape = node.shape;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    var grid = node.wrapper.children[0];\n    var width = gridCell.desiredCellWidth;\n    var height = gridCell.desiredCellHeight;\n    var col = (orientation) ? rowIndex : columnIndex;\n    var rect;\n    var canvas;\n    var parentWrapper;\n    var j;\n    var i = (orientation) ? rowIndex : columnIndex;\n    if (prevCell) {\n        x = orientation ? prevCell.bounds.x + prevCell.bounds.width : prevCell.bounds.x;\n        y = orientation ? prevCell.bounds.y : prevCell.bounds.y + prevCell.bounds.height;\n    }\n    else {\n        x = grid.bounds.x;\n        y = nextCell.bounds.y;\n    }\n    rect = new Rect(x, y, width, height);\n    canvas = {\n        id: node.id + ((orientation) ? shape.lanes[i - 2] : shape.lanes[i - 1]).id + randomId()[0],\n        rowIndex: rowIndex, columnIndex: columnIndex,\n        width: gridCell.minWidth, height: gridCell.minHeight,\n        style: ((orientation) ? shape.lanes[i - 2] : shape.lanes[i - 1]).style,\n        constraints: NodeConstraints.Default | NodeConstraints.AllowDrop,\n        container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n    };\n    parentWrapper = addObjectToGrid(diagram, grid, node, canvas, false, false, true);\n    parentWrapper.children[0].isCalculateDesiredSize = false;\n    grid.addObject(parentWrapper, rowIndex, columnIndex);\n    if (nextCell && nextCell.children && nextCell.children.length) {\n        for (j = 0; j < nextCell.children.length; j++) {\n            if (orientation) {\n                diagram.nameTable[nextCell.children[j].id].columnIndex += 1;\n            }\n            else {\n                diagram.nameTable[nextCell.children[j].id].rowIndex += 1;\n            }\n        }\n    }\n    arrangeChildInGrid(diagram, nextCell, gridCell, rect, parentWrapper, orientation, prevCell);\n}\nexport function arrangeChildInGrid(diagram, nextCell, gridCell, rect, parentWrapper, orientation, prevCell) {\n    var child;\n    var point;\n    var childNode;\n    var parent = diagram.nameTable[parentWrapper.id];\n    var changeCell = (!nextCell) ? prevCell : nextCell;\n    var swimLane = diagram.nameTable[parent.parentId];\n    var padding = swimLane.shape.padding;\n    if (changeCell.children && changeCell.children[0].children.length > 1) {\n        for (var j = 1; j < changeCell.children[0].children.length; j++) {\n            child = changeCell.children[0].children[j];\n            childNode = diagram.nameTable[child.id];\n            point = (orientation) ? { x: child.bounds.x, y: child.bounds.center.y } :\n                { x: child.bounds.center.x, y: child.bounds.top };\n            if (rect.containsPoint(point)) {\n                gridCell.children[0].children.push(child);\n                changeCell.children[0].children.splice(j, 1);\n                j--;\n                diagram.deleteChild(childNode);\n                if (!childNode.isLane) {\n                    childNode.parentId = parentWrapper.id;\n                }\n                if (!parent.children) {\n                    parent.children = [];\n                }\n                if (!nextCell) {\n                    if (orientation) {\n                        childNode.margin.left = childNode.wrapper.bounds.x - changeCell.children[0].bounds.right;\n                    }\n                    else {\n                        childNode.margin.top = childNode.wrapper.bounds.y - changeCell.children[0].bounds.bottom;\n                    }\n                }\n                parent.children.push(child.id);\n                childNode.zIndex = parent.zIndex + 1;\n                diagram.removeElements(childNode);\n            }\n            else if (nextCell) {\n                if (orientation) {\n                    childNode.margin.left -= gridCell.desiredCellWidth;\n                    if (padding > childNode.margin.left) {\n                        childNode.margin.left = padding;\n                    }\n                }\n                else {\n                    childNode.margin.top -= gridCell.desiredCellHeight;\n                    if (padding > childNode.margin.top) {\n                        childNode.margin.top = padding;\n                    }\n                }\n            }\n        }\n    }\n}\nexport function swimLaneSelection(diagram, node, corner) {\n    if (node.shape.type === 'SwimLane' && (corner === 'ResizeSouth' || corner === 'ResizeEast')) {\n        var shape = node.shape;\n        var wrapper = node.wrapper.children[0];\n        var child = void 0;\n        var index = void 0;\n        if (corner === 'ResizeSouth') {\n            if (shape.orientation === 'Vertical') {\n                child = wrapper.rows[wrapper.rows.length - 1].cells[0];\n            }\n            else {\n                index = wrapper.rows.length - 1;\n                child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n            }\n        }\n        else {\n            index = (shape.header && shape.hasHeader) ? 1 : 0;\n            child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n        }\n        diagram.commandHandler.select(diagram.nameTable[child.children[0].id]);\n    }\n}\nexport function pasteSwimLane(swimLane, diagram, clipboardData, laneNode, isLane, isUndo) {\n    var i;\n    var j;\n    var lane;\n    var phase;\n    var node;\n    var ranId = randomId();\n    var cloneLane;\n    var childX;\n    var childY;\n    var shape = swimLane.shape;\n    var lanes;\n    var phases = shape.phases;\n    var nodeX = swimLane.offsetX - swimLane.wrapper.actualSize.width / 2;\n    var nodeY = swimLane.offsetY - swimLane.wrapper.actualSize.height / 2;\n    if (shape.orientation === 'Vertical') {\n        nodeY += (shape.header && shape.hasHeader) ? shape.header.height : 0;\n    }\n    if (!isUndo) {\n        if (!isLane) {\n            swimLane.id += ranId;\n            if (shape && shape.header && shape.hasHeader) {\n                shape.header.id += ranId;\n            }\n            else {\n                shape.header = undefined;\n            }\n        }\n        for (i = 0; phases && i < phases.length; i++) {\n            phase = phases[i];\n            phase.id += ranId;\n        }\n    }\n    lanes = (isLane) ? [clipboardData.childTable[laneNode.id]] : shape.lanes;\n    for (i = 0; lanes && i < lanes.length; i++) {\n        lane = lanes[i];\n        if (!isUndo) {\n            lane.id += ranId;\n        }\n        for (j = 0; lane.children && j < lane.children.length; j++) {\n            node = lane.children[j];\n            childX = node.wrapper.offsetX - node.width / 2;\n            childY = node.wrapper.offsetY - node.height / 2;\n            node.zIndex = -1;\n            node.inEdges = node.outEdges = [];\n            if (isUndo || (clipboardData && (clipboardData.pasteIndex === 1 || clipboardData.pasteIndex === 0))) {\n                if (shape.orientation === 'Vertical') {\n                    node.margin.top = childY - nodeY;\n                }\n                else {\n                    node.margin.left = childX - nodeX;\n                }\n            }\n            if (!isUndo) {\n                node.id += ranId;\n            }\n        }\n    }\n    if (!isUndo) {\n        if (isLane) {\n            var newShape = {\n                lanes: lanes,\n                phases: phases, phaseSize: shape.phaseSize,\n                type: 'SwimLane', orientation: shape.orientation,\n                header: { annotation: { content: 'Title' }, height: 50 },\n            };\n            cloneLane = { shape: newShape };\n            if (shape.orientation === 'Horizontal') {\n                cloneLane.width = swimLane.wrapper.actualSize.width;\n                cloneLane.height = laneNode.wrapper.actualSize.height + shape.header.height + shape.phaseSize;\n                cloneLane.offsetX = swimLane.wrapper.offsetX + (clipboardData.pasteIndex * 10);\n                cloneLane.offsetY = laneNode.wrapper.offsetY + (clipboardData.pasteIndex * 10);\n            }\n            else {\n                cloneLane.width = laneNode.wrapper.actualSize.width;\n                cloneLane.height = swimLane.wrapper.actualSize.height;\n                cloneLane.offsetX = laneNode.wrapper.offsetX + (clipboardData.pasteIndex * 10);\n                cloneLane.offsetY = swimLane.wrapper.offsetY + (clipboardData.pasteIndex * 10);\n            }\n            swimLane = cloneLane;\n        }\n        if (clipboardData.pasteIndex !== 0) {\n            swimLane.offsetX += 10;\n            swimLane.offsetY += 10;\n        }\n        swimLane.zIndex = -1;\n        swimLane = diagram.add(swimLane);\n        if (!isLane) {\n            for (var _i = 0, _a = Object.keys(clipboardData.childTable); _i < _a.length; _i++) {\n                var i_3 = _a[_i];\n                var connector = clipboardData.childTable[i_3];\n                connector.id += ranId;\n                connector.sourceID += ranId;\n                connector.targetID += ranId;\n                connector.zIndex = -1;\n                diagram.add(connector);\n            }\n        }\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n        diagram.select([swimLane]);\n    }\n    return swimLane;\n}\nexport function gridSelection(diagram, selectorModel, id, isSymbolDrag) {\n    var canvas;\n    var node = selectorModel.nodes[0];\n    if (isSymbolDrag || checkParentAsContainer(diagram, node, true)) {\n        var targetnode = void 0;\n        var wrapper = void 0;\n        var parentNode = void 0;\n        var bounds = void 0;\n        var swimLaneId = void 0;\n        var element = new DiagramElement();\n        if (id) {\n            swimLaneId = (diagram.nameTable[id].parentId);\n            targetnode = node = diagram.nameTable[id];\n        }\n        wrapper = !id ? node.wrapper : targetnode.wrapper;\n        parentNode = diagram.nameTable[swimLaneId || node.parentId];\n        if (parentNode && parentNode.container.type === 'Grid') {\n            canvas = new Canvas();\n            canvas.children = [];\n            if (isSymbolDrag || !(node.isHeader)) {\n                if ((parentNode.container.orientation === 'Horizontal' && node.isPhase) ||\n                    (parentNode.container.orientation === 'Vertical' &&\n                        (node.rowIndex > 0 && node.columnIndex > 0 || node.isLane))) {\n                    bounds = findBounds(parentNode, (targetnode) ? targetnode.columnIndex : node.columnIndex, (parentNode.shape.header && parentNode.shape.hasHeader) ? true : false);\n                    canvas.offsetX = bounds.center.x;\n                    canvas.offsetY = bounds.center.y;\n                    element.width = bounds.width;\n                    element.height = bounds.height;\n                }\n                else {\n                    canvas.offsetX = parentNode.offsetX;\n                    canvas.offsetY = wrapper.offsetY;\n                    element.width = parentNode.wrapper.actualSize.width;\n                    element.height = wrapper.actualSize.height;\n                }\n            }\n            canvas.children.push(element);\n            canvas.measure(new Size());\n            canvas.arrange(canvas.desiredSize);\n        }\n    }\n    return canvas;\n}\nexport function removeLaneChildNode(diagram, swimLaneNode, currentObj, isChildNode, laneIndex) {\n    laneIndex = (laneIndex !== undefined) ? laneIndex : findLaneIndex(swimLaneNode, currentObj);\n    var preventHistory = false;\n    var lanenode = swimLaneNode.shape.lanes[laneIndex];\n    for (var j = lanenode.children.length - 1; j >= 0; j--) {\n        if (isChildNode) {\n            if (isChildNode.id === lanenode.children[j].id) {\n                lanenode.children.splice(j, 1);\n            }\n        }\n        else {\n            diagram.removeDependentConnector(lanenode.children[j]);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n                preventHistory = true;\n            }\n            diagram.remove(lanenode.children[j]);\n            lanenode.children.splice(j, 1);\n            if (preventHistory) {\n                diagram.diagramActions = diagram.diagramActions & ~DiagramAction.UndoRedo;\n            }\n        }\n    }\n}\nexport function getGridChildren(obj) {\n    var children = obj.children[0];\n    return children;\n}\nexport function removeSwimLane(diagram, obj) {\n    var rows = obj.wrapper.children[0].rows;\n    var preventHistory = false;\n    var node;\n    var i;\n    var j;\n    var k;\n    var child;\n    var removeNode;\n    for (i = 0; i < rows.length; i++) {\n        for (j = 0; j < rows[i].cells.length; j++) {\n            child = getGridChildren(rows[i].cells[j]);\n            if (child && child.children) {\n                for (k = 0; k < child.children.length; k++) {\n                    if (child.children[k].children) {\n                        removeNode = diagram.nameTable[child.children[k].id];\n                        if (removeNode) {\n                            if (removeNode.isLane) {\n                                deleteNode(diagram, removeNode);\n                            }\n                            else {\n                                diagram.removeDependentConnector(removeNode);\n                                diagram.diagramActions |= DiagramAction.PreventHistory;\n                                diagram.remove(removeNode);\n                                diagram.diagramActions &= ~DiagramAction.PreventHistory;\n                                k--;\n                            }\n                        }\n                    }\n                }\n            }\n            if (child) {\n                node = diagram.nameTable[child.id];\n                if (node) {\n                    deleteNode(diagram, node);\n                }\n            }\n        }\n    }\n}\nfunction deleteNode(diagram, node) {\n    diagram.nodes.splice(diagram.nodes.indexOf(node), 1);\n    diagram.removeFromAQuad(node);\n    diagram.removeObjectsFromLayer(node);\n    delete diagram.nameTable[node.id];\n    diagram.removeElements(node);\n}\nexport function removeLane(diagram, lane, swimLane, lanes) {\n    var args;\n    if (swimLane.shape.type === 'SwimLane') {\n        var shape = swimLane.shape;\n        var laneIndex = void 0;\n        if (shape.lanes.length === 1) {\n            diagram.remove(swimLane);\n        }\n        else {\n            var x = swimLane.wrapper.bounds.x;\n            var y = swimLane.wrapper.bounds.y;\n            var row = void 0;\n            var i = void 0;\n            var cell = void 0;\n            var j = void 0;\n            var child = void 0;\n            var grid = swimLane.wrapper.children[0];\n            laneIndex = (lanes) ? (shape.lanes.indexOf(lanes)) : findLaneIndex(swimLane, lane);\n            args = {\n                element: lane, cause: diagram.diagramActions, state: 'Changing', type: 'Removal', cancel: false, laneIndex: laneIndex\n            };\n            diagram.triggerEvent(DiagramEvent.collectionChange, args);\n            if (!args.cancel) {\n                var undoObj = cloneObject(shape.lanes[laneIndex]);\n                removeLaneChildNode(diagram, swimLane, lane, undefined, laneIndex);\n                if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                    var entry = {\n                        type: 'LaneCollectionChanged', changeType: 'Remove', undoObject: undoObj,\n                        redoObject: cloneObject(lane), category: 'Internal'\n                    };\n                    diagram.addHistoryEntry(entry);\n                }\n                shape.lanes.splice(laneIndex, 1);\n                var index = (lane) ? (shape.orientation === 'Horizontal' ? lane.rowIndex : lane.columnIndex) :\n                    (findStartLaneIndex(swimLane) + laneIndex);\n                if (shape.orientation === 'Horizontal') {\n                    row = grid.rows[index];\n                    for (i = 0; i < row.cells.length; i++) {\n                        cell = row.cells[i];\n                        if (cell && cell.children.length > 0) {\n                            for (j = 0; j < cell.children.length; j++) {\n                                child = cell.children[j];\n                                removeChildren(diagram, child);\n                            }\n                        }\n                    }\n                    grid.removeRow(index);\n                }\n                else {\n                    swimLane.width = (swimLane.width !== undefined) ?\n                        swimLane.width - grid.rows[0].cells[index].actualSize.width : swimLane.width;\n                    for (i = 0; i < grid.rows.length; i++) {\n                        cell = grid.rows[i].cells[index];\n                        if (cell && cell.children.length > 0) {\n                            for (j = 0; j < cell.children.length; j++) {\n                                child = cell.children[j];\n                                removeChildren(diagram, child);\n                            }\n                        }\n                    }\n                    grid.removeColumn(index);\n                }\n                args = {\n                    element: lane, cause: diagram.diagramActions, state: 'Changed', type: 'Removal', cancel: false, laneIndex: laneIndex\n                };\n                diagram.triggerEvent(DiagramEvent.collectionChange, args);\n                swimLane.width = swimLane.wrapper.width = grid.width;\n                swimLane.height = swimLane.wrapper.height = grid.height;\n                swimLaneMeasureAndArrange(swimLane);\n                ChangeLaneIndex(diagram, swimLane, index);\n                diagram.drag(swimLane, x - swimLane.wrapper.bounds.x, y - swimLane.wrapper.bounds.y);\n                diagram.updateDiagramObject(swimLane);\n            }\n        }\n    }\n}\nexport function removeChildren(diagram, canvas) {\n    var i;\n    var node;\n    if (canvas instanceof Canvas) {\n        if (canvas.children.length > 0) {\n            for (i = 0; i < canvas.children.length; i++) {\n                if (canvas.children[i] instanceof Canvas) {\n                    removeChildren(diagram, canvas.children[i]);\n                }\n            }\n        }\n        node = diagram.getObject(canvas.id);\n        deleteNode(diagram, node);\n    }\n}\nexport function removePhase(diagram, phase, swimLane, swimLanePhases) {\n    diagram.protectPropertyChange(true);\n    var x = swimLane.wrapper.bounds.x;\n    var y = swimLane.wrapper.bounds.y;\n    var isLastPhase = false;\n    var previousPhase;\n    var shape = swimLane.shape;\n    var grid = swimLane.wrapper.children[0];\n    var phaseIndex = swimLanePhases ? shape.phases.indexOf(swimLanePhases) : findPhaseIndex(phase, swimLane);\n    var phaseLength = shape.phases.length;\n    if (shape.phases.length > 1) {\n        if (phaseIndex === phaseLength - 1) {\n            isLastPhase = true;\n            previousPhase = cloneObject(shape.phases[phaseIndex - 1]);\n        }\n        var undoObj = cloneObject(shape.phases[phaseIndex]);\n        shape.phases.splice(phaseIndex, 1);\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            var entry = {\n                type: 'PhaseCollectionChanged', changeType: 'Remove', undoObject: undoObj, previousPhase: previousPhase,\n                redoObject: cloneObject(phase), category: 'Internal', isLastPhase: isLastPhase\n            };\n            diagram.addHistoryEntry(entry);\n        }\n        if (shape.orientation === 'Horizontal') {\n            removeHorizontalPhase(diagram, grid, phase, phaseIndex);\n        }\n        else {\n            removeVerticalPhase(diagram, grid, phase, phaseIndex, swimLane);\n        }\n        updateHeaderMaxWidth(diagram, swimLane);\n        ChangeLaneIndex(diagram, swimLane, 1);\n        checkPhaseOffset(swimLane, diagram);\n        diagram.protectPropertyChange(false);\n        diagram.updateDiagramObject(swimLane);\n    }\n}\nexport function removeHorizontalPhase(diagram, grid, phase, phaseIndex) {\n    var row;\n    var cell;\n    var prevCell;\n    var actualChild;\n    var prevChild;\n    var prevCanvas;\n    var width;\n    phaseIndex = (phaseIndex !== undefined) ? phaseIndex : phase.columnIndex;\n    var i;\n    var j;\n    var k;\n    var child;\n    var node;\n    var object;\n    for (i = 0; i < grid.rows.length; i++) {\n        row = grid.rows[i];\n        if (row.cells.length > 1) {\n            cell = row.cells[phaseIndex];\n            prevCell = (row.cells.length - 1 === phaseIndex) ? row.cells[phaseIndex - 1] :\n                row.cells[phaseIndex + 1];\n            prevCanvas = prevCell.children[0];\n            if (cell.children.length > 0) {\n                actualChild = cell.children[0];\n                node = diagram.nameTable[actualChild.id];\n                if (prevCell.children.length === 0 && cell.children.length > 0) {\n                    prevCell.children = cell.children;\n                    prevCell.columnSpan = cell.columnSpan - 1;\n                }\n                else {\n                    for (j = 0; j < actualChild.children.length; j++) {\n                        child = actualChild.children[j];\n                        if (child instanceof Canvas) {\n                            object = diagram.nameTable[child.id];\n                            if (!object.isLane) {\n                                object.parentId = prevCanvas.id;\n                            }\n                            if ((row.cells.length - 1 === phaseIndex)) {\n                                object.margin.left = object.wrapper.bounds.x - prevCanvas.bounds.x;\n                                child.margin.left = object.wrapper.bounds.x - prevCanvas.bounds.x;\n                            }\n                            prevCanvas.children.push(child);\n                            if (diagram.nameTable[prevCanvas.id]) {\n                                var parentNode = diagram.nameTable[prevCanvas.id];\n                                if (!parentNode.children) {\n                                    parentNode.children = [];\n                                }\n                                parentNode.children.push(child.id);\n                            }\n                            actualChild.children.splice(j, 1);\n                            j--;\n                            if (node && node.children && node.children.indexOf(object.id) !== -1) {\n                                node.children.splice(node.children.indexOf(object.id), 1);\n                            }\n                        }\n                        if ((row.cells.length - 1 !== phaseIndex)) {\n                            for (k = 0; k < prevCanvas.children.length; k++) {\n                                var prevChild_1 = prevCanvas.children[k];\n                                if (prevChild_1 instanceof Canvas) {\n                                    var prevNode = diagram.nameTable[prevChild_1.id];\n                                    prevNode.margin.left = prevNode.wrapper.bounds.x - actualChild.bounds.x;\n                                    prevChild_1.margin.left = prevNode.wrapper.bounds.x - actualChild.bounds.x;\n                                }\n                            }\n                        }\n                    }\n                    if (node && node.isPhase) {\n                        var object_1 = diagram.nameTable[prevCanvas.id];\n                        if (object_1) {\n                            prevCanvas.maxWidth = object_1.wrapper.maxWidth = object_1.wrapper.maxWidth += node.wrapper.maxWidth;\n                        }\n                    }\n                    deleteNode(diagram, node);\n                }\n            }\n        }\n    }\n    var prevWidth = grid.columnDefinitions()[phaseIndex].width;\n    grid.removeColumn(phaseIndex);\n    if ((phaseIndex < grid.columnDefinitions().length)) {\n        width = grid.columnDefinitions()[phaseIndex].width;\n        width += prevWidth;\n        grid.updateColumnWidth(phaseIndex, width, true);\n    }\n    else {\n        width = grid.columnDefinitions()[phaseIndex - 1].width;\n        width += prevWidth;\n        grid.updateColumnWidth(phaseIndex - 1, width, true);\n    }\n}\nexport function removeVerticalPhase(diagram, grid, phase, phaseIndex, swimLane) {\n    var row;\n    var cell;\n    var prevRow;\n    var height;\n    var i;\n    var j;\n    var k;\n    var prevCell;\n    var prevChild;\n    var shape = swimLane.shape;\n    var child;\n    var object;\n    var phaseRowIndex = (phaseIndex !== undefined) ? ((shape.header) ? phaseIndex + 1 : phaseIndex) : phase.rowIndex;\n    row = grid.rows[phaseRowIndex];\n    var top = swimLane.wrapper.bounds.y;\n    var phaseCount = shape.phases.length;\n    if (shape.header !== undefined && shape.hasHeader) {\n        top += grid.rowDefinitions()[0].height;\n    }\n    prevRow = (phaseIndex === phaseCount) ? grid.rows[phaseRowIndex - 1] : grid.rows[phaseRowIndex + 1];\n    for (i = 0; i < row.cells.length; i++) {\n        cell = row.cells[i];\n        prevCell = prevRow.cells[i];\n        prevChild = prevCell.children[0];\n        if (cell.children.length > 0) {\n            var children = cell.children[0];\n            var node = diagram.nameTable[children.id];\n            if (phaseIndex < phaseCount) {\n                for (k = 0; k < prevChild.children.length; k++) {\n                    child = prevChild.children[k];\n                    if (child instanceof Canvas) {\n                        object = diagram.nameTable[child.id];\n                        object.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : children.bounds.y);\n                        child.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : children.bounds.y);\n                    }\n                }\n            }\n            for (j = 0; j < children.children.length; j++) {\n                child = children.children[j];\n                if (child instanceof Canvas) {\n                    object = diagram.nameTable[child.id];\n                    object.parentId = prevChild.id;\n                    if (phaseIndex === phaseCount) {\n                        object.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : prevChild.bounds.y);\n                        child.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : prevChild.bounds.y);\n                    }\n                    prevChild.children.push(child);\n                    children.children.splice(j, 1);\n                    j--;\n                    if (node.children && node.children.indexOf(object.id) !== -1) {\n                        node.children.splice(node.children.indexOf(object.id), 1);\n                    }\n                }\n            }\n            deleteNode(diagram, node);\n        }\n    }\n    var prevHeight = grid.rowDefinitions()[phaseRowIndex].height;\n    grid.removeRow(phaseRowIndex);\n    if ((phaseRowIndex < grid.rowDefinitions().length)) {\n        height = grid.rowDefinitions()[phaseRowIndex].height;\n        height += prevHeight;\n        grid.updateRowHeight(phaseRowIndex, height, true);\n    }\n    else {\n        height = grid.rowDefinitions()[phaseRowIndex - 1].height;\n        height += prevHeight;\n        grid.updateRowHeight(phaseRowIndex - 1, height, true);\n    }\n}\n/**\n * @private\n */\nexport function considerSwimLanePadding(diagram, node, padding) {\n    var lane = diagram.nameTable[node.parentId];\n    if (lane && lane.isLane) {\n        var swimLane = diagram.nameTable[lane.parentId];\n        var grid = swimLane.wrapper.children[0];\n        var x = swimLane.wrapper.bounds.x;\n        var y = swimLane.wrapper.bounds.y;\n        grid.updateColumnWidth(lane.columnIndex, grid.columnDefinitions()[lane.columnIndex].width, true, padding);\n        grid.updateRowHeight(lane.rowIndex, grid.rowDefinitions()[lane.rowIndex].height, true, padding);\n        var canvas = lane.wrapper;\n        var laneHeader = void 0;\n        var isConsiderHeader = false;\n        if (node.margin.left < padding) {\n            node.margin.left = padding;\n        }\n        if (node.margin.top < padding) {\n            node.margin.top = padding;\n        }\n        for (var i = 0; i < canvas.children.length; i++) {\n            var child = canvas.children[i];\n            if (child instanceof Canvas) {\n                var childNode = diagram.nameTable[child.id];\n                if (childNode.isLane) {\n                    laneHeader = childNode.wrapper;\n                    isConsiderHeader = true;\n                    break;\n                }\n            }\n        }\n        if (laneHeader) {\n            if (swimLane.shape.orientation === 'Horizontal') {\n                if (node.margin.left < padding + laneHeader.actualSize.width) {\n                    node.margin.left = padding + laneHeader.actualSize.width;\n                }\n            }\n            else {\n                if (node.margin.top < padding + laneHeader.actualSize.height) {\n                    node.margin.top = padding + laneHeader.actualSize.height;\n                }\n            }\n        }\n        swimLane.wrapper.measure(new Size(swimLane.width, swimLane.height));\n        swimLane.wrapper.arrange(swimLane.wrapper.desiredSize);\n        node.offsetX = node.wrapper.offsetX;\n        node.offsetY = node.wrapper.offsetY;\n        diagram.nodePropertyChange(node, {}, { margin: { left: node.margin.left, top: node.margin.top } });\n        grid.measure(new Size(grid.width, grid.height));\n        grid.arrange(grid.desiredSize);\n        swimLane.width = swimLane.wrapper.width = swimLane.wrapper.children[0].actualSize.width;\n        swimLane.height = swimLane.wrapper.height = swimLane.wrapper.children[0].actualSize.height;\n    }\n}\n/**\n * @private\n */\nexport function checkLaneChildrenOffset(swimLane) {\n    if (swimLane.shape.type === 'SwimLane') {\n        var lanes = swimLane.shape.lanes;\n        var lane = void 0;\n        var child = void 0;\n        for (var i = 0; i < lanes.length; i++) {\n            lane = lanes[i];\n            for (var j = 0; j < lane.children.length; j++) {\n                child = lane.children[j];\n                child.offsetX = child.wrapper.offsetX;\n                child.offsetY = child.wrapper.offsetY;\n            }\n        }\n    }\n}\nexport function findLane(laneNode, diagram) {\n    var lane;\n    if (laneNode.isLane) {\n        var swimLane = diagram.getObject(laneNode.parentId);\n        if (swimLane && swimLane.shape.type === 'SwimLane' && laneNode.isLane) {\n            var laneIndex = findLaneIndex(swimLane, laneNode);\n            lane = swimLane.shape.lanes[laneIndex];\n        }\n    }\n    return lane;\n}\nexport function canLaneInterchange(laneNode, diagram) {\n    if (laneNode.isLane) {\n        var lane = findLane(laneNode, diagram);\n        if (lane.canMove) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function updateSwimLaneChildPosition(lanes, diagram) {\n    var lane;\n    var node;\n    for (var i = 0; i < lanes.length; i++) {\n        lane = lanes[i];\n        for (var j = 0; j < lane.children.length; j++) {\n            node = diagram.nameTable[lane.children[j].id];\n            node.offsetX = node.wrapper.offsetX;\n            node.offsetY = node.wrapper.offsetY;\n        }\n    }\n}\n","import { Size } from './../primitives/size';\nimport { Rect } from './../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Container } from './../core/containers/container';\nimport { StrokeStyle, Stop } from './../core/appearance';\nimport { Point } from './../primitives/point';\nimport { ConnectorConstraints, NodeConstraints, PortConstraints, DiagramConstraints, DiagramTools, Transform } from './../enum/enum';\nimport { SelectorConstraints, ThumbsConstraints } from './../enum/enum';\nimport { PathElement } from './../core/elements/path-element';\nimport { DiagramNativeElement } from './../core/elements/native-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { PathAnnotation, ShapeAnnotation } from './../objects/annotation';\nimport { Node, FlowShape, BasicShape, Native, Html, UmlActivityShape, BpmnGateway, BpmnDataObject, BpmnEvent, BpmnSubEvent, BpmnActivity, BpmnAnnotation, MethodArguments, UmlClassAttribute, UmlClassMethod, UmlClass, UmlInterface, UmlEnumerationMember, UmlEnumeration, Lane, Phase, ChildContainer, SwimLane, Path, Image, Text, BpmnShape, UmlClassifierShape, Header } from './../objects/node';\nimport { Connector, bezierPoints, BezierSegment, StraightSegment, OrthogonalSegment } from './../objects/connector';\nimport { getBasicShape } from './../objects/dictionary/basic-shapes';\nimport { getFlowShape } from './../objects/dictionary/flow-shapes';\nimport { Diagram } from './../diagram';\nimport { findAngle } from './connector';\nimport { getContent, removeElement, hasClass, getDiagramElement } from './dom-util';\nimport { getBounds, cloneObject, rotatePoint, getFunction } from './base-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { getRulerSize } from '../ruler/ruler';\nimport { canResize } from './constraints-util';\nimport { UserHandle } from '../interaction/selector';\nimport { getUMLActivityShape } from '../objects/dictionary/umlactivity-shapes';\nimport { Canvas } from '../core/containers/canvas';\nimport { PointPort } from '../objects/port';\nimport { Command } from '../diagram/keyboard-commands';\nimport { pasteSwimLane } from './swim-lane-util';\nimport { isBlazor, Browser } from '@syncfusion/ej2-base';\n/** @private */\nexport function completeRegion(region, selectedObjects) {\n    var collection = [];\n    for (var i = 0; i < selectedObjects.length; i++) {\n        var obj = selectedObjects[i];\n        if (region.containsRect(obj.wrapper.bounds)) {\n            collection.push(obj);\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function findNodeByName(nodes, name) {\n    for (var i = 0; i < nodes.length; i++) {\n        if (nodes[i].id === name) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @private\n */\nexport function findObjectType(drawingObject) {\n    var type;\n    if (drawingObject) {\n        if (drawingObject.type) {\n            type = 'Connector';\n        }\n        else if (drawingObject.shape && !drawingObject.type) {\n            type = 'Node';\n        }\n    }\n    return type;\n}\n/**\n * @private\n */\nexport function setSwimLaneDefaults(child, node) {\n    if (node instanceof Node) {\n        if (!child.shape.header) {\n            node.shape.hasHeader = false;\n        }\n    }\n}\n/**\n * @private\n */\nexport function getSpaceValue(intervals, isLine, i, space) {\n    space = !isLine ? ((intervals[i - 1] !== undefined) ? intervals[i - 1] + space : 0) : space;\n    return space;\n}\n/**\n * @private\n */\nexport function getInterval(intervals, isLine) {\n    var newInterval = [];\n    if (!isLine) {\n        for (var k = 0; k < intervals.length; k++) {\n            newInterval.push(intervals[k]);\n        }\n        newInterval.push(intervals[newInterval.length - 2]);\n        newInterval.push(intervals[newInterval.length - 2]);\n    }\n    else {\n        newInterval = intervals;\n    }\n    return newInterval;\n}\n/**\n * @private\n */\nexport function setUMLActivityDefaults(child, node) {\n    if (node instanceof Node) {\n        var shape = (isBlazor() ? child.shape.umlActivityShape :\n            child.shape.shape);\n        switch (shape) {\n            case 'JoinNode':\n                if (!child.width) {\n                    node.width = 20;\n                }\n                if (!child.height) {\n                    node.height = 90;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'ForkNode':\n                if (!child.width) {\n                    node.width = 90;\n                }\n                if (!child.height) {\n                    node.height = 20;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'InitialNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'FinalNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n        }\n    }\n    else {\n        var flow = (isBlazor() ?\n            child.shape.umlActivityFlow : child.shape.flow);\n        switch (flow) {\n            case 'Object':\n                if (!child.style || !child.style.strokeDashArray) {\n                    node.style.strokeDashArray = '8 4';\n                }\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                break;\n            case 'Control':\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                if (!child.sourceDecorator || !child.sourceDecorator.shape) {\n                    node.sourceDecorator.shape = 'None';\n                }\n                break;\n        }\n    }\n}\n/* tslint:disable */\n/**\n * @private\n */\nexport function setConnectorDefaults(child, node) {\n    switch ((child.shape).type) {\n        case 'Bpmn':\n            var bpmnFlow = (isBlazor() ? child.shape.bpmnFlow : child.shape.flow);\n            switch (bpmnFlow) {\n                case 'Sequence':\n                    if ((((child.shape.sequence) === 'Normal' && child.type !== 'Bezier')) ||\n                        ((child.shape.sequence) === 'Default') || ((child.shape.sequence) === 'Conditional')) {\n                        if (node.targetDecorator && node.targetDecorator.style) {\n                            node.targetDecorator.style.fill = (child.targetDecorator && child.targetDecorator.style\n                                && child.targetDecorator.style.fill) || 'black';\n                        }\n                        if ((child.shape.sequence) === 'Conditional' && node.sourceDecorator) {\n                            if (node.sourceDecorator.style) {\n                                node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                                    child.sourceDecorator.style.fill) || 'white';\n                            }\n                            node.sourceDecorator.width = (child.sourceDecorator && child.sourceDecorator.width) || 20;\n                            node.sourceDecorator.height = (child.sourceDecorator && child.sourceDecorator.width) || 10;\n                        }\n                    }\n                    break;\n                case 'Association':\n                    if (((child.shape.association) === 'Default') ||\n                        ((child.shape.association) === 'Directional') ||\n                        ((child.shape.association) === 'BiDirectional')) {\n                        if (node.targetDecorator && node.targetDecorator.style) {\n                            node.targetDecorator.style.fill = (child.targetDecorator && child.targetDecorator.style &&\n                                child.targetDecorator.style.fill) || 'black';\n                        }\n                        if ((child.shape.association) === 'BiDirectional') {\n                            if (node.sourceDecorator && node.sourceDecorator.style) {\n                                node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                                    child.sourceDecorator.style.fill) || 'white';\n                                node.sourceDecorator.width = (child.sourceDecorator && child.sourceDecorator.width) || 5;\n                                node.sourceDecorator.height = (child.sourceDecorator && child.sourceDecorator.height) || 10;\n                            }\n                        }\n                    }\n                    break;\n                case 'Message':\n                    if (node.style && !node.style.strokeDashArray) {\n                        node.style.strokeDashArray = (child.style && child.style.strokeDashArray) || '4 4';\n                    }\n                    break;\n            }\n            break;\n        case 'UmlActivity':\n            var flow = (isBlazor() ?\n                child.shape.umlActivityFlow : child.shape.flow);\n            switch (flow) {\n                case 'Exception':\n                    if (((child.shape.association) === 'Directional') ||\n                        ((child.shape.association) === 'BiDirectional')) {\n                        node.style.strokeDashArray = (child.style && child.style.strokeDashArray) || '2 2';\n                    }\n                    break;\n            }\n            break;\n        case 'UmlClassifier':\n            var hasRelation = false;\n            if (child.shape.relationship === 'Association') {\n                hasRelation = true;\n            }\n            else if (child.shape.relationship === 'Inheritance') {\n                if (node.targetDecorator && node.targetDecorator.style) {\n                    node.targetDecorator.style.fill = (child.targetDecorator && child.targetDecorator.style &&\n                        child.targetDecorator.style.fill) || 'white';\n                }\n                if (node.style) {\n                    hasRelation = true;\n                    node.style.strokeDashArray = (child.style && child.style.strokeDashArray) || '4 4';\n                }\n            }\n            else if (child.shape.relationship === 'Composition') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'black';\n                }\n                hasRelation = true;\n            }\n            else if (child.shape.relationship === 'Aggregation' ||\n                child.shape.relationship === undefined) {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'white';\n                }\n                hasRelation = true;\n            }\n            else if (child.shape.relationship === 'Dependency') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'white';\n                }\n                hasRelation = true;\n                node.style.strokeDashArray = '4 4';\n            }\n            else if (child.shape.relationship === 'Realization') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'white';\n                }\n                hasRelation = true;\n            }\n            if (hasRelation) {\n                node.style.strokeWidth = (child.style && child.style.strokeWidth) || 2;\n            }\n            break;\n    }\n}\n/* tslint:enable */\n/** @private */\nexport function findNearestPoint(reference, start, end) {\n    var shortestPoint;\n    var shortest = Point.findLength(start, reference);\n    var shortest1 = Point.findLength(end, reference);\n    if (shortest > shortest1) {\n        shortestPoint = end;\n    }\n    else {\n        shortestPoint = start;\n    }\n    var angleBWStAndEnd = Point.findAngle(start, end);\n    var angleBWStAndRef = Point.findAngle(shortestPoint, reference);\n    var r = Point.findLength(shortestPoint, reference);\n    var vaAngle = angleBWStAndRef + ((angleBWStAndEnd - angleBWStAndRef) * 2);\n    return {\n        x: (shortestPoint.x + r * Math.cos(vaAngle * Math.PI / 180)),\n        y: (shortestPoint.y + r * Math.sin(vaAngle * Math.PI / 180))\n    };\n}\nfunction pointsForBezier(connector) {\n    var points = [];\n    if (connector.type === 'Bezier') {\n        var k = 0;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var tolerance = 1.5;\n            var segment = connector.segments[i];\n            var pt = { x: 0, y: 0 };\n            var point1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n            var point2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n            var max = Number((connector.distance(point1, segment.points[0]) +\n                connector.distance(point2, point1) +\n                connector.distance(segment.points[1], point2)) / tolerance);\n            for (var j = 0; j < max - 1; j = j + 10) {\n                points[k] =\n                    bezierPoints(connector, segment.points[0], !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, segment.points[1], j, max);\n                k++;\n            }\n        }\n    }\n    return points;\n}\n/** @private */\nexport function isDiagramChild(htmlLayer) {\n    var element = htmlLayer.parentElement;\n    do {\n        if (hasClass(element, 'e-diagram')) {\n            return true;\n        }\n        element = element.parentElement;\n    } while (element);\n    return false;\n}\n/** @private */\nexport function groupHasType(node, type, nameTable) {\n    var contains = false;\n    if (node && node.children && node.children.length > 0) {\n        var child = void 0;\n        var i = 0;\n        for (; i < node.children.length; i++) {\n            child = nameTable[node.children[i]];\n            if (child.shape.type === type) {\n                return true;\n            }\n            return groupHasType(child, type, nameTable);\n        }\n    }\n    return contains;\n}\n/** @private */\nexport function updateDefaultValues(actualNode, plainValue, defaultValue, property, oldKey) {\n    if (defaultValue && ((actualNode instanceof Connector) || actualNode\n        && ((actualNode.shape && actualNode.shape.type !== 'SwimLane') || actualNode.shape === undefined))) {\n        var keyObj = void 0;\n        for (var _i = 0, _a = Object.keys(defaultValue); _i < _a.length; _i++) {\n            var key = _a[_i];\n            keyObj = defaultValue[key];\n            if (key === 'shape' && keyObj.type) {\n                actualNode.shape = { type: keyObj.type };\n            }\n            if (keyObj) {\n                if (Array.isArray(keyObj) && keyObj.length && keyObj.length > 0 && (oldKey !== 'annotations' && oldKey !== 'ports')) {\n                    if (actualNode[key].length > 0) {\n                        for (var i = 0; i <= actualNode[key].length; i++) {\n                            updateDefaultValues(actualNode[key], plainValue ? plainValue[key] : undefined, defaultValue[key], (key === 'annotations' || key === 'ports') ? actualNode : undefined, key);\n                        }\n                    }\n                    else {\n                        updateDefaultValues(actualNode[key], plainValue ? plainValue[key] : undefined, defaultValue[key], (key === 'annotations' || key === 'ports') ? actualNode : undefined, key);\n                    }\n                }\n                else if (keyObj instanceof Object && plainValue && (oldKey !== 'annotations' && oldKey !== 'ports')) {\n                    updateDefaultValues(actualNode[key], plainValue[key], defaultValue[key]);\n                }\n                else if ((oldKey !== 'annotations' && oldKey !== 'ports')\n                    && (plainValue && !plainValue[key]) || (!plainValue && actualNode\n                    && (actualNode[key] || actualNode[key] !== undefined))) {\n                    actualNode[key] = defaultValue[key];\n                }\n                else {\n                    var createObject = void 0;\n                    if (oldKey === 'annotations' || oldKey === 'ports') {\n                        if (oldKey === 'annotations') {\n                            if (actualNode[key]) {\n                                updateDefaultValues(actualNode[key], plainValue[key], defaultValue[key]);\n                            }\n                            if (!actualNode[key]) {\n                                if (getObjectType(property) === Connector) {\n                                    createObject = new PathAnnotation(property, 'annotations', defaultValue[key]);\n                                    property.annotations.push(createObject);\n                                }\n                                else {\n                                    createObject = new ShapeAnnotation(property, 'annotations', defaultValue[key]);\n                                    property.annotations.push(createObject);\n                                }\n                            }\n                        }\n                        else {\n                            if (actualNode[key]) {\n                                updateDefaultValues(actualNode[key], plainValue[key], defaultValue[key]);\n                            }\n                            else {\n                                createObject = new PointPort(property, 'ports', defaultValue[key]);\n                                property.ports.push(createObject);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n/* tslint:disable:no-string-literal */\n/** @private */\nexport function updateLayoutValue(actualNode, defaultValue, nodes, node) {\n    var keyObj;\n    if (defaultValue) {\n        for (var _i = 0, _a = Object.keys(defaultValue); _i < _a.length; _i++) {\n            var key = _a[_i];\n            keyObj = defaultValue[key];\n            if (key === 'getAssistantDetails') {\n                if (node.data['Role'] === defaultValue[key]['root']) {\n                    var assitants = defaultValue[key]['assistants'];\n                    for (var i = 0; i < assitants.length; i++) {\n                        for (var j = 0; j < nodes.length; j++) {\n                            if (nodes[j].data['Role'] === assitants[i]) {\n                                actualNode.assistants.push(nodes[j].id);\n                                actualNode.children.splice(0, 1);\n                            }\n                        }\n                    }\n                }\n            }\n            else if (keyObj) {\n                actualNode[key] = defaultValue[key];\n            }\n        }\n    }\n    if (!actualNode.hasSubTree && defaultValue.canEnableSubTree) {\n        actualNode.orientation = node.layoutInfo.orientation;\n        actualNode.type = node.layoutInfo.type;\n        if (node.layoutInfo.offset !== actualNode.offset && (node.layoutInfo.offset) !== undefined) {\n            actualNode.offset = node.layoutInfo.offset;\n        }\n    }\n    node.layoutInfo.hasSubTree = actualNode.hasSubTree;\n}\n/* tslint:enable:no-string-literal */\n/** @private */\nexport function isPointOverConnector(connector, reference) {\n    var intermediatePoints;\n    intermediatePoints = connector.type === 'Bezier' ? pointsForBezier(connector) :\n        connector.intermediatePoints;\n    for (var i = 0; i < intermediatePoints.length - 1; i++) {\n        var start = intermediatePoints[i];\n        var end = intermediatePoints[i + 1];\n        var rect = Rect.toBounds([start, end]);\n        rect.Inflate(connector.hitPadding);\n        if (rect.containsPoint(reference)) {\n            var intersectinPt = findNearestPoint(reference, start, end);\n            var segment1 = { x1: start.x, x2: end.x, y1: start.y, y2: end.y };\n            var segment2 = { x1: reference.x, x2: intersectinPt.x, y1: reference.y, y2: intersectinPt.y };\n            var intersectDetails = intersect3(segment1, segment2);\n            if (intersectDetails.enabled) {\n                var distance = Point.findLength(reference, intersectDetails.intersectPt);\n                if (Math.abs(distance) < connector.hitPadding) {\n                    return true;\n                }\n            }\n            else {\n                var rect_1 = Rect.toBounds([reference, reference]);\n                rect_1.Inflate(3);\n                if (rect_1.containsPoint(start) || rect_1.containsPoint(end)) {\n                    return true;\n                }\n            }\n            if (Point.equals(reference, intersectinPt)) {\n                return true;\n            }\n        }\n    }\n    if (connector.annotations.length > 0) {\n        var container = connector.wrapper.children;\n        for (var i = 3; i < container.length; i++) {\n            var textElement = container[i];\n            if (textElement.bounds.containsPoint(reference)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n/** @private */\nexport function intersect3(lineUtil1, lineUtil2) {\n    var point = { x: 0, y: 0 };\n    var l1 = lineUtil1;\n    var l2 = lineUtil2;\n    var d = (l2.y2 - l2.y1) * (l1.x2 - l1.x1) - (l2.x2 - l2.x1) * (l1.y2 - l1.y1);\n    var na = (l2.x2 - l2.x1) * (l1.y1 - l2.y1) - (l2.y2 - l2.y1) * (l1.x1 - l2.x1);\n    var nb = (l1.x2 - l1.x1) * (l1.y1 - l2.y1) - (l1.y2 - l1.y1) * (l1.x1 - l2.x1);\n    if (d === 0) {\n        return { enabled: false, intersectPt: point };\n    }\n    var ua = na / d;\n    var ub = nb / d;\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n        point.x = l1.x1 + (ua * (l1.x2 - l1.x1));\n        point.y = l1.y1 + (ua * (l1.y2 - l1.y1));\n        return { enabled: true, intersectPt: point };\n    }\n    return { enabled: false, intersectPt: point };\n}\n/** @private */\nexport function intersect2(start1, end1, start2, end2) {\n    var point = { x: 0, y: 0 };\n    var lineUtil1 = getLineSegment(start1.x, start1.y, end1.x, end1.y);\n    var lineUtil2 = getLineSegment(start2.x, start2.y, end2.x, end2.y);\n    var line3 = intersect3(lineUtil1, lineUtil2);\n    if (line3.enabled) {\n        return line3.intersectPt;\n    }\n    else {\n        return point;\n    }\n}\n/** @private */\nexport function getLineSegment(x1, y1, x2, y2) {\n    return { 'x1': Number(x1) || 0, 'y1': Number(y1) || 0, 'x2': Number(x2) || 0, 'y2': Number(y2) || 0 };\n}\n/** @private */\nexport function getPoints(element, corners, padding) {\n    var line = [];\n    padding = padding || 0;\n    var left = { x: corners.topLeft.x - padding, y: corners.topLeft.y };\n    var right = { x: corners.topRight.x + padding, y: corners.topRight.y };\n    var top = { x: corners.bottomRight.x, y: corners.bottomRight.y - padding };\n    var bottom = { x: corners.bottomLeft.x, y: corners.bottomLeft.y + padding };\n    line.push(left);\n    line.push(right);\n    line.push(top);\n    line.push(bottom);\n    return line;\n}\n/**\n * @private\n * sets the offset of the tooltip.\n * @param {Diagram} diagram\n * @param {PointModel} mousePosition\n * @param {NodeModel | ConnectorModel} node\n */\nexport function getTooltipOffset(diagram, mousePosition, node) {\n    var offset;\n    var inheritTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.InheritTooltip)\n        : (node.constraints & ConnectorConstraints.InheritTooltip);\n    var objectTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.Tooltip)\n        : (node.constraints & ConnectorConstraints.Tooltip);\n    var isMouseBased = ((!inheritTooltip && objectTooltip ? node.tooltip.relativeMode\n        : diagram.tooltip.relativeMode) === 'Mouse') ? true : false;\n    offset = tooltipOffset(node, mousePosition, diagram, isMouseBased);\n    var rulerSize = getRulerSize(diagram);\n    return { x: offset.x + rulerSize.width, y: offset.y + rulerSize.height };\n}\nfunction tooltipOffset(node, mousePosition, diagram, isMouseBased) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var element = document.getElementById(diagram.element.id);\n    var bounds = node.wrapper.bounds;\n    var rect = element.getBoundingClientRect();\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    switch (diagram.tooltipObject.position) {\n        case 'BottomCenter':\n            point = offsetPoint(mousePosition, bounds.bottomCenter, diagram, isMouseBased, (rect.width / 2), rect.height);\n            break;\n        case 'BottomLeft':\n        case 'LeftBottom':\n            point = offsetPoint(mousePosition, bounds.bottomLeft, diagram, isMouseBased, 0, rect.height);\n            break;\n        case 'BottomRight':\n        case 'RightBottom':\n            point = offsetPoint(mousePosition, bounds.bottomRight, diagram, isMouseBased, rect.width, rect.height);\n            break;\n        case 'LeftCenter':\n            point = offsetPoint(mousePosition, bounds.middleLeft, diagram, isMouseBased, 0, (rect.height / 2));\n            break;\n        case 'LeftTop':\n        case 'TopLeft':\n            point = offsetPoint(mousePosition, bounds.topLeft, diagram, isMouseBased, 0, 0);\n            break;\n        case 'RightCenter':\n            point = offsetPoint(mousePosition, bounds.middleRight, diagram, isMouseBased, rect.width, (rect.height / 2));\n            break;\n        case 'RightTop':\n        case 'TopRight':\n            point = offsetPoint(mousePosition, bounds.topRight, diagram, isMouseBased, rect.width, 0);\n            break;\n        case 'TopCenter':\n            point = offsetPoint(mousePosition, bounds.topCenter, diagram, isMouseBased, (rect.width / 2), 0);\n            break;\n    }\n    return point;\n}\nfunction offsetPoint(mousePosition, bound, diagram, isMouseBased, x, y) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    point.x = (isMouseBased ? mousePosition.x : bound.x) * scale + horizontalOffset - x;\n    point.y = (isMouseBased ? mousePosition.y : bound.y) * scale + verticalOffset - y;\n    return point;\n}\n/** @private */\nexport function sort(objects, option) {\n    var i = 0;\n    var j = 0;\n    var temp;\n    for (i = 0; i < objects.length; i++) {\n        var b = getBounds(objects[i].wrapper);\n        for (j = 0; j < objects.length; j++) {\n            var bounds = getBounds(objects[j].wrapper);\n            if (option === 'Top' || option === 'Bottom' || option === 'BottomToTop' || option === 'Middle') {\n                if (b.center.y > bounds.center.y) {\n                    temp = objects[i];\n                    objects[i] = objects[j];\n                    objects[j] = temp;\n                }\n            }\n            else {\n                if (b.center.x > bounds.center.x) {\n                    temp = objects[i];\n                    objects[i] = objects[j];\n                    objects[j] = temp;\n                }\n            }\n        }\n    }\n    return objects;\n}\n/** @private */\nexport function getAnnotationPosition(pts, annotation, bound) {\n    var angle;\n    var getloop;\n    var point;\n    getloop = getOffsetOfConnector(pts, annotation, bound);\n    angle = Point.findAngle(pts[getloop.index], pts[getloop.index + 1]);\n    var alignednumber = getAlignedPosition(annotation);\n    point = Point.transform(getloop.point, angle + 45, alignednumber);\n    getloop.point = point;\n    getloop.angle = angle;\n    return getloop;\n}\n/** @private */\nexport function getOffsetOfConnector(points, annotation, bounds) {\n    var length = 0;\n    var offset = annotation.offset;\n    var point;\n    var angle;\n    var offsetLength;\n    var lengths = [];\n    var prevLength;\n    var kCount;\n    for (var j = 0; j < points.length - 1; j++) {\n        length += Point.distancePoints(points[j], points[j + 1]);\n        lengths.push(length);\n    }\n    offsetLength = offset * length;\n    for (var k = 0; k < lengths.length; k++) {\n        if (lengths[k] >= offsetLength) {\n            angle = Point.findAngle(points[k], points[k + 1]);\n            point = Point.transform(points[k], angle, offsetLength - (prevLength || 0));\n            kCount = k;\n            return { point: point, index: kCount };\n        }\n        prevLength = lengths[k];\n    }\n    return { point: point, index: kCount };\n}\n/** @private */\nexport function getAlignedPosition(annotation) {\n    var cnst = annotation.content === undefined ? 10 : 0;\n    var state = 0;\n    switch (annotation.alignment) {\n        case 'Center':\n            state = 0;\n            break;\n        case 'Before':\n            state = -((0) / 2 + cnst);\n            break;\n        case 'After':\n            state = ((0) / 2 + cnst);\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function alignLabelOnSegments(obj, ang, pts) {\n    var angle = ang % 360;\n    ang %= 360;\n    var fourty5 = 45;\n    var one35 = 135;\n    var two25 = 225;\n    var three15 = 315;\n    var vAlign;\n    var hAlign;\n    switch (obj.alignment) {\n        case 'Before':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'bottom';\n                hAlign = (obj.offset === 0.5) ? 'center' : 'left';\n            }\n            break;\n        case 'After':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'bottom';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'left';\n            }\n            break;\n        case 'Center':\n            hAlign = 'center';\n            vAlign = 'center';\n            break;\n    }\n    if (obj.offset === 0 || obj.offset === 1) {\n        var direction = void 0;\n        direction = getBezierDirection(pts[0], pts[1]);\n        switch (direction) {\n            case 'left':\n                hAlign = obj.offset === 0 ? 'right' : 'left';\n                break;\n            case 'right':\n                hAlign = obj.offset === 0 ? 'left' : 'right';\n                break;\n            case 'bottom':\n                vAlign = obj.offset === 0 ? 'top' : 'bottom';\n                break;\n            case 'top':\n                vAlign = obj.offset === 0 ? 'bottom' : 'top';\n                break;\n        }\n    }\n    return { hAlign: hAlign, vAlign: vAlign };\n}\n/** @private */\nexport function getBezierDirection(src, tar) {\n    if (Math.abs(tar.x - src.x) > Math.abs(tar.y - src.y)) {\n        return src.x < tar.x ? 'right' : 'left';\n    }\n    else {\n        return src.y < tar.y ? 'bottom' : 'top';\n    }\n}\n/** @private */\nexport function removeChildNodes(node, diagram) {\n    if (node instanceof Node && node.children) {\n        for (var i = 0; i < node.children.length; i++) {\n            if (diagram.nameTable[node.children[i]].children) {\n                removeChildNodes(node, diagram);\n            }\n            diagram.removeFromAQuad(diagram.nameTable[node.children[i]]);\n            diagram.removeObjectsFromLayer(diagram.nameTable[node.children[i]]);\n            delete diagram.nameTable[node.children[i]];\n        }\n    }\n}\nfunction getChild(child, children) {\n    if (child && child.children && child.children.length > 0) {\n        for (var j = 0; j < child.children.length; j++) {\n            var subChild = child.children[j];\n            if (subChild instanceof Canvas) {\n                getChild(subChild, children);\n            }\n        }\n    }\n    if (children.indexOf(child.id) === -1) {\n        children.push(child.id);\n    }\n    return children;\n}\nfunction getSwimLaneChildren(nodes) {\n    var children = [];\n    var node;\n    var grid;\n    var childTable;\n    var child;\n    var gridChild = 'childTable';\n    for (var i = 0; i < nodes.length; i++) {\n        node = nodes[i];\n        if (node.shape.type === 'SwimLane') {\n            grid = node.wrapper.children[0];\n            childTable = grid[gridChild];\n            for (var _i = 0, _a = Object.keys(childTable); _i < _a.length; _i++) {\n                var key = _a[_i];\n                child = childTable[key];\n                children = getChild(child, children);\n            }\n        }\n    }\n    return children;\n}\nfunction removeUnnecessaryNodes(children, diagram) {\n    var nodes = diagram.nodes;\n    if (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            if (children.indexOf(nodes[i].id) !== -1) {\n                nodes.splice(i, 1);\n                i--;\n            }\n        }\n    }\n}\n/** @private */\nexport function serialize(model) {\n    var removeNodes = getSwimLaneChildren(model.nodes);\n    var clonedObject = cloneObject(model, model.getCustomProperty);\n    clonedObject.selectedItems.nodes = [];\n    clonedObject.selectedItems.connectors = [];\n    clonedObject.selectedItems.wrapper = null;\n    if (model.serializationSettings.preventDefaults) {\n        clonedObject = preventDefaults(clonedObject, model);\n    }\n    removeUnnecessaryNodes(removeNodes, clonedObject);\n    return JSON.stringify(clonedObject);\n}\nfunction preventDefaults(clonedObject, model, defaultObject, isNodeShape) {\n    defaultObject = getConstructor(model, defaultObject);\n    var properties = [];\n    properties = properties.concat(Object.keys(clonedObject));\n    for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n        var property = properties_1[_i];\n        if (model instanceof Node) {\n            isNodeShape = (property === 'shape') ? true : false;\n        }\n        if (clonedObject[property] instanceof Array) {\n            preventArrayDefaults(clonedObject, defaultObject, model, property);\n        }\n        else if (clonedObject[property] instanceof Object) {\n            if (property !== 'wrapper') {\n                clonedObject[property] = preventDefaults(clonedObject[property], model[property], defaultObject[property], isNodeShape);\n            }\n        }\n        else if ((defaultObject && clonedObject[property] === defaultObject[property]) || clonedObject[property] === undefined) {\n            if (!(isNodeShape && property === 'type') && !(model instanceof SwimLane && property === 'orientation')) {\n                delete clonedObject[property];\n            }\n        }\n        if (JSON.stringify(clonedObject[property]) === '[]' ||\n            JSON.stringify(clonedObject[property]) === '{}' ||\n            clonedObject[property] === undefined) {\n            delete clonedObject[property];\n        }\n    }\n    return clonedObject;\n}\nfunction preventArrayDefaults(clonedObject, defaultObject, model, property) {\n    if (clonedObject[property].length === 0) {\n        delete clonedObject[property];\n        // tslint:disable-next-line:no-any\n    }\n    else if (clonedObject[property].every(function (element) { return typeof element === 'number'; })) {\n        var i = void 0;\n        var isSameArray = true;\n        for (i = 0; i < clonedObject[property].length; i++) {\n            if (isSameArray && clonedObject[property][i] === defaultObject[property][i]) {\n                isSameArray = true;\n            }\n            else {\n                isSameArray = false;\n            }\n        }\n        if (isSameArray) {\n            delete clonedObject[property];\n        }\n    }\n    else {\n        var i = void 0;\n        if (property === 'layers') {\n            clonedObject[property].splice(0, 1);\n            if (clonedObject[property].length === 0) {\n                delete clonedObject[property];\n            }\n        }\n        if (clonedObject[property]) {\n            for (i = clonedObject[property].length - 1; i >= 0; i--) {\n                if (property === 'nodes' || property === 'connectors') {\n                    clonedObject[property][i].wrapper = null;\n                }\n                if (property !== 'dataManager') {\n                    clonedObject[property][i] = preventDefaults(clonedObject[property][i], model[property][i], (defaultObject[property] !== undefined ? defaultObject[property][i] : undefined));\n                    if (JSON.stringify(clonedObject[property][i]) === '[]' ||\n                        JSON.stringify(clonedObject[property][i]) === '{}' ||\n                        clonedObject[property][i] === undefined) {\n                        clonedObject[property].splice(i, 1);\n                    }\n                }\n            }\n        }\n    }\n}\n/* tslint:disable */\nfunction getConstructor(model, defaultObject) {\n    var obj = [];\n    var constructor;\n    var parent = new Diagram();\n    var getClassName = 'getClassName';\n    if (model[getClassName]) {\n        switch (model[getClassName]()) {\n            case 'Diagram':\n                constructor = new Diagram();\n                break;\n            case 'Node':\n                constructor = new Node(parent, '', obj);\n                break;\n            case 'Path':\n                constructor = new Path(parent, '', obj);\n                break;\n            case 'Native':\n                constructor = new Native(parent, '', obj);\n                break;\n            case 'Html':\n                constructor = new Html(parent, '', obj);\n                break;\n            case 'Image':\n                constructor = new Image(parent, '', obj);\n                break;\n            case 'Text':\n                constructor = new Text(parent, '', obj);\n                break;\n            case 'BasicShape':\n                constructor = new BasicShape(parent, '', obj);\n                break;\n            case 'FlowShape':\n                constructor = new FlowShape(parent, '', obj);\n                break;\n            case 'BpmnShape':\n                constructor = new BpmnShape(parent, '', obj);\n                break;\n            case 'UmlActivityShape':\n                constructor = new UmlActivityShape(parent, '', obj);\n                break;\n            case 'UmlClassifierShape':\n                constructor = new UmlClassifierShape(parent, '', obj);\n                break;\n            case 'SwimLane':\n                constructor = new SwimLane(parent, '', obj);\n                if (model.header) {\n                    constructor.header = new Header(parent, '', obj);\n                    constructor.header.style.fill = '';\n                }\n                break;\n            case 'ShapeAnnotation':\n                constructor = new ShapeAnnotation(parent, '', obj);\n                break;\n            case 'PointPort':\n                constructor = new PointPort(parent, '', obj);\n                break;\n            case 'BpmnGateway':\n                constructor = new BpmnGateway(parent, '', obj);\n                break;\n            case 'BpmnDataObject':\n                constructor = new BpmnDataObject(parent, '', obj);\n                break;\n            case 'BpmnEvent':\n                constructor = new BpmnEvent(parent, '', obj);\n                break;\n            case 'BpmnSubEvent':\n                constructor = new BpmnSubEvent(parent, '', obj);\n                break;\n            case 'BpmnActivity':\n                constructor = new BpmnActivity(parent, '', obj);\n                break;\n            case 'BpmnAnnotation':\n                constructor = new BpmnAnnotation(parent, '', obj);\n                break;\n            case 'MethodArguments':\n                constructor = new MethodArguments(parent, '', obj);\n                break;\n            case 'UmlClassAttribute':\n                constructor = new UmlClassAttribute(parent, '', obj);\n                break;\n            case 'UmlClassMethod':\n                constructor = new UmlClassMethod(parent, '', obj);\n                break;\n            case 'UmlClass':\n                constructor = new UmlClass(parent, '', obj);\n                break;\n            case 'UmlInterface':\n                constructor = new UmlInterface(parent, '', obj);\n                break;\n            case 'UmlEnumerationMember':\n                constructor = new UmlEnumerationMember(parent, '', obj);\n                break;\n            case 'UmlEnumeration':\n                constructor = new UmlEnumeration(parent, '', obj);\n                break;\n            case 'Lane':\n                constructor = new Lane(parent, '', obj);\n                break;\n            case 'Phase':\n                constructor = new Phase(parent, '', obj);\n                break;\n            case 'ChildContainer':\n                constructor = new ChildContainer();\n                break;\n            case 'Connector':\n                constructor = new Connector(parent, '', obj);\n                break;\n            case 'StraightSegment':\n                constructor = new StraightSegment(parent, '', obj);\n                break;\n            case 'BezierSegment':\n                constructor = new BezierSegment(parent, '', obj);\n                break;\n            case 'OrthogonalSegment':\n                constructor = new OrthogonalSegment(parent, '', obj);\n                break;\n            case 'PathAnnotation':\n                constructor = new PathAnnotation(parent, '', obj);\n                break;\n            case 'Stop':\n                constructor = new Stop(parent, '', obj);\n                break;\n            case 'Point':\n                if (!defaultObject) {\n                    constructor = new Point(parent, '', obj);\n                }\n                else {\n                    constructor = defaultObject;\n                }\n                break;\n            case 'UserHandle':\n                constructor = new UserHandle(parent, '', obj);\n                break;\n            case 'Command':\n                constructor = new Command(parent, '', obj);\n                break;\n        }\n    }\n    else {\n        constructor = defaultObject;\n    }\n    return constructor;\n}\n/* tslint:enable */\n/** @private */\nexport function deserialize(model, diagram) {\n    diagram.enableServerDataBinding(false);\n    diagram.clear();\n    diagram.protectPropertyChange(true);\n    var map = diagram.dataSourceSettings.doBinding;\n    var nodeTemp = diagram.setNodeTemplate;\n    var getDescription = diagram.getDescription;\n    var getCustomProperty = diagram.getCustomProperty;\n    var commands = {};\n    for (var _i = 0, _a = diagram.commandManager.commands; _i < _a.length; _i++) {\n        var command = _a[_i];\n        commands[command.name] = { execute: command.execute, canExecute: command.canExecute };\n    }\n    var arrangeTickHorizontal = diagram.rulerSettings.horizontalRuler.arrangeTick;\n    var arrangeTickVertical = diagram.rulerSettings.verticalRuler.arrangeTick;\n    var getLayoutInfo = diagram.layout.getLayoutInfo;\n    var getBranch = diagram.layout.getBranch;\n    var nodeDefaults = diagram.getNodeDefaults;\n    var connectorDefaults = diagram.getConnectorDefaults;\n    var dataObj = JSON.parse(model);\n    dataObj = upgrade(dataObj);\n    diagram.contextMenuSettings = dataObj.contextMenuSettings || {};\n    diagram.constraints = dataObj.constraints || DiagramConstraints.Default;\n    diagram.tool = dataObj.tool || DiagramTools.Default;\n    diagram.bridgeDirection = dataObj.bridgeDirection || 'Top';\n    diagram.pageSettings = dataObj.pageSettings || {};\n    diagram.drawingObject = dataObj.drawingObject || undefined;\n    diagram.tooltip = dataObj.tooltip || {};\n    diagram.addInfo = dataObj.addInfo || undefined;\n    diagram.getDescription = getDescription;\n    diagram.scrollSettings = dataObj.scrollSettings || {};\n    diagram.commandManager = dataObj.commandManager || {};\n    diagram.layers = dataObj.layers || [];\n    diagram.rulerSettings.horizontalRuler.arrangeTick = arrangeTickHorizontal;\n    diagram.rulerSettings.verticalRuler.arrangeTick = arrangeTickVertical;\n    for (var _b = 0, _c = diagram.commandManager.commands; _b < _c.length; _b++) {\n        var cmd = _c[_b];\n        if (commands[cmd.name]) {\n            cmd.execute = commands[cmd.name].execute;\n            cmd.canExecute = commands[cmd.name].canExecute;\n        }\n    }\n    diagram.backgroundColor = dataObj.backgroundColor || 'transparent';\n    diagram.basicElements = dataObj.basicElements || [];\n    diagram.connectors = dataObj.connectors || [];\n    diagram.dataSourceSettings = dataObj.dataSourceSettings || {};\n    diagram.dataSourceSettings.doBinding = map;\n    diagram.height = dataObj.height || '100%';\n    diagram.setNodeTemplate = nodeTemp;\n    diagram.getConnectorDefaults = connectorDefaults;\n    diagram.getNodeDefaults = nodeDefaults;\n    diagram.getCustomProperty = getCustomProperty;\n    diagram.mode = dataObj.mode || 'SVG';\n    if (dataObj.nodes.length) {\n        for (var i = 0; i < dataObj.nodes.length; i++) {\n            if (dataObj.nodes[i].shape && dataObj.nodes[i].shape.type === 'SwimLane') {\n                pasteSwimLane(dataObj.nodes[i], undefined, undefined, undefined, undefined, true);\n            }\n        }\n    }\n    diagram.nodes = dataObj.nodes || [];\n    diagram.rulerSettings = dataObj.rulerSettings || {};\n    diagram.snapSettings = dataObj.snapSettings || {};\n    diagram.width = dataObj.width || '100%';\n    diagram.layout = dataObj.layout || {};\n    diagram.layout.getLayoutInfo = getFunction(getLayoutInfo);\n    diagram.layout.getBranch = getFunction(getBranch);\n    diagram.diagramActions = 0;\n    diagram.isLoading = true;\n    diagram.protectPropertyChange(false);\n    var key = 'refresh';\n    var component;\n    for (var i = 0; i < diagram.views.length; i++) {\n        component = diagram.views[diagram.views[i]];\n        component.refresh();\n        if (component instanceof Diagram) {\n            diagram.element.classList.add('e-diagram');\n        }\n    }\n    if (dataObj.selectedItems) {\n        dataObj.selectedItems.nodes = [];\n        dataObj.selectedItems.connectors = [];\n    }\n    diagram.selectedItems = dataObj.selectedItems;\n    diagram.enableServerDataBinding(true);\n    return dataObj;\n}\n/** @private */\nexport function upgrade(dataObj) {\n    if (dataObj && (dataObj.version === undefined || (dataObj.version < 17.1))) {\n        var nodes = dataObj.nodes;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node && node.ports && node.ports.length > 0) {\n                for (var _a = 0, _b = node.ports; _a < _b.length; _a++) {\n                    var port = _b[_a];\n                    if (port && port.constraints && port.constraints === PortConstraints.None) {\n                        port.constraints = PortConstraints.Default;\n                    }\n                }\n            }\n        }\n    }\n    return dataObj;\n}\n/** @private */\nexport function updateStyle(changedObject, target) {\n    //since text style model is the super set of shape style model, we used text style model\n    var style = target.style;\n    var textElement = target;\n    target.canApplyStyle = true;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'fill':\n                style.fill = changedObject.fill;\n                if (style instanceof StrokeStyle) {\n                    /* tslint:disable:no-string-literal */\n                    style['fill'] = 'transparent';\n                }\n                break;\n            case 'textOverflow':\n                style.textOverflow = changedObject.textOverflow;\n                break;\n            case 'opacity':\n                style.opacity = changedObject.opacity;\n                break;\n            case 'strokeColor':\n                style.strokeColor = changedObject.strokeColor;\n                break;\n            case 'strokeDashArray':\n                style.strokeDashArray = changedObject.strokeDashArray;\n                break;\n            case 'strokeWidth':\n                style.strokeWidth = changedObject.strokeWidth;\n                break;\n            case 'bold':\n                style.bold = changedObject.bold;\n                break;\n            case 'color':\n                style.color = changedObject.color;\n                break;\n            case 'textWrapping':\n                style.textWrapping = changedObject.textWrapping;\n                break;\n            case 'fontFamily':\n                style.fontFamily = changedObject.fontFamily;\n                break;\n            case 'fontSize':\n                style.fontSize = changedObject.fontSize;\n                break;\n            case 'italic':\n                style.italic = changedObject.italic;\n                break;\n            case 'textAlign':\n                style.textAlign = changedObject.textAlign;\n                break;\n            case 'whiteSpace':\n                style.whiteSpace = changedObject.whiteSpace;\n                break;\n            case 'textDecoration':\n                style.textDecoration = changedObject.textDecoration;\n                break;\n            case 'gradient':\n                if (style.gradient) {\n                    updateGradient(changedObject.gradient, style.gradient);\n                    break;\n                }\n        }\n    }\n    if (target instanceof TextElement) {\n        textElement.refreshTextElement();\n    }\n}\nfunction updateGradient(changedGradient, targetGradient) {\n    for (var _i = 0, _a = Object.keys(changedGradient); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'type':\n                targetGradient.type = changedGradient.type;\n                break;\n            case 'x1':\n                targetGradient.x1 = changedGradient.x1;\n                break;\n            case 'x2':\n                targetGradient.x2 = changedGradient.x2;\n                break;\n            case 'y1':\n                targetGradient.y1 = changedGradient.y1;\n                break;\n            case 'y2':\n                targetGradient.y2 = changedGradient.y2;\n                break;\n            case 'cx':\n                targetGradient.cx = changedGradient.cx;\n                break;\n            case 'cy':\n                targetGradient.cy = changedGradient.cy;\n                break;\n            case 'fx':\n                targetGradient.fx = changedGradient.fx;\n                break;\n            case 'fy':\n                targetGradient.fy = changedGradient.fy;\n                break;\n            case 'r':\n                targetGradient.r = changedGradient.r;\n                break;\n            case 'stops':\n                targetGradient.stops = changedGradient.stops;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateHyperlink(changedObject, target, actualAnnotation) {\n    var textElement = target;\n    var hyperlink = textElement.hyperlink;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'color':\n                textElement.style.color = hyperlink.color = changedObject.color;\n                break;\n            case 'content':\n                textElement.content = hyperlink.content = changedObject.content || hyperlink.link;\n                break;\n            case 'link':\n                var labelStyle = actualAnnotation.style;\n                textElement.style.color = changedObject.link ? hyperlink.color : labelStyle.color;\n                textElement.style.textDecoration = changedObject.link ? hyperlink.textDecoration : actualAnnotation.style.textDecoration;\n                textElement.content = changedObject.link ? hyperlink.content || changedObject.link : actualAnnotation.content;\n                hyperlink.link = changedObject.link;\n                break;\n            case 'textDecoration':\n                textElement.style.textDecoration = hyperlink.textDecoration = changedObject.textDecoration;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateShapeContent(content, actualObject, diagram) {\n    content.width = actualObject.width;\n    content.height = actualObject.height;\n    content.minHeight = actualObject.minHeight;\n    content.maxHeight = actualObject.maxHeight;\n    content.minWidth = actualObject.minWidth;\n    content.maxWidth = actualObject.maxWidth;\n    content.horizontalAlignment = actualObject.wrapper.children[0].horizontalAlignment;\n    content.verticalAlignment = actualObject.wrapper.children[0].verticalAlignment;\n    content.relativeMode = actualObject.wrapper.children[0].relativeMode;\n    content.visible = actualObject.wrapper.children[0].visible;\n    if (actualObject.shape instanceof Text) {\n        content.margin = actualObject.shape.margin;\n    }\n    content.id = actualObject.wrapper.children[0].id;\n    content.style = actualObject.style;\n    var view;\n    for (var _i = 0, _a = diagram.views; _i < _a.length; _i++) {\n        var elementId = _a[_i];\n        removeElement(actualObject.id + '_groupElement', elementId);\n        removeElement(actualObject.id + '_content_groupElement', elementId);\n        removeElement(actualObject.id + '_html_element', elementId);\n    }\n    actualObject.wrapper.children.splice(0, 1);\n    actualObject.wrapper.children.splice(0, 0, content);\n}\n/** @private */\nexport function updateShape(node, actualObject, oldObject, diagram) {\n    var content = new DiagramElement();\n    var i;\n    var textStyle;\n    var nodeStyle;\n    switch (node.shape.type) {\n        case 'Path':\n            var pathContent = new PathElement();\n            pathContent.data = actualObject.shape.data;\n            content = pathContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Image':\n            var imageContent = new ImageElement();\n            imageContent.source = actualObject.shape.source;\n            imageContent.imageAlign = actualObject.shape.align;\n            imageContent.imageScale = actualObject.shape.scale;\n            content = imageContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Text':\n            //issue\n            var textContent = new TextElement();\n            //  (textContent as TextElement).content = (node.shape as TextModel).content;\n            content = textContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Basic':\n            var element = void 0;\n            element = ((isBlazor() ? actualObject.shape.basicShape === 'Rectangle' :\n                actualObject.shape.shape === 'Rectangle')) ? new DiagramElement() : new PathElement();\n            if ((!isBlazor() && actualObject.shape.shape === 'Polygon') ||\n                (isBlazor() && actualObject.shape.basicShape === 'Polygon')) {\n                element.data = getPolygonPath(actualObject.shape.points);\n            }\n            else {\n                element.data = getBasicShape((isBlazor() ? actualObject.shape.basicShape :\n                    actualObject.shape.shape));\n            }\n            updateShapeContent(content, actualObject, diagram);\n            if ((!isBlazor() && actualObject.shape.shape === 'Rectangle') ||\n                (isBlazor() && actualObject.shape.basicShape === 'Rectangle')) {\n                element.cornerRadius = actualObject.shape.cornerRadius;\n            }\n            content = element;\n            break;\n        case 'Flow':\n            var flowShapeElement = new PathElement();\n            var shape = (isBlazor()) ? actualObject.shape.flowShape : actualObject.shape.shape;\n            flowShapeElement.data = getFlowShape(shape);\n            content = flowShapeElement;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Native':\n            var nativeContent = new DiagramNativeElement(node.id, diagram.element.id);\n            nativeContent.content = actualObject.shape.content;\n            nativeContent.scale = actualObject.shape.scale;\n            content = nativeContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'HTML':\n            var htmlContent = new DiagramHtmlElement(actualObject.id, diagram.element.id);\n            htmlContent.content = actualObject.shape.content;\n            content = htmlContent;\n            updateShapeContent(content, actualObject, diagram);\n    }\n    if (node.shape.type === undefined || node.shape.type === oldObject.shape.type) {\n        updateContent(node, actualObject, diagram);\n    }\n    else {\n        content.width = actualObject.wrapper.children[0].width;\n        content.height = actualObject.wrapper.children[0].height;\n        if (actualObject.shape instanceof Text) {\n            content.margin = actualObject.shape.margin;\n        }\n        content.style = actualObject.style;\n        actualObject.wrapper.children[0] = content;\n    }\n}\n/** @private */\nexport function updateContent(newValues, actualObject, diagram) {\n    if (Object.keys(newValues.shape).length > 0) {\n        if (actualObject.shape.type === 'Path' && newValues.shape.data !== undefined) {\n            actualObject.wrapper.children[0].data = newValues.shape.data;\n        }\n        else if (actualObject.shape.type === 'Text' && newValues.shape.content !== undefined) {\n            actualObject.wrapper.children[0].content = newValues.shape.content;\n        }\n        else if (actualObject.shape.type === 'Image' && newValues.shape.source !== undefined) {\n            actualObject.wrapper.children[0].source = newValues.shape.source;\n        }\n        else if (actualObject.shape.type === 'Native') {\n            var nativeElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                nativeElement = getDiagramElement(actualObject.wrapper.children[0].id + '_native_element', diagram.views[i]);\n                if (newValues.shape.content !== undefined && nativeElement) {\n                    nativeElement.removeChild(nativeElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    nativeElement.appendChild(getContent(actualObject.wrapper.children[0], false));\n                }\n            }\n            actualObject.wrapper.children[0].scale = newValues.shape.scale ?\n                newValues.shape.scale : actualObject.wrapper.children[0].scale;\n        }\n        else if (actualObject.shape.type === 'HTML') {\n            var htmlElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                htmlElement = getDiagramElement(actualObject.wrapper.children[0].id + '_html_element', diagram.views[i]);\n                if (htmlElement) {\n                    htmlElement.removeChild(htmlElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    htmlElement.appendChild(getContent(actualObject.wrapper.children[0], true));\n                }\n            }\n        }\n        else if (actualObject.shape.type === 'Flow' && ((isBlazor() && newValues.shape.flowShape !== undefined) ||\n            newValues.shape.shape !== undefined)) {\n            actualObject.shape.shape = isBlazor() ? newValues.shape.flowShape :\n                newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var flowshapedata = getFlowShape(shapes.toString());\n            actualObject.wrapper.children[0].data = flowshapedata;\n        }\n        else if (actualObject.shape.type === 'UmlActivity' &&\n            ((isBlazor() && newValues.shape.umlActivityShape !== undefined) ||\n                (!isBlazor() && newValues.shape.shape !== undefined))) {\n            updateUmlActivityNode(actualObject, newValues);\n        }\n        else if (newValues.shape.cornerRadius !== undefined) {\n            actualObject.wrapper.children[0].cornerRadius = newValues.shape.cornerRadius;\n        }\n        else if (((isBlazor() && newValues.shape.basicShape !== undefined) ||\n            newValues.shape.shape !== undefined)) {\n            actualObject.shape.shape = isBlazor() ? newValues.shape.basicShape :\n                newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var basicShapeData = getBasicShape(shapes.toString());\n            actualObject.wrapper.children[0].data = basicShapeData;\n        }\n    }\n    actualObject.wrapper.children[0].canMeasurePath = true;\n}\n/** @private */\nexport function updateUmlActivityNode(actualObject, newValues) {\n    if (!isBlazor()) {\n        actualObject.shape.shape = newValues.shape.shape;\n    }\n    else {\n        actualObject.shape.umlActivityShape = newValues.shape.umlActivityShape;\n    }\n    var shapes = !isBlazor() ? actualObject.shape.shape :\n        actualObject.shape.umlActivityShape;\n    var umlActivityShapeData = getUMLActivityShape(shapes.toString());\n    if ((isBlazor() && actualObject.shape.umlActivityShape === 'InitialNode') ||\n        (!isBlazor() && actualObject.shape.shape === 'InitialNode')) {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if ((!isBlazor() && (actualObject.shape.shape === 'ForkNode' ||\n        actualObject.shape.shape === 'JoinNode')) ||\n        ((isBlazor() && (actualObject.shape.umlActivityShape === 'ForkNode' ||\n            actualObject.shape.umlActivityShape === 'JoinNode')))) {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if ((!isBlazor() && actualObject.shape.shape === 'FinalNode') ||\n        (isBlazor() && actualObject.shape.umlActivityShape === 'FinalNode')) {\n        if (actualObject instanceof Node) {\n            actualObject.wrapper = getUMLFinalNode(actualObject);\n        }\n        actualObject.wrapper.children[0].data = umlActivityShapeData;\n    }\n}\n/** @private */\nexport function getUMLFinalNode(node) {\n    var finalNodeShape = new Canvas();\n    finalNodeShape.style.fill = 'transparent';\n    //childNode0\n    var pathData = 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25' +\n        ' C 50 38.79 38.78 50 25 50';\n    var innerFinalNode = new PathElement();\n    innerFinalNode.data = pathData;\n    innerFinalNode.id = node.id + '_0_finalNode';\n    innerFinalNode.horizontalAlignment = 'Center';\n    innerFinalNode.verticalAlignment = 'Center';\n    innerFinalNode.relativeMode = 'Object';\n    innerFinalNode.style.strokeColor = node.style.strokeColor;\n    innerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //childNode1\n    var outerFinalNode = new PathElement();\n    outerFinalNode.data = pathData;\n    outerFinalNode.id = node.id + '_1_finalNode';\n    outerFinalNode.horizontalAlignment = 'Center';\n    outerFinalNode.verticalAlignment = 'Center';\n    outerFinalNode.relativeMode = 'Object';\n    outerFinalNode.style.fill = node.style.fill;\n    outerFinalNode.style.strokeColor = node.style.strokeColor;\n    outerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //append child and set style\n    finalNodeShape.children = [innerFinalNode, outerFinalNode];\n    finalNodeShape.children[0].width = node.width;\n    finalNodeShape.children[0].height = node.height;\n    finalNodeShape.children[1].height = node.height / 1.5;\n    finalNodeShape.children[1].width = node.width / 1.5;\n    finalNodeShape.style.strokeWidth = 0;\n    finalNodeShape.style.strokeColor = 'transparent';\n    return finalNodeShape;\n}\n/** @private */\nexport function getUMLActivityShapes(umlActivityShape, content, node) {\n    var shape = (isBlazor() ? node.shape.umlActivityShape : node.shape.shape);\n    var umlActivityShapeData = getUMLActivityShape(shape);\n    umlActivityShape.data = umlActivityShapeData;\n    content = umlActivityShape;\n    switch (shape) {\n        case 'StructuredNode':\n            if (node.annotations) {\n                for (var i = 0; i < node.annotations.length; i++) {\n                    node.annotations[i].content = '<<' + node.annotations[i].content + '>>';\n                }\n            }\n            content = umlActivityShape;\n            break;\n        case 'FinalNode':\n            content = getUMLFinalNode(node);\n            break;\n    }\n    return content;\n}\n/**   @private  */\nexport function removeGradient(svgId) {\n    removeElement(svgId + '_linear');\n    removeElement(svgId + '_radial');\n}\n/** @private */\nexport function removeItem(array, item) {\n    var index = array.indexOf(item);\n    if (index >= 0) {\n        array.splice(index, 1);\n    }\n}\n/** @private */\nexport function updateConnector(connector, points, diagramActions) {\n    var srcPoint;\n    var anglePoint;\n    var srcDecorator;\n    var tarDecorator;\n    var targetPoint;\n    connector.intermediatePoints = points;\n    connector.updateSegmentElement(connector, points, connector.wrapper.children[0], diagramActions);\n    srcPoint = connector.sourcePoint;\n    srcDecorator = connector.sourceDecorator;\n    if (connector.type === 'Bezier') {\n        var firstSegment = connector.segments[0];\n        var lastSegment = connector.segments[connector.segments.length - 1];\n        anglePoint = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n            !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n    }\n    else {\n        anglePoint = connector.intermediatePoints;\n    }\n    points = connector.clipDecorators(connector, points, diagramActions);\n    var element = connector.wrapper.children[0];\n    element.canMeasurePath = true;\n    element = connector.wrapper.children[1];\n    connector.updateDecoratorElement(element, points[0], anglePoint[1], srcDecorator);\n    targetPoint = connector.targetPoint;\n    tarDecorator = connector.targetDecorator;\n    element = connector.wrapper.children[2];\n    connector.updateDecoratorElement(element, points[points.length - 1], anglePoint[anglePoint.length - 2], tarDecorator);\n    connector.updateShapeElement(connector);\n}\n/** @private */\nexport function getUserHandlePosition(selectorItem, handle, transform) {\n    var wrapper = selectorItem.wrapper;\n    var positionPoints;\n    var bounds = wrapper.bounds;\n    var offset = handle.offset;\n    var size = handle.size / transform.scale;\n    var margin = handle.margin;\n    var point;\n    var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n    var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n    point = { x: 0, y: 0 };\n    if (selectorItem.nodes.length > 0) {\n        switch (handle.side) {\n            case 'Top':\n                point.x += left + bounds.width * offset;\n                point.y += top - size;\n                break;\n            case 'Bottom':\n                point.x += left + offset * bounds.width;\n                point.y += top + wrapper.actualSize.height + size;\n                break;\n            case 'Left':\n                point.x += left - size;\n                point.y += top + offset * bounds.height;\n                break;\n            case 'Right':\n                point.x += left + wrapper.actualSize.width + size;\n                point.y += top + offset * bounds.height;\n                break;\n        }\n        point.x += ((margin.left - margin.right) / transform.scale) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += ((margin.top - margin.bottom) / transform.scale) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n    }\n    else if (selectorItem.connectors.length > 0) {\n        var connector = selectorItem.connectors[0];\n        var annotation = { offset: offset };\n        var connectorOffset = getOffsetOfConnector(connector.intermediatePoints, annotation, bounds);\n        var index = connectorOffset.index;\n        point = connectorOffset.point;\n        var getPointloop = getAnnotationPosition(connector.intermediatePoints, annotation, bounds);\n        var points = connector.intermediatePoints;\n        var offsetLength = void 0;\n        var angle = getPointloop.angle;\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, -angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n        matrix = identityMatrix();\n        rotateMatrix(matrix, angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n    }\n    if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n        point = transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function canResizeCorner(selectorConstraints, action, thumbsConstraints, selectedItems) {\n    if (selectedItems.annotation) {\n        if (canResize(selectedItems.annotation)) {\n            return true;\n        }\n    }\n    else if ((SelectorConstraints[action] & selectorConstraints) && (ThumbsConstraints[action] & thumbsConstraints)) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function canShowCorner(selectorConstraints, action) {\n    if (SelectorConstraints[action] & selectorConstraints) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkPortRestriction(port, portVisibility) {\n    return port.visibility & portVisibility;\n}\n/** @private */\nexport function findAnnotation(node, id) {\n    var annotation;\n    if (node.shape.type === 'Text') {\n        annotation = (node.shape);\n    }\n    else {\n        var annotationId = id.split('_');\n        id = annotationId[annotationId.length - 1];\n        for (var i = 0; i < node.annotations.length; i++) {\n            if (id === node.annotations[i].id) {\n                annotation = node.annotations[i];\n            }\n        }\n    }\n    return annotation;\n}\n/** @private */\nexport function findPort(node, id) {\n    var port;\n    var portId = id.split('_');\n    id = portId[portId.length - 1];\n    if (node) {\n        node = node;\n        for (var i = 0; i < node.ports.length; i++) {\n            if (id === node.ports[i].id) {\n                return node.ports[i];\n            }\n        }\n    }\n    return port;\n}\n/** @private */\nexport function getInOutConnectPorts(node, isInConnect) {\n    var port = {};\n    var i = 0;\n    if (node.ports) {\n        var ports = node.ports;\n        for (i = 0; i < ports.length; i++) {\n            if (isInConnect) {\n                if ((ports[i].constraints & PortConstraints.InConnect)) {\n                    port = ports[i];\n                }\n            }\n            else {\n                if ((ports[i].constraints & PortConstraints.OutConnect)) {\n                    port = ports[i];\n                }\n            }\n        }\n    }\n    return port;\n}\n/** @private */\nexport function findObjectIndex(node, id, annotation) {\n    var index;\n    var collection = (annotation) ? node.annotations : node.ports;\n    for (var i = 0; i < collection.length; i++) {\n        if (collection[i].id === id) {\n            return (i).toString();\n        }\n    }\n    return null;\n}\n/** @private */\nexport function getObjectFromCollection(obj, id) {\n    var i;\n    for (i = 0; i < obj.length; i++) {\n        if (id === obj[i].id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function scaleElement(element, sw, sh, refObject) {\n    if (element.width !== undefined && element.height !== undefined) {\n        element.width *= sw;\n        element.height *= sh;\n    }\n    if (element instanceof Container) {\n        var matrix = identityMatrix();\n        var width = refObject.width || refObject.actualSize.width;\n        var height = refObject.height || refObject.actualSize.height;\n        if (width !== undefined && height !== undefined) {\n            var x = refObject.offsetX - width * refObject.pivot.x;\n            var y = refObject.offsetY - height * refObject.pivot.y;\n            var refPoint = {\n                x: x + width * refObject.pivot.x,\n                y: y + height * refObject.pivot.y\n            };\n            refPoint = rotatePoint(refObject.rotateAngle, refObject.offsetX, refObject.offsetY, refPoint);\n            rotateMatrix(matrix, -refObject.rotateAngle, refPoint.x, refPoint.y);\n            scaleMatrix(matrix, sw, sh, refPoint.x, refPoint.y);\n            rotateMatrix(matrix, refObject.rotateAngle, refPoint.x, refPoint.y);\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.width !== undefined && child.height !== undefined) {\n                    var newPosition = transformPointByMatrix(matrix, { x: child.offsetX, y: child.offsetY });\n                    child.offsetX = newPosition.x;\n                    child.offsetY = newPosition.y;\n                    scaleElement(child, sw, sh, refObject);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChild(obj, x, y, nameTable, drop, diagram) {\n    var child = obj.children;\n    var node;\n    for (var i = 0; i < child.length; i++) {\n        node = nameTable[child[i]];\n        if (node) {\n            if (node.children) {\n                arrangeChild(node, x, y, nameTable, drop, diagram);\n            }\n            else {\n                node.offsetX -= x;\n                node.offsetY -= y;\n                if (!drop) {\n                    var content = void 0;\n                    var container = void 0;\n                    nameTable[node.id] = node;\n                    container = node.initContainer();\n                    if (!container.children) {\n                        container.children = [];\n                    }\n                    content = node.init(diagram);\n                    container.children.push(content);\n                    container.measure(new Size(node.width, node.height));\n                    container.arrange(container.desiredSize);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function insertObject(obj, key, collection) {\n    if (collection.length === 0) {\n        collection.push(obj);\n    }\n    else if (collection.length === 1) {\n        if (collection[0][key] > obj[key]) {\n            collection.splice(0, 0, obj);\n        }\n        else {\n            collection.push(obj);\n        }\n    }\n    else if (collection.length > 1) {\n        var low = 0;\n        var high = collection.length - 1;\n        var mid = Math.floor((low + high) / 2);\n        while (mid !== low) {\n            if (collection[mid][key] < obj[key]) {\n                low = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n            else if (collection[mid][key] > obj[key]) {\n                high = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n        }\n        if (collection[high][key] < obj[key]) {\n            collection.push(obj);\n        }\n        else if (collection[low][key] > obj[key]) {\n            collection.splice(low, 0, obj);\n        }\n        else if ((collection[low][key] < obj[key]) && collection[high][key] > obj[key]) {\n            collection.splice(high, 0, obj);\n        }\n    }\n}\n/** @private */\nexport function getElement(element) {\n    var diagramElement = document.getElementById(element.diagramId);\n    var instance = 'ej2_instances';\n    var node = {};\n    var nodes = diagramElement[instance][0].nodes;\n    if (nodes === undefined) {\n        nodes = getPaletteSymbols(diagramElement[instance][0]);\n    }\n    var length = 'length';\n    for (var i = 0; nodes && i < nodes[length]; i++) {\n        if (nodes[i].id === element.nodeId) {\n            return getAnnotation(nodes[i], element);\n        }\n    }\n    var connectors = diagramElement[instance][0].connectors;\n    for (var i = 0; connectors && i < connectors[length]; i++) {\n        if (connectors[i].id === element.nodeId) {\n            return getAnnotation(connectors[i], element);\n        }\n    }\n    var enterObject = diagramElement[instance][0].enterObject;\n    if (enterObject && (enterObject['id'] === element.nodeId || enterObject['children'])) {\n        if (enterObject['children'] && groupHasType(enterObject, 'HTML', diagramElement[instance][0].enterTable)) {\n            return diagramElement[instance][0].enterTable[element.nodeId];\n        }\n        else {\n            return enterObject;\n        }\n    }\n    return null;\n}\nfunction getAnnotation(obj, element) {\n    var annotations = obj.annotations;\n    var length = 'length';\n    var j;\n    for (j = 0; annotations && j < annotations[length]; j++) {\n        if (element.annotationId && annotations[j].id === element.annotationId) {\n            return annotations[j];\n        }\n    }\n    return obj;\n}\n/** @private */\nfunction getPaletteSymbols(symbolPalette) {\n    var nodes = [];\n    for (var i = 0; i < symbolPalette.palettes.length; i++) {\n        var symbols = symbolPalette.palettes[i].symbols;\n        for (var j = 0; j < symbols.length; j++) {\n            if (symbols[j] instanceof Node) {\n                nodes.push(symbols[j]);\n            }\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function getCollectionChangeEventArguements(args1, obj, state, type) {\n    if (isBlazor()) {\n        args1 = {\n            cause: args1.cause, state: state, type: type, cancel: false,\n            element: getObjectType(obj) === Connector ?\n                { connector: cloneBlazorObject(obj) } : { node: cloneBlazorObject(obj) }\n        };\n    }\n    return args1;\n}\n/** @private */\nexport function getDropEventArguements(args, arg) {\n    if (isBlazor()) {\n        var connector = (getObjectType(args.source) === Connector);\n        var object = cloneBlazorObject(args.source);\n        var target = cloneBlazorObject(args.target);\n        arg = {\n            element: connector ? { connector: object } : { node: object },\n            target: connector ? { connector: target } : { node: target },\n            position: arg.position, cancel: arg.cancel\n        };\n    }\n    return arg;\n}\n/** @private */\nexport function getPoint(x, y, w, h, angle, offsetX, offsetY, cornerPoint) {\n    var pivot = { x: 0, y: 0 };\n    var trans = identityMatrix();\n    rotateMatrix(trans, angle, offsetX, offsetY);\n    switch (cornerPoint.x) {\n        case 0:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h }));\n                    break;\n            }\n            break;\n        case 0.5:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h }));\n                    break;\n            }\n            break;\n        case 1:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h }));\n                    break;\n            }\n            break;\n    }\n    return { x: pivot.x, y: pivot.y };\n}\n/**\n * Get the object as Node | Connector\n * @param {Object} obj\n */\nexport var getObjectType = function (obj) {\n    if (obj) {\n        if (obj.sourceID !== undefined || obj.sourcePoint !== undefined ||\n            obj.targetID !== undefined || obj.targetPoint !== undefined ||\n            obj.type !== undefined) {\n            obj = Connector;\n        }\n        else {\n            obj = Node;\n        }\n    }\n    return obj;\n};\n/** @private */\nexport var flipConnector = function (connector) {\n    if (!connector.sourceID && !connector.targetID) {\n        var source = { x: connector.sourcePoint.x, y: connector.sourcePoint.y };\n        var target = { x: connector.targetPoint.x, y: connector.targetPoint.y };\n        if (connector.flip === 'Horizontal') {\n            connector.sourcePoint.x = target.x;\n            connector.targetPoint.x = source.x;\n        }\n        else if (connector.flip === 'Vertical') {\n            connector.sourcePoint.y = target.y;\n            connector.targetPoint.y = source.y;\n        }\n        else if (connector.flip === 'Both') {\n            connector.sourcePoint = target;\n            connector.targetPoint = source;\n        }\n    }\n};\n/** @private */\nexport var updatePortEdges = function (portContent, flip, port) {\n    var offsetX = port.offset.x;\n    var offsetY = port.offset.y;\n    if (flip === 'Horizontal') {\n        offsetX = 1 - port.offset.x;\n        offsetY = port.offset.y;\n    }\n    else if (flip === 'Vertical') {\n        offsetX = port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    else if (flip === 'Both') {\n        offsetX = 1 - port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    portContent.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n    return portContent;\n};\n/** @private */\nexport var alignElement = function (element, offsetX, offsetY, diagram, flip) {\n    if (element.hasChildren()) {\n        for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            var childX = ((offsetX - child.offsetX) + offsetX);\n            var childY = ((offsetY - child.offsetY) + offsetY);\n            if (flip === 'Horizontal' || flip === 'Both') {\n                child.offsetX = childX;\n                child.flipOffset.x = childX - child.desiredSize.width / 2;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                child.offsetY = childY;\n                child.flipOffset.y = childY - child.desiredSize.height / 2;\n            }\n            if (child instanceof Canvas || child instanceof Container) {\n                alignElement(child, offsetX, offsetY, diagram, flip);\n            }\n            child.measure(new Size(child.bounds.width, child.bounds.height));\n            child.arrange(child.desiredSize);\n            var node = diagram.nameTable[child.id];\n            if (node) {\n                diagram.updateConnectorEdges(node);\n            }\n        }\n    }\n};\n/** @private */\nexport var cloneSelectedObjects = function (diagram) {\n    var nodes = diagram.selectedItems.nodes;\n    var connectors = diagram.selectedItems.connectors;\n    diagram.protectPropertyChange(true);\n    var isEnableServerDatabind = diagram.allowServerDataBinding;\n    diagram.allowServerDataBinding = false;\n    diagram.selectedItems.nodes = [];\n    diagram.selectedItems.connectors = [];\n    diagram.allowServerDataBinding = isEnableServerDatabind;\n    diagram.protectPropertyChange(false);\n    var clonedSelectedItems = cloneObject(diagram.selectedItems);\n    for (var i = 0; i < nodes.length; i++) {\n        diagram.selectedItems.nodes.push(diagram.nameTable[nodes[i].id]);\n    }\n    for (var i = 0; i < connectors.length; i++) {\n        diagram.selectedItems.connectors.push(diagram.nameTable[connectors[i].id]);\n    }\n    return clonedSelectedItems;\n};\n/** @private */\nexport var updatePathElement = function (anglePoints, connector) {\n    var pathElement = new PathElement();\n    var pathseqData;\n    for (var j = 0; j < anglePoints.length - 1; j++) {\n        pathseqData = findPath(anglePoints[j], anglePoints[j + 1]);\n        pathElement.data = pathseqData[0];\n        pathElement.id = connector.id + '_' + (connector.shape.sequence);\n        pathElement.offsetX = pathseqData[1].x;\n        pathElement.offsetY = pathseqData[1].y;\n        pathElement.rotateAngle = 45;\n        pathElement.transform = Transform.Self;\n    }\n    return pathElement;\n};\n/** @private */\nexport var checkPort = function (node, element) {\n    for (var i = 0; i < node.ports.length; i++) {\n        if (node.ports[i].id === element.id.split('_')[1]) {\n            return true;\n        }\n    }\n    return false;\n};\n/** @private */\nexport var findPath = function (sourcePoint, targetPoint) {\n    var beginningpoint = { x: sourcePoint.x, y: sourcePoint.y };\n    var distance = findDistance(sourcePoint, targetPoint);\n    distance = Math.min(30, distance / 2);\n    var angle = findAngle(sourcePoint, targetPoint);\n    var transferpt = Point.transform({ x: beginningpoint.x, y: beginningpoint.y }, angle, distance);\n    var startpoint = Point.transform({ x: transferpt.x, y: transferpt.y }, angle, -12);\n    var endpoint = Point.transform({ x: startpoint.x, y: startpoint.y }, angle, 12 * 2);\n    var path = 'M' + startpoint.x + ' ' + startpoint.y + ' L' + endpoint.x + ' ' + endpoint.y;\n    return [path, transferpt];\n};\n/** @private */\nexport var findDistance = function (point1, point2) {\n    return Math.sqrt(Math.pow(point2.x - point1.x, 2) + Math.pow(point2.y - point1.y, 2));\n};\n/** @private */\nexport function cloneBlazorObject(args) {\n    if (isBlazor()) {\n        args = cloneObject(args);\n    }\n    return args;\n}\n/** @private */\nexport function checkBrowserInfo() {\n    if ((navigator.platform.indexOf('Mac') >= 0 || navigator.platform.indexOf('iPad') >= 0\n        || navigator.platform.indexOf('iPhone') >= 0 || navigator.platform.indexOf('MacIntel') >= 0)\n        && (Browser.info.name === 'safari' || Browser.info.name === 'webkit')) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function canMeasureDecoratorPath(objects) {\n    if (objects.indexOf('shape') !== -1 || objects.indexOf('pathData') !== -1 ||\n        objects.indexOf('width') !== -1 || objects.indexOf('height') !== -1) {\n        return true;\n    }\n    return false;\n}\n","import { NodeConstraints, AnnotationConstraints } from '../enum/enum';\nimport { Node } from '../objects/node';\nimport { randomId } from './../utility/base-util';\n/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function getULMClassifierShapes(content, node, diagram) {\n    var classifier;\n    var textWrap = 'NoWrap';\n    if (node.shape.classifier === 'Class') {\n        classifier = node.shape.classShape;\n    }\n    else if (node.shape.classifier === 'Enumeration') {\n        classifier = node.shape.enumerationShape;\n    }\n    else if (node.shape.classifier === 'Interface') {\n        classifier = node.shape.interfaceShape;\n    }\n    var attributeText = '';\n    node.container = { type: 'Stack', orientation: 'Vertical' };\n    node.constraints = (NodeConstraints.Default | NodeConstraints.HideThumbs) &\n        ~(NodeConstraints.Rotate | NodeConstraints.Resize);\n    node.style = {\n        fill: node.style.fill, strokeColor: node.style.strokeColor,\n        strokeWidth: 1.5\n    };\n    node.children = [];\n    if (node.maxWidth) {\n        textWrap = 'Wrap';\n    }\n    var newObj = new Node(diagram, 'nodes', {\n        id: node.id + '_umlClass_header',\n        annotations: [\n            {\n                id: 'name', content: classifier.name,\n                offset: { x: 0.5, y: 0.65 }, margin: { left: 10, right: 10 },\n                style: {\n                    bold: true, fontSize: 14, color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }\n            }, {\n                content: '<<' + node.shape.classifier + '>>', margin: { left: 10, right: 10 },\n                id: 'class', style: {\n                    fontSize: classifier.style.fontSize,\n                    color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }, offset: { x: 0.5, y: 0.3 }, constraints: AnnotationConstraints.ReadOnly\n            },\n        ],\n        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n        verticalAlignment: 'Stretch',\n        horizontalAlignment: 'Stretch',\n        style: { fill: node.style.fill, strokeColor: (node.style.strokeColor === 'black') ? '#ffffff00' : node.style.strokeColor }\n    }, true);\n    diagram.initObject(newObj);\n    diagram.nodes.push(newObj);\n    node.children.push(newObj.id);\n    getClassNodes(node, diagram, classifier, textWrap);\n    getClassMembers(node, diagram, classifier, textWrap);\n    node.offsetX = node.offsetX;\n    node.offsetY = node.offsetY;\n    node.style.fill = node.style.fill;\n    node.borderColor = node.borderColor;\n    diagram.initObject(node);\n    return content;\n}\n/** @private */\nexport function getClassNodes(node, diagram, classifier, textWrap) {\n    if (node.shape.classifier === 'Enumeration') {\n        var member = classifier.members;\n        if (member && member.length) {\n            addSeparator(node, diagram);\n            var memberText = '';\n            for (var i = 0; i < member.length; i++) {\n                var members = member[i];\n                if (members.name !== '') {\n                    memberText += members.name;\n                }\n                if (i !== member.length) {\n                    var style = getStyle(node, members);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlMember',\n                        annotations: [\n                            {\n                                id: 'name', content: memberText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        style: {\n                            fill: node.style.fill, strokeColor: (node.style.strokeColor === 'black') ?\n                                '#ffffff00' : node.style.strokeColor, textWrapping: textWrap\n                        },\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    memberText = '';\n                    if (members.isSeparator && (i !== member.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n    else {\n        var attributes = classifier.attributes;\n        if (attributes.length) {\n            var attributeText = '';\n            addSeparator(node, diagram);\n            for (var i = 0; i < attributes.length; i++) {\n                var text = void 0;\n                var attribute = attributes[i];\n                if (attribute.scope && (attribute).scope === 'Public') {\n                    text = ' +';\n                }\n                else if (attribute.scope && attribute.scope === 'Private') {\n                    text = '-';\n                }\n                else if (attribute.scope && attribute.scope === 'Protected') {\n                    text = '#';\n                }\n                else {\n                    text = '~';\n                }\n                if (attribute.name !== '') {\n                    if (text) {\n                        attributeText += text + ' ' + attribute.name + ' ' + ': ' + attribute.type;\n                    }\n                }\n                if (i !== attributes.length) {\n                    var style = getStyle(node, attribute);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlProperty', style: { fill: node.style.fill,\n                            strokeColor: (node.style.strokeColor === 'black') ? '#ffffff00' : node.style.strokeColor },\n                        annotations: [\n                            {\n                                id: 'name', content: attributeText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    attributeText = '';\n                    if (attribute.isSeparator && (i !== attributes.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function getClassMembers(node, diagram, classifier, textWrap) {\n    if (classifier.methods && classifier.methods.length) {\n        var methods = classifier.methods;\n        addSeparator(node, diagram);\n        var argumentText = '';\n        var methodText = '';\n        var text = void 0;\n        for (var i = 0; i < methods.length; i++) {\n            var method = methods[i];\n            if (method.scope && method.scope === 'Public') {\n                text = ' +';\n            }\n            else if (method.scope && method.scope === 'Private') {\n                text = '-';\n            }\n            else if (method.scope && method.scope === 'Protected') {\n                text = '#';\n            }\n            else {\n                text = '~';\n            }\n            if (method.parameters) {\n                for (var j = 0; j < method.parameters.length; j++) {\n                    if (method.parameters[j].type) {\n                        argumentText += method.parameters[j].name + ':' + method.parameters[j].type;\n                    }\n                    else {\n                        argumentText += method.parameters[j].name;\n                    }\n                    if (j !== method.parameters.length - 1) {\n                        argumentText += ',';\n                    }\n                }\n            }\n            if (method.name !== '') {\n                if (text) {\n                    methodText += text + ' ' + method.name + '(' + argumentText + ')' + ' ' + ':' + ' ' + method.type;\n                }\n            }\n            if (i !== methods.length) {\n                var style = getStyle(node, method);\n                var temp = new Node(diagram, 'nodes', {\n                    id: randomId() + '_umlMethods', verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    annotations: [\n                        {\n                            id: 'name', content: methodText, offset: { x: 0, y: 0.5 },\n                            style: {\n                                bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                textWrapping: textWrap\n                            },\n                            margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                        }\n                    ],\n                    style: {\n                        fill: node.style.fill, strokeColor: (node.style.strokeColor === 'black') ?\n                            '#ffffff00' : node.style.strokeColor\n                    }, minHeight: 25,\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize)\n                }, true);\n                diagram.initObject(temp);\n                diagram.nodes.push(temp);\n                node.children.push(temp.id);\n                methodText = '';\n                if (method.isSeparator && (i !== methods.length - 1)) {\n                    addSeparator(node, diagram);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function addSeparator(stack, diagram) {\n    var lineObject = new Node(diagram, 'nodes', {\n        id: randomId() + '_path', height: 1, constraints: NodeConstraints.Default & ~(NodeConstraints.Select),\n        verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n        style: { strokeColor: (stack.style.strokeColor === 'black') ? '#ffffff00' : stack.style.strokeColor }\n    }, true);\n    diagram.initObject(lineObject);\n    diagram.nodes.push(lineObject);\n    stack.children.push(lineObject.id);\n}\n/** @private */\nexport function getStyle(stack, node) {\n    var newStyle = {};\n    var style = node.style;\n    newStyle.fill = (style.fill !== 'transparent') ? style.fill : stack.style.fill;\n    newStyle.color = style.color;\n    newStyle.fontSize = (style.fontSize !== 12) ? style.fontSize : stack.style.fontSize;\n    newStyle.strokeColor = (style.strokeColor !== 'black') ? style.strokeColor : stack.style.strokeColor;\n    newStyle.strokeWidth = (style.strokeWidth !== 1) ? style.strokeWidth : stack.style.strokeWidth;\n    return newStyle;\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { processPathData, splitArrayCollection, transformPath } from './path-util';\nimport { whiteSpaceToString, wordBreakToString, textAlignToString, bBoxText, cloneObject } from './base-util';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { compile, createElement, Browser, isBlazor } from '@syncfusion/ej2-base';\nimport { Node } from '../objects/node';\nimport { getElement, cloneBlazorObject } from './diagram-util';\n/**\n * Defines the functionalities that need to access DOM\n */\n/** @private */\nexport function removeElementsByClass(className, id) {\n    var elements;\n    if (id) {\n        elements = document.getElementById(id).getElementsByClassName(className);\n    }\n    else {\n        elements = document.getElementsByClassName(className);\n    }\n    while (elements.length > 0) {\n        elements[0].parentNode.removeChild(elements[0]);\n    }\n}\n/** @private */\nexport function findSegmentPoints(element) {\n    var pts = [];\n    var sample;\n    var sampleLength;\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var pathNode = getChildNode(svg)[0];\n    pathNode.setAttributeNS(null, 'd', element.data);\n    var pathBounds = element.absoluteBounds; // || pathNode.getBBox();\n    var pathData = updatePath(element, pathBounds, element);\n    pathNode.setAttributeNS(null, 'd', pathData);\n    var pathLength = pathNode.getTotalLength();\n    for (sampleLength = 0; sampleLength <= pathLength; sampleLength += 10) {\n        sample = pathNode.getPointAtLength(sampleLength);\n        pts.push({ x: sample.x, y: sample.y });\n    }\n    window[measureElement].style.visibility = 'hidden';\n    return pts;\n}\nexport function getChildNode(node) {\n    var child;\n    var collection = [];\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        for (var i = 0; i < node.childNodes.length; i++) {\n            child = node.childNodes[i];\n            if (child.nodeType === 1) {\n                collection.push(child);\n            }\n        }\n    }\n    else {\n        collection = node.children;\n    }\n    return collection;\n}\nexport function translatePoints(element, points) {\n    var translatedPts = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        var pt1 = {\n            x: element.offsetX - element.actualSize.width * element.pivot.x + point.x,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + point.y\n        };\n        var matrix = void 0;\n        var angle = element.rotateAngle + element.parentTransform;\n        if (angle) {\n            matrix = identityMatrix();\n            rotateMatrix(matrix, angle, element.offsetX, element.offsetY);\n        }\n        if (matrix) {\n            pt1 = transformPointByMatrix(matrix, pt1);\n        }\n        translatedPts.push(pt1);\n    }\n    return translatedPts;\n}\n/** @private */\nexport function measurePath(data) {\n    if (data) {\n        var measureElement = 'measureElement';\n        window[measureElement].style.visibility = 'visible';\n        var svg = window[measureElement].children[2];\n        var element = getChildNode(svg)[0];\n        element.setAttribute('d', data);\n        var bounds = element.getBBox();\n        var svgBounds = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        window[measureElement].style.visibility = 'hidden';\n        return svgBounds;\n    }\n    return new Rect(0, 0, 0, 0);\n}\nfunction getTextOptions(element, maxWidth) {\n    var options = {\n        fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n        pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n        dashArray: element.style.strokeDashArray, opacity: element.style.opacity, shadow: element.shadow,\n        gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        width: maxWidth || element.actualSize.width, height: element.actualSize.height,\n        x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n        y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5\n    };\n    options.fontSize = element.style.fontSize;\n    options.fontFamily = element.style.fontFamily;\n    options.textOverflow = element.style.textOverflow;\n    options.textDecoration = element.style.textDecoration;\n    options.doWrap = element.doWrap;\n    options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n    options.content = element.content;\n    options.textWrapping = element.style.textWrapping;\n    options.breakWord = wordBreakToString(element.style.textWrapping);\n    options.textAlign = textAlignToString(element.style.textAlign);\n    options.color = element.style.color;\n    options.italic = element.style.italic;\n    options.bold = element.style.bold;\n    options.dashArray = '';\n    options.strokeWidth = 0;\n    options.fill = '';\n    return options;\n}\nfunction wrapSvgText(text, textValue, laneWidth) {\n    var childNodes = [];\n    var k = 0;\n    var txtValue;\n    var bounds1;\n    var content = textValue || text.content;\n    if (text.whiteSpace !== 'nowrap' && text.whiteSpace !== 'pre') {\n        if (text.breakWord === 'breakall') {\n            txtValue = '';\n            txtValue += content[0];\n            for (k = 0; k < content.length; k++) {\n                bounds1 = bBoxText(txtValue, text);\n                if (bounds1 >= text.width && txtValue.length > 0) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: bounds1 };\n                    txtValue = '';\n                }\n                else {\n                    txtValue = txtValue + (content[k + 1] || '');\n                    if (txtValue.indexOf('\\n') > -1) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: bBoxText(txtValue, text) };\n                        txtValue = '';\n                    }\n                    var width = bBoxText(txtValue, text);\n                    if (Math.ceil(width) + 2 >= text.width && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                    if (k === content.length - 1 && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                }\n            }\n        }\n        else {\n            childNodes = wordWrapping(text, textValue, laneWidth);\n        }\n    }\n    else {\n        childNodes[childNodes.length] = { text: content, x: 0, dy: 0, width: bBoxText(content, text) };\n    }\n    return childNodes;\n}\nfunction wordWrapping(text, textValue, laneWidth) {\n    var childNodes = [];\n    var txtValue = '';\n    var j = 0;\n    var i = 0;\n    var wrap = text.whiteSpace !== 'nowrap' ? true : false;\n    var content = textValue || text.content;\n    var eachLine = content.split('\\n');\n    var txt;\n    var words;\n    var newText;\n    var existingWidth;\n    var existingText;\n    for (j = 0; j < eachLine.length; j++) {\n        txt = '';\n        words = text.textWrapping !== 'NoWrap' ? eachLine[j].split(' ') : eachLine;\n        for (i = 0; i < words.length; i++) {\n            txtValue += (((i !== 0 || words.length === 1) && wrap && txtValue.length > 0) ? ' ' : '') + words[i];\n            newText = txtValue + ' ' + (words[i + 1] || '');\n            var width = bBoxText(newText, text);\n            if (Math.floor(width) > (laneWidth || text.width) - 2 && txtValue.length > 0) {\n                childNodes[childNodes.length] = {\n                    text: txtValue, x: 0, dy: 0,\n                    width: newText === txtValue ? width : (txtValue === existingText) ? existingWidth : bBoxText(txtValue, text)\n                };\n                txtValue = '';\n            }\n            else {\n                if (i === words.length - 1) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                    txtValue = '';\n                }\n            }\n            existingText = newText;\n            existingWidth = width;\n        }\n    }\n    return childNodes;\n}\nfunction wrapSvgTextAlign(text, childNodes) {\n    var wrapBounds = { x: 0, width: 0 };\n    var k = 0;\n    var txtWidth;\n    var width;\n    for (k = 0; k < childNodes.length; k++) {\n        txtWidth = childNodes[k].width;\n        width = txtWidth;\n        if (text.textAlign === 'left') {\n            txtWidth = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (txtWidth > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                txtWidth = 0;\n            }\n            else {\n                txtWidth = -txtWidth / 2;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            txtWidth = -txtWidth;\n        }\n        else {\n            txtWidth = childNodes.length > 1 ? 0 : -txtWidth / 2;\n        }\n        childNodes[k].dy = text.fontSize * 1.2;\n        childNodes[k].x = txtWidth;\n        if (!wrapBounds) {\n            wrapBounds = {\n                x: txtWidth,\n                width: width\n            };\n        }\n        else {\n            wrapBounds.x = Math.min(wrapBounds.x, txtWidth);\n            wrapBounds.width = Math.max(wrapBounds.width, width);\n        }\n    }\n    return wrapBounds;\n}\nexport function measureHtmlText(style, content, width, height, maxWidth) {\n    var bounds = new Size();\n    var text = createHtmlElement('span', { 'style': 'display:inline-block; line-height: normal' });\n    if (style.bold) {\n        text.style.fontWeight = 'bold';\n    }\n    if (style.italic) {\n        text.style.fontStyle = 'italic';\n    }\n    if (width !== undefined) {\n        text.style.width = width.toString() + 'px';\n    }\n    if (height !== undefined) {\n        text.style.height = height.toString() + 'px';\n    }\n    if (maxWidth !== undefined) {\n        text.style.maxWidth = maxWidth.toString() + 'px';\n    }\n    text.style.fontFamily = style.fontFamily;\n    text.style.fontSize = style.fontSize + 'px';\n    text.style.color = style.color;\n    text.textContent = content;\n    text.style.whiteSpace = whiteSpaceToString(style.whiteSpace, style.textWrapping);\n    if (maxWidth !== undefined) {\n        text.style.wordBreak = 'break-word';\n    }\n    else {\n        text.style.wordBreak = wordBreakToString(style.textWrapping);\n    }\n    document.body.appendChild(text);\n    bounds.width = text.offsetWidth;\n    bounds.height = text.offsetHeight;\n    document.body.removeChild(text);\n    return bounds;\n}\n/** @private */\nexport function measureText(text, style, content, maxWidth, textValue) {\n    var bounds = new Size(0, 0);\n    var childNodes;\n    var wrapBounds;\n    var options = getTextOptions(text, maxWidth);\n    text.childNodes = childNodes = wrapSvgText(options, textValue, text.isLaneOrientation ? maxWidth : undefined);\n    text.wrapBounds = wrapBounds = wrapSvgTextAlign(options, childNodes);\n    bounds.width = wrapBounds.width;\n    if (text.wrapBounds.width >= maxWidth && options.textOverflow !== 'Wrap') {\n        bounds.width = maxWidth;\n    }\n    bounds.height = childNodes.length * text.style.fontSize * 1.2;\n    return bounds;\n}\n/** @private */\nexport function measureImage(source, contentSize, id, callback) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var imageElement = window[measureElement].children[1];\n    imageElement.setAttribute('src', source);\n    var bounds = imageElement.getBoundingClientRect();\n    var width = bounds.width;\n    var height = bounds.height;\n    contentSize = new Size(width, height);\n    window[measureElement].style.visibility = 'hidden';\n    var element = document.createElement('img');\n    element.setAttribute('src', source);\n    setAttributeHtml(element, { id: id + 'sf-imageNode', style: 'display: none;' });\n    document.body.appendChild(element);\n    // tslint:disable-next-line:no-any\n    element.onload = function (event) {\n        var loadedImage = event.currentTarget;\n        if (callback) {\n            callback(id, { width: loadedImage.width, height: loadedImage.height });\n        }\n    };\n    return contentSize;\n}\n/** @private */\nexport function measureNativeContent(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var bounds = nativeContent.getBoundingClientRect();\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    var rect = bounds;\n    rect.x = bounds.left - svgBounds.left;\n    rect.y = bounds.top - svgBounds.top;\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return rect;\n}\n/**\n * @private\n */\nexport function measureNativeSvg(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return svgBounds;\n}\n/** @private */\nexport function updatePath(element, bounds, child, options) {\n    var initX = 0;\n    var initY = 0;\n    var scaleX = 0;\n    var scaleY = 0;\n    var isScale = false;\n    var bBox;\n    var isInit;\n    var isResizing = true;\n    var newPathString = '';\n    var arrayCollection = [];\n    bBox = bounds;\n    if (initX !== bBox.x || initY !== bBox.y) {\n        scaleX = initX - Number(bBox.x);\n        scaleY = initY - Number(bBox.y);\n    }\n    if (element.actualSize.width !== bBox.width || element.actualSize.height !== bBox.height || options) {\n        scaleX = (options && options.width || element.actualSize.width) / Number(bBox.width ? bBox.width : 1);\n        scaleY = (options && options.height || element.actualSize.height) / Number(bBox.height ? bBox.height : 1);\n        isScale = true;\n    }\n    arrayCollection = processPathData(element.data);\n    arrayCollection = splitArrayCollection(arrayCollection);\n    newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bBox.x, bBox.y, initX, initY);\n    isScale = false;\n    return newPathString;\n}\n/** @private */\nexport function getDiagramLayerSvg(diagramId) {\n    var diagramLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-diagram-layer');\n    diagramLayerSvg = elementcoll[0];\n    return diagramLayerSvg;\n}\n/** @private */\nexport function getDiagramElement(elementId, contentId) {\n    var diagramElement;\n    var element;\n    if (contentId) {\n        element = document.getElementById(contentId);\n    }\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        diagramElement = (element) ? element.querySelector('#' + elementId) : document.getElementById(elementId);\n    }\n    else {\n        diagramElement = (element) ? element.querySelector('#' + CSS.escape(elementId)) : document.getElementById(elementId);\n    }\n    return diagramElement;\n}\n/** @private */\nexport function getDomIndex(viewId, elementId, layer) {\n    var index = undefined;\n    var parentElement;\n    var postId = '';\n    if (layer === 'native') {\n        parentElement = getNativeLayer(viewId);\n        postId = '_content_groupElement';\n    }\n    else if (layer === 'html') {\n        parentElement = getHTMLLayer(viewId).childNodes[0];\n        postId = '_html_element';\n    }\n    else {\n        parentElement = getDiagramLayer(viewId);\n        postId = '_groupElement';\n    }\n    var childElement;\n    for (var i = 0; parentElement.childNodes && i < parentElement.childNodes.length; i++) {\n        childElement = parentElement.childNodes[i];\n        if (childElement && childElement.id === elementId + postId) {\n            index = i;\n            break;\n        }\n    }\n    return index;\n}\n/**\n * @private\n */\nexport function getAdornerLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-adorner-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getSelectorElement(diagramId) {\n    var adornerLayer = null;\n    var adornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = adornerSvg.getElementById(diagramId + '_SelectorElement');\n    return adornerLayer;\n}\n/**\n * @private\n */\nexport function getAdornerLayer(diagramId) {\n    var adornerLayer = null;\n    var diagramAdornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = diagramAdornerSvg.getElementById(diagramId + '_diagramAdorner');\n    return adornerLayer;\n}\n/** @private */\nexport function getDiagramLayer(diagramId) {\n    var diagramLayer;\n    var diagramLayerSvg = getDiagramLayerSvg(diagramId);\n    diagramLayer = diagramLayerSvg.getElementById(diagramId + '_diagramLayer');\n    return diagramLayer;\n}\n/** @private */\nexport function getPortLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-ports-expand-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getNativeLayerSvg(diagramId) {\n    var nativeLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-native-layer');\n    nativeLayerSvg = elementcoll[0];\n    return nativeLayerSvg;\n}\n/** @private */\nexport function getGridLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-grid-layer');\n    gridLayerSvg = elementcoll[0];\n    return gridLayerSvg;\n}\n/** @private */\nexport function getBackgroundLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    return elementcoll[0].parentNode;\n}\n/** @private */\nexport function getBackgroundImageLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-image-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getBackgroundLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getGridLayer(diagramId) {\n    var domTable = 'domTable';\n    var expandCollapse = null;\n    if (!window[domTable][diagramId + '_gridline']) {\n        var diagramGridSvg = getGridLayerSvg(diagramId);\n        expandCollapse = diagramGridSvg.getElementById(diagramId + '_gridline');\n        window[domTable][diagramId + '_gridline'] = expandCollapse;\n    }\n    else {\n        expandCollapse = window[domTable][diagramId + '_gridline'];\n    }\n    return expandCollapse;\n}\n// /** @private */\n// export function getExpandCollapseLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramExpander') as SVGElement;\n//     return expandCollapse;\n// }\n// /** @private */\n// export function getPortsLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramPorts') as SVGElement;\n//     return expandCollapse;\n// }\n/** @private */\nexport function getNativeLayer(diagramId) {\n    var nativeLayer = null;\n    var nativeLayerSvg = getNativeLayerSvg(diagramId);\n    nativeLayer = nativeLayerSvg.getElementById(diagramId + '_nativeLayer');\n    return nativeLayer;\n}\n/** @private */\nexport function getHTMLLayer(diagramId) {\n    var htmlLayer = null;\n    var domTable = 'domTable';\n    if (!window[domTable][diagramId + 'html_layer']) {\n        var element = getDiagramElement(diagramId);\n        var elementcoll = void 0;\n        elementcoll = element.getElementsByClassName('e-html-layer');\n        htmlLayer = elementcoll[0];\n        window[domTable][diagramId + 'html_layer'] = htmlLayer;\n    }\n    else {\n        htmlLayer = window[domTable][diagramId + 'html_layer'];\n    }\n    return htmlLayer;\n}\n/** @private */\nexport function createHtmlElement(elementType, attribute) {\n    var element = createElement(elementType);\n    setAttributeHtml(element, attribute);\n    return element;\n}\n/** @private */\nexport function createSvgElement(elementType, attribute) {\n    var element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\n    setAttributeSvg(element, attribute);\n    return element;\n}\n/** @hidden */\nexport function parentsUntil(elem, selector, isID) {\n    var parent = elem;\n    while (parent) {\n        if (isID ? parent.id === selector : hasClass(parent, selector)) {\n            break;\n        }\n        parent = parent.parentNode;\n    }\n    return parent;\n}\nexport function hasClass(element, className) {\n    var eClassName = (typeof element.className === 'object') ? element.className.animVal : element.className;\n    return ((' ' + eClassName + ' ').indexOf(' ' + className + ' ') > -1) ? true : false;\n}\n/** @hidden */\nexport function getScrollerWidth() {\n    var outer = createHtmlElement('div', { 'style': 'visibility:hidden; width: 100px' });\n    document.body.appendChild(outer);\n    var widthNoScroll = outer.getBoundingClientRect().width;\n    // force scrollbars\n    outer.style.overflow = 'scroll';\n    // add innerdiv\n    var inner = createHtmlElement('div', { 'style': 'width:100%' });\n    outer.appendChild(inner);\n    var widthWithScroll = inner.getBoundingClientRect().width;\n    // remove divs\n    outer.parentNode.removeChild(outer);\n    return widthNoScroll - widthWithScroll;\n}\n/**\n * Handles the touch pointer.\n * @return {boolean}\n * @private\n */\nexport function addTouchPointer(touchList, e, touches) {\n    touchList = [];\n    for (var i = 0, length_1 = touches.length; i < length_1; i++) {\n        touchList.push({ pageX: touches[i].clientX, pageY: touches[i].clientY, pointerId: null });\n    }\n    return touchList;\n}\n/**\n * removes the element from dom\n * @param {string} elementId\n */\nexport function removeElement(elementId, contentId) {\n    var div = getDiagramElement(elementId, contentId);\n    if (div) {\n        div.parentNode.removeChild(div);\n    }\n}\nexport function getContent(element, isHtml, nodeObject) {\n    var div;\n    if (isHtml) {\n        var attr = { 'style': 'height: 100%; width: 100%' };\n        div = createHtmlElement('div', attr);\n    }\n    else {\n        div = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n    }\n    var node = getElement(element);\n    var content = '';\n    var sentNode = {};\n    var isSvg = false;\n    if (node instanceof Node) {\n        sentNode = node;\n        if (node.shape.type === 'Native') {\n            isSvg = true;\n        }\n        var blazor = 'Blazor';\n        if (isBlazor()) {\n            content = 'diagramsf_node_template';\n            sentNode = cloneBlazorObject(node);\n        }\n    }\n    else {\n        sentNode = node;\n        //new\n        if (isBlazor()) {\n            sentNode = cloneBlazorObject(node);\n            content = 'diagramsf_annotation_template';\n        }\n    }\n    var item;\n    if (typeof element.content === 'string' && (!element.isTemplate || isBlazor())) {\n        var template = document.getElementById(element.content);\n        if (template) {\n            div.appendChild(template);\n        }\n        else {\n            var compiledString = void 0;\n            compiledString = compile(element.content);\n            for (var _i = 0, _a = compiledString(sentNode, null, null, content); _i < _a.length; _i++) {\n                item = _a[_i];\n                div.appendChild(item);\n            }\n            //new\n            // for (item of compiledString(sentNode, null, null, content, undefined, undefined, isSvg)) {\n            //     div.appendChild(item);\n            // }\n        }\n    }\n    else if (element.isTemplate) {\n        var compiledString = void 0;\n        compiledString = element.getNodeTemplate()(cloneObject(nodeObject), undefined, 'template', undefined, undefined, false);\n        for (var i = 0; i < compiledString.length; i++) {\n            div.appendChild(compiledString[i]);\n        }\n    }\n    else {\n        div.appendChild(element.content);\n    }\n    return element.isTemplate ?\n        div : (isHtml ? div.cloneNode(true) : div.cloneNode(true));\n}\n/** @private */\nexport function setAttributeSvg(svg, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        if (keys[i] !== 'style') {\n            svg.setAttribute(keys[i], attributes[keys[i]]);\n        }\n        else {\n            applyStyleAgainstCsp(svg, attributes[keys[i]]);\n        }\n    }\n}\n/** @private */\nexport function applyStyleAgainstCsp(svg, attributes) {\n    var keys = attributes.split(';');\n    for (var i = 0; i < keys.length; i++) {\n        var attribute = keys[i].split(':');\n        if (attribute.length === 2) {\n            svg.style[attribute[0].trim()] = attribute[1].trim();\n        }\n    }\n}\n/** @private */\nexport function setAttributeHtml(element, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        if (keys[i] !== 'style') {\n            element.setAttribute(keys[i], attributes[keys[i]]);\n        }\n        else {\n            applyStyleAgainstCsp(element, attributes[keys[i]]);\n        }\n    }\n}\n/** @private */\nexport function createMeasureElements() {\n    var measureElement = 'measureElement';\n    if (!window[measureElement]) {\n        var divElement = createHtmlElement('div', {\n            id: 'measureElement',\n            style: 'visibility:hidden ; height: 0px ; width: 0px; overflow: hidden;'\n        });\n        var text = createHtmlElement('span', { 'style': 'display:inline-block ; line-height: normal' });\n        divElement.appendChild(text);\n        var imageElement = void 0;\n        imageElement = createHtmlElement('img', {});\n        divElement.appendChild(imageElement);\n        var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        divElement.appendChild(svg);\n        var element = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        svg.appendChild(element);\n        var data = document.createTextNode('');\n        var tSpan = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        svg.appendChild(tSpan);\n        window[measureElement] = divElement;\n        window[measureElement].usageCount = 1;\n        document.body.appendChild(divElement);\n        var measureElementCount = 'measureElementCount';\n        if (!window[measureElementCount]) {\n            window[measureElementCount] = 1;\n        }\n        else {\n            window[measureElementCount]++;\n        }\n    }\n    else {\n        window[measureElement].usageCount += 1;\n    }\n}\n/** @private */\nexport function setChildPosition(temp, childNodes, i, options) {\n    if (childNodes.length > 1 && temp.x === 0 &&\n        (options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') &&\n        (options.textWrapping === 'Wrap' || options.textWrapping === 'WrapWithOverflow')) {\n        temp.x = childNodes[i - 1] ? childNodes[i - 1].x : -(temp.width / 2);\n        return temp.x;\n    }\n    return temp.x;\n}\n/** @private */\nexport function getTemplateContent(annotationcontent, annotation, annotationTemplate) {\n    if (annotationTemplate && !annotation.template) {\n        annotationcontent.isTemplate = true;\n        annotationcontent.template = annotationcontent.content = getContent(annotationcontent, true, annotation);\n    }\n    else {\n        annotationcontent.content = annotation.template;\n    }\n    return annotationcontent;\n}\n","import { compile as baseTemplateComplier } from '@syncfusion/ej2-base';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getValue } from '@syncfusion/ej2-base';\nimport { getChildNode, applyStyleAgainstCsp } from './dom-util';\nimport { Node, BasicShape, Shape, Native, BpmnShape, BpmnActivity, BpmnTask, BpmnSubProcess } from '../objects/node';\nimport { IconShape } from '../objects/icon';\nimport { TextStyle, ShapeStyle, Margin } from '../core/appearance';\nimport { Port } from '../objects/port';\nimport { Annotation } from '../objects/annotation';\nimport { Connector, Decorator } from '../objects/connector';\n/**\n * Implements the basic functionalities\n */\n/** @private */\nexport function randomId() {\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n    var id = '';\n    var num;\n    for (var i = 0; i < 5; i++) {\n        if ('crypto' in window && 'getRandomValues' in crypto) {\n            var count = new Uint16Array(1);\n            // tslint:disable-next-line:no-any\n            var intCrypto = window.msCrypto || window.crypto;\n            num = intCrypto.getRandomValues(count)[0] % (chars.length - 1);\n        }\n        else {\n            num = Math.floor(Math.random() * chars.length);\n        }\n        if (i === 0 && num < 10) {\n            i--;\n            continue;\n        }\n        id += chars.substring(num, num + 1);\n    }\n    return id;\n}\nexport function getIndex(comp, id) {\n    if (comp.nodes && comp.nodes.length > 0) {\n        for (var i = 0; i < comp.nodes.length; i++) {\n            if (comp.nodes[i].id === id) {\n                return i;\n            }\n        }\n    }\n    if (comp.connectors && comp.connectors.length > 0) {\n        for (var i = 0; i < comp.connectors.length; i++) {\n            if (comp.connectors[i].id === id) {\n                return i;\n            }\n        }\n    }\n    return null;\n}\n/** @private */\nexport function templateCompiler(template) {\n    if (template) {\n        var e = void 0;\n        try {\n            if (document.querySelectorAll(template).length) {\n                return baseTemplateComplier(document.querySelector(template).innerHTML.trim());\n            }\n        }\n        catch (e) {\n            return baseTemplateComplier(template);\n        }\n    }\n    return undefined;\n}\n/** @private */\nexport function cornersPointsBeforeRotation(ele) {\n    var bounds = new Rect();\n    var top = ele.offsetY - ele.actualSize.height * ele.pivot.y;\n    var bottom = ele.offsetY + ele.actualSize.height * (1 - ele.pivot.y);\n    var left = ele.offsetX - ele.actualSize.width * ele.pivot.x;\n    var right = ele.offsetX + ele.actualSize.width * (1 - ele.pivot.x);\n    var topLeft = { x: left, y: top };\n    var topCenter = { x: (left + right) / 2, y: top };\n    var topRight = { x: right, y: top };\n    var middleLeft = { x: left, y: (top + bottom) / 2 };\n    var middleRight = { x: right, y: (top + bottom) / 2 };\n    var bottomLeft = { x: left, y: bottom };\n    var bottomCenter = { x: (left + right) / 2, y: bottom };\n    var bottomRight = { x: right, y: bottom };\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    return bounds;\n}\n/** @private */\nexport function getBounds(element) {\n    var bounds = new Rect();\n    var corners;\n    corners = cornersPointsBeforeRotation(element);\n    var middleLeft = corners.middleLeft;\n    var topCenter = corners.topCenter;\n    var bottomCenter = corners.bottomCenter;\n    var middleRight = corners.middleRight;\n    var topLeft = corners.topLeft;\n    var topRight = corners.topRight;\n    var bottomLeft = corners.bottomLeft;\n    var bottomRight = corners.bottomRight;\n    element.corners = {\n        topLeft: topLeft, topCenter: topCenter, topRight: topRight, middleLeft: middleLeft,\n        middleRight: middleRight, bottomLeft: bottomLeft, bottomCenter: bottomCenter, bottomRight: bottomRight\n    };\n    if (element.rotateAngle !== 0 || element.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n        element.corners.topLeft = topLeft = transformPointByMatrix(matrix, topLeft);\n        element.corners.topCenter = topCenter = transformPointByMatrix(matrix, topCenter);\n        element.corners.topRight = topRight = transformPointByMatrix(matrix, topRight);\n        element.corners.middleLeft = middleLeft = transformPointByMatrix(matrix, middleLeft);\n        element.corners.middleRight = middleRight = transformPointByMatrix(matrix, middleRight);\n        element.corners.bottomLeft = bottomLeft = transformPointByMatrix(matrix, bottomLeft);\n        element.corners.bottomCenter = bottomCenter = transformPointByMatrix(matrix, bottomCenter);\n        element.corners.bottomRight = bottomRight = transformPointByMatrix(matrix, bottomRight);\n        //Set corners based on rotate angle\n    }\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    element.corners.left = bounds.left;\n    element.corners.right = bounds.right;\n    element.corners.top = bounds.top;\n    element.corners.bottom = bounds.bottom;\n    element.corners.center = bounds.center;\n    element.corners.width = bounds.width;\n    element.corners.height = bounds.height;\n    return bounds;\n}\nfunction updateCloneProp(properties, obj) {\n    var prop = [];\n    if (obj instanceof Node) {\n        prop = ['width', 'height', 'offsetX', 'offsetY', 'container', 'visible', 'horizontalAlignment', 'verticalAlignment',\n            'backgroundColor', 'borderColor', 'borderWidth', 'rotateAngle', 'minHeight', 'minWidth', 'maxHeight',\n            'maxWidth', 'pivot', 'margin', 'flip', 'wrapper', 'constraints', 'style', 'annotations', 'ports', 'isExpanded', 'expandIcon'];\n    }\n    else if (obj instanceof Connector) {\n        prop = ['constraints', 'sourcePadding', 'targetPadding', 'cornerRadius', 'flip', 'type', 'targetDecorator', 'sourceDecorator',\n            'sourceID', 'shape', 'bridgeSpace', 'annotations', 'segments', 'hitPadding', 'tooltip', 'previewSize', 'dragSize', 'style',\n            'sourcePortID', 'targetID', 'targetPortID', 'visible'];\n    }\n    else if (obj instanceof Decorator) {\n        prop = ['height', 'width', 'shape', 'style', 'pivot', 'pathData'];\n    }\n    else if (obj instanceof Shape || obj instanceof IconShape) {\n        prop.push('shape');\n        if (obj instanceof BasicShape) {\n            prop.push('cornerRadius');\n        }\n        else if (obj instanceof Text) {\n            prop.push('margin');\n        }\n        else if (obj instanceof Image) {\n            prop.push('align');\n            prop.push('scale');\n        }\n        else if (obj instanceof Native) {\n            prop.push('scale');\n        }\n        else if (obj instanceof BpmnShape) {\n            prop.push('activity');\n            prop.push('annotations');\n        }\n        else if (obj instanceof IconShape) {\n            prop.push('borderColor');\n            prop.push('borderWidth');\n            prop.push('cornerRadius');\n            prop.push('fill');\n        }\n    }\n    else if (obj instanceof BpmnActivity) {\n        prop.push('subProcess');\n    }\n    else if (obj instanceof BpmnTask) {\n        prop.push('call');\n        prop.push('compensation');\n        prop.push('loop');\n    }\n    else if (obj instanceof BpmnSubProcess) {\n        prop.push('adhoc');\n        prop.push('boundary');\n        prop.push('compensation');\n        prop.push('loop');\n        prop.push('processes');\n    }\n    else if (obj instanceof Port) {\n        prop.push('height');\n        prop.push('width');\n        prop.push('visibility');\n        prop.push('horizontalAlignment');\n        prop.push('verticalAlignment');\n        prop.push('shape');\n    }\n    else if (obj instanceof Annotation) {\n        prop.push('constraints');\n        prop.push('height');\n        prop.push('horizontalAlignment');\n        prop.push('rotateAngle');\n        prop.push('template');\n        prop.push('verticalAlignment');\n        prop.push('visibility');\n        prop.push('width');\n        prop.push('margin');\n    }\n    else if (obj instanceof Margin) {\n        prop.push('left');\n        prop.push('right');\n        prop.push('top');\n        prop.push('bottom');\n    }\n    else if (obj instanceof TextStyle) {\n        prop = ['strokeWidth', 'strokeDashArray', 'opacity', 'gradient', 'fontSize', 'fontFamily', 'textOverflow',\n            'textDecoration', 'whiteSpace', 'textWrapping', 'textAlign', 'italic', 'bold'];\n    }\n    if (obj instanceof ShapeStyle) {\n        prop.push('strokeColor');\n        prop.push('color');\n    }\n    properties = properties.concat(prop);\n    return properties;\n}\n/** @private */\nexport function cloneObject(obj, additionalProp, key, cloneBlazorProp) {\n    var newObject = {};\n    var keys = 'properties';\n    var prop = 'propName';\n    if (obj) {\n        key = obj[prop];\n        var sourceObject = obj[keys] || obj;\n        var properties = [];\n        properties = properties.concat(Object.keys(sourceObject));\n        var customProperties = [];\n        properties.push('version');\n        if (key) {\n            var propAdditional = getFunction(additionalProp);\n            if (propAdditional) {\n                customProperties = propAdditional(key);\n            }\n            else {\n                customProperties = [];\n            }\n            properties = properties.concat(customProperties);\n        }\n        var internalProp = getInternalProperties(key);\n        properties = properties.concat(internalProp);\n        if (cloneBlazorProp) {\n            properties = updateCloneProp(properties, obj);\n        }\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var property = properties_1[_i];\n            if (property !== 'historyManager') {\n                if (property !== 'wrapper') {\n                    var constructorId = 'constructor';\n                    var name_1 = 'name';\n                    var isEventEmmitter = obj[property] && obj.hasOwnProperty('observers') ? true : false;\n                    if (!isEventEmmitter) {\n                        if (obj[property] instanceof Array) {\n                            newObject[property] = cloneArray((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property], additionalProp, property, cloneBlazorProp);\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof HTMLElement) {\n                            newObject[property] = obj[property].cloneNode(true).innerHtml;\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof Object) {\n                            newObject[property] = cloneObject((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property], undefined, undefined, cloneBlazorProp);\n                        }\n                        else {\n                            newObject[property] = obj[property];\n                        }\n                    }\n                }\n                else {\n                    if (obj[property]) {\n                        newObject[property] = {\n                            actualSize: {\n                                width: obj[property].actualSize.width, height: obj[property].actualSize.height\n                            }, offsetX: obj[property].offsetX, offsetY: obj[property].offsetY\n                        };\n                    }\n                }\n            }\n        }\n    }\n    return newObject;\n}\n/** @private */\nexport function getInternalProperties(propName) {\n    switch (propName) {\n        case 'nodes':\n        case 'children':\n            return ['inEdges', 'outEdges', 'parentId', 'processId', 'nodeId', 'umlIndex', 'isPhase', 'isLane'];\n        case 'connectors':\n            return ['parentId'];\n        case 'annotation':\n            return ['nodeId'];\n        case 'annotations':\n            return ['nodeId'];\n        case 'shape':\n            return ['hasHeader'];\n    }\n    return [];\n}\n/** @private */\nexport function cloneArray(sourceArray, additionalProp, key, cloneBlazorProp) {\n    var clonedArray;\n    if (sourceArray) {\n        clonedArray = [];\n        for (var i = 0; i < sourceArray.length; i++) {\n            if (sourceArray[i] instanceof Array) {\n                clonedArray.push(sourceArray[i]);\n            }\n            else if (sourceArray[i] instanceof Object) {\n                clonedArray.push(cloneObject(sourceArray[i], additionalProp, key, cloneBlazorProp));\n            }\n            else {\n                clonedArray.push(sourceArray[i]);\n            }\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function extendObject(options, childObject) {\n    var properties = 'properties';\n    if (options) {\n        if (!childObject) {\n            childObject = { properties: {} };\n        }\n        var target = childObject;\n        for (var _i = 0, _a = Object.keys(options); _i < _a.length; _i++) {\n            var property = _a[_i];\n            if (options[property] instanceof Array) {\n                var extendeArray = extendArray(options[property], childObject[properties][property]);\n                if (!childObject[properties][property] || !childObject[properties][property].length) {\n                    childObject[property] = extendeArray;\n                }\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof HTMLElement) {\n                childObject[property] = options[property].cloneNode(true).innerHtml;\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof Object) {\n                var extendedObject = extendObject(options[property], childObject[properties][property]);\n                if (extendedObject[properties] && !Object.keys(extendedObject[properties]).length) {\n                    delete extendedObject[properties];\n                }\n                childObject[property] = extendedObject;\n            }\n            else {\n                childObject[property] = childObject[properties][property] !== undefined ?\n                    childObject[property] : options[property];\n            }\n        }\n    }\n    return childObject;\n}\n/** @private */\nexport function extendArray(sourceArray, childArray) {\n    var clonedArray = [];\n    var reset = false;\n    if (!childArray) {\n        childArray = [];\n    }\n    if (!childArray.length) {\n        reset = true;\n    }\n    for (var i = 0; i < sourceArray.length; i++) {\n        if (sourceArray[i] instanceof Array) {\n            var extendedArray = extendArray(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendArray);\n            }\n        }\n        else if (sourceArray[i] instanceof Object) {\n            var extendedObject = extendObject(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendedObject);\n            }\n        }\n        else {\n            clonedArray.push(sourceArray[i]);\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function textAlignToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Center':\n            state = 'center';\n            break;\n        case 'Left':\n            state = 'left';\n            break;\n        case 'Right':\n            state = 'right';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function wordBreakToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Wrap':\n            state = 'breakall';\n            break;\n        case 'NoWrap':\n            state = 'keepall';\n            break;\n        case 'WrapWithOverflow':\n            state = 'normal';\n            break;\n        case 'LineThrough':\n            state = 'line-through';\n            break;\n    }\n    return state;\n}\nexport function bBoxText(textContent, options) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var text = getChildNode(svg)[1];\n    text.textContent = textContent;\n    applyStyleAgainstCsp(text, 'font-size:' + options.fontSize + 'px; font-family:'\n        + options.fontFamily + ';font-weight:' + (options.bold ? 'bold' : 'normal'));\n    var bBox = text.getBBox().width;\n    window[measureElement].style.visibility = 'hidden';\n    return bBox;\n}\n/** @private */\nexport function middleElement(i, j) {\n    var m = 0;\n    m = (i + j) / 2;\n    return m;\n}\n/** @private */\nexport function overFlow(text, options) {\n    var i = 0;\n    var j = 0;\n    var middle = 0;\n    var bounds = 0;\n    var temp = '';\n    j = text.length;\n    var t = 0;\n    do {\n        if (bounds > 0) {\n            i = middle;\n        }\n        middle = Math.floor(middleElement(i, j));\n        temp += text.substr(i, middle);\n        bounds = bBoxText(temp, options);\n    } while (bounds <= options.width);\n    temp = temp.substr(0, i);\n    for (t = i; t < j; t++) {\n        temp += text[t];\n        bounds = bBoxText(temp, options);\n        if (bounds >= options.width) {\n            text = text.substr(0, temp.length - 1);\n            break;\n        }\n    }\n    if (options.textOverflow === 'Ellipsis') {\n        text = text.substr(0, text.length - 3);\n        text += '...';\n    }\n    else {\n        text = text.substr(0, text.length);\n    }\n    return text;\n}\n/** @private */\nexport function whiteSpaceToString(value, wrap) {\n    if (wrap === 'NoWrap' && value === 'PreserveAll') {\n        return 'pre';\n    }\n    var state = '';\n    switch (value) {\n        case 'CollapseAll':\n            state = 'nowrap';\n            break;\n        case 'CollapseSpace':\n            state = 'pre-line';\n            break;\n        case 'PreserveAll':\n            state = 'pre-wrap';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function rotateSize(size, angle) {\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, angle, 0, 0);\n    var topLeft = transformPointByMatrix(matrix, { x: 0, y: 0 });\n    var topRight = transformPointByMatrix(matrix, { x: size.width, y: 0 });\n    var bottomLeft = transformPointByMatrix(matrix, { x: 0, y: size.height });\n    var bottomRight = transformPointByMatrix(matrix, { x: size.width, y: size.height });\n    var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    return new Size(maxX - minX, maxY - minY);\n}\n/** @private */\nexport function rotatePoint(angle, pivotX, pivotY, point) {\n    if (angle !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivotX, pivotY);\n        return transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function getOffset(topLeft, obj) {\n    var offX = topLeft.x + obj.desiredSize.width * obj.pivot.x;\n    var offY = topLeft.y + obj.desiredSize.height * obj.pivot.y;\n    return {\n        x: offX, y: offY\n    };\n}\n/**\n * Get function\n */\nexport function getFunction(value) {\n    if (value !== undefined) {\n        if (typeof value === 'string') {\n            value = getValue(value, window);\n        }\n    }\n    return value;\n}\n","import { Connector } from '../objects/connector';\nimport { Node } from '../objects/node';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getUserHandlePosition, checkPortRestriction } from '../utility/diagram-util';\nimport { canMove, canDragSourceEnd, canDragTargetEnd, canContinuousDraw, canDragSegmentThumb } from '../utility/constraints-util';\nimport { canZoomPan, defaultTool, canDrawOnce, canDrag, canDraw, canSelect, canRotate } from '../utility/constraints-util';\nimport { canShowCorner, canResizeCorner } from '../utility/diagram-util';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { PortConstraints, DiagramTools, PortVisibility, ThumbsConstraints } from '../enum/enum';\nimport { Selector } from '../objects/node';\nimport { PointPort } from './../objects/port';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { checkParentAsContainer } from '../interaction/container-interaction';\n/**\n * Finds the action to be taken for the object under mouse\n *\n */\n/* tslint:disable */\n/** @private */\nexport function findToolToActivate(obj, wrapper, position, diagram, touchStart, touchMove, target) {\n    var conn = diagram.selectedItems.connectors[0];\n    if (touchMove && touchMove.length > 1 && touchStart && touchStart.length > 1) {\n        return 'PinchZoom';\n    }\n    if (diagram.currentSymbol) {\n        return 'Drag';\n    }\n    var eventHandler = 'eventHandler';\n    if (diagram[eventHandler].action === 'PortDraw') {\n        diagram.tool &= ~DiagramTools.DrawOnce;\n    }\n    //Drawing Tools\n    if ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && diagram.drawingObject) {\n        return 'Draw';\n    }\n    if (hasSelection(diagram)) {\n        var handle = diagram.selectedItems;\n        if (handle.wrapper && canShowCorner(handle.constraints, 'UserHandle')) {\n            for (var _i = 0, _a = handle.userHandles; _i < _a.length; _i++) {\n                var obj_1 = _a[_i];\n                if (obj_1.visible) {\n                    var paddedBounds = getUserHandlePosition(handle, obj_1, diagram.scroller.transform);\n                    if (contains(position, paddedBounds, obj_1.size / (2 * diagram.scroller.transform.scale))) {\n                        return obj_1.name;\n                    }\n                }\n            }\n        }\n    }\n    if (hasSelection(diagram)) {\n        var element = (diagram.selectedItems.annotation) ?\n            diagram.selectedItems.wrapper.children[0] : diagram.selectedItems.wrapper;\n        var selectorBnds = element.bounds;\n        var handle = diagram.selectedItems;\n        var paddedBounds = new Rect(selectorBnds.x, selectorBnds.y, selectorBnds.width, selectorBnds.height);\n        if (hasSingleConnection(diagram) && !diagram.selectedItems.annotation) {\n            var conn_1 = diagram.selectedItems.connectors[0];\n            var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            if (canShowCorner(handle.constraints, 'ResizeAll')) {\n                if ((canShowCorner(handle.constraints, 'ConnectorSourceThumb'))\n                    && canDragSourceEnd(conn_1) && contains(position, conn_1.sourcePoint, sourcePaddingValue)) {\n                    return 'ConnectorSourceEnd';\n                }\n                if ((canShowCorner(handle.constraints, 'ConnectorTargetThumb'))\n                    && canDragTargetEnd(conn_1) && contains(position, conn_1.targetPoint, targetPaddingValue)) {\n                    return 'ConnectorTargetEnd';\n                }\n                var action = checkForConnectorSegment(conn_1, handle, position, diagram);\n                if (action !== 'OrthoThumb') {\n                    if ((canShowCorner(handle.constraints, 'ConnectorSourceThumb'))\n                        && canDragSourceEnd(conn_1)) {\n                        if (action) {\n                            return action;\n                        }\n                    }\n                    if ((canShowCorner(handle.constraints, 'ConnectorTargetThumb'))\n                        && canDragTargetEnd(conn_1)) {\n                        if (action) {\n                            return action;\n                        }\n                    }\n                }\n                else {\n                    return action;\n                }\n            }\n        }\n        else {\n            var ten = 10 / diagram.scroller.currentZoom;\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n            //check for resizing tool\n            var x = element.offsetX - element.pivot.x * element.actualSize.width;\n            var y = element.offsetY - element.pivot.y * element.actualSize.height;\n            var rotateThumb = {\n                x: x + ((element.pivot.x === 0.5 ? element.pivot.x * 2 : element.pivot.x) * element.actualSize.width / 2),\n                y: y - 30 / diagram.scroller.currentZoom\n            };\n            rotateThumb = transformPointByMatrix(matrix, rotateThumb);\n            var labelSelection = diagram.selectedItems.annotation ? true : false;\n            var labelRotate = (labelSelection && (canRotate(diagram.selectedItems.annotation))) ? true : false;\n            if (canShowCorner(handle.constraints, 'Rotate') && contains(position, rotateThumb, ten) &&\n                (diagram.selectedItems.thumbsConstraints & ThumbsConstraints.Rotate)) {\n                if (labelSelection && labelRotate) {\n                    return 'LabelRotate';\n                }\n                else if (!labelSelection) {\n                    return 'Rotate';\n                }\n            }\n            paddedBounds.Inflate(ten);\n            if (paddedBounds.containsPoint(position)) {\n                var action = checkResizeHandles(diagram, element, position, matrix, x, y);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    //Panning\n    if (canZoomPan(diagram) && !obj) {\n        return 'Pan';\n    }\n    if (target instanceof PointPort && (!canZoomPan(diagram))) {\n        var action = findPortToolToActivate(diagram, target);\n        if (action !== 'None') {\n            return action;\n        }\n    }\n    if ((target instanceof ShapeAnnotation || target instanceof PathAnnotation) && (!canZoomPan(diagram) && (canSelect(target)))) {\n        if (isSelected(diagram, target, undefined, wrapper) && canMove(target)) {\n            return 'LabelDrag';\n        }\n        return 'LabelSelect';\n    }\n    if (obj !== null) {\n        if (obj instanceof Node || obj instanceof Connector) {\n            if (wrapper && wrapper.id) {\n                var id = wrapper.id.split(obj.id)[1];\n                if (id && id.match('^_icon')) {\n                    return 'LayoutAnimation';\n                }\n            }\n            if (canMove(obj) && wrapper instanceof TextElement && wrapper.hyperlink.link) {\n                return 'Hyperlink';\n            }\n            if (canMove(obj) && isSelected(diagram, obj, false) && diagram.selectedItems.annotation === undefined) {\n                if ((obj instanceof Connector && !(contains(position, obj.sourcePoint, obj.hitPadding) ||\n                    contains(position, obj.targetPoint, obj.hitPadding))) ||\n                    !(obj instanceof Connector)) {\n                    return 'Drag';\n                }\n            }\n            else if (obj && canZoomPan(diagram) && !defaultTool(diagram)) {\n                return 'Pan';\n            }\n            else if (diagram.selectedItems.nodes.length && diagram.selectedItems.nodes[0].isLane &&\n                diagram.selectedItems.wrapper && diagram.selectedItems.wrapper.bounds.containsPoint(position)) {\n                return 'Drag';\n            }\n            else {\n                return 'Select';\n            }\n        }\n        else {\n            return 'Select';\n        }\n    }\n    return 'Select';\n}\n/* tslint:enable */\nfunction checkResizeHandles(diagram, element, position, matrix, x, y) {\n    var action;\n    if ((diagram.selectedItems.nodes.length === 1 && diagram.selectedItems.connectors.length === 0)\n        && diagram.selectedItems.nodes[0].container) {\n        action = checkResizeHandleForContainer(diagram, element, position, x, y);\n    }\n    if (!action && (!diagram.selectedItems.nodes[0] || (!diagram.selectedItems.nodes[0].isPhase &&\n        !diagram.selectedItems.nodes[0].isLane && diagram.selectedItems.nodes[0].shape.type !== 'SwimLane'))) {\n        action = checkForResizeHandles(diagram, element, position, matrix, x, y);\n    }\n    if (action) {\n        return action;\n    }\n    return null;\n}\nfunction checkForConnectorSegment(conn, handle, position, diagram) {\n    var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    if (conn.type === 'Bezier') {\n        for (var i = 0; i < conn.segments.length; i++) {\n            var segment = (conn.segments)[i];\n            if (contains(position, !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, sourcePaddingValue)) {\n                return 'BezierSourceThumb';\n            }\n            if (contains(position, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, targetPaddingValue)) {\n                return 'BezierTargetThumb';\n            }\n        }\n    }\n    if (diagram.connectorEditingToolModule && canDragSegmentThumb(conn)) {\n        if (conn.type === 'Straight' || conn.type === 'Bezier') {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                segment = (conn.segments)[i];\n                if (contains(position, segment.point, 10)) {\n                    return 'SegmentEnd';\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                var segPoint = { x: 0, y: 0 };\n                segment = (conn.segments)[i];\n                if (segment.allowDrag) {\n                    for (var j = 0; j < segment.points.length - 1; j++) {\n                        var length_1 = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n                        if (length_1 >= 50) {\n                            segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                            segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                            if (contains(position, segPoint, 30)) {\n                                return 'OrthoThumb';\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return null;\n}\n/** @private */\nexport function findPortToolToActivate(diagram, target, touchStart, touchMove) {\n    if (canDrag(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if ((target.constraints & PortConstraints.Drag)) {\n            return 'PortDrag';\n        }\n    }\n    else if (canDraw(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if (target.constraints & PortConstraints.Draw) {\n            diagram.drawingObject = {};\n            var connector = { type: 'Orthogonal', sourcePortID: target.id };\n            diagram.drawingObject = connector;\n            diagram.tool |= DiagramTools.DrawOnce;\n            diagram.currentDrawingObject = connector;\n            return 'PortDraw';\n        }\n    }\n    return 'None';\n}\n/**\n * Resize handle for container and also object.\n * @private\n */\nfunction checkResizeHandleForContainer(diagram, element, position, x, y) {\n    var ten = 10 / diagram.scroller.currentZoom;\n    var forty = 40 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var width = element.actualSize.width;\n    var height = element.actualSize.height;\n    var left = new Rect(x, y + 20, element.style.strokeWidth, height - 40);\n    var right = new Rect(x + width, y + 20, element.style.strokeWidth, height - 40);\n    var top = new Rect(x + 20, y, width - 40, element.style.strokeWidth);\n    var bottom = new Rect(x + 20, y + height, width - 40, element.style.strokeWidth);\n    var container = checkParentAsContainer(diagram, diagram.selectedItems.nodes[0], true) ?\n        diagram.nameTable[diagram.selectedItems.nodes[0].parentId] : diagram.selectedItems.nodes[0];\n    if (width >= forty && height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) &&\n            right.containsPoint(position, ten)) {\n            return 'ResizeEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) &&\n            bottom.containsPoint(position, ten)) {\n            return 'ResizeSouth';\n        }\n        if (container.container.type !== 'Grid') {\n            if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n                left.containsPoint(position, ten)) {\n                return 'ResizeWest';\n            }\n            if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n                top.containsPoint(position, ten)) {\n                return 'ResizeNorth';\n            }\n        }\n    }\n    return null;\n}\nfunction checkForResizeHandles(diagram, element, position, matrix, x, y) {\n    var forty = 40 / diagram.scroller.currentZoom;\n    var ten = 10 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var labelSelection = (selectedItems.annotation) ? true : false;\n    if (element.actualSize.width >= forty && element.actualSize.height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthEast' : 'ResizeSouthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthWest' : 'ResizeSouthWest';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthEast', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthEast' : 'ResizeNorthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthWest' : 'ResizeNorthWest';\n        }\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeEast' : 'ResizeEast';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeWest' : 'ResizeWest';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y + element.actualSize.height }), ten)) {\n        return (labelSelection) ? 'LabelResizeSouth' : 'ResizeSouth';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y }), ten)) {\n        return (labelSelection) ? 'LabelResizeNorth' : 'ResizeNorth';\n    }\n    return null;\n}\n/** @private */\nexport function contains(mousePosition, corner, padding) {\n    if (mousePosition.x >= corner.x - padding && mousePosition.x <= corner.x + padding) {\n        if (mousePosition.y >= corner.y - padding && mousePosition.y <= corner.y + padding) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function hasSelection(diagram) {\n    if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function hasSingleConnection(diagram) {\n    if (diagram.selectedItems.connectors.length === 1 && !diagram.selectedItems.nodes.length) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function isSelected(diagram, element, firstLevel, wrapper) {\n    if (firstLevel === void 0) { firstLevel = true; }\n    if (element instanceof Selector) {\n        return true;\n    }\n    if (element instanceof Node) {\n        while (element) {\n            if (diagram.selectedItems.nodes.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n                return true;\n            }\n            if (!firstLevel) {\n                element = diagram.nameTable[element.parentId];\n            }\n            else {\n                break;\n            }\n        }\n    }\n    else if (element instanceof Connector) {\n        if (diagram.selectedItems.connectors.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n            return true;\n        }\n    }\n    else if (element instanceof ShapeAnnotation || element instanceof PathAnnotation) {\n        if (diagram.selectedItems.annotation && diagram.selectedItems.wrapper.children[0].id === wrapper.id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function getCursor(cursor, angle) {\n    //to avoid angles less than 0 & angles greater than 360\n    angle += 360;\n    angle %= 360;\n    if (cursor.indexOf('Resize') === -1) {\n        return cursors[cursor];\n    }\n    else {\n        var dir = cursors[cursor];\n        if ((angle >= 0 && angle < 25) || (angle >= 160 && angle <= 205) || (angle >= 340 && angle <= 360)) {\n            return dir;\n        }\n        else if ((angle >= 25 && angle <= 70) || (angle >= 205 && angle <= 250)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'n-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'nw-resize';\n            }\n            else {\n                return 'e-resize';\n            }\n        }\n        else if ((angle >= 70 && angle <= 115) || (angle >= 250 && angle <= 295)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'n-resize';\n            }\n            else {\n                return 'nw-resize';\n            }\n        }\n        else if ((angle >= 115 && angle <= 155) || (angle >= 295 && angle <= 340)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'nw-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'ne-resize';\n            }\n        }\n        else {\n            return 'n-resize';\n        }\n    }\n    return cursors[cursor];\n}\nvar cursors = {\n    'None': 'default',\n    'Rotate': 'crosshair',\n    'Select': 'default',\n    'Drag': 'move',\n    'ResizeWest': 'w-resize',\n    'ResizeEast': 'e-resize',\n    'ResizeSouth': 's-resize',\n    'ResizeNorth': 'n-resize',\n    'Draw': 'crosshair',\n    'PortDraw': 'crosshair',\n    'ResizeNorthEast': 'ne-resize',\n    'ResizeNorthWest': 'nw-resize',\n    'ResizeSouthEast': 'se-resize',\n    'ResizeSouthWest': 'sw-resize',\n    'ConnectorSourceEnd': 'move',\n    'ConnectorTargetEnd': 'move',\n    'BezierSourceThumb': 'move',\n    'BezierTargetThumb': 'move',\n    'OrthoThumb': 'move',\n    'SegmentEnd': 'move',\n    'Pan': 'grab',\n    'Hyperlink': 'pointer',\n    'PortDrag': 'pointer',\n    'LabelSelect': 'pointer',\n    'LabelDrag': 'move',\n    'LabelRotate': 'crosshair',\n    'LabelResizeWest': 'w-resize',\n    'LabelResizeEast': 'e-resize',\n    'LabelResizeSouth': 's-resize',\n    'LabelResizeNorth': 'n-resize',\n    'LabelResizeNorthEast': 'ne-resize',\n    'LabelResizeNorthWest': 'nw-resize',\n    'LabelResizeSouthEast': 'se-resize',\n    'LabelResizeSouthWest': 'sw-resize',\n};\n","import { Node } from './../objects/node';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Canvas } from './../core/containers/canvas';\nimport { Container } from './../core/containers/container';\nimport { PathElement } from './../core/elements/path-element';\nimport { TextElement } from './../core/elements/text-element';\nimport { updateStyle } from './../../diagram/utility/diagram-util';\nimport { randomId, cloneObject } from './../utility/base-util';\nimport { Connector } from './../objects/connector';\nimport { BpmnAnnotation } from './../objects/node';\nimport { Transform, DiagramAction } from '../enum/enum';\nimport { findAngle, getIntersectionPoints, getPortDirection } from '../utility/connector';\nimport { Point } from '../primitives/point';\nimport { NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { getDiagramElement } from '../utility/dom-util';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * BPMN Diagrams contains the BPMN functionalities\n */\nvar BpmnDiagrams = /** @class */ (function () {\n    //End size region\n    /**\n     * Constructor for the BpmnDiagrams module\n     * @private\n     */\n    function BpmnDiagrams() {\n        //Code conversion for Bpmn Shapes\n        //Start Region\n        /**   @private  */\n        this.annotationObjects = {};\n        //constructs the BpmnDiagrams module\n    }\n    Object.defineProperty(BpmnDiagrams.prototype, \"textAnnotationConnectors\", {\n        /**   @private  */\n        get: function () {\n            var connectors = [];\n            for (var _i = 0, _a = Object.keys(this.annotationObjects); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var entry = this.annotationObjects[key];\n                for (var _b = 0, _c = Object.keys(entry); _b < _c.length; _b++) {\n                    var annotation = _c[_b];\n                    var key_1 = 'connector';\n                    connectors.push(entry[annotation][key_1]);\n                }\n            }\n            return connectors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationConn = function (obj) {\n        var connectors = [];\n        if (obj.shape.type === 'Bpmn' && obj.shape.annotations.length !== 0) {\n            var entry = this.annotationObjects[obj.id];\n            for (var _i = 0, _a = Object.keys(entry); _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                var key = 'connector';\n                connectors.push(entry[annotation][key]);\n            }\n        }\n        return connectors;\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.getSize = function (node, content) {\n        var size = new Size(node.width, node.height);\n        if (size.width === undefined || size.height === undefined) {\n            if (!(content instanceof PathElement)) {\n                size.width = size.width || 50;\n                size.height = size.height || 50;\n            }\n            if (content.actualSize.width && content.actualSize.height) {\n                return content.actualSize;\n            }\n            else {\n                content.measure(new Size());\n                size.width = size.width || content.desiredSize.width;\n                size.height = size.height || content.desiredSize.height;\n            }\n            if (node.maxWidth !== undefined) {\n                size.width = Math.min(size.width, node.maxWidth);\n            }\n            if (node.maxHeight !== undefined) {\n                size.height = Math.min(size.height, node.maxHeight);\n            }\n            if (node.minWidth !== undefined) {\n                size.width = Math.max(size.width, node.minWidth);\n            }\n            if (node.minHeight !== undefined) {\n                size.height = Math.max(size.height, node.minHeight);\n            }\n        }\n        return size;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.initBPMNContent = function (content, node, diagram) {\n        var shape = (isBlazor() ? node.shape : node.shape);\n        var bpmnShape = (isBlazor() ? node.shape.bpmnShape : node.shape.shape);\n        if (bpmnShape === 'Event') {\n            content = this.getBPMNEventShape(node, shape.event);\n        }\n        if (bpmnShape === 'Gateway') {\n            content = this.getBPMNGatewayShape(node);\n        }\n        if (bpmnShape === 'DataObject') {\n            content = this.getBPMNDataObjectShape(node);\n        }\n        if (bpmnShape === 'Message' || bpmnShape === 'DataSource') {\n            content = this.getBPMNShapes(node);\n        }\n        // if (shape.shape === 'Group') {\n        //     content = this.getBPMNGroup(node, diagram);\n        //     content.style.strokeDashArray = '2 2 6 2';\n        //     content.horizontalAlignment = 'Center';\n        //     content.verticalAlignment = 'Center';\n        // }\n        if (bpmnShape === 'Activity') {\n            content = this.getBPMNActivityShape(node);\n        }\n        if (bpmnShape === 'TextAnnotation') {\n            content = this.renderBPMNTextAnnotation(diagram, node, content);\n        }\n        var annotations = {};\n        if (shape.annotations.length > 0) {\n            for (var i = 0; i < shape.annotations.length && shape.annotations[i].text; i++) {\n                content.children.push(this.getBPMNTextAnnotation(node, diagram, shape.annotations[i], content));\n            }\n            content.style.strokeDashArray = '2 2 6 2';\n        }\n        return content;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNShapes = function (node) {\n        var bpmnShape = new PathElement();\n        //set style\n        this.setStyle(bpmnShape, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            bpmnShape.shadow = node.shadow;\n        }\n        var bpmnShapeData = getBpmnShapePathData((isBlazor() ? node.shape.bpmnShape :\n            node.shape.shape));\n        bpmnShape.data = bpmnShapeData;\n        bpmnShape.id = node.id + '_' + (isBlazor() ? node.shape.bpmnShape :\n            node.shape.shape);\n        if (node.width !== undefined && node.height !== undefined) {\n            bpmnShape.width = node.width;\n            bpmnShape.height = node.height;\n        }\n        return bpmnShape;\n    };\n    /** @private */\n    // public getBPMNGroup(node: Node, diagram: Diagram): Container {\n    //     let group: Container = new Container();\n    //     group.id = node.id + '_group';\n    //     //group.style.strokeDashArray = '2 2 6 2';\n    //     if (!group.children) { group.children = []; }\n    //     let grp: BpmnGroup = ((node.shape as BpmnShape).group as BpmnGroup);\n    //     if ((node.shape as BpmnShape).group as BpmnGroup) {\n    //         for (let i: number = 0; i < grp.children.length; i++) {\n    //             let b: Node | Connector = diagram.nameTable[grp.children[i]];\n    //             group.children.push(b.wrapper);\n    //         }\n    //     }\n    //     return group;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNGatewayShape = function (node) {\n        var gatewayshape = new Canvas();\n        //childNode0\n        var gatewayNode = new PathElement();\n        gatewayNode.id = node.id + '_0_gateway';\n        gatewayNode.offsetX = node.offsetX;\n        gatewayNode.offsetY = node.offsetY;\n        gatewayNode.data = 'M 40 20 L 20 40 L 0 20 L 20 0 L 40 20 Z';\n        this.setStyle(gatewayNode, node);\n        //childNode1\n        var gatewayTypeNode = new PathElement();\n        gatewayTypeNode.id = node.id + '_1_gatewayType';\n        //set style - opacity\n        gatewayTypeNode.style.opacity = node.style.opacity;\n        gatewayTypeNode.style.strokeColor = node.style.strokeColor;\n        gatewayTypeNode.horizontalAlignment = 'Center';\n        gatewayTypeNode.verticalAlignment = 'Center';\n        gatewayTypeNode.relativeMode = 'Object';\n        var shapeType = node.shape.gateway;\n        var gatewayTypeNodeShapeData;\n        gatewayTypeNodeShapeData = getBpmnGatewayShapePathData(shapeType.type);\n        if (shapeType.type === 'EventBased' || shapeType.type === 'ExclusiveEventBased' || shapeType.type === 'ParallelEventBased') {\n            gatewayTypeNode.style.fill = 'white';\n        }\n        else {\n            gatewayTypeNode.style.fill = 'black';\n        }\n        gatewayTypeNode.data = gatewayTypeNodeShapeData;\n        // append child and set style\n        gatewayshape.style.fill = 'transparent';\n        gatewayshape.style.strokeColor = 'transparent';\n        gatewayshape.style.strokeWidth = 0;\n        gatewayshape.children = [gatewayNode, gatewayTypeNode];\n        var size = this.getSize(node, gatewayNode);\n        this.setSizeForBPMNGateway(node.shape.gateway, gatewayshape, size.width, size.height);\n        return gatewayshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNDataObjectShape = function (node) {\n        var dataObjectshape = new Canvas();\n        var shape = node.shape.dataObject;\n        //childNode0\n        var dataobjNode = new PathElement();\n        dataobjNode.id = node.id + '_0_dataobj';\n        dataobjNode.data = 'M29.904,5 L7.853,5 L7.853,45 L42.147,45 L42.147,17.242,L29.932,5,L29.932,17.242,L42.147,17.242';\n        var size = this.getSize(node, dataobjNode);\n        dataobjNode.width = size.width;\n        dataobjNode.height = size.height;\n        this.setStyle(dataobjNode, node);\n        //childNode1\n        var dataobjTypeNode = new PathElement();\n        dataobjTypeNode.id = node.id + '_1_type';\n        dataobjTypeNode.width = 25;\n        dataobjTypeNode.height = 20;\n        dataobjTypeNode.margin.left = 5;\n        dataobjTypeNode.margin.top = 5;\n        dataobjTypeNode.data = 'M 3 9.4 l 6 0 v 2.4 l 3.6 -4 L 9 4 v 2.5 H 3 V 9.4 Z';\n        //set style - opacity\n        dataobjTypeNode.style.opacity = node.style.opacity;\n        //childNode2\n        var dataobjCollectionNode = new PathElement();\n        dataobjCollectionNode.id = node.id + '_2_collection';\n        dataobjCollectionNode.width = 7.5;\n        dataobjCollectionNode.height = 15;\n        dataobjCollectionNode.style.fill = 'black';\n        dataobjCollectionNode.visible = true;\n        dataobjCollectionNode.horizontalAlignment = 'Center';\n        dataobjCollectionNode.verticalAlignment = 'Bottom';\n        dataobjCollectionNode.relativeMode = 'Object';\n        //set style - opacity\n        dataobjCollectionNode.style.opacity = node.style.opacity;\n        dataobjCollectionNode.data = 'M 0 0 L 0.1 0 L 0.1 2 L 0 2 Z M 0.4 0 L 0.6 0 L 0.6 2 L0.4 2 Z M 0.9 0 L 1 0 L 1 2 L 0.9 2 Z';\n        switch (shape.type) {\n            case 'None':\n                dataobjTypeNode.visible = false;\n                break;\n            case 'Input':\n                dataobjTypeNode.style.fill = 'white';\n                break;\n            case 'Output':\n                dataobjTypeNode.style.fill = 'black';\n                break;\n        }\n        if (shape.collection === false) {\n            dataobjCollectionNode.visible = false;\n        }\n        //append child and set style\n        dataObjectshape.style.fill = 'transparent';\n        dataObjectshape.style.strokeColor = 'transparent';\n        dataObjectshape.style.strokeWidth = 0;\n        dataObjectshape.children = [dataobjNode, dataobjTypeNode, dataobjCollectionNode];\n        return dataObjectshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTaskShape = function (node) {\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var taskShapes = new Canvas();\n        //childNode0\n        var taskNode = new DiagramElement();\n        taskNode.cornerRadius = 10;\n        var size = this.getSize(node, taskNode);\n        taskNode.id = node.id + '_0_task';\n        taskNode.width = size.width;\n        taskNode.height = size.height;\n        this.setStyle(taskNode, node);\n        // if task as call \n        if ((task.call !== undefined) && task.call === true) {\n            taskNode.style.strokeWidth = 4;\n        }\n        taskShapes.width = size.width;\n        taskShapes.height = size.height;\n        var childCount = this.getTaskChildCount(node);\n        var x;\n        var childSpace = childCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (childCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (childCount - 1) * 8;\n        }\n        //childNode1\n        var taskTypeNode = new PathElement();\n        var taskTypeNodeData;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            taskTypeNode.width = 18;\n            taskTypeNode.height = 16;\n        }\n        else {\n            taskTypeNode.width = 20;\n            taskTypeNode.height = 20;\n        }\n        taskTypeNode.id = node.id + '_1_tasktType';\n        taskTypeNode.margin.left = 5;\n        taskTypeNode.margin.top = 5;\n        taskTypeNodeData = getBpmnTaskShapePathData(task.type);\n        taskTypeNode.data = taskTypeNodeData;\n        taskTypeNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        // append child and set style\n        taskShapes.style.fill = 'transparent';\n        taskShapes.style.strokeColor = 'transparent';\n        taskShapes.style.strokeWidth = 0;\n        taskShapes.children = [taskNode, taskTypeNode];\n        //childnode for service\n        if (task.type === 'Service') {\n            var taskTypeNodeService = new PathElement();\n            taskTypeNodeService.id = node.id + '_1_taskTypeService';\n            taskTypeNodeService.data = taskTypeNodeData;\n            taskTypeNodeService.margin.left = taskTypeNode.margin.left + 9;\n            taskTypeNodeService.margin.top = taskTypeNode.margin.top + 9;\n            taskTypeNodeService.style.fill = 'white';\n            taskTypeNodeService.style.opacity = node.style.opacity;\n            taskShapes.children.push(taskTypeNodeService);\n        }\n        // if task as loop\n        var loopType = task.loop;\n        var taskLoopNode = new PathElement();\n        var childNode2data;\n        childNode2data = getBpmnLoopShapePathData(loopType);\n        taskLoopNode.data = childNode2data;\n        taskLoopNode.style.fill = 'black';\n        if (loopType !== 'None') {\n            taskLoopNode.visible = true;\n        }\n        else {\n            taskLoopNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskLoopNode.margin.left = x;\n        if (taskLoopNode.visible === true) {\n            x += 12 + 8;\n        }\n        taskLoopNode.width = 12;\n        taskLoopNode.height = 12;\n        taskLoopNode.margin.bottom = 5;\n        taskLoopNode.id = node.id + '_2_loop';\n        taskLoopNode.horizontalAlignment = 'Left';\n        taskLoopNode.verticalAlignment = 'Bottom';\n        taskLoopNode.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        taskLoopNode.relativeMode = 'Point';\n        taskLoopNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        taskShapes.children.push(taskLoopNode);\n        //if task as compensation\n        var taskCompNode = new PathElement();\n        taskCompNode = this.getBPMNCompensationShape(node, taskCompNode);\n        if (task.compensation === true) {\n            taskCompNode.visible = true;\n        }\n        else {\n            taskCompNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskCompNode.margin.left = x - 3;\n        x += 12 + 6;\n        taskShapes.children.push(taskCompNode);\n        return taskShapes;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNEventShape = function (node, subEvent, sub, id) {\n        var eventshape = new Canvas();\n        var event;\n        var trigger;\n        var width;\n        var height;\n        id = id || node.id;\n        var pathdata = 'M164.1884,84.6909000000001C156.2414,84.6909000000001,149.7764,78.2259000000001,149.7764,70.2769000000001' +\n            'C149.7764,62.3279000000001,156.2414,55.8629000000001,164.1884,55.8629000000001C172.1354,55.8629000000001,178.6024,' +\n            '62.3279000000001,178.6024,70.2769000000001C178.6024,78.2259000000001,172.1354,84.6909000000001,164.1884,84.6909000000001';\n        var shapeEvent = node.shape.event;\n        if ((!isBlazor() && node.shape.shape === 'Event') ||\n            (isBlazor() && node.shape.bpmnShape === 'Event')) {\n            event = shapeEvent.event;\n            trigger = shapeEvent.trigger;\n        }\n        width = subEvent.width;\n        height = subEvent.height;\n        if (sub) {\n            width = width || 20;\n            height = height || 20;\n        }\n        else if (subEvent.width === undefined || subEvent.height === undefined) {\n            var pathElement = new PathElement();\n            pathElement.data = pathdata;\n            var size = this.getSize(node, pathElement);\n            width = size.width;\n            height = size.height;\n        }\n        var shapeActivity = node.shape.activity;\n        if ((!isBlazor() && node.shape.shape === 'Activity') ||\n            (isBlazor() && node.shape.bpmnShape === 'Activity')) {\n            var subProcess = shapeActivity.subProcess;\n            event = subEvent.event;\n            trigger = subEvent.trigger;\n        }\n        //childNode0\n        var innerEvtNode = new PathElement();\n        innerEvtNode.data = pathdata;\n        innerEvtNode.id = id + '_0_event';\n        innerEvtNode.width = width;\n        innerEvtNode.height = height;\n        innerEvtNode.horizontalAlignment = 'Center';\n        innerEvtNode.verticalAlignment = 'Center';\n        innerEvtNode.relativeMode = 'Object';\n        this.setStyle(innerEvtNode, node);\n        //childNode1\n        var outerEvtNode = new PathElement();\n        outerEvtNode.data = pathdata;\n        outerEvtNode.id = id + '_1_event';\n        outerEvtNode.style.gradient = node.style.gradient;\n        outerEvtNode.horizontalAlignment = 'Center';\n        outerEvtNode.verticalAlignment = 'Center';\n        outerEvtNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        outerEvtNode.style.strokeColor = node.style.strokeColor;\n        outerEvtNode.style.opacity = node.style.opacity;\n        //childNode2\n        var triggerNode = new PathElement();\n        var triggerNodeData = getBpmnTriggerShapePathData(trigger);\n        triggerNode.data = triggerNodeData;\n        triggerNode.id = id + '_2_trigger';\n        triggerNode.horizontalAlignment = 'Center';\n        triggerNode.verticalAlignment = 'Center';\n        triggerNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        triggerNode.style.strokeColor = node.style.strokeColor;\n        triggerNode.style.opacity = node.style.opacity;\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n            case 'Intermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                break;\n            case 'NonInterruptingIntermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.style.strokeDashArray = '2 3';\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                innerEvtNode.style.fill = event !== 'End' ? 'white' : 'black';\n                innerEvtNode.style.gradient = null;\n                triggerNode.style.fill = 'black';\n                triggerNode.style.strokeColor = node.style.strokeColor;\n                break;\n        }\n        //append child and set style\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        eventshape.children = [innerEvtNode, outerEvtNode, triggerNode];\n        this.setSizeForBPMNEvents(shapeEvent, eventshape, width, height);\n        return eventshape;\n    };\n    BpmnDiagrams.prototype.setEventVisibility = function (node, canvas) {\n        var event = node.shape.event.event;\n        var innerEvtNode = canvas[0];\n        var outerEvtNode = canvas[1];\n        var triggerNode = canvas[2];\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n        }\n    };\n    BpmnDiagrams.prototype.setSubProcessVisibility = function (node) {\n        var subProcess = node.shape.activity.subProcess;\n        var eventLength = subProcess.events.length;\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index + eventLength].visible = false;\n        }\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index + eventLength].visible = false;\n        }\n        if (eventLength > 0) {\n            for (var i = 0; i < eventLength; i++) {\n                this.setEventVisibility(node, elementWrapper.children[2 + i].children);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessShape = function (node) {\n        var subProcessShapes = new Canvas();\n        var loopType;\n        var events;\n        var event;\n        var subprocessAdhoc = new PathElement();\n        var subProcessEventsShapes = new Canvas();\n        var subProcessLoopShapes = new PathElement();\n        var shape = node.shape.activity;\n        var subProcess = shape.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var subprocessNode = new DiagramElement();\n        subprocessNode.id = node.id + '_0_Subprocess';\n        subprocessNode.style.fill = 'transparent';\n        subprocessNode.cornerRadius = 10;\n        var size = this.getSize(node, subprocessNode);\n        subprocessNode.width = size.width;\n        subprocessNode.height = size.height;\n        subProcessShapes.children = [subprocessNode];\n        if (shape.subProcess.type === 'Transaction') {\n            this.getBPMNSubProcessTransaction(node, node.shape, subProcessShapes);\n        }\n        var iconSpace = 4;\n        var subChildSpace = 12;\n        var childSpace = subChildCount * subChildSpace;\n        var area = size.width / 2;\n        if (subChildCount === 1) {\n            x = area - (subChildSpace * 0.5);\n        }\n        else {\n            x = area - (childSpace / 2) - ((subChildCount - 1) * iconSpace) / 2;\n        }\n        //set style\n        this.setStyle(subprocessNode, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            subProcessShapes.shadow = node.shadow;\n        }\n        var collapsedShape = new PathElement();\n        collapsedShape.id = node.id + '_0_collapsed';\n        collapsedShape.width = 12;\n        collapsedShape.height = 12;\n        collapsedShape.style.fill = 'black';\n        collapsedShape.style.strokeColor = node.style.strokeColor;\n        collapsedShape.margin.bottom = 5;\n        collapsedShape.horizontalAlignment = 'Left';\n        collapsedShape.verticalAlignment = 'Bottom';\n        collapsedShape.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        collapsedShape.relativeMode = 'Point';\n        collapsedShape.data = getBpmnShapePathData('collapsedShape');\n        collapsedShape.margin.left = x;\n        if (subProcess.collapsed === true && !subProcess.processes) {\n            collapsedShape.visible = true;\n        }\n        else {\n            collapsedShape.visible = false;\n        }\n        if (collapsedShape.visible === true) {\n            x += 12 + 6;\n        }\n        subProcessShapes.children.push(collapsedShape);\n        if (subProcess.type === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n            events = subProcess.events;\n            for (var i = 0; i < events.length; i++) {\n                event = events[i];\n                this.getBPMNSubEvent(event, node, subProcessShapes);\n            }\n        }\n        // set loop for subprocess\n        subProcessLoopShapes = this.getBPMNSubProcessLoopShape(node);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subProcessLoopShapes.margin.left = x;\n        if (subProcessLoopShapes.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subProcessLoopShapes);\n        // set boundary for subprocess\n        subprocessNode.id = node.id + '_boundary';\n        if (subProcess.boundary === 'Default') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            subprocessNode.style.strokeWidth = 4;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n        }\n        //set adhoc for subprocess\n        subprocessAdhoc = this.getBPMNAdhocShape(node, subprocessAdhoc, subProcess);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessAdhoc.margin.left = x;\n        if (subprocessAdhoc.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessAdhoc);\n        //set compensation for subprocess\n        var subprocessComp = new PathElement();\n        if (subProcess.compensation === true) {\n            subprocessComp.visible = true;\n        }\n        else {\n            subprocessComp.visible = false;\n        }\n        subprocessComp = this.getBPMNCompensationShape(node, subprocessComp);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessComp.margin.left = x;\n        if (subprocessComp.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessComp);\n        //set style for subprocess\n        subProcessShapes.style.strokeColor = 'transparent';\n        subProcessShapes.style.strokeWidth = 0;\n        subProcessShapes.style.fill = 'transparent';\n        return subProcessShapes;\n    };\n    BpmnDiagrams.prototype.getBPMNSubEvent = function (event, node, container, id) {\n        container.children = container.children || [];\n        var eventContainer;\n        eventContainer = this.getBPMNEventShape(node, event, true, id);\n        this.getBPMNSubprocessEvent(node, eventContainer, event);\n        eventContainer.id = id || (node.id + '_subprocessEvents');\n        eventContainer.width = event.width || 20;\n        eventContainer.height = event.height || 20;\n        // set offset for subevents\n        eventContainer.setOffsetWithRespectToBounds(event.offset.x, event.offset.y, 'Fraction');\n        eventContainer.relativeMode = 'Point';\n        //set margin for subevents\n        eventContainer.margin = event.margin;\n        //set alignment for subevents\n        eventContainer.horizontalAlignment = event.horizontalAlignment;\n        eventContainer.verticalAlignment = event.verticalAlignment;\n        // set style for subevent\n        eventContainer.style.fill = 'transparent';\n        eventContainer.style.strokeColor = 'transparent';\n        eventContainer.style.strokeWidth = 0;\n        container.children.push(eventContainer);\n    };\n    BpmnDiagrams.prototype.getBPMNSubProcessTransaction = function (node, shape, container) {\n        var shapeWidth = container.children[0].width;\n        var shapeHeight = container.children[0].height;\n        var innerRect = new DiagramElement();\n        innerRect.margin = { left: 3, right: 0, top: 3, bottom: 0 };\n        innerRect.id = node.id + '_0_Subprocess_innnerRect';\n        innerRect.cornerRadius = 10;\n        innerRect.width = shapeWidth - 6;\n        innerRect.height = shapeHeight - 6;\n        container.children.push(innerRect);\n        var transactionEvents = new Canvas();\n        transactionEvents.id = node.id + '_transaction_events';\n        transactionEvents.style.gradient = node.style.gradient;\n        var transaction = shape.activity.subProcess.transaction;\n        this.getBPMNSubEvent(transaction.success, node, transactionEvents, node.id + '_success');\n        this.getBPMNSubEvent(transaction.cancel, node, transactionEvents, node.id + '_cancel');\n        this.getBPMNSubEvent(transaction.failure, node, transactionEvents, node.id + '_failure');\n        this.updateDiagramContainerVisibility(transactionEvents.children[0], transaction.success.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[1], transaction.cancel.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[2], transaction.failure.visible);\n        transactionEvents.float = true;\n        transactionEvents.width = shapeWidth;\n        transactionEvents.height = shapeHeight;\n        transactionEvents.style.fill = transactionEvents.style.strokeColor = 'transparent';\n        container.children.push(transactionEvents);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessLoopShape = function (node) {\n        var shape = node.shape.activity;\n        var loopType;\n        var subprocessLoop = new PathElement();\n        var subprocessLoopData;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        subprocessLoopData = getBpmnLoopShapePathData(loopType);\n        if (loopType !== 'None') {\n            subprocessLoop.visible = true;\n        }\n        else {\n            subprocessLoop.visible = false;\n        }\n        subprocessLoop.id = node.id + '_loop';\n        subprocessLoop.data = subprocessLoopData;\n        subprocessLoop.style.fill = 'black';\n        subprocessLoop.width = 12;\n        subprocessLoop.height = 12;\n        subprocessLoop.horizontalAlignment = 'Left';\n        subprocessLoop.verticalAlignment = 'Bottom';\n        subprocessLoop.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        subprocessLoop.relativeMode = 'Point';\n        subprocessLoop.margin.bottom = 5;\n        subprocessLoop.style.fill = 'transparent';\n        subprocessLoop.style.strokeColor = node.style.strokeColor;\n        return subprocessLoop;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.drag = function (obj, tx, ty, diagram) {\n        var node = diagram.nameTable[(obj).processId];\n        if (obj.margin.top + ty >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { top: obj.margin.top + ty } });\n        }\n        if (obj.margin.left + tx >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { left: obj.margin.left + tx } });\n        }\n        var diffX = 0;\n        var diffY = 0;\n        var bound = this.getChildrenBound(node, obj.id, diagram);\n        this.updateSubProcessess(bound, obj, diagram);\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        diagram.refreshCanvasLayers();\n        diagram.updateSelector();\n        this.updateDocks(obj, diagram);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.dropBPMNchild = function (target, source, diagram) {\n        if (source && source.shape.type === 'Bpmn' && target.shape.type === 'Bpmn'\n            && ((!isBlazor() && source.shape.shape !== 'TextAnnotation') ||\n                (isBlazor() && source.shape.bpmnShape !== 'TextAnnotation'))) {\n            var subProcess = diagram.nameTable[target.id].shape.activity.subProcess;\n            if (diagram.currentSymbol && target.shape.type === 'Bpmn' && !subProcess.collapsed) {\n                source.processId = target.id;\n                return;\n            }\n            subProcess.processes = subProcess.processes || [];\n            if (subProcess.processes && subProcess.processes.indexOf(source.id) === -1 && !subProcess.collapsed) {\n                subProcess.processes.push(source.id);\n                var redoElement = cloneObject(source);\n                var sources = diagram.nameTable[source.id].wrapper;\n                var targetWrapper = diagram.nameTable[target.id].wrapper;\n                sources.margin.top = (sources.offsetY - (sources.actualSize.height / 2))\n                    - (target.offsetY - (target.actualSize.height / 2));\n                sources.margin.left = (sources.offsetX - (sources.actualSize.width / 2))\n                    - (target.offsetX - (target.actualSize.width / 2));\n                sources.margin.top = (sources.margin.top < 0) ? 0 : sources.margin.top;\n                sources.margin.left = (sources.margin.left < 0) ? 0 : sources.margin.left;\n                diagram.nameTable[source.id].processId = target.id;\n                targetWrapper.children.push(diagram.nameTable[source.id].wrapper);\n                var bound = this.getChildrenBound(target, source.id, diagram);\n                this.updateSubProcessess(bound, source, diagram);\n                targetWrapper.measure(new Size(undefined, undefined));\n                targetWrapper.arrange(targetWrapper.desiredSize);\n                diagram.refreshCanvasLayers();\n                diagram.updateSelector();\n                var edges = [];\n                edges = edges.concat(source.outEdges, source.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    if (diagram.bpmnModule.textAnnotationConnectors.indexOf(diagram.nameTable[edges[i]]) === -1) {\n                        diagram.remove(diagram.nameTable[edges[i]]);\n                    }\n                }\n                var obj = cloneObject(source);\n                var entry = {\n                    type: 'PositionChanged', undoObject: { nodes: [redoElement] },\n                    redoObject: { nodes: [obj] }, category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.mode === 'SVG') {\n                    if (source.zIndex < target.zIndex) {\n                        diagram.updateProcesses(source);\n                    }\n                }\n                this.updateDocks(source, diagram);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateDocks = function (obj, diagram) {\n        if (obj.shape.type === 'Bpmn' && obj.shape.activity.subProcess.processes &&\n            !obj.shape.activity.subProcess.collapsed) {\n            var processTable = obj.shape.activity.subProcess.processes;\n            for (var _i = 0, processTable_1 = processTable; _i < processTable_1.length; _i++) {\n                var i = processTable_1[_i];\n                var actualObject = diagram.nameTable[i];\n                if (actualObject) {\n                    diagram.updateConnectorEdges(actualObject);\n                    actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                    actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                    if (actualObject.shape.activity.subProcess.processes\n                        && actualObject.shape.activity.subProcess.processes.length) {\n                        this.updateDocks(actualObject, diagram);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeBpmnProcesses = function (currentObj, diagram) {\n        var element = diagram.nameTable[currentObj.processId];\n        if (currentObj.shape.type === 'Bpmn' && currentObj.shape.activity.subProcess.processes &&\n            currentObj.shape.activity.subProcess.processes.length > 0) {\n            var processes = currentObj.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                diagram.remove(diagram.nameTable[processes[j]]);\n            }\n        }\n        if (element) {\n            diagram.removeDependentConnector(currentObj);\n            var processes = element.shape.activity.subProcess.processes;\n            this.removeChildFromBPMN(element.wrapper, currentObj.id);\n            var processIndex = processes.indexOf(currentObj.id);\n            processes.splice(processIndex, 1);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeChildFromBPMN = function (wrapper, name) {\n        for (var _i = 0, _a = wrapper.children; _i < _a.length; _i++) {\n            var i = _a[_i];\n            if (i.id === name) {\n                wrapper.children.splice(wrapper.children.indexOf(i), 1);\n            }\n            else if (i.children) {\n                this.removeChildFromBPMN(i, name);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeProcess = function (id, diagram) {\n        var node = diagram.nameTable[id];\n        if (node) {\n            var parent_1 = diagram.nameTable[node.processId];\n            if (parent_1 && parent_1.shape.type === 'Bpmn') {\n                var processes = parent_1.shape.activity.subProcess.processes;\n                diagram.removeDependentConnector(node);\n                this.removeChildFromBPMN(parent_1.wrapper, id);\n                var processIndex = processes.indexOf(id);\n                processes.splice(processIndex, 1);\n                node.processId = '';\n                diagram.refreshDiagramLayer();\n                diagram.updateSelector();\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addProcess = function (process, parentId, diagram) {\n        var id;\n        process.id = process.id || randomId();\n        id = process.id;\n        var node = diagram.nameTable[id];\n        if (!node) {\n            diagram.add(process);\n        }\n        process.processId = parentId;\n        var parentNode = diagram.nameTable[parentId];\n        var subProcess = parentNode.shape.activity.subProcess;\n        if (node && parentNode && parentNode.shape.type === 'Bpmn' && node.shape.type === 'Bpmn' &&\n            subProcess.processes) {\n            node.processId = parentId;\n            var processes = parentNode.shape.activity.subProcess.processes;\n            if (processes.indexOf(id) < 0) {\n                processes.push(id);\n            }\n            parentNode.wrapper.children.push(node.wrapper);\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n            diagram.bpmnModule.updateDocks(parentNode, diagram);\n            diagram.refreshDiagramLayer();\n            if (diagram.mode === 'SVG' && (node.shape && node.shape.activity\n                && !node.shape.activity.subProcess.processes)) {\n                var child = getDiagramElement(parentId + '_groupElement');\n                child.appendChild(getDiagramElement(process.id + '_groupElement'));\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getChildrenBound = function (node, excludeChild, diagram) {\n        var processes = node.shape.activity.subProcess.processes;\n        var bound;\n        if (processes && processes.length) {\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                if (excludeChild !== i) {\n                    if (!bound) {\n                        bound = diagram.nameTable[i].wrapper.bounds;\n                    }\n                    else {\n                        bound = diagram.nameTable[i].wrapper.bounds.uniteRect(bound);\n                    }\n                }\n            }\n        }\n        return bound || diagram.nameTable[excludeChild].wrapper.bounds;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateSubProcessess = function (bound, obj, diagram) {\n        var diffX;\n        var diffY;\n        var node = diagram.nameTable[obj.processId];\n        var right;\n        var bottom;\n        var pivot = { x: 0.5, y: 0.5 };\n        if ((node.wrapper.bounds.left + obj.margin.left + obj.width) > (node.wrapper.bounds.right)) {\n            right = true;\n        }\n        if ((node.wrapper.bounds.top + obj.margin.top + obj.height) > (node.wrapper.bounds.bottom)) {\n            bottom = true;\n        }\n        if (right) {\n            pivot.x = 0;\n        }\n        if (bottom) {\n            pivot.y = 0;\n        }\n        var actualSize = node.wrapper.actualSize;\n        if (right) {\n            diffX = (obj.wrapper.margin.left + obj.wrapper.bounds.width) / actualSize.width;\n        }\n        if (bottom) {\n            diffY = (obj.wrapper.margin.top + obj.wrapper.bounds.height) / actualSize.height;\n        }\n        if (diffX > 0 || diffY > 0) {\n            diagram.commandHandler.scale(diagram.nameTable[obj.processId], diffX || 1, diffY || 1, pivot);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNCompensationShape = function (node, compensationNode) {\n        compensationNode.id = node.id + '_0_compensation';\n        compensationNode.width = 12;\n        compensationNode.height = 12;\n        compensationNode.margin.bottom = 5;\n        compensationNode.style.fill = 'transparent';\n        compensationNode.style.strokeColor = node.style.strokeColor;\n        compensationNode.horizontalAlignment = 'Left';\n        compensationNode.verticalAlignment = 'Bottom';\n        compensationNode.relativeMode = 'Object';\n        compensationNode.data = 'M 22.462 18.754 l -6.79 3.92 l 6.79 3.92 V 22.89 l 6.415 3.705 v -7.841 l -6.415 3.705 V 18.754 Z' +\n            ' M 28.331 19.701 v 5.947 l -5.149 -2.973 L 28.331 19.701 Z M 21.916 25.647 l -5.15 -2.973 l 5.15 -2.973 V 25.647 Z' +\n            ' M 22.275 12.674 c -5.513 0 -9.999 4.486 -9.999 9.999 c 0 5.514 4.486 10.001 9.999 10.001' +\n            ' c 5.514 0 9.999 -4.486 9.999 -10.001 C 32.274 17.16 27.789 12.674 22.275 12.674 Z M 22.275 32.127 ' +\n            ' c -5.212 0 -9.453 -4.241 -9.453 -9.454 c 0 -5.212 4.241 -9.453 9.453 -9.453 c 5.212 0 9.453 4.241 9.453 9.453' +\n            ' C 31.728 27.887 27.487 32.127 22.275 32.127 Z';\n        return compensationNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNActivityShape = function (node) {\n        var eventshape = new Canvas();\n        var content;\n        var shape = node.shape.activity;\n        var task = shape.activity;\n        var subProcess = shape.subProcess;\n        var activityType = shape.activity;\n        if (task === 'Task') {\n            content = this.getBPMNTaskShape(node);\n        }\n        if (task === 'SubProcess' && subProcess) {\n            content = this.getBPMNSubProcessShape(node);\n        }\n        content.id = task + node.id;\n        eventshape.children = [content];\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        return eventshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubprocessEvent = function (node, subProcessEventsShapes, events) {\n        var annotations;\n        var ports;\n        if (events.annotations.length !== 0) {\n            for (var i = 0; i < events.annotations.length; i++) {\n                var annot = events.annotations[i];\n                annotations = node.initAnnotationWrapper(annot);\n                annotations.width = events.width;\n                annotations.height = events.height;\n                subProcessEventsShapes.children.push(annotations);\n            }\n        }\n        if (events.ports.length !== 0) {\n            for (var i = 0; i < events.ports.length; i++) {\n                var port = events.ports[i];\n                ports = node.initPortWrapper(port);\n                subProcessEventsShapes.children.push(ports);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNAdhocShape = function (node, adhocNode, subProcess) {\n        adhocNode.id = node.id + '_0_adhoc';\n        adhocNode.width = 12;\n        adhocNode.height = 8;\n        adhocNode.style.fill = 'black';\n        adhocNode.style.strokeColor = node.style.strokeColor;\n        adhocNode.margin.bottom = 5;\n        adhocNode.horizontalAlignment = 'Left';\n        adhocNode.verticalAlignment = 'Bottom';\n        adhocNode.relativeMode = 'Object';\n        adhocNode.data = 'M 49.832 76.811 v -2.906 c 0 0 0.466 -1.469 1.931 -1.5 c 1.465 -0.031 2.331 1.219 2.897 1.688 ' +\n            's 1.06 0.75 1.526 0.75 c 0.466 0 1.548 -0.521 1.682 -1.208 s 0.083 3.083 0.083 3.083 s -0.76 0.969 -1.859 0.969 ' +\n            'c -1.066 0 -1.865 -0.625 -2.464 -1.438 s -1.359 -0.998 -2.064 -0.906 C 50.598 75.467 49.832 76.811 49.832 76.811 Z';\n        if (subProcess && subProcess.adhoc === true) {\n            adhocNode.visible = true;\n        }\n        else {\n            adhocNode.visible = false;\n        }\n        return adhocNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTextAnnotation = function (node, diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        annotation.nodeId = node.id;\n        var annotationContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textElement = new TextElement();\n        var margin = 10;\n        annotationPath.id = node.id + '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textElement.id = node.id + '_' + annotation.id + '_text';\n        textElement.content = annotation.text;\n        var style = node.style;\n        textElement.style = {\n            fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n            bold: style.bold, textWrapping: style.textWrapping, color: style.color, fill: 'white',\n            fontFamily: style.fontFamily, whiteSpace: style.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textDecoration: style.textDecoration\n        };\n        textElement.horizontalAlignment = 'Center';\n        textElement.verticalAlignment = 'Center';\n        textElement.relativeMode = 'Object';\n        textElement.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationContainer.offsetX = node.offsetX + annotation.length *\n            Math.cos(annotation.angle * (Math.PI / 180));\n        annotationContainer.offsetY = node.offsetY + annotation.length *\n            Math.sin(annotation.angle * (Math.PI / 180));\n        annotationContainer.float = true;\n        annotationContainer.transform = Transform.Self;\n        annotationContainer.id = node.id + '_textannotation_' + annotation.id;\n        annotationContainer.style.strokeColor = 'transparent';\n        annotationContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationContainer.relativeMode = 'Object';\n        annotationContainer.rotateAngle = 0;\n        annotationContainer.children = [annotationPath, textElement];\n        var annotationNode = new Node(node.shape, 'annotations', { id: annotationContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationNode.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationNode.offsetX = annotationContainer.offsetX;\n        annotationNode.offsetY = annotationContainer.offsetY;\n        annotationNode.text = annotation.text;\n        annotationNode.angle = annotation.angle;\n        annotationNode.length = annotation.length;\n        annotationNode.width = annotation.width;\n        annotationNode.height = annotation.height;\n        annotationNode.wrapper = annotationContainer;\n        annotationContainer.children.push(annotationNode.initPortWrapper(annotationNode.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = node.width || node.minWidth || 0;\n        var height = node.height || node.minHeight || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(node.offsetX - width / 2, node.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationContainer, { x: annotationNode.offsetX, y: annotationNode.offsetY }, annotationNode, annotation.length, annotation.angle);\n        var connector = {\n            id: node.id + '_' + annotation.id + '_connector',\n            constraints: ConnectorConstraints.Default & ~(ConnectorConstraints.DragTargetEnd | ConnectorConstraints.Drag),\n            sourceID: node.id, targetID: annotationContainer.id,\n            targetDecorator: { shape: 'None' }\n        };\n        var annotationConnector = new Connector(node.shape, 'annotations', connector, true);\n        annotationConnector.targetPortID = annotationNode.ports[0].id;\n        annotationConnector.init(diagram);\n        annotationConnector.wrapper.float = false;\n        annotationConnector.wrapper.transform = Transform.Self;\n        content.children.push(annotationConnector.wrapper);\n        annotationConnector.zIndex = 10000;\n        var entry = this.annotationObjects[node.id];\n        if (!entry) {\n            entry = {};\n        }\n        if (!entry[annotation.id]) {\n            entry[annotation.id] = {};\n        }\n        var nodeKey = 'node';\n        var connKey = 'connector';\n        entry[annotation.id][nodeKey] = annotationNode;\n        entry[annotation.id][connKey] = annotationConnector;\n        this.annotationObjects[node.id] = entry;\n        diagram.initObject(annotationNode, undefined, false);\n        annotationNode.zIndex = 10000;\n        return annotationContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.renderBPMNTextAnnotation = function (diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        var annotationsContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textObject = new TextElement();\n        var margin = 10;\n        annotationPath.id = '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textObject.id = annotation.id + '_text';\n        textObject.content = annotation.shape.annotation.text;\n        var textStyle = annotation.style;\n        textObject.style = {\n            fontSize: textStyle.fontSize, italic: textStyle.italic, gradient: null, opacity: textStyle.opacity,\n            bold: textStyle.bold, textWrapping: textStyle.textWrapping, color: textStyle.color, fill: 'white',\n            fontFamily: textStyle.fontFamily, whiteSpace: textStyle.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: textStyle.strokeDashArray, textAlign: textStyle.textAlign, textDecoration: textStyle.textDecoration\n        };\n        textObject.horizontalAlignment = 'Left';\n        textObject.verticalAlignment = 'Center';\n        textObject.relativeMode = 'Object';\n        textObject.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationsContainer.offsetX = annotation.offsetX + annotation.shape.annotation.length *\n            Math.cos(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.offsetY = annotation.offsetY + annotation.shape.annotation.length *\n            Math.sin(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.float = true;\n        //    annotationContainer.transform = Transform.Self;\n        annotationsContainer.id = annotation.id + '_textannotation_' + annotation.id;\n        annotationsContainer.style.strokeColor = 'transparent';\n        annotationsContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationsContainer.relativeMode = 'Object';\n        annotationsContainer.rotateAngle = 0;\n        annotationsContainer.children = [annotationPath, textObject];\n        var annotationObject = new Node(annotation.shape, 'annotations', { id: annotationsContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationObject.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationObject.offsetX = annotationsContainer.offsetX;\n        annotationObject.offsetY = annotationsContainer.offsetY;\n        if (annotationObject.shape && annotationObject.shape.annotation) {\n            annotationObject.text = annotation.shape.annotation.text;\n            annotationObject.angle = annotation.shape.annotation.angle;\n            annotationObject.length = annotation.shape.annotation.length;\n        }\n        annotationObject.width = annotation.width;\n        annotationObject.height = annotation.height;\n        annotationObject.wrapper = annotationsContainer;\n        annotationsContainer.children.push(annotationObject.initPortWrapper(annotationObject.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = annotation.width || 0;\n        var height = annotation.height || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(annotation.offsetX - width / 2, annotation.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationsContainer, { x: annotationObject.offsetX, y: annotationObject.offsetY }, annotationObject, annotation.length, annotation.angle);\n        return annotationsContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationWrapper = function (node, id) {\n        if (node && node.shape.type === 'Bpmn') {\n            var shape = (isBlazor() ? node.shape.bpmnShape : node.shape.shape);\n            if (shape === 'TextAnnotation') {\n                return node.wrapper.children[1];\n            }\n            else if (this.annotationObjects[node.id] && this.annotationObjects[node.id][id]) {\n                var annotationNode = this.annotationObjects[node.id][id].node;\n                return this.getTextAnnotationWrapper(annotationNode, id);\n            }\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addAnnotation = function (node, annotation, diagram) {\n        var bpmnShapeContent = node.wrapper.children[0];\n        var shape = node.shape;\n        annotation.nodeId = node.id;\n        var annotationObj = new BpmnAnnotation(shape, 'annotations', annotation, true);\n        shape.annotations.push(annotationObj);\n        bpmnShapeContent.children.push(this.getBPMNTextAnnotation(node, diagram, annotation, bpmnShapeContent));\n        node.wrapper.measure(new Size());\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        return this.annotationObjects[node.id][annotation.id].connector;\n    };\n    BpmnDiagrams.prototype.clearAnnotations = function (obj, diagram) {\n        var bpmnShape = obj.shape;\n        if (bpmnShape.annotations.length) {\n            for (var i = bpmnShape.annotations.length - 1; i >= 0; i--) {\n                var annotation = bpmnShape.annotations[i];\n                this.removeAnnotationObjects(obj, annotation, diagram);\n            }\n        }\n        delete this.annotationObjects[obj.id];\n    };\n    /** @private */\n    BpmnDiagrams.prototype.checkAndRemoveAnnotations = function (node, diagram) {\n        //remove connector path\n        //remove annotation node wrapper\n        //remove from a quad\n        if (node.shape.type === 'Bpmn') {\n            if ((!isBlazor() && node.shape.shape === 'TextAnnotation') ||\n                (isBlazor() && node.shape.bpmnShape === 'TextAnnotation')) {\n                var id = node.id.split('_');\n                var annotationId = id[id.length - 1];\n                var nodeId = id[id.length - 3] || id[0];\n                var parentNode = diagram.nameTable[nodeId];\n                var bpmnShape = parentNode.shape;\n                for (var _i = 0, _a = bpmnShape.annotations; _i < _a.length; _i++) {\n                    var annotation = _a[_i];\n                    if (annotation.id === annotationId) {\n                        var index = bpmnShape.annotations.indexOf(annotation);\n                        if (index !== -1) {\n                            diagram.removeDependentConnector(node);\n                            this.removeAnnotationObjects(parentNode, annotation, diagram);\n                            return true;\n                        }\n                    }\n                }\n            }\n            else if (node.shape.annotations && node.shape.annotations.length) {\n                this.clearAnnotations(node, diagram);\n            }\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.removeAnnotationObjects = function (parentNode, annotation, diagram) {\n        var bpmnShape = parentNode.shape;\n        var index = bpmnShape.annotations.indexOf(annotation);\n        if (index !== -1) {\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo) && !(diagram.diagramActions & DiagramAction.Group)) {\n                var entry_1 = {\n                    type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry_1);\n            }\n            bpmnShape.annotations.splice(index, 1);\n            var entry = this.annotationObjects[parentNode.id];\n            if (entry && entry[annotation.id]) {\n                var annotationNode = entry[annotation.id].node;\n                var annotationConnector = entry[annotation.id].connector;\n                diagram.removeElements(annotationNode);\n                diagram.removeElements(annotationConnector);\n                var nodeContent = parentNode.wrapper.children[0];\n                index = nodeContent.children.indexOf(annotationNode.wrapper);\n                nodeContent.children.splice(index, 1);\n                index = nodeContent.children.indexOf(annotationConnector.wrapper);\n                nodeContent.children.splice(index, 1);\n                diagram.removeFromAQuad(annotationNode);\n                diagram.removeFromAQuad(annotationConnector);\n                delete diagram.nameTable[annotationNode.id];\n                delete diagram.nameTable[annotationConnector.id];\n                delete entry[annotation.id];\n            }\n        }\n    };\n    BpmnDiagrams.prototype.setAnnotationPath = function (parentBounds, wrapper, position, node, length, angle) {\n        var rotateAngle = this.getAnnotationPathAngle(position, parentBounds);\n        var data = '';\n        var pathElement = wrapper.children[0];\n        var portElement = wrapper.children[2];\n        var textElement = wrapper.children[1];\n        pathElement.horizontalAlignment = 'Stretch';\n        pathElement.verticalAlignment = 'Stretch';\n        textElement.margin.left = textElement.margin.right = 5;\n        textElement.margin.top = textElement.margin.bottom = 5;\n        var point;\n        var segment;\n        if (rotateAngle === 0) {\n            data = 'M10,20 L0,20 L0,0 L10,0';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Left';\n            portElement.setOffsetWithRespectToBounds(0, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleRight;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.right, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 180) {\n            data = 'M0,0 L10,0 L10,20 L0,20';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Right';\n            portElement.setOffsetWithRespectToBounds(1, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleLeft;\n            segment = {\n                x1: parentBounds.left, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 90) {\n            data = 'M20,10 L20,0 L0,0 L0,10';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Top';\n            portElement.setOffsetWithRespectToBounds(0.5, 0, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.bottomCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.bottom,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else {\n            data = 'M0,0 L0,10 L20,10 L20,0';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Bottom';\n            portElement.setOffsetWithRespectToBounds(0.5, 1, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.topCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.top,\n            };\n        }\n        var center = parentBounds.center;\n        var endPoint = Point.transform(position, angle, Math.max(parentBounds.width, parentBounds.height));\n        point = getIntersectionPoints(segment, [center, endPoint], false, center);\n        pathElement.data = data;\n        if (length !== undefined && angle !== undefined) {\n            point = Point.transform(point, angle, length);\n            wrapper.offsetX = node.offsetX = point.x;\n            wrapper.offsetY = node.offsetY = point.y;\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.isBpmnTextAnnotation = function (activeLabel, diagram) {\n        if (this.annotationObjects) {\n            var parentNodeId = activeLabel.parentId;\n            var annotationId = activeLabel.id;\n            var parentNode = diagram.nameTable[parentNodeId];\n            if (parentNode && parentNode.shape.type === 'Bpmn' && this.annotationObjects[parentNodeId] &&\n                this.annotationObjects[parentNodeId][annotationId]) {\n                return parentNode;\n            }\n            return null;\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationContent = function (parentNode, activeLabel, text, diagram) {\n        var parentNodeId = activeLabel.parentId;\n        var annotationId = activeLabel.id;\n        if (this.annotationObjects[parentNodeId] && this.annotationObjects[parentNodeId][annotationId]) {\n            for (var _i = 0, _a = parentNode.shape.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                if (annotation.id === annotationId) {\n                    annotation.text = text;\n                    var wrapper = this.annotationObjects[parentNodeId][annotationId].node.wrapper.children[1];\n                    wrapper.content = text;\n                    wrapper.visible = true;\n                    parentNode.wrapper.measure(new Size());\n                    parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.updateQuad = function (actualObject, diagram) {\n        var annotation = actualObject.shape.annotations;\n        var annotationNode;\n        if (annotation && annotation.length > 0) {\n            for (var i = 0; i < annotation.length; i++) {\n                annotationNode = this.annotationObjects[actualObject.id][annotation[i].id].node;\n                diagram.updateQuad(annotationNode);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationProp = function (actualObject, oldObject, diagram) {\n        if (actualObject.shape.type === 'Bpmn') {\n            var annotation = actualObject.shape.annotations;\n            if (annotation && annotation.length > 0) {\n                for (var i = 0; i < actualObject.wrapper.children[0].children.length; i++) {\n                    for (var j = 0; j < annotation.length; j++) {\n                        var annotationId = actualObject.wrapper.children[0].children[i].id.split('_');\n                        var id = annotationId[annotationId.length - 1];\n                        if (id === annotation[j].id) {\n                            var annotationNode = this.annotationObjects[actualObject.id][annotation[j].id].node;\n                            var connector = this.annotationObjects[actualObject.id][annotation[j].id].connector;\n                            var direction = getPortDirection(connector.targetPoint, actualObject.wrapper.bounds, actualObject.wrapper.bounds, false);\n                            var position = connector.sourcePoint;\n                            position = {\n                                x: connector.sourcePoint.x + actualObject.offsetX - (oldObject.offsetX),\n                                y: connector.sourcePoint.y + actualObject.offsetY - (oldObject.offsetY)\n                            };\n                            position = Point.transform(position, annotation[j].angle, annotation[j].length);\n                            actualObject.wrapper.children[0].children[i].offsetX =\n                                annotationNode.offsetX = position.x;\n                            actualObject.wrapper.children[0].children[i].offsetY =\n                                annotationNode.offsetY = position.y;\n                            diagram.updateQuad(annotationNode);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    // /** @private */\n    // public findInteractableObject(obj: ConnectorModel, diagram: Diagram): NodeModel | ConnectorModel {\n    //     if (obj.targetID) {\n    //         let targetNode: NodeModel = diagram.nameTable[obj.targetID];\n    //         if (targetNode.shape.type === 'Bpmn' && (targetNode.shape as BpmnShape).shape === 'TextAnnotation') {\n    //             return targetNode;\n    //         }\n    //     }\n    //     return obj;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getSubprocessChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var loopType;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        if (loopType !== undefined && loopType !== 'None') {\n            count++;\n        }\n        if ((subProcess.compensation !== undefined) &&\n            subProcess.compensation === true) {\n            count++;\n        }\n        if ((subProcess.collapsed !== undefined) &&\n            subProcess.collapsed === true) {\n            count++;\n        }\n        if ((subProcess.adhoc !== undefined) &&\n            subProcess.adhoc === true) {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTaskChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var loopType;\n        if ((task.compensation !== undefined) &&\n            task.compensation === true) {\n            count++;\n        }\n        if ((task.loop !== undefined) &&\n            task.loop !== 'None') {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.setStyle = function (child, node) {\n        //set style\n        child.style.fill = node.style.fill;\n        child.style.strokeColor = node.style.strokeColor;\n        child.style.strokeWidth = node.style.strokeWidth;\n        child.style.strokeDashArray = node.style.strokeDashArray;\n        child.style.opacity = node.style.opacity;\n        child.style.gradient = node.style.gradient;\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            child.shadow = node.shadow;\n        }\n    };\n    //End code conversion region\n    //Update BPMN Shapes on NodePropertyChange\n    //Start region\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMN = function (changedProp, oldObject, actualObject, diagram) {\n        var newShape = changedProp.shape || {};\n        var elementWrapper = actualObject.wrapper.children[0];\n        var actualShape = actualObject.shape.shape ||\n            (actualObject.shape.bpmnShape);\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (((isBlazor() && newShape.bpmnShape === 'Gateway') || newShape.shape === 'Gateway') &&\n            newShape.gateway) {\n            actualObject.wrapper.children[0] = this.getBPMNGatewayShape(actualObject);\n        }\n        else if (((isBlazor() && newShape.bpmnShape === 'DataObject') || newShape.shape === 'DataObject') &&\n            newShape.dataObject) {\n            actualObject.wrapper.children[0] = this.getBPMNDataObjectShape(actualObject);\n        }\n        else if (((isBlazor() && newShape.bpmnShape === 'Activity') || newShape.shape === 'Activity') &&\n            newShape.activity) {\n            actualObject.wrapper.children[0] = this.getBPMNActivityShape(actualObject);\n        }\n        else if (((isBlazor() && newShape.bpmnShape === 'Event') || newShape.shape === 'Event') &&\n            newShape.event) {\n            var shapeEvent = newShape.event;\n            actualObject.wrapper.children[0] = this.getBPMNEventShape(actualObject, shapeEvent);\n        }\n        else if (((isBlazor() && newShape.bpmnShape === 'Message') || newShape.shape === 'Message') ||\n            ((isBlazor() && newShape.bpmnShape === 'DataSource') || newShape.shape === 'DataSource')) {\n            actualObject.wrapper.children[0] = this.getBPMNShapes(actualObject);\n            //} \n            // else if (newShape.shape === 'Group') {\n            //     actualObject.wrapper.children[0] = this.getBPMNGroup(actualObject, diagram);\n        }\n        else if (newShape.gateway !== undefined || (actualShape === 'Gateway' && sizeChanged)) {\n            this.updateBPMNGateway(actualObject, changedProp);\n        }\n        else if (newShape.dataObject !== undefined || (actualShape === 'DataObject' && sizeChanged)) {\n            this.updateBPMNDataObject(actualObject, changedProp, oldObject);\n        }\n        else if (newShape.activity !== undefined || (actualShape === 'Activity' && sizeChanged)) {\n            this.updateBPMNActivity(actualObject, changedProp, oldObject, diagram);\n        }\n        else if (newShape.event !== undefined || (actualShape === 'Event' && sizeChanged)) {\n            this.updateBPMNEvent(actualObject, changedProp, oldObject);\n        }\n        if (changedProp.style) {\n            updateStyle(changedProp.style, elementWrapper instanceof Container ? ((!isBlazor() && actualObject.shape.shape === 'Activity' ||\n                (isBlazor() && actualObject.shape.bpmnShape === 'Activity'))) ?\n                elementWrapper.children[0].children[0] :\n                elementWrapper.children[0] : elementWrapper);\n            if (changedProp.style && changedProp.style.strokeColor) {\n                if (elementWrapper.children.length > 0) {\n                    if (((!isBlazor() && actualObject.shape.shape === 'Activity') ||\n                        (isBlazor() && actualObject.shape.bpmnShape === 'Activity')) &&\n                        actualObject.shape.activity.activity === 'SubProcess') {\n                        var child = elementWrapper.children[0];\n                        this.updateBPMNStyle(child, changedProp.style.strokeColor);\n                    }\n                    else if (((!isBlazor() && actualObject.shape.shape === 'Gateway')\n                        || (isBlazor() && actualObject.shape.bpmnShape === 'Gateway')) ||\n                        ((!isBlazor() && actualObject.shape.shape === 'Event')\n                            || (isBlazor() && actualObject.shape.bpmnShape === 'Event'))) {\n                        this.updateBPMNStyle(elementWrapper, changedProp.style.strokeColor);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNStyle = function (elementWrapper, changedProp) {\n        for (var i = 0; i < elementWrapper.children.length; i++) {\n            var child = elementWrapper.children[i];\n            updateStyle({ strokeColor: changedProp }, child);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNGateway = function (node, changedProp) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            updateStyle(node.style, elementWrapper.children[0]);\n            var bpmnshapeGatewaydata = getBpmnGatewayShapePathData(bpmnShape.gateway.type);\n            elementWrapper.children[1].data = bpmnshapeGatewaydata;\n        }\n        if (changedProp.width !== undefined || changedProp.height !== undefined) {\n            this.setSizeForBPMNGateway(node.shape.gateway, elementWrapper, changedProp.width || node.width, changedProp.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNDataObject = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            if (newObject.style !== undefined) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n                elementWrapperChild1.style.opacity = node.style.opacity;\n                elementWrapperChild2.style.opacity = node.style.opacity;\n            }\n            if (bpmnShape.dataObject) {\n                switch (bpmnShape.dataObject.type) {\n                    case 'None':\n                        elementWrapperChild1.visible = false;\n                        break;\n                    case 'Input':\n                        elementWrapperChild1.style.fill = 'white';\n                        break;\n                    case 'Output':\n                        elementWrapperChild1.style.fill = 'black';\n                        break;\n                }\n                if (oldObject.shape.dataObject.type === 'None') {\n                    elementWrapperChild1.visible = true;\n                }\n                if (newObject.shape.dataObject.collection !== undefined) {\n                    elementWrapperChild2.visible = bpmnShape.dataObject.collection;\n                }\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNDataObjects(node.shape.dataObject, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEvent = function (node, oldObject, event, child0, child1, child2) {\n        switch (event) {\n            case 'Start':\n                child1.visible = false;\n                child0.style.strokeDashArray = '';\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.fill = 'white';\n                break;\n            case 'NonInterruptingStart':\n                child0.style.strokeDashArray = '2 3';\n                child2.style.fill = 'white';\n                child0.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child1.visible = false;\n                break;\n            case 'Intermediate':\n                child0.style.strokeDashArray = '';\n                child0.style.fill = 'white';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'NonInterruptingIntermediate':\n                child0.style.fill = 'white';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.strokeDashArray = '2 3';\n                child1.style.strokeDashArray = '2 3';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                child0.style.fill = event !== 'End' ? 'white' : 'black';\n                child0.style.strokeDashArray = '';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                child2.style.strokeColor = node.style.fill;\n                break;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateEventVisibility = function (oldObject, child1) {\n        if (oldObject.shape.activity && oldObject.shape.activity.subProcess &&\n            oldObject.shape.activity.subProcess.events &&\n            oldObject.shape.activity.subProcess.events[0] !== undefined &&\n            oldObject.shape.activity.subProcess.events[0].event !== undefined) {\n            if (oldObject.shape.activity.subProcess.events[0].event === 'NonInterruptingStart' ||\n                oldObject.shape.activity.subProcess.events[0].event === 'Start') {\n                child1.visible = true;\n            }\n        }\n        else if (oldObject.shape.event !== undefined) {\n            if (oldObject.shape.event.event === 'NonInterruptingStart' ||\n                oldObject.shape.event.event === 'Start') {\n                child1.visible = true;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEvent = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var trigger;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild0 = elementWrapper.children[0];\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            var event_1;\n            if (newObject.style !== undefined) {\n                updateStyle(node.style, elementWrapper.children[0]);\n                if (newObject.style.opacity !== undefined || newObject.style.strokeColor !== undefined) {\n                    elementWrapperChild1.style.opacity = node.style.opacity;\n                    elementWrapperChild1.style.strokeColor = node.style.strokeColor;\n                }\n            }\n            event_1 = bpmnShape.event.event;\n            trigger = bpmnShape.event.trigger;\n            if (event_1 !== undefined) {\n                this.getEvent(node, oldObject, event_1, elementWrapperChild0, elementWrapperChild1, elementWrapperChild2);\n            }\n            if (trigger !== undefined) {\n                this.updateBPMNEventTrigger(node, newObject);\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined || trigger !== undefined) {\n            this.setSizeForBPMNEvents(node.shape.event, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEventTrigger = function (node, newObject) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[2];\n        elementWrapper.canMeasurePath = true;\n        if (newObject.style &&\n            (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined)) {\n            updateStyle(node.style, elementWrapper);\n        }\n        var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(bpmnShape.event.trigger);\n        elementWrapper.data = bpmnshapeTriggerdata;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivity = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        if (bpmnShape) {\n            var oldProp = oldObject.shape.activity.activity;\n            var actualObjectProp = node.shape.activity.activity;\n            if ((oldProp === 'SubProcess' || oldProp === 'Task') && (actualObjectProp === 'SubProcess' || actualObjectProp === 'Task')) {\n                diagram.removeElements(node);\n                node.wrapper.children[0] = this.getBPMNActivityShape(node);\n            }\n            else {\n                if (actualObjectProp === 'Task' && bpmnShape.activity.task !== undefined) {\n                    this.updateBPMNActivityTask(node, newObject);\n                    var subChildCount = this.getTaskChildCount(node);\n                    var x = void 0;\n                    var childSpace = subChildCount * 12;\n                    var area = size.width / 2 - childSpace;\n                    if (subChildCount === 1) {\n                        x = area + 8;\n                    }\n                    else {\n                        x = area + (subChildCount - 1) * 8;\n                    }\n                    if (bpmnShape.activity.task.loop !== undefined) {\n                        this.updateBPMNActivityTaskLoop(node, newObject, x, subChildCount, area, 2);\n                    }\n                }\n                if (actualObjectProp === 'SubProcess' && bpmnShape.activity.subProcess !== undefined) {\n                    this.updateBPMNActivitySubProcess(node, newObject, oldObject, diagram);\n                }\n            }\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTask = function (node, newObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var task = bpmnShape.activity.task;\n        for (var i = 0; i < elementWrapper.children.length; i++) {\n            if (elementWrapper.children[i].id === node.id + '_1_taskTypeService') {\n                elementWrapper.children.splice(i, 1);\n                var element = document.getElementById(node.id + '_1_taskTypeService');\n                element.parentNode.removeChild(element);\n            }\n        }\n        if (task.type === 'Receive' || task.type === 'Send') {\n            elementWrapper.children[1].height = 14;\n        }\n        else {\n            elementWrapper.children[1].height = 20;\n        }\n        if (task.type !== undefined) {\n            var bpmnshapeTaskdata = getBpmnTaskShapePathData(task.type);\n            elementWrapper.children[1].data = bpmnshapeTaskdata;\n            if (task.type === 'Service') {\n                for (var i = 0; i < elementWrapper.children.length; i++) {\n                    if (elementWrapper.children[i].id === node.id + '_1_tasktType') {\n                        elementWrapper.children.splice(i, 1);\n                        var element = document.getElementById(node.id + '_1_tasktType');\n                        element.parentNode.removeChild(element);\n                    }\n                }\n                var taskTypeNode = new PathElement();\n                taskTypeNode.id = node.id + '_1_tasktType';\n                taskTypeNode.margin.left = 5;\n                taskTypeNode.margin.top = 5;\n                taskTypeNode.data = bpmnshapeTaskdata;\n                taskTypeNode.style.fill = 'transparent';\n                taskTypeNode.style.opacity = node.style.opacity;\n                taskTypeNode.width = 20;\n                taskTypeNode.height = 20;\n                elementWrapper.children.splice(1, 0, taskTypeNode);\n                var taskTypeNodeService = new PathElement();\n                taskTypeNodeService.id = node.id + '_1_taskTypeService';\n                taskTypeNodeService.data = bpmnshapeTaskdata;\n                taskTypeNodeService.margin.left = elementWrapper.children[1].margin.left + 9;\n                taskTypeNodeService.margin.top = elementWrapper.children[1].margin.top + 9;\n                taskTypeNodeService.style.fill = 'white';\n                taskTypeNodeService.style.opacity = node.style.opacity;\n                elementWrapper.children.splice(2, 0, taskTypeNodeService);\n            }\n        }\n        if (bpmnShape.activity.task.call !== undefined) {\n            if (bpmnShape.activity.task.call !== false) {\n                elementWrapper.children[0].style.strokeWidth = 4;\n            }\n            else {\n                elementWrapper.children[0].style.strokeWidth = 1;\n            }\n        }\n        if (bpmnShape.activity.task.compensation !== undefined) {\n            if (bpmnShape.activity.task.compensation === true) {\n                elementWrapper.children[3].visible = true;\n            }\n            else {\n                elementWrapper.children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTaskLoop = function (node, newObject, x, subChildCount, area, start) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var activity = bpmnShape.activity;\n        var loop;\n        var index = 0;\n        var bpmnshapeLoopdata;\n        if (activity.subProcess !== undefined) {\n            var subProcess = activity.subProcess;\n            index = (activity.subProcess.type === 'Transaction') ? 2 : 0;\n            loop = subProcess.loop;\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(loop);\n            elementWrapper.children[2 + index].data = bpmnshapeLoopdata;\n            elementWrapper.children[2 + index].visible = (loop === 'None') ? false : true;\n        }\n        else if (activity.task !== undefined && activity.task.loop !== undefined) {\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(activity.task.loop);\n            elementWrapper.children[2].data = bpmnshapeLoopdata;\n            elementWrapper.children[2].visible = (activity.task.loop === 'None') ? false : true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, start + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateChildMargin = function (elementWrapper, subChildCount, area, x, start) {\n        if (subChildCount === 1) {\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x = area + 8;\n                }\n            }\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x += 12 + 8;\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivitySubProcess = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        var subProcess = bpmnShape.activity.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var childSpace = subChildCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n        }\n        updateStyle(node.style, elementWrapper.children[0].children[0]);\n        if (subProcess.events !== undefined) {\n            this.updateBPMNSubProcessEvent(node, newObject, oldObject, diagram);\n        }\n        if (subProcess.adhoc !== undefined) {\n            this.updateBPMNSubProcessAdhoc(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.boundary !== undefined) {\n            this.updateBPMNSubProcessBoundary(node, subProcess);\n        }\n        if (subProcess.collapsed !== undefined) {\n            this.updateBPMNSubProcessCollapsed(node, oldObject, subProcess, x, subChildCount, area, diagram);\n        }\n        if (subProcess.compensation !== undefined) {\n            this.updateBPMNSubProcessCompensation(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.loop !== undefined) {\n            this.updateBPMNSubProcessLoop(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.transaction !== undefined) {\n            this.updateBPMNSubProcessTransaction(node, newObject, oldObject, diagram);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessEvent = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var nodeContent = elementWrapper.children[0];\n        var index;\n        var j = 0;\n        var elementWrapperChildLen = elementWrapper.children[0].children.length;\n        var subProcess = bpmnShape.activity.subProcess;\n        var events;\n        var start = 2;\n        for (var _i = 0, _a = Object.keys(subProcess.events); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var eventIndex = Number(key);\n            var eventWrapper = nodeContent.children[eventIndex + start];\n            var actualEvent = node.shape.activity.subProcess.events[eventIndex];\n            this.updateBPMNSubEvent(node, subProcess.events[eventIndex], actualEvent, eventWrapper, newObject, oldObject, diagram);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubEvent = function (node, newEvent, actualEvent, eventWrapper, newObject, oldObject, diagram) {\n        var elementWrapper = node.wrapper.children[0];\n        var bpmnShape = newObject.shape;\n        var child0 = eventWrapper.children[0];\n        var child1 = eventWrapper.children[1];\n        var child2 = eventWrapper.children[2];\n        var eventType;\n        var trigger;\n        if (newObject.style) {\n            if (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined) {\n                elementWrapper.children[0].children[1].style.strokeColor = newObject.style.strokeColor;\n                elementWrapper.children[0].children[1].style.opacity = newObject.style.opacity;\n            }\n        }\n        if (bpmnShape.activity.subProcess !== undefined) {\n            eventType = newEvent.event;\n            trigger = newEvent.trigger;\n        }\n        if (eventType !== undefined) {\n            this.getEvent(newObject, oldObject, eventType, child0, child1, child2);\n        }\n        if (trigger !== undefined) {\n            if (newObject.style) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n            }\n            var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(trigger);\n            eventWrapper.children[2].data = bpmnshapeTriggerdata;\n        }\n        if (newEvent.height !== undefined || newEvent.width !== undefined) {\n            this.getEventSize(newEvent, eventWrapper);\n        }\n        if (newEvent.id !== undefined) {\n            eventWrapper.id = newEvent.id;\n        }\n        if (newEvent.margin !== undefined) {\n            eventWrapper.margin = newEvent.margin;\n        }\n        if (newEvent.horizontalAlignment !== undefined) {\n            eventWrapper.horizontalAlignment = newEvent.horizontalAlignment;\n        }\n        if (newEvent.verticalAlignment !== undefined) {\n            eventWrapper.verticalAlignment = newEvent.verticalAlignment;\n        }\n        if (newEvent.offset !== undefined) {\n            eventWrapper.setOffsetWithRespectToBounds(actualEvent.offset.x, actualEvent.offset.y, 'Fraction');\n            eventWrapper.relativeMode = 'Point';\n        }\n        if (newEvent.annotations !== undefined) {\n            var annotations = void 0;\n            var annotation = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[3] && eventWrapper.children.length > 3) {\n                annotations = eventWrapper.children[3];\n                diagram.updateAnnotation(newEvent.annotations[0], annotations, annotation);\n            }\n        }\n        if (newEvent.ports !== undefined) {\n            var ports = void 0;\n            var port = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[4] && eventWrapper.children.length > 4) {\n                ports = eventWrapper.children[4];\n                diagram.updatePort(newEvent.ports[0], ports, port);\n            }\n        }\n        if (newEvent.visible !== undefined) {\n            this.updateDiagramContainerVisibility(eventWrapper, newEvent.visible);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubProcessTransaction = function (node, newObject, oldObject, diagram) {\n        var transaction = newObject.shape.activity.subProcess.transaction;\n        var eventContainer = node.wrapper.children[0].children[0].children[2];\n        var actualEvent;\n        if (transaction.success !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.success;\n            this.updateBPMNSubEvent(node, transaction.success, actualEvent, eventContainer.children[0], newObject, oldObject, diagram);\n        }\n        if (transaction.cancel !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.cancel;\n            this.updateBPMNSubEvent(node, transaction.cancel, actualEvent, eventContainer.children[1], newObject, oldObject, diagram);\n        }\n        if (transaction.failure !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.failure;\n            this.updateBPMNSubEvent(node, transaction.failure, actualEvent, eventContainer.children[2], newObject, oldObject, diagram);\n        }\n        for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            var connector = diagram.nameTable[edge];\n            switch (connector.sourcePortID) {\n                case 'success':\n                    if (transaction.success && transaction.success.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'success' });\n                    }\n                    break;\n                case 'cancel':\n                    if (transaction.cancel && transaction.cancel.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'cancel' });\n                    }\n                    break;\n                case 'failure':\n                    if (transaction.failure && transaction.failure.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'failure' });\n                    }\n                    break;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEventSize = function (events, wrapperChild) {\n        if (events.height !== undefined) {\n            wrapperChild.height = events.height;\n            wrapperChild.children[0].height = events.height;\n            wrapperChild.children[1].height = events.height * 0.85;\n            wrapperChild.children[2].height = events.height * 0.54;\n        }\n        if (events.width !== undefined) {\n            wrapperChild.width = events.width;\n            wrapperChild.children[0].width = events.width;\n            wrapperChild.children[1].width = events.width * 0.85;\n            wrapperChild.children[2].width = events.width * 0.54;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessAdhoc = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var shape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[3 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessBoundary = function (node, subProcess) {\n        var shape = node.shape;\n        var elementWrapper = (node.wrapper.children[0].children[0].children[0]);\n        if (subProcess.boundary === 'Default') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            elementWrapper.style.strokeWidth = 4;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '2 2';\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateElementVisibility = function (node, visible, diagram) {\n        if (node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                var currentNode = diagram.nameTable[processes[j]];\n                currentNode.visible = visible;\n                diagram.updateElementVisibility(currentNode.wrapper, currentNode, visible);\n                if (visible) {\n                    if ((!isBlazor() && currentNode.shape.shape === 'Event') ||\n                        (isBlazor() && currentNode.shape.bpmnShape === 'Event')) {\n                        this.setEventVisibility(currentNode, currentNode.wrapper.children[0].children);\n                    }\n                    if (currentNode.shape.activity.activity === 'SubProcess') {\n                        this.setSubProcessVisibility(currentNode);\n                    }\n                }\n                var connectors = currentNode.inEdges.concat(currentNode.outEdges);\n                for (var i = connectors.length - 1; i >= 0; i--) {\n                    var connector = diagram.nameTable[connectors[i]];\n                    connector.visible = visible;\n                    diagram.updateElementVisibility(connector.wrapper, connector, visible);\n                }\n            }\n        }\n        if (visible) {\n            if ((!isBlazor() && node.shape.shape === 'Event') ||\n                (isBlazor() && node.shape.bpmnShape === 'Event')) {\n                this.setEventVisibility(node, node.wrapper.children[0].children);\n            }\n            if (node.shape.activity.activity === 'SubProcess') {\n                this.setSubProcessVisibility(node);\n            }\n            if (node.shape.activity.activity === 'Task' &&\n                ((!isBlazor() && node.shape.shape === 'Activity') ||\n                    (isBlazor() && node.shape.bpmnShape === 'Activity'))\n                && node.shape.activity.subProcess.loop === 'None') {\n                node.wrapper.children[0].children[0].children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCollapsed = function (node, oldObject, subProcess, x, subChildCount, area, diagram) {\n        var eventLength = node.shape.activity.subProcess.events.length;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 3 : 1;\n        if (subProcess.collapsed === false) {\n            this.updateElementVisibility(node, true, diagram);\n            elementWrapper.children[index + eventLength].visible = false;\n        }\n        else {\n            this.updateElementVisibility(node, false, diagram);\n            elementWrapper.children[index + eventLength].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + eventLength);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCompensation = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[4 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 4 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessLoop = function (node, oldObject, subProcess, x, subChildCount, area) {\n        this.updateBPMNActivityTaskLoop(node, node, x, subChildCount, area, 1);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNConnector = function (actualObject, oldObject, connection, diagram) {\n        var flowType = connection.shape;\n        if (flowType.sequence !== undefined) {\n            actualObject = this.getSequence(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.association !== undefined) {\n            actualObject = this.getAssociation(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.message !== undefined) {\n            actualObject = this.getMessage(actualObject, oldObject, connection, diagram);\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getSequence = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.sequence) === 'Normal') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        if ((connection.shape.sequence) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n            var segment = new PathElement();\n            var pathseq = new PathElement();\n            var pathseqData = void 0;\n            segment = actualObject.getSegmentElement(actualObject, segment);\n            var anglePoints = actualObject.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = actualObject.findPath(anglePoints[j], anglePoints[j + 1]);\n            }\n            actualObject.wrapper.children[3].data = pathseqData[0];\n            actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.sequence);\n            actualObject.wrapper.children[3].offsetX = pathseqData[1].x;\n            actualObject.wrapper.children[3].offsetY = pathseqData[1].y;\n            actualObject.wrapper.children[3].rotateAngle = 45;\n            actualObject.wrapper.children[3].transform = Transform.Self;\n        }\n        if ((connection.shape.sequence) === 'Conditional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Diamond', width: 20, height: 10, style: { fill: 'white' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getAssociation = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.association) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: 'None' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'Directional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'BiDirectional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Arrow', width: 5, height: 10, style: { fill: 'white' } }\n            });\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getMessage = function (actualObject, oldObject, connection, diagram) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        if ((oldObject.shape.message) === 'Default') {\n            if ((connection.shape.message) !== undefined) {\n                if (((connection.shape.message) === 'InitiatingMessage') ||\n                    ((connection.shape.message) === 'NonInitiatingMessage')) {\n                    var segment = new PathElement();\n                    segment = actualObject.getSegmentElement(actualObject, segment);\n                    var anglePoints = actualObject.intermediatePoints;\n                    for (var j = 0; j < anglePoints.length - 1; j++) {\n                        length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                        var offLength = length * segmentOffset;\n                        if (length >= offLength) {\n                            angle = findAngle(anglePoints[j], anglePoints[j + 1]);\n                            pt = Point.transform(anglePoints[j], angle, offLength);\n                        }\n                    }\n                }\n                actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.message);\n                actualObject.wrapper.children[3].width = 25;\n                actualObject.wrapper.children[3].height = 15;\n                actualObject.wrapper.children[3].data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n                actualObject.wrapper.children[3].horizontalAlignment = 'Center';\n                actualObject.wrapper.children[3].verticalAlignment = 'Center';\n                actualObject.wrapper.children[3].transform = Transform.Self;\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n                actualObject.wrapper.children[3].offsetX = pt.x;\n                actualObject.wrapper.children[3].offsetY = pt.y;\n            }\n        }\n        else if ((oldObject.shape.message) !== 'NonInitiatingMessage' ||\n            (oldObject.shape.message) !== 'InitiatingMessage') {\n            if ((connection.shape.message) !== 'Default') {\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n            }\n            else {\n                actualObject.wrapper.children[3].visible = false;\n            }\n        }\n        return actualObject;\n    };\n    //End update Region\n    //size updation\n    BpmnDiagrams.prototype.setSizeForBPMNEvents = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        //child node 1 - event node\n        var eventNode = wrapper.children[1];\n        eventNode.width = width * 0.85;\n        eventNode.height = height * 0.85;\n        var triggerNode = wrapper.children[2];\n        if (event.trigger === 'Message') {\n            triggerNode.width = width * 0.54;\n            triggerNode.height = height * 0.4;\n        }\n        else {\n            triggerNode.width = width * 0.5;\n            triggerNode.height = height * 0.5;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateAnnotationDrag = function (node, diagram, tx, ty) {\n        var checkAnnotation = node.id.split('_');\n        if (checkAnnotation[1] === 'textannotation') {\n            var parentNode = void 0;\n            for (var j = 0; j < node.inEdges.length; j++) {\n                var connector = diagram.nameTable[node.inEdges[j]];\n                if (connector) {\n                    parentNode = diagram.nameTable[connector.sourceID];\n                }\n                var start = { x: node.offsetX + tx, y: node.offsetY + ty };\n                var end = connector.sourcePoint;\n                var length_1 = Point.findLength(start, end);\n                var angle = Point.findAngle(end, start);\n                if (parentNode.shape.annotations) {\n                    for (var x = 0; x < (parentNode.shape.annotations).length; x++) {\n                        if ((parentNode.shape.annotations)[x].id === checkAnnotation[checkAnnotation.length - 1]) {\n                            (parentNode.shape.annotations[x]).length = length_1;\n                            (parentNode.shape.annotations[x]).angle = angle;\n                            this.setAnnotationPath(parentNode.wrapper.bounds, node.wrapper, start, node);\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        if (node.processId) {\n            this.drag(node, tx, ty, diagram);\n            return true;\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.getAnnotationPathAngle = function (point, bounds) {\n        var direction = getPortDirection(point, bounds, bounds, false);\n        var rotateAngle = 0;\n        switch (direction) {\n            case 'Right':\n                rotateAngle = 0;\n                break;\n            case 'Left':\n                rotateAngle = 180;\n                break;\n            case 'Bottom':\n                rotateAngle = 90;\n                break;\n            case 'Top':\n                rotateAngle = 270;\n                break;\n        }\n        return rotateAngle;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNGateway = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[1].width = width * 0.45;\n        wrapper.children[1].height = height * 0.45;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNDataObjects = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNActivity = function (activity, wrapper, width, height, node) {\n        //child node 1 - event node\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[0].children[0].width = width;\n        wrapper.children[0].children[0].height = height;\n        if (activity.subProcess.type === 'Transaction') {\n            wrapper.children[0].children[1].width = Math.max(width - 6, 1);\n            wrapper.children[0].children[1].height = Math.max(height - 6, 1);\n            wrapper.children[0].children[2].width = width;\n            wrapper.children[0].children[2].height = height;\n        }\n        var taskNode = new DiagramElement();\n        var x;\n        var size = this.getSize(node, taskNode);\n        var childCount;\n        var iconSpace = 4;\n        if (activity.activity === 'Task') {\n            childCount = this.getTaskChildCount(node);\n        }\n        else {\n            childCount = this.getSubprocessChildCount(node);\n        }\n        var childSpace = childCount * 12;\n        var area = (width || size.width) / 2;\n        if (childCount === 1) {\n            x = area - 6;\n        }\n        else {\n            x = area - (childSpace / 2) - ((childCount - 1) * iconSpace) / 2;\n        }\n        for (var i = 0; i < wrapper.children[0].children.length; i++) {\n            if (wrapper.children[0].children[i].visible &&\n                (wrapper.children[0].children[i].id.indexOf('_loop') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_compensation') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_adhoc') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_collapsed') > -1)) {\n                wrapper.children[0].children[i].margin.left = x;\n                x += wrapper.children[0].children[i].actualSize.width + iconSpace;\n            }\n        }\n    };\n    BpmnDiagrams.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * To destroy the BpmnDiagrams module\n     * @return {void}\n     * @private\n     */\n    BpmnDiagrams.prototype.destroy = function () {\n        /**\n         * Destroys the BpmnDiagrams module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    BpmnDiagrams.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bpmn';\n    };\n    return BpmnDiagrams;\n}());\nexport { BpmnDiagrams };\nexport function getBpmnShapePathData(shape) {\n    return bpmnShapes[shape.toString()];\n}\nexport function getBpmnTriggerShapePathData(shape) {\n    return bpmnTriggerShapes[shape.toString()];\n}\nexport function getBpmnGatewayShapePathData(shape) {\n    return bpmnGatewayShapes[shape.toString()];\n}\nexport function getBpmnTaskShapePathData(shape) {\n    return bpmnTaskShapes[shape.toString()];\n}\nexport function getBpmnLoopShapePathData(shape) {\n    return bpmnLoopShapes[shape.toString()];\n}\nvar bpmnShapes = {\n    'Event': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    'Message': 'M0,0L19.8,12.8L40,0L0,0L0,25.5L40,25.5L40,0z',\n    'DataSource': 'M 0 10.6 c 0 5.9 16.8 10.6 37.5 10.6 S 75 16.4 75 10.6 v 0 v 68.9 v -0.1 C 75 85.3 58.2 90 37.5 90 ' +\n        'S 0 85.3 0 79.4 l 0 0.1 V 56 V 40.6 L 0 10.6 C 0 4.7 16.8 0 37.5 0 S 75 4.7 75 10.6 S 58.2 21.2 37.5 21.2' +\n        'S 0 16.5 0 10.6 l 0 6.7 v -0.2 c 0 5.9 16.8 10.6 37.5 10.6 S 75 22.9 75 17.1 v 6.8 v -0.1 ' +\n        'c 0 5.9 -16.8 10.6 -37.5 10.6 S 0 29.6 0 23.8',\n    'SubProcess': 'M100,100 h200 a20,20 0 0 1 20,20 v200 a20,20 0 0 1 -20,20 h-200 ' +\n        'a20,20 0 0 1 -20,-20 v-200 a20,20 0 0 1 20,-20 z',\n    'collapsedShape': 'M 8.13789 15 H 0 V 0 H 8.13789 V 15 Z M 0.625991 13.75 H 7.51189 V 1.25 H 0.625991 V 13.75 Z ' +\n        'M 2.18095 7.03125 L 5.95631 7.03125 L 5.95631 7.46875 L 2.18095 7.46875 Z M 3.8342 3.73 ' +\n        'L 4.30369 3.73 L 4.30369 11.2687 L 3.8342 11.2687 Z',\n};\nvar bpmnTriggerShapes = {\n    // 'None': '',\n    'Message': 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0',\n    'Timer': 'M40,20c0,8.654-5.496,16.024-13.189,18.81' +\n        'C24.685,39.58,22.392,40,20,40C8.954,40,0,31.046,0,20S8.954,0,20,0S40,8.954,40,20z M20,0 L20,2.583 L20,5.283 M10.027,2.681' +\n        'L11.659,5.507 L12.669,7.257 M2.731,9.989 L6.014,11.885 L7.307,12.631 M0.067,19.967 L2.667,19.967 L5.35,19.967' +\n        'M2.748,29.939 L5.731,28.217 L7.323,27.298 M10.056,37.236 L11.292,35.095 L12.698,32.66 M20.033,39.9 L20.033,36.417 L20.033,34.617' +\n        'M30.006,37.219 L28.893,35.292 L27.364,32.643 M37.302,29.911 L34.608,28.355 L32.727,27.269' +\n        'M39.967,19.933 L37.417,19.933 L34.683,19.933 M37.286,9.961 L34.583,11.521 L32.71,12.602 M29.977,2.664 L28.653,4.957 L27.336,' +\n        '7.24 M22.104,8.5 L19.688,20 L24.75,20 L31.604,20 L24.75,20 L19.688,20z',\n    'Error': 'M 23.77 18.527 l -7.107 27.396 l 8.507 -17.247 L 36.94 40.073 l 6.394 -25.997 l -8.497 15.754 L 23.77 18.527 Z',\n    'Escalation': 'M 30.001 8.098 L 11.842 43.543 l 18.159 -18.882 l 18.162 18.882 L 30.001 8.098 Z ',\n    'Cancel': 'M 3.5 16 L 0 12.6 L 4.6 8 L 0 3.5 L 3.4 0 L 8 4.6 l 4.5 -4.5 L 16 3.5 L 11.5 8 l 4.5 4.5 l -3.4 3.5 L 8 11.4 L 3.5 16 Z',\n    'Compensation': 'M 25.7086 0 L 0 25 L 25.7086 50 V 26.3752 L 50 50 V 0 L 25.7086 23.6248 V 0 Z ',\n    'Conditional': 'M 0 0 H 16 V 16 H 0 z M 1.14 3.2 H 14.85 M 1.14 6.4 H 14.85 M 1.14 9.6 H 14.85 M 1.14 12.8 H 14.85',\n    'Link': 'M 32.014 19.258 v 5.992 H 9.373 v 9.504 h 22.641 v 5.988 L 50.622 30 L 32.014 19.258 Z',\n    'Signal': 'M 50 50 H 0 L 25.0025 0 L 50 50 Z',\n    'Terminate': 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25 C 50 38.79 38.78 50 25 50',\n    'Multiple': 'M 17.784 48.889 H 42.21 l 7.548 -23.23 L 29.997 11.303 L 10.236 25.658 L 17.784 48.889 Z',\n    'Parallel': 'M 27.276 49.986 h 5.58 v -17.15 h 17.146 V 27.17 h -17.15 l 0.004 -17.15 h -5.58 l -0.004 17.15 ' +\n        'H 9.994 v 5.666 h 17.278 L 27.276 49.986 Z',\n};\nvar bpmnGatewayShapes = {\n    'None': '',\n    //exclusive\n    'Exclusive': 'M 11.196 29.009 l 6.36 -9.712 l -5.764 -8.899 h 4.393 l 3.732 5.979 l 3.656 -5.979 h 4.354 l -5.789 9.039' +\n        'l 6.36 9.572 h -4.532 l -4.126 -6.437 l -4.139 6.437 H 11.196 Z',\n    //inclusive\n    'Inclusive': 'M 20.323 31.333 c -6.625 0 -12.015 -5.39 -12.015 -12.015 s 5.39 -12.015 12.015 -12.015 ' +\n        's 12.016 5.39 12.016 12.015 S 26.948 31.333 20.323 31.333 Z M 20.323 9.303 c -5.522 0 -10.015 4.493 -10.015 10.015 ' +\n        's 4.492 10.015 10.015 10.015 s 10.016 -4.493 10.016 -10.015 S 25.846 9.303 20.323 9.303 Z',\n    //parallel\n    'Parallel': 'M 18.394 29.542 v -8.833 H 9.626 v -3.691 h 8.768 V 8.251 h 3.734 v 8.767 h 8.768 v 3.691 h -8.768 v 8.833 H 18.394 Z',\n    //complex\n    'Complex': 'M29.198,19.063L23.089,19.063L27.794,14.358L26.38,12.944L21.223,18.101L21.223,10.443L19.223,10.443L19.223,17.976' +\n        'L14.022,12.776L12.608,14.19L17.48,19.063L10.365,19.063L10.365,21.063L18.261,21.063L12.392,26.932L13.806,28.346' +\n        'L19.223,22.929L19.223,30.225L21.223,30.225L21.223,22.805L25.925,27.507L27.339,26.093L22.309,21.063L29.198,21.063z',\n    //eventbased\n    'EventBased': 'M 20.322 29.874 c -5.444 0 -9.873 -4.43 -9.873 -9.874 s 4.429 -9.874 9.873 -9.874 s 9.874 4.429 9.874 9.874 ' +\n        'S 25.767 29.874 20.322 29.874 Z M 20.322 32.891 c -7.107 0 -12.89 -5.783 -12.89 -12.891 c 0 -7.107 5.782 -12.89 12.89 -12.89 ' +\n        'c 7.108 0 12.891 5.783 12.891 12.89 C 33.213 27.108 27.431 32.891 20.322 32.891 Z M 24.191 25.386 ' +\n        'h -7.984 l -2.469 -7.595 l 6.461 -4.693 l 6.461 4.693 L 24.191 25.386 Z',\n    //exclusive event based\n    'ExclusiveEventBased': 'M 30 15 C 30 23.28 23.28 30 15 30 S 0 23.28 0 15 S 6.72 0 15 0 S 30 6.72 30 15 z M 15 5 ' +\n        'L 5 12.5 L 8 22.5 H 22 L 25 12.5 z',\n    //parallel event based\n    'ParallelEventBased': 'M 35 17.5 C 35 27.16 27.16 35 17.5 35 S 0 27.16 0 17.5 S 7.84 0 17.5 0 S 35 7.84 35 17.5 z M 14.58 5.83 ' +\n        'V 14.58 H 5.83 V 20.42 H 14.58 V 29.17 H 20.42 V 20.42 H 29.17 V 14.58 H 20.42 V 5.83 z',\n};\nvar bpmnTaskShapes = {\n    'None': '',\n    'Service': 'M 32.699 20.187 v -4.005 h -3.32 c -0.125 -0.43 -0.292 -0.83 -0.488 -1.21 l 2.373 -2.375 ' +\n        'l -2.833 -2.83 l -2.333 2.333 c -0.44 -0.253 -0.9 -0.448 -1.387 -0.595 v -3.32 h -4.003 v 3.32 c -0.46 0.137 -0.89' +\n        '0.322 -1.3 0.537 l -2.285 -2.275 l -2.833 2.83 l 2.285 2.278 c -0.235 0.42 -0.41 0.847 -0.547 1.307 h -3.33 v 4.005 h 3.33 ' +\n        'c 0.148 0.488 0.343 0.955 0.588 1.395 l -2.325 2.325 l 2.822 2.832 l 2.373 -2.382 c 0.392 0.205 0.792 0.37 1.212 0.497 v 3.33 ' +\n        'h 4.003 v -3.33 c 0.46 -0.138 0.89 -0.323 1.3 -0.547 l 2.43 2.432 l 2.822 -2.832 l -2.42 -2.422 c 0.222 -0.41 0.4 -0.85 0.535' +\n        '-1.297 H 32.699 Z M 22.699 21.987 c -2.1 0 -3.803 -1.703 -3.803 -3.803 c 0 -2.1 1.703 -3.803 3.803 -3.803 c 2.1 0 3.803 ' +\n        '1.703 3.803 3.803 C 26.502 20.285 24.8 21.987 22.699 21.987 Z',\n    'Receive': 'M 12.217 12.134 v 13.334 h 20 V 12.134 H 12.217 Z M 30.44 13.007 l -8.223 5.35 l -8.223 -5.35 H 30.44 Z M 13.09' +\n        ' 24.594 V 13.459 l 9.127 5.94 l 9.127 -5.94 v 11.135 H 13.09 Z',\n    'Send': 'M 45.7256 3.16055 L 25 23.4017 L 4.27442 3.16055 H 45.7256 Z M 47.8963 46.8413 H 2.10375 V 4.80813' +\n        ' L 25 27.1709 L 47.8963 4.80813 V 46.8413 Z',\n    'InstantiatingReceive': 'M 16.306 17.39 v 8.79 h 13.198 v -8.79 H 16.306 Z M 28.375 17.946 l -5.47 3.558 l -5.47 -3.558 ' +\n        'H 28.375 Z M 28.948 25.625 H 16.861 v -7.389 l 6.043 3.931 l 6.043 -3.931 V 25.625 Z M 22.905 11.785' +\n        'c -5.514 0 -9.999 4.486 -9.999 10 c 0 5.514 4.485 10 9.999 10 s 9.999 -4.486 9.999 -10 ' +\n        'C 32.904 16.272 28.419 11.785 22.905 11.785 Z M 22.905 31.239 c -5.212 0 -9.453 -4.241 -9.453 -9.454' +\n        'c 0 -5.212 4.241 -9.453 9.453 -9.453 s 9.452 4.241 9.452 9.453 C 32.357 26.998 28.117 31.239 22.905 31.239 Z',\n    'Manual': 'M 13.183 15.325 h 2.911 c 0.105 0 0.207 -0.043 0.281 -0.117 c 0.078 -0.074 0.117 -0.176 0.117 -0.281' +\n        'c 0 -0.753 0.718 -1.362 1.596 -1.362 h 2.579 c -0.117 0.227 -0.191 0.48 -0.195 0.757 c 0 0.433 0.168 0.851 0.46 1.144 ' +\n        'c 0.008 0.004 0.015 0.011 0.019 0.015 c -0.289 0.285 -0.475 0.691 -0.479 1.148 c 0 0.433 0.168 0.846 0.46 1.139 ' +\n        'c 0.011 0.012 0.023 0.02 0.035 0.032 c -0.301 0.281 -0.491 0.694 -0.495 1.155 c 0 0.432 0.168 0.847 0.46 1.143' +\n        'c 0.265 0.266 0.612 0.414 0.975 0.414 h 0.839 c 0.027 0.004 0.051 0.012 0.074 0.012 h 8.443 ' +\n        'c 0.352 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.285 0.753 -0.636 0.753 h -6.687 c -0.019 0 -0.035 -0.008 -0.051 -0.008' +\n        'h -2.27 c -0.121 -0.835 -0.667 -1.187 -1.795 -1.187 h -2.158 c -0.223 0 -0.402 0.18 -0.402 0.403' +\n        'c 0 0.219 0.179 0.398 0.402 0.398 h 2.158 c 0.972 0 1.019 0.203 1.019 0.784 c 0 0.219 0.179 0.399 0.402 0.399 ' +\n        'c 0.008 0 0.016 -0.004 0.027 -0.004 c 0.028 0.004 0.055 0.016 0.082 0.016 h 2.56 c 0.34 0.015 0.616 0.343 0.616 0.752' +\n        'c 0 0.418 -0.285 0.757 -0.636 0.761 h -0.004 h -6.442 c -0.878 0 -1.595 -0.639 -1.595 -1.427 v -0.683 ' +\n        'c 0 -0.109 -0.043 -0.211 -0.114 -0.285 c -0.078 -0.074 -0.179 -0.117 -0.285 -0.117 h -0.004 l -2.989 0.027 ' +\n        'c -0.223 0 -0.398 0.184 -0.398 0.402 c 0 0.219 0.179 0.395 0.398 0.395 h 0.004 l 2.591 -0.02 v 0.282 ' +\n        'c 0 1.229 1.073 2.223 2.391 2.223 h 3.895 c 0.004 0 0.007 0.004 0.011 0.004 h 2.536 c 0.792 0 1.436 -0.698 1.436 -1.561 ' +\n        'c 0 -0.273 -0.07 -0.53 -0.188 -0.752 h 5.49 c 0.792 0 1.436 -0.695 1.436 -1.553 c 0 -0.858 -0.644 -1.557 -1.436 -1.557' +\n        'h -3.566 c 0.121 -0.226 0.199 -0.487 0.199 -0.768 c 0 -0.468 -0.195 -0.882 -0.495 -1.167' +\n        'c 0.301 -0.285 0.495 -0.698 0.495 -1.163 c 0 -0.456 -0.191 -0.866 -0.483 -1.152 c 0.293 -0.285 0.483 -0.694 0.483 -1.151' +\n        'c 0 -0.858 -0.647 -1.557 -1.439 -1.557 h -8.373 c -1.167 0 -2.142 0.757 -2.352 1.76 l -2.548 -0.004 ' +\n        'c -0.219 0 -0.399 0.18 -0.399 0.403 C 12.784 15.145 12.964 15.325 13.183 15.325 L 13.183 15.325 Z M 21.907 19.707 ' +\n        'c -0.191 0 -0.328 -0.094 -0.41 -0.176 c -0.144 -0.145 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.418 0.289 -0.753 0.643 -0.753 ' +\n        'h 4.468 c 0.008 0 0.015 -0.004 0.027 -0.008 h 0.051 c 0.351 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.286 0.753 -0.636 0.753 ' +\n        'H 21.907 Z M 27.097 16.629 c 0 0.414 -0.286 0.753 -0.64 0.753 h -4.464 c -0.004 0 -0.004 0 -0.004 0 h -0.082' +\n        'c -0.191 0 -0.328 -0.098 -0.414 -0.18 c -0.14 -0.145 -0.222 -0.352 -0.222 -0.573 c 0 -0.413 0.285 -0.749 0.631 -0.753' +\n        'h 3.434 c 0 0 0 0 0.004 0 h 1.116 c 0.008 0 0.012 -0.004 0.02 -0.004 C 26.819 15.887 27.097 16.215 27.097 16.629' +\n        'L 27.097 16.629 Z M 27.097 14.322 c 0 0.41 -0.278 0.737 -0.62 0.749 c -0.008 0 -0.012 0 -0.016 0 h -3.637 ' +\n        'c -0.008 0 -0.015 0.004 -0.023 0.004 h -0.886 c -0.004 0 -0.008 0 -0.012 0 c -0.187 0 -0.324 -0.094 -0.406 -0.176' +\n        'c -0.144 -0.144 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.414 0.293 -0.753 0.643 -0.753 h 4.468 ' +\n        'c 0.008 0 0.015 -0.004 0.027 -0.004 h 0.051 C 26.811 13.565 27.097 13.905 27.097 14.322 L 27.097 14.322 Z M 27.097 14.322',\n    'BusinessRule': 'M 32.844 13.245 h -0.089 v 0 H 13.764 v -0.015 h -1.009 v 16.989 h 0.095 v 0.011 h 19.716 v -0.011 h 0.278 ' +\n        'V 13.245 Z M 31.844 14.229 v 4.185 h -18.08 v -4.185 H 31.844 Z M 18.168 25.306 v 3.938 h -4.404 v -3.938 H 18.168 Z ' +\n        'M 13.764 24.322 v -4.923 h 4.404 v 4.923 H 13.764 Z M 19.177 25.306 h 12.667 v 3.938 H 19.177 V 25.306 Z M 19.177 24.322' +\n        'v -4.923 h 12.667 v 4.923 H 19.177 Z',\n    'User': 'M 21.762 21.935 c 2.584 0 4.687 -2.561 4.687 -5.703 c 0 -3.147 -2.103 -5.703 -4.687 -5.703 c -1.279 0 -2.475 0.61' +\n        '-3.363 1.721 c -0.855 1.071 -1.327 2.484 -1.324 3.983 C 17.075 19.374 19.178 21.935 21.762 21.935 L 21.762 21.935 Z' +\n        'M 21.762 11.779 c 1.894 0 3.436 1.995 3.436 4.452 c 0 2.453 -1.541 4.452 -3.436 4.452 c -1.895 0 -3.44 -1.999 -3.44 -4.452' +\n        'C 18.323 13.774 19.864 11.779 21.762 11.779 L 21.762 11.779 Z M 25.699 21.309 c -0.348 0 -0.626 0.277 -0.626 0.626 ' +\n        'c 0 0.344 0.277 0.622 0.626 0.622 c 2.136 0 3.875 1.74 3.875 3.879 c 0 0.272 -0.227 0.498 -0.501 0.498 H 14.447 c -0.274 0 ' +\n        '-0.497 -0.223 -0.497 -0.498 c 0 -2.139 1.736 -3.879 3.872 -3.879 c 0.344 0 0.625 -0.277 0.625 -0.622 c 0 -0.348 -0.28 -0.626' +\n        '-0.625 -0.626 c -2.826 0 -5.124 2.297 -5.124 5.126 c 0 0.965 0.784 1.749 1.748 1.749 h 14.626 c 0.964 0 1.748 -0.784' +\n        '1.748 -1.749 C 30.822 23.606 28.524 21.309 25.699 21.309 L 25.699 21.309 Z M 22.217 9.832 c 0.448 -0.263 0.924 -0.396 ' +\n        '1.419 -0.396 c 1.895 0 3.436 1.995 3.436 4.452 c 0 0.439 -0.048 0.873 -0.143 1.284 c -0.08 0.336 0.128 0.672 0.464 0.751 ' +\n        'c 0.048 0.012 0.098 0.019 0.143 0.019 c 0.284 0 0.541 -0.195 0.608 -0.483 c 0.119 -0.506 0.18 -1.034 0.18 -1.571' +\n        'c 0 -3.147 -2.102 -5.703 -4.687 -5.703 c -0.711 0 -1.419 0.198 -2.054 0.573 c -0.296 0.174 -0.397 0.559 -0.219 0.855' +\n        'C 21.536 9.911 21.921 10.009 22.217 9.832 L 22.217 9.832 Z M 27.697 18.81 c -0.345 0 -0.626 0.277 -0.626 0.622 ' +\n        'c 0 0.348 0.281 0.626 0.626 0.626 c 2.137 0 3.75 1.782 3.75 3.918 c 0 0.07 -0.013 0.141 -0.043 0.205 c -0.14 0.314 0.003' +\n        '0.684 0.318 0.823 c 0.082 0.037 0.167 0.055 0.253 0.055 c 0.241 0 0.466 -0.141 0.57 -0.373 c 0.101 -0.226 0.153 -0.464 0.153' +\n        '-0.714 C 32.699 21.15 30.523 18.81 27.697 18.81 L 27.697 18.81 Z M 27.697 18.81',\n    'Script': 'M 22.453 15.04 c 0 0 -1.194 -3.741 2.548 -3.774 c 0 0 2.497 0.126 1.766 4.321 c -0.008 0.043 -0.015 0.086 -0.024 0.13' +\n        'c -0.806 4.323 -2.516 8.42 -3.193 10.581 h 3.904 c 0 0 0.983 4.581 -2.549 4.968 H 13.292 c 0 0 -3.097 -1.42 -1.517 -5.323 l ' +\n        '3 -10.839 H 11.84 c 0 0 -1.129 -2.902 1.709 -3.806 l 11.425 -0.032 l -0.73 0.355 l -1.193 1.726 L 22.453 15.04 Z M 22.409 ' +\n        '12.597 c 0 0 -0.242 0.483 -0.278 0.98 h -9.098 c 0 0 -0.06 -0.871 0.714 -1.041 L 22.409 12.597 Z M 26.341 27.734' +\n        'c 0 0 -0.13 2.678 -2.226 1.871 c 0 0 -0.823 -0.565 -0.758 -1.855 L 26.341 27.734 Z M 22.905 15.008 c 0 0 0.653 -0.258 0.709' +\n        '-1.501 c 0 0 0.145 -1.144 1.483 -0.693 c 0 0 0.808 0.355 0.259 2.404 c 0 0 -2.226 8.5 -3.032 10.339 c 0 0 -1.064 2.646 ' +\n        '0.096 4.226 h -8.581 c 0 0 -1.806 -0.452 -0.741 -3.613 c 0 0 2.935 -9.549 3.193 -11.162 L 22.905 15.008 Z',\n};\nvar bpmnLoopShapes = {\n    'None': '',\n    'Standard': 'M 52.002 73.379 c -2.494 -2.536 -6.55 -2.534 -9.043 0 c -1.208 1.228 -1.874 2.861 -1.874 4.598 ' +\n        'c 0 1.225 0.337 2.395 0.957 3.411 l -1.167 1.186 l 2.071 0.458 l 2.071 0.458 l -0.45 -2.106 l -0.45 -2.106 l -1.292 1.314' +\n        'c -1.119 -2.065 -0.842 -4.709 0.877 -6.458 c 2.084 -2.119 5.475 -2.117 7.557 0 c 2.083 2.119 2.083 5.565 0 7.685' +\n        'c -0.976 0.992 -2.272 1.557 -3.65 1.59 l 0.025 1.068 c 1.65 -0.041 3.2 -0.716 4.368 -1.903 ' +\n        'c 1.208 -1.228 1.874 -2.861 1.874 -4.597 C 53.875 76.24 53.209 74.607 52.002 73.379 Z',\n    'ParallelMultiInstance': 'M 51.5,69.5 L52.5,69.5 L52.5,84.5 L51.5 84.5 Z M 46.5,69.5 L47.5,69.5 L47.5,84.5 L46.5 84.5 Z' +\n        ' M 41.5,69.5 L42.5,69.5 L42.5,84.5 L41.5 84.5 Z  ',\n    'SequenceMultiInstance': 'M 40.375,71.5 L 55.375,71.5 L 55.375,72.5 L 40.375,72.5 Z M 40.375,76.5 L 55.375,76.5 ' +\n        'L 55.375,77.5 L 40.375,77.5 Z M 40.375,76.5 L 55.375,76.5 L 55.375,77.5 L 40.375,77.5 Z M 40.375,81.5 L 55.375,81.5' +\n        'L 55.375,82.5 L 40.375,82.5 Z'\n};\n","import { Rect } from '../primitives/rect';\nimport { cloneObject } from '../utility/base-util';\nvar GraphForceNode = /** @class */ (function () {\n    function GraphForceNode(gnNode) {\n        /**\n         * @private\n         */\n        this.velocityX = 0;\n        /**\n         * @private\n         */\n        this.velocityY = 0;\n        /**\n         * @private\n         */\n        this.nodes = [];\n        this.graphNode = gnNode;\n        var nNode = this.graphNode;\n        var bounds = getGraphBounds(nNode);\n        this.location = bounds.center;\n        this.nodes = [];\n        if (!gnNode.treeInfo.parents) {\n            gnNode.treeInfo.parents = [];\n        }\n        if (!gnNode.treeInfo.children) {\n            gnNode.treeInfo.children = [];\n        }\n        this.nodes = (gnNode.treeInfo.parents).concat(gnNode.treeInfo.children);\n    }\n    /**\n     * @private\n     */\n    GraphForceNode.prototype.applyChanges = function () {\n        this.graphNode.treeInfo.center = this.location;\n    };\n    return GraphForceNode;\n}());\nexport { GraphForceNode };\n/**\n * SymmetricalLayout\n */\nvar SymmetricLayout = /** @class */ (function () {\n    function SymmetricLayout() {\n        this.cdCOEF = 0.442;\n        this.cfMAXVELOCITY = 50;\n        this.cnMAXITERACTION = 1000;\n        this.cnSPRINGLENGTH = 100;\n        this.mszMaxForceVelocity = { width: this.cfMAXVELOCITY, height: this.cfMAXVELOCITY };\n        /**\n         * @private\n         */\n        this.springLength = 0;\n        /**\n         * @private\n         */\n        this.springFactor = this.cdCOEF;\n        /**\n         * @private\n         */\n        this.maxIteration = this.cnMAXITERACTION;\n        this.springLength = this.cnSPRINGLENGTH;\n    }\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.destroy = function () {\n        /**\n         * Destroys symmetricLayout\n         */\n    };\n    SymmetricLayout.prototype.getModuleName = function () {\n        return 'SymmetricalLayout';\n    };\n    SymmetricLayout.prototype.doGraphLayout = function (graphLayoutManager) {\n        var graph = this.selectedNode;\n        graph.treeInfo.Bounds = graphLayoutManager.getModelBounds(graphLayoutManager.nodes);\n        var lstGraphNodes = graph.treeInfo.GraphNodes;\n        var lstNodes = this.convertGraphNodes(lstGraphNodes);\n        var count = lstNodes.length;\n        count = Math.min(this.maxIteration, count * count * count);\n        this.preLayoutNodes(lstNodes, graph.treeInfo.Bounds);\n        for (var i = 0, nLenght = count; i < nLenght; i++) {\n            this.makeSymmetricLayout(lstNodes);\n            this.appendForces(lstNodes);\n        }\n        this.resetGraphPosition(lstNodes, graph);\n    };\n    SymmetricLayout.prototype.preLayoutNodes = function (lstNodes, rcBounds) {\n        var fMaxSize = Math.max(rcBounds ? rcBounds.width : 25, rcBounds ? rcBounds.height : 25);\n        var ptCenter = { x: fMaxSize / 2, y: fMaxSize / 2 };\n        var dRotateAngle = 2 * Math.PI / lstNodes.length;\n        var dAngle = dRotateAngle;\n        for (var i = 0; i < lstNodes.length; i++) {\n            var gnNode = lstNodes[i];\n            var forceNode = this.getForceNode(gnNode);\n            forceNode.location = {\n                x: ptCenter.x + fMaxSize * Number((Math.cos(dAngle)).toFixed(2)),\n                y: ptCenter.y + fMaxSize * Number(Math.sin(dAngle).toFixed(2))\n            };\n            dAngle -= dRotateAngle;\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.doLayout = function (graphLayoutManager) {\n        this.selectedNode = graphLayoutManager.selectedNode;\n        this.doGraphLayout(graphLayoutManager);\n    };\n    SymmetricLayout.prototype.makeSymmetricLayout = function (lstNodes) {\n        var forceNode;\n        var force;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            forceNode = this.getForceNode(gnNode);\n            var nodes = forceNode.nodes;\n            for (var l = 0; l < nodes.length; l++) {\n                var gnChild = nodes[l];\n                if (collectionContains(gnChild.id, lstNodes)) {\n                    this.calcNodesForce(forceNode, this.getForceNode(gnChild));\n                }\n            }\n            for (var i = 0, length_1 = nodes.length; i < length_1; i++) {\n                if (length_1 < 2) {\n                    break;\n                }\n                var vtx1 = this.getForceNode(nodes[i]);\n                var vtx2 = (i + 1 >= length_1) ? this.getForceNode(nodes[0]) : this.getForceNode((nodes[i + 1]));\n                var angle = (360 / nodes.length / 2) * Math.PI / 180;\n                var normalDistance = 2 * this.springLength * Math.sin(angle);\n                this.calcRelatesForce(vtx1, vtx2, normalDistance);\n            }\n            for (var s = 0; s < lstNodes.length; s++) {\n                var gnChild = lstNodes[s];\n                if (!collectionContains(gnChild.id, nodes) && gnChild.id !== gnNode.id) {\n                    force = this.getForceNode(gnChild);\n                    this.updateNeigbour(forceNode, force);\n                }\n            }\n        }\n    };\n    SymmetricLayout.prototype.appendForces = function (lstNodes) {\n        var gfnNode = null;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptPoint = gfnNode.location;\n            ptPoint.x += Math.min(gfnNode.velocityX, this.mszMaxForceVelocity.width);\n            ptPoint.y += Math.min(gfnNode.velocityY, this.mszMaxForceVelocity.height);\n            gfnNode.velocityX = 0;\n            gfnNode.velocityY = 0;\n            gfnNode.location = ptPoint;\n        }\n    };\n    SymmetricLayout.prototype.resetGraphPosition = function (lstNodes, graph) {\n        var szMin = { width: Number.MAX_VALUE, height: Number.MAX_VALUE };\n        var gfnNode = null;\n        var gnNode;\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = {\n                x: gfnNode.location.x - gnNode.actualSize.width / 2,\n                y: gfnNode.location.y - gnNode.actualSize.height / 2\n            };\n            szMin.width = Math.min(szMin.width, ptLocation.x);\n            szMin.height = Math.min(szMin.height, ptLocation.y);\n        }\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = gfnNode.location;\n            ptLocation.x -= szMin.width - (graph.treeInfo.location ? graph.treeInfo.location.x : 0);\n            ptLocation.y -= szMin.height - (graph.treeInfo.location ? graph.treeInfo.location.y : 0);\n            gfnNode.location = ptLocation;\n            gfnNode.applyChanges();\n        }\n    };\n    SymmetricLayout.prototype.convertGraphNodes = function (lstNodes) {\n        var lstToReturn = [];\n        var keys = Object.keys(lstNodes);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var k = keys_1[_i];\n            if (lstNodes[k]) {\n                var gnNode = lstNodes[k];\n                var forceNode = new GraphForceNode(gnNode);\n                gnNode.treeInfo.tag = forceNode;\n                lstToReturn.push(gnNode);\n            }\n        }\n        return lstToReturn;\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.getForceNode = function (gnNode) {\n        return gnNode.treeInfo.tag;\n    };\n    SymmetricLayout.prototype.updateNeigbour = function (vtSource, vtTarget) {\n        if (vtTarget == null || vtSource == null) {\n            return;\n        }\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        var normalDistance = (this.springLength * 0.9);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.lineAngle = function (pt1, pt2) {\n        var radians = 0;\n        var vx = pt2.x - pt1.x;\n        var vy = pt2.y - pt1.y;\n        if (vx === 0) {\n            if (vy <= 0) {\n                radians = (3.0 * Math.PI) / 2.0;\n            }\n            else {\n                radians = Math.PI / 2.0;\n            }\n        }\n        else if (vy === 0) {\n            if (vx < 0) {\n                radians = Math.PI;\n            }\n            else {\n                radians = 0;\n            }\n        }\n        else {\n            radians = Math.atan(vy / vx);\n            if (vx < 0 && vy > 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx < 0 && vy < 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx > 0 && vy < 0) {\n                radians = 2.0 * Math.PI + radians;\n            }\n        }\n        return radians;\n    };\n    SymmetricLayout.prototype.pointDistance = function (pt1, pt2) {\n        var d = 0;\n        var dx = pt2.x - pt1.x;\n        var dy = pt2.y - pt1.y;\n        var t = (dx * dx) + (dy * dy);\n        if (t > 0) {\n            d = Math.sqrt(t);\n        }\n        return d;\n    };\n    SymmetricLayout.prototype.calcRelatesForce = function (vtSource, vtTarget, normalDistance) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        var layoutManager = new GraphLayoutManager();\n        layoutManager.updateLayout(nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort);\n    };\n    SymmetricLayout.prototype.calcNodesForce = function (vtSource, vtTarget) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance > this.springLength || distance < this.springLength) {\n            this.calcForce(distance, this.springLength, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.calcForce = function (distance, minDist, angle, vtTarget) {\n        var count = vtTarget.nodes.length;\n        var length = distance - minDist;\n        var factor = this.springFactor / (count * count) * Math.sqrt(count);\n        if (length !== 0) {\n            var fVelocity = length * factor;\n            var fOffset = fVelocity;\n            var offsetX = Math.cos(angle) * fOffset;\n            var offsetY = Math.sin(angle) * fOffset;\n            vtTarget.velocityX -= offsetX;\n            vtTarget.velocityY -= offsetY;\n        }\n    };\n    return SymmetricLayout;\n}());\nexport { SymmetricLayout };\nvar GraphLayoutManager = /** @class */ (function () {\n    function GraphLayoutManager() {\n        this.visitedStack = [];\n        this.cycleEdgesCollection = [];\n        this.graphObjects = [];\n        this.passedNodes = [];\n    }\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        this.nameTable = nameTable;\n        this.nodes = nodeCollection;\n        this.connectors = connectors;\n        var selectionList = nodeCollection;\n        if (selectionList.length > 0) {\n            this.mhelperSelectedNode = cloneObject(selectionList[0]);\n        }\n        for (var _i = 0, nodeCollection_1 = nodeCollection; _i < nodeCollection_1.length; _i++) {\n            var node = nodeCollection_1[_i];\n            var nodeGraphObject = void 0;\n            nodeGraphObject = node;\n            nodeGraphObject.treeInfo = {};\n            nodeGraphObject.treeInfo.graphType = 'Node';\n            this.graphObjects.push(nodeGraphObject);\n        }\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            var connectorGraphObject = void 0;\n            connectorGraphObject = connector;\n            connectorGraphObject.treeInfo = {};\n            connectorGraphObject.treeInfo.graphType = 'Connector';\n            this.graphObjects.push(connectorGraphObject);\n        }\n        this.updateLayout1(this.graphObjects, symmetricLayout);\n        var modelBounds = this.getModelBounds(selectionList);\n        for (var i = 0; i < selectionList.length; i++) {\n            var node = selectionList[i];\n            var trnsX = (viewPort.x - modelBounds.width) / 2;\n            var margin = layout.margin || {};\n            var marginX = void 0;\n            var marginY = void 0;\n            margin.left = margin.left || 0;\n            margin.right = margin.right || 0;\n            margin.top = margin.top || 0;\n            margin.bottom = margin.bottom || 0;\n            if (layout.margin.left) {\n                margin.left = layout.margin.left;\n            }\n            if (layout.margin.top) {\n                margin.top = layout.margin.top;\n            }\n            var dx = (node.treeInfo.tag.location.x - (node.offsetX - (node.actualSize.width / 2)) -\n                modelBounds.x + trnsX + margin.left);\n            var dy = (node.treeInfo.tag.location.y - (node.offsetY - (node.actualSize.height / 2)) - modelBounds.y + margin.top);\n            node.offsetX += dx;\n            node.offsetY += dy;\n            delete node.treeInfo;\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.getModelBounds = function (lNodes) {\n        lNodes = lNodes.slice();\n        var rect = null;\n        var rect1 = null;\n        var node;\n        for (var i = 0; i < lNodes.length; i++) {\n            node = lNodes[i];\n            var bounds = getGraphBounds(node);\n            rect = new Rect(node.treeInfo.tag ? node.treeInfo.tag.location.x : bounds.x, node.treeInfo.tag ? node.treeInfo.tag.location.y : bounds.y, node.actualSize.width, node.actualSize.height);\n            if (rect1) {\n                rect1 = rect1.uniteRect(rect);\n            }\n            else {\n                rect1 = rect;\n            }\n        }\n        return rect1;\n    };\n    GraphLayoutManager.prototype.updateLayout1 = function (nodesToLayout, symmetricLayout) {\n        this.detectCyclesInGraph(nodesToLayout);\n        var nodesCount = nodesToLayout.length;\n        if (nodesCount > 0) {\n            var cycleConnColln = [];\n            var nodes = [];\n            var nodeSymbols = [];\n            for (var s = 0; s < nodesToLayout.length; s++) {\n                var nd = nodesToLayout[s];\n                if (nd.treeInfo.isCycleEdge === undefined) {\n                    nd.treeInfo.isCycleEdge = false;\n                }\n                if (nd.treeInfo.graphType === 'Connector' && !nd.treeInfo.isCycleEdge) {\n                    nodes.push(nd);\n                }\n                else if (nd.treeInfo.graphType === 'Connector') {\n                    cycleConnColln.push(nd);\n                }\n                else {\n                    nodeSymbols.push(nd);\n                }\n            }\n            nodes = nodes.concat(nodeSymbols);\n            nodes = cycleConnColln.concat(nodes);\n            while (nodesCount > this.dictionaryLength(this.passedNodes)) {\n                this.getNodesToPosition(nodes);\n                if (this.selectedNode == null) {\n                    continue;\n                }\n                symmetricLayout.doLayout(this);\n                this.selectedNode = null;\n                this.visitedStack = [];\n                for (var _i = 0, _a = this.cycleEdgesCollection; _i < _a.length; _i++) {\n                    var connector = _a[_i];\n                    connector.treeInfo.isCycleEdge = false;\n                }\n            }\n            this.passedNodes = null;\n            this.selectedNode = null;\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.getNodesToPosition = function (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            if (!collectionContains(node.id, this.passedNodes)) {\n                if (node) {\n                    this.selectNodes(node);\n                }\n                break;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectNodes = function (node) {\n        var nodeGraph = node;\n        if (node.treeInfo.graphType === 'Connector') {\n            this.exploreGraphEdge(node);\n        }\n        else if (nodeGraph != null) {\n            if (this.addNode(node, 'passed')) {\n                this.addNode(node, 'selected');\n                if (this.isConnectedToAnotherNode(nodeGraph)) {\n                    this.selectedNode = { treeInfo: {} };\n                    this.selectedNode.treeInfo.LeftMargin = 10;\n                    this.selectedNode.treeInfo.TopMargin = 10;\n                    this.selectConnectedNodes(nodeGraph);\n                }\n                else {\n                    this.selectedNode = node;\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectConnectedNodes = function (nodeGraph) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var node = nodeGraph;\n        if (node != null && this.addNode(node, 'passed')) {\n            var nodeName = node.id;\n            if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                var gnNode = this.addGraphNode(node);\n                this.getConnectedRelatives(gnNode);\n                this.exploreRelatives(nodeGraph);\n            }\n            else {\n                var graphNode = graph.treeInfo.GraphNodes[nodeName];\n                if (graphNode.treeInfo.Added) {\n                    graphNode.treeInfo.Added = false;\n                    this.getConnectedRelatives(graphNode);\n                    this.exploreRelatives(nodeGraph);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.exploreRelatives = function (nodeGraph) {\n        this.exploreRelatives1(nodeGraph, 'Parents');\n        this.exploreRelatives1(nodeGraph, 'Children');\n    };\n    GraphLayoutManager.prototype.exploreRelatives1 = function (nodeGraph, relativesToExplore) {\n        var edges = [];\n        if (relativesToExplore === 'Parents') {\n            edges = nodeGraph.inEdges;\n        }\n        else if (relativesToExplore === 'Children') {\n            edges = nodeGraph.outEdges;\n        }\n        for (var i = 0; i < edges.length; i++) {\n            var edge = this.nameTable[edges[i]];\n            if (this.addNode(edge, 'passed')) {\n                var fromNode = this.nameTable[edge.sourceID];\n                var toNode = this.nameTable[edge.targetID];\n                if (relativesToExplore === 'Parents' && fromNode != null &&\n                    collectionContains(fromNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.sourceID]);\n                }\n                else if (relativesToExplore === 'Children' && toNode != null &&\n                    collectionContains(toNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.targetID]);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedRelatives = function (graphNode) {\n        this.getConnectedParents(graphNode);\n        this.getConnectedChildren(graphNode);\n    };\n    GraphLayoutManager.prototype.dictionaryContains = function (obj, keyObj) {\n        var keys = Object.keys(obj);\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === keyObj.id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.dictionaryLength = function (obj) {\n        var keys = Object.keys(obj);\n        return keys.length;\n    };\n    GraphLayoutManager.prototype.getConnectedChildren = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.outEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.outEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.targetID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNodeChildren = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNodeChildren = this.addGraphNode(node);\n                        gnNodeChildren.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNodeChildren = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.children) {\n                        graphNode.treeInfo.children = [];\n                    }\n                    if (!gnNodeChildren.treeInfo.parents) {\n                        gnNodeChildren.treeInfo.parents = [];\n                    }\n                    this.setNode(gnNodeChildren.treeInfo.parents, graphNode);\n                    if (this.findNode(graphNode.treeInfo.children, gnNodeChildren.id) < 0) {\n                        graphNode.treeInfo.children.push(gnNodeChildren);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedParents = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.inEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.inEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.sourceID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNode = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNode = this.addGraphNode(node);\n                        gnNode.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNode = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.parents) {\n                        graphNode.treeInfo.parents = [];\n                    }\n                    if (!gnNode.treeInfo.children) {\n                        gnNode.treeInfo.children = [];\n                    }\n                    this.setNode(gnNode.treeInfo.children, graphNode);\n                    if (this.findNode(graphNode.treeInfo.parents, gnNode.id) < 0) {\n                        graphNode.treeInfo.parents.push(gnNode);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.setNode = function (list, node) {\n        var nIndex = this.findNode(list, node.id);\n        if (nIndex >= 0 && nIndex < list.length) {\n            list[nIndex] = node;\n        }\n        else {\n            list.push(node);\n        }\n    };\n    GraphLayoutManager.prototype.findNode = function (list, fullName) {\n        var nIndex = -1;\n        if (list != null && fullName !== '') {\n            for (var i = 0, nLength = list.length; i < nLength; i++) {\n                var gnNode = list[i];\n                if (typeof (gnNode) === 'string' && gnNode === fullName) {\n                    nIndex = i;\n                    break;\n                }\n                else if (gnNode != null && gnNode.id === fullName) {\n                    nIndex = i;\n                    break;\n                }\n            }\n        }\n        return nIndex;\n    };\n    GraphLayoutManager.prototype.addGraphNode = function (node) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var gnNode = node;\n        if (graph != null) {\n            graph.treeInfo.GraphNodes[gnNode.id] = gnNode;\n            var nodeHelper = this.mhelperSelectedNode;\n            if (nodeHelper != null && node.id === nodeHelper.id) {\n                this.mhelperSelectedNode = gnNode;\n            }\n        }\n        return gnNode;\n    };\n    GraphLayoutManager.prototype.isConnectedToAnotherNode = function (gnNode) {\n        var bFoundConnectedNode = false;\n        var edges = (gnNode.inEdges).concat(gnNode.outEdges);\n        if (edges.length > 0) {\n            if ((gnNode.inEdges != null) && (gnNode.inEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.inEdges, 'FromNode');\n            }\n            if ((!bFoundConnectedNode) && (gnNode.outEdges != null) && (gnNode.outEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.outEdges, 'ToNode');\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.searchEdgeCollection = function (edgesToSearchThrough, connectionDirection) {\n        var bFoundConnectedNode = false;\n        for (var i = 0; i < edgesToSearchThrough.length - 1; i++) {\n            var edge = this.nameTable[edgesToSearchThrough[i]];\n            if (!this.addNode(edge, 'passed')) {\n                continue;\n            }\n            if (!edge.treeInfo.isCycleEdge && ((connectionDirection === 'FromNode' && this.nameTable[edge.sourceID] != null)\n                || (connectionDirection === 'ToNode' && this.nameTable[edge.targetID] != null))) {\n                bFoundConnectedNode = true;\n                break;\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.exploreGraphEdge = function (node) {\n        var nodeLink = node;\n        if (nodeLink != null && !nodeLink.treeInfo.isCycleEdge && this.addNode(node, 'passed')) {\n            this.addNode(node, 'selected');\n            var fromNode = this.nameTable[nodeLink.sourceID];\n            var toNode = this.nameTable[nodeLink.targetID];\n            if (fromNode != null) {\n                this.selectNodes(fromNode);\n            }\n            else if (toNode != null) {\n                this.selectNodes(toNode);\n            }\n            else {\n                this.selectedNode = node;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.addNode = function (nodeToAdd, collectionToAdd) {\n        var bResult = true;\n        var node = nodeToAdd;\n        if (collectionToAdd === 'passed' || !node.visible) {\n            if (!this.dictionaryContains(this.passedNodes, node)) {\n                this.passedNodes[node.id] = node;\n            }\n        }\n        if (!node.visible) {\n            return false;\n        }\n        return bResult;\n    };\n    GraphLayoutManager.prototype.detectCyclesInGraph = function (nodes) {\n        var vertex = [];\n        var currentStack = [];\n        for (var k = 0; k < nodes.length; k++) {\n            if (!(nodes[k].treeInfo.graphType === 'Connector')) {\n                vertex.push(nodes[k]);\n            }\n        }\n        if (vertex.length > 0) {\n            currentStack.push(vertex[0]);\n            this.visitedStack.push(vertex[0]);\n            while (currentStack.length > 0) {\n                var top_1 = currentStack[currentStack.length - 1];\n                var childNodes = this.getUnVisitedChildNodes(top_1);\n                if (childNodes.length > 0) {\n                    var child = childNodes[0];\n                    var currentEdge = childNodes[childNodes.length - 1];\n                    if (collectionContains(child.id, this.visitedStack)) {\n                        currentEdge.treeInfo.isCycleEdge = true;\n                        this.cycleEdgesCollection.push(currentEdge);\n                    }\n                    else {\n                        currentStack.push(child);\n                        this.visitedStack.splice(0, 0, child);\n                    }\n                }\n                else {\n                    currentStack.pop();\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getUnVisitedChildNodes = function (top) {\n        var childNodes = [];\n        if (top.outEdges.length > 0) {\n            for (var i = 0; i < top.outEdges.length; i++) {\n                var con = this.nameTable[top.outEdges[i]];\n                if (!collectionContains(con.id, this.visitedStack)) {\n                    var toNode = this.nameTable[con.targetID];\n                    if (toNode != null) {\n                        childNodes.push(toNode);\n                    }\n                    childNodes.push(con);\n                    this.visitedStack.splice(0, 0, con);\n                    return childNodes;\n                }\n            }\n            return childNodes;\n        }\n        return childNodes;\n    };\n    return GraphLayoutManager;\n}());\nexport { GraphLayoutManager };\nfunction getGraphBounds(node) {\n    var x = node.offsetX - node.actualSize.width * node.pivot.x;\n    var y = node.offsetY - node.actualSize.height * node.pivot.y;\n    return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n}\nfunction collectionContains(id, coll) {\n    for (var i = 0; i < coll.length; i++) {\n        if (coll[i].id === id) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * Size defines and processes the size(width/height) of the objects\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    /**   @private  */\n    Size.prototype.isEmpty = function () {\n        return this.height === 0 && this.width === 0;\n    };\n    // public static get empty(): Size {\n    //     return new Size();\n    // }\n    // public get isEmpty(): boolean {\n    //     return this.equals(Size.empty);\n    // }\n    // public equals(size2: Size): boolean {\n    //     return this.width === size2.width && this.height === size2.height;\n    // }\n    // public union(size: Size): void {\n    //     size.width = Math.max(size.width, this.width);\n    //     size.height = Math.max(size.height, this.height);\n    // }\n    /**   @private  */\n    Size.prototype.clone = function () {\n        return new Size(this.width, this.height);\n    };\n    return Size;\n}());\nexport { Size };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines and processes coordinates\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    function Point() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**   @private  */\n    Point.equals = function (point1, point2) {\n        if (point1 === point2) {\n            return true;\n        }\n        if (!point1 || !point2) {\n            return false;\n        }\n        return !point1 || !point2 || point1.x === point2.x && point1.y === point2.y;\n    };\n    /**\n     * check whether the points are given\n     */\n    Point.isEmptyPoint = function (point) {\n        if (point.x && point.y) {\n            return false;\n        }\n        return true;\n    };\n    // public add(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x + point2.x, y: point1.y + point2.y };\n    // }\n    // public subtract(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x - point2.x, y: point1.y - point2.y };\n    // }\n    // public multiply(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.x, y: point1.y * point2.y\n    //     };\n    // }\n    // public crossProduct(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.y, y: point2.x * point1.y\n    //     };\n    // }\n    // public offset(offsetX: number, offsetY: number): void {\n    //     this.x += offsetX;\n    //     this.y += offsetY;\n    // }\n    // public rotate(angle: number): PointModel {\n    //     let c: number = Math.cos(angle);\n    //     let s: number = Math.sin(angle);\n    //     return {\n    //         x: c * this.x - s * this.y, y: s * this.x + c * this.y\n    //     };\n    // }\n    // public distance(point2: PointModel): number {\n    //     return Math.sqrt(Math.pow(this.x - point2.x, 2) + Math.pow(this.y - point2.y, 2));\n    // }\n    /**   @private  */\n    Point.transform = function (point, angle, length) {\n        var pt = { x: 0, y: 0 };\n        pt.x = Math.round((point.x + length * Math.cos(angle * Math.PI / 180)) * 100) / 100;\n        pt.y = Math.round((point.y + length * Math.sin(angle * Math.PI / 180)) * 100) / 100;\n        return pt;\n    };\n    /**   @private  */\n    Point.findLength = function (s, e) {\n        var length = Math.sqrt(Math.pow((s.x - e.x), 2) + Math.pow((s.y - e.y), 2));\n        return length;\n    };\n    /**   @private  */\n    Point.findAngle = function (point1, point2) {\n        var angle = Math.atan2(point2.y - point1.y, point2.x - point1.x);\n        angle = (180 * angle / Math.PI);\n        angle %= 360;\n        if (angle < 0) {\n            angle += 360;\n        }\n        return angle;\n    };\n    /**   @private  */\n    Point.distancePoints = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Point.getLengthFromListOfPoints = function (points) {\n        var length = 0;\n        for (var j = 0; j < points.length - 1; j++) {\n            length += this.distancePoints(points[j], points[j + 1]);\n        }\n        return length;\n    };\n    /**   @private  */\n    Point.adjustPoint = function (source, target, isStart, length) {\n        var pt = isStart ? { x: source.x, y: source.y } : { x: target.x, y: target.y };\n        var angle;\n        if (source.x === target.x) {\n            if (source.y < target.y && isStart || source.y > target.y && !isStart) {\n                pt.y += length;\n            }\n            else {\n                pt.y -= length;\n            }\n        }\n        else if (source.y === target.y) {\n            if (source.x < target.x && isStart || source.x > target.x && !isStart) {\n                pt.x += length;\n            }\n            else {\n                pt.x -= length;\n            }\n        }\n        else {\n            if (isStart) {\n                angle = this.findAngle(source, target);\n                pt = this.transform(source, angle, length);\n            }\n            else {\n                angle = this.findAngle(target, source);\n                pt = this.transform(target, angle, length);\n            }\n        }\n        return pt;\n    };\n    /**   @private  */\n    Point.direction = function (pt1, pt2) {\n        if (Math.abs(pt2.x - pt1.x) > Math.abs(pt2.y - pt1.y)) {\n            return pt1.x < pt2.x ? 'Right' : 'Left';\n        }\n        else {\n            return pt1.y < pt2.y ? 'Bottom' : 'Top';\n        }\n    };\n    //Move these methods to util\n    //public CompareTo(point: PointModel): number {\n    //    let result: number = this.X.CompareTo(point.X);\n    //    return result != 0 ? result : this.Y.CompareTo(point.Y);\n    //}\n    //public CompareOnYAxis(point: PointModel): number {\n    //    let result: number = this.X.CompareTo(point.X);\n    //    return result != 0 ? result : this.Y.CompareTo(point.Y);\n    //}\n    //public CompareOnXAxis(point: PointModel): number {\n    //    let result: number = this.Y.CompareTo(point.Y);\n    //    return result != 0 ? result : this.X.CompareTo(point.X);\n    //}\n    // public round(): void {\n    //     this.x = Math.round(this.x);\n    //     this.y = Math.round(this.y);\n    // }\n    /**\n     * @private\n     * Returns the name of class Point\n     */\n    Point.prototype.getClassName = function () {\n        return 'Point';\n    };\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"y\", void 0);\n    return Point;\n}(ChildProperty));\nexport { Point };\n","/**\n * Rect defines and processes rectangular regions\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        /**\n         * Sets the x-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.x = Number.MAX_VALUE;\n        /**\n         * Sets the y-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.y = Number.MAX_VALUE;\n        /**\n         * Sets the width of a rectangular region\n         * @default 0\n         */\n        this.width = 0;\n        /**\n         * Sets the height of a rectangular region\n         * @default 0\n         */\n        this.height = 0;\n        if (x === undefined || y === undefined) {\n            x = y = Number.MAX_VALUE;\n            width = height = 0;\n        }\n        else {\n            if (width === undefined) {\n                width = 0;\n            }\n            if (height === undefined) {\n                height = 0;\n            }\n        }\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    Object.defineProperty(Rect.prototype, \"left\", {\n        /**   @private  */\n        get: function () {\n            return this.x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"right\", {\n        /**   @private  */\n        get: function () {\n            return this.x + this.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"top\", {\n        /**   @private  */\n        get: function () {\n            return this.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottom\", {\n        /**   @private  */\n        get: function () {\n            return this.y + this.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"center\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**   @private  */\n    Rect.prototype.equals = function (rect1, rect2) {\n        return rect1.x === rect2.x && rect1.y === rect2.y && rect1.width === rect2.width && rect1.height === rect2.height;\n    };\n    /**   @private  */\n    Rect.prototype.uniteRect = function (rect) {\n        var right = Math.max(Number.NaN === this.right || this.x === Number.MAX_VALUE ? rect.right : this.right, rect.right);\n        var bottom = Math.max(Number.NaN === this.bottom || this.y === Number.MAX_VALUE ? rect.bottom : this.bottom, rect.bottom);\n        this.x = Math.min(this.left, rect.left);\n        this.y = Math.min(this.top, rect.top);\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n        return this;\n    };\n    /**   @private  */\n    Rect.prototype.unitePoint = function (point) {\n        if (this.x === Number.MAX_VALUE) {\n            this.x = point.x;\n            this.y = point.y;\n            return;\n        }\n        var x = Math.min(this.left, point.x);\n        var y = Math.min(this.top, point.y);\n        var right = Math.max(this.right, point.x);\n        var bottom = Math.max(this.bottom, point.y);\n        this.x = x;\n        this.y = y;\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n    };\n    // public intersection(rect: Rect): Rect {\n    //     if (this.intersects(rect)) {\n    //         let left: number = Math.max(this.left, rect.left);\n    //         let top: number = Math.max(this.top, rect.top);\n    //         let right: number = Math.min(this.right, rect.right);\n    //         let bottom: number = Math.min(this.bottom, rect.bottom);\n    //         return new Rect(left, top, right - left, bottom - top);\n    //     }\n    //     return Rect.empty;\n    // }\n    /**   @private  */\n    Rect.prototype.Inflate = function (padding) {\n        this.x -= padding;\n        this.y -= padding;\n        this.width += padding * 2;\n        this.height += padding * 2;\n        return this;\n    };\n    //public Inflate(size: Size): Rect {\n    //    this.x -= size.Width;\n    //    this.y -= size.Height;\n    //    this.width += size.Width * 2;\n    //    this.height += size.Height * 2;\n    //    return this;\n    //}\n    // public inflate(width: number, height: number): void {\n    //     this.x -= width;\n    //     this.y -= height;\n    //     this.width += width * 2;\n    //     this.height += height * 2;\n    // }\n    /**   @private  */\n    Rect.prototype.intersects = function (rect) {\n        if (this.right < rect.left || this.left > rect.right || this.top > rect.bottom || this.bottom < rect.top) {\n            return false;\n        }\n        return true;\n    };\n    /**   @private  */\n    Rect.prototype.containsRect = function (rect) {\n        return this.left <= rect.left && this.right >= rect.right && this.top <= rect.top && this.bottom >= rect.bottom;\n    };\n    /**   @private  */\n    Rect.prototype.containsPoint = function (point, padding) {\n        if (padding === void 0) { padding = 0; }\n        return this.left - padding <= point.x && this.right + padding >= point.x\n            && this.top - padding <= point.y && this.bottom + padding >= point.y;\n    };\n    // public toPoints(): PointModel[] {\n    //     let points: PointModel[] = [];\n    //     points.push(this.topLeft);\n    //     points.push(this.topRight);\n    //     points.push(this.bottomLeft);\n    //     points.push(this.bottomRight);\n    //     return points;\n    // }\n    /**   @private  */\n    Rect.toBounds = function (points) {\n        var rect = new Rect();\n        for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n            var pt = points_1[_i];\n            rect.unitePoint(pt);\n        }\n        return rect;\n    };\n    /**   @private  */\n    Rect.empty = new Rect(Number.MAX_VALUE, Number.MIN_VALUE, 0, 0);\n    return Rect;\n}());\nexport { Rect };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, ComplexFactory, isBlazor } from '@syncfusion/ej2-base';\n/**   @private  */\nvar getGradientType = function (obj) {\n    if (obj) {\n        if (isBlazor()) {\n            return DiagramGradient;\n        }\n        switch (obj.type) {\n            case 'Linear':\n                return LinearGradient;\n            case 'Radial':\n                return RadialGradient;\n            default:\n                return LinearGradient;\n        }\n    }\n    return LinearGradient;\n};\n/**\n * Layout Model module defines the styles and types to arrange objects in containers\n */\nvar Thickness = /** @class */ (function () {\n    function Thickness(left, right, top, bottom) {\n        this.left = left;\n        this.right = right;\n        this.top = top;\n        this.bottom = bottom;\n    }\n    return Thickness;\n}());\nexport { Thickness };\n/**\n * Defines the space to be left between an object and its immediate parent\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Defines the Shadow appearance of the objects\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n *  let nodes: NodeModel[] = [{ id: 'node2', width: 100, height: 100,\n *  constraints: NodeConstraints.Default | NodeConstraints.Shadow,\n *  shadow: { angle: 45, distance: 5, opacity: 0.7, color: 'grey'}\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Shadow = /** @class */ (function (_super) {\n    __extends(Shadow, _super);\n    function Shadow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(45)\n    ], Shadow.prototype, \"angle\", void 0);\n    __decorate([\n        Property(5)\n    ], Shadow.prototype, \"distance\", void 0);\n    __decorate([\n        Property(0.7)\n    ], Shadow.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('lightgrey')\n    ], Shadow.prototype, \"color\", void 0);\n    return Shadow;\n}(ChildProperty));\nexport { Shadow };\n/**\n * Defines the different colors and the region of color transitions\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Stop = /** @class */ (function (_super) {\n    __extends(Stop, _super);\n    function Stop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Stop\n     */\n    Stop.prototype.getClassName = function () {\n        return 'Stop';\n    };\n    __decorate([\n        Property('')\n    ], Stop.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Stop.prototype, \"offset\", void 0);\n    __decorate([\n        Property(1)\n    ], Stop.prototype, \"opacity\", void 0);\n    return Stop;\n}(ChildProperty));\nexport { Stop };\n/**\n * Paints the node with a smooth transition from one color to another color\n */\nvar Gradient = /** @class */ (function (_super) {\n    __extends(Gradient, _super);\n    function Gradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Stop)\n    ], Gradient.prototype, \"stops\", void 0);\n    __decorate([\n        Property('None')\n    ], Gradient.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Gradient.prototype, \"id\", void 0);\n    return Gradient;\n}(ChildProperty));\nexport { Gradient };\n/**\n * Defines the linear gradient of styles\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: LinearGradientModel = { x1: 0, x2: 50, y1: 0, y2: 50, stops: stopscol, type: 'Linear' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\n/**\n * Paints the node with linear color transitions\n */\nvar DiagramGradient = /** @class */ (function (_super) {\n    __extends(DiagramGradient, _super);\n    function DiagramGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], DiagramGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], DiagramGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], DiagramGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], DiagramGradient.prototype, \"y2\", void 0);\n    __decorate([\n        Property(0)\n    ], DiagramGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], DiagramGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], DiagramGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], DiagramGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], DiagramGradient.prototype, \"r\", void 0);\n    return DiagramGradient;\n}(Gradient));\nexport { DiagramGradient };\n/**\n * Paints the node with linear color transitions\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y2\", void 0);\n    return LinearGradient;\n}(Gradient));\nexport { LinearGradient };\n/**\n * A focal point defines the beginning of the gradient, and a circle defines the end point of the gradient\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], RadialGradient.prototype, \"r\", void 0);\n    return RadialGradient;\n}(Gradient));\nexport { RadialGradient };\n/**\n * Defines the style of shape/path\n */\nvar ShapeStyle = /** @class */ (function (_super) {\n    __extends(ShapeStyle, _super);\n    function ShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('white')\n    ], ShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('black')\n    ], ShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('')\n    ], ShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], ShapeStyle.prototype, \"gradient\", void 0);\n    return ShapeStyle;\n}(ChildProperty));\nexport { ShapeStyle };\n/**\n * Defines the stroke style of a path\n */\nvar StrokeStyle = /** @class */ (function (_super) {\n    __extends(StrokeStyle, _super);\n    function StrokeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('transparent')\n    ], StrokeStyle.prototype, \"fill\", void 0);\n    return StrokeStyle;\n}(ShapeStyle));\nexport { StrokeStyle };\n/**\n * Defines the appearance of text\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let style: TextStyleModel = { strokeColor: 'black', opacity: 0.5, whiteSpace:'CollapseSpace', strokeWidth: 1 };\n * let node: NodeModel;\n * node = {\n * ...\n * id: 'node', width: 100, height: 100, offsetX: 100, offsetY: 100,\n * annotations : [{\n * content: 'text', style: style }];\n * ...\n * };\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: [node],\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar TextStyle = /** @class */ (function (_super) {\n    __extends(TextStyle, _super);\n    function TextStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('black')\n    ], TextStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property('Arial')\n    ], TextStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(12)\n    ], TextStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], TextStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], TextStyle.prototype, \"textWrapping\", void 0);\n    __decorate([\n        Property('Center')\n    ], TextStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], TextStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], TextStyle.prototype, \"textOverflow\", void 0);\n    __decorate([\n        Property('transparent')\n    ], TextStyle.prototype, \"fill\", void 0);\n    return TextStyle;\n}(ShapeStyle));\nexport { TextStyle };\n/**\n * Defines the style of shape/path\n */\nvar DiagramShapeStyle = /** @class */ (function (_super) {\n    __extends(DiagramShapeStyle, _super);\n    function DiagramShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('white')\n    ], DiagramShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], DiagramShapeStyle.prototype, \"textOverflow\", void 0);\n    __decorate([\n        Property(1)\n    ], DiagramShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], DiagramShapeStyle.prototype, \"gradient\", void 0);\n    __decorate([\n        Property(1)\n    ], DiagramShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(false)\n    ], DiagramShapeStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property('')\n    ], DiagramShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property('black')\n    ], DiagramShapeStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property(12)\n    ], DiagramShapeStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property('Arial')\n    ], DiagramShapeStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], DiagramShapeStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('Center')\n    ], DiagramShapeStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], DiagramShapeStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property(false)\n    ], DiagramShapeStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('black')\n    ], DiagramShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], DiagramShapeStyle.prototype, \"textWrapping\", void 0);\n    return DiagramShapeStyle;\n}(ChildProperty));\nexport { DiagramShapeStyle };\n","/**\n * enum module defines the public enumerations\n */\n/**\n * @private\n */\nexport var BlazorAction;\n(function (BlazorAction) {\n    /** Return the layout value is true when doLayout is called   */\n    BlazorAction[BlazorAction[\"Default\"] = 0] = \"Default\";\n    /** Need to return the layout value when doLayout is called  */\n    BlazorAction[BlazorAction[\"expandNode\"] = 2] = \"expandNode\";\n    /** Enabled during the mouse interaction  */\n    BlazorAction[BlazorAction[\"interaction\"] = 4] = \"interaction\";\n})(BlazorAction || (BlazorAction = {}));\n/**\n * Constraints to define when a port has to be visible\n * Visible - Always shows the port\n * Hidden - Always hides the port\n * Hover - Shows the port when the mouse hovers over a node\n * Connect - Shows the port when a connection end point is dragged over a node\n * Default - By default the ports will be visible when a node is hovered and being tried to connect\n * @aspNumberEnum\n * @blazorNumberEnum\n */\nexport var PortVisibility;\n(function (PortVisibility) {\n    /** Always shows the port */\n    PortVisibility[PortVisibility[\"Visible\"] = 1] = \"Visible\";\n    /** Always hides the port */\n    PortVisibility[PortVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    /** Shows the port when the mouse hovers over a node */\n    PortVisibility[PortVisibility[\"Hover\"] = 4] = \"Hover\";\n    /** Shows the port when a connection end point is dragged over a node */\n    PortVisibility[PortVisibility[\"Connect\"] = 8] = \"Connect\";\n})(PortVisibility || (PortVisibility = {}));\n/**\n * Defines the constraints to Enables / Disables some features of Snapping.\n * None - Snapping does not happen\n * ShowHorizontalLines - Displays only the horizontal gridlines in diagram.\n * ShowVerticalLines - Displays only the Vertical gridlines in diagram.\n * ShowLines - Display both Horizontal and Vertical gridlines.\n * SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToVerticalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines.\n * snapToObject - Enables the object to snap with the other objects in the diagram.\n * @IgnoreSingular\n * @aspNumberEnum\n * @blazorNumberEnum\n */\nexport var SnapConstraints;\n(function (SnapConstraints) {\n    /** None - Snapping does not happen */\n    SnapConstraints[SnapConstraints[\"None\"] = 0] = \"None\";\n    /** ShowHorizontalLines - Displays only the horizontal gridlines in diagram. */\n    SnapConstraints[SnapConstraints[\"ShowHorizontalLines\"] = 1] = \"ShowHorizontalLines\";\n    /** ShowVerticalLines - Displays only the Vertical gridlines in diagram  */\n    SnapConstraints[SnapConstraints[\"ShowVerticalLines\"] = 2] = \"ShowVerticalLines\";\n    /** ShowLines - Display both Horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"ShowLines\"] = 3] = \"ShowLines\";\n    /** SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToHorizontalLines\"] = 4] = \"SnapToHorizontalLines\";\n    /** SnapToVerticalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToVerticalLines\"] = 8] = \"SnapToVerticalLines\";\n    /** SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToLines\"] = 12] = \"SnapToLines\";\n    /** SnapToObject - Enables the object to snap with the other objects in the diagram. */\n    SnapConstraints[SnapConstraints[\"SnapToObject\"] = 16] = \"SnapToObject\";\n    /** Shows gridlines and enables snapping */\n    SnapConstraints[SnapConstraints[\"All\"] = 31] = \"All\";\n})(SnapConstraints || (SnapConstraints = {}));\n/**\n * Defines the visibility of the selector handles\n * None - Hides all the selector elements\n * ConnectorSourceThumb - Shows/hides the source thumb of the connector\n * ConnectorTargetThumb - Shows/hides the target thumb of the connector\n * ResizeSouthEast - Shows/hides the bottom right resize handle of the selector\n * ResizeSouthWest - Shows/hides the bottom left resize handle of the selector\n * ResizeNorthEast - Shows/hides the top right resize handle of the selector\n * ResizeNorthWest - Shows/hides the top left resize handle of the selector\n * ResizeEast - Shows/hides the middle right resize handle of the selector\n * ResizeWest - Shows/hides the middle left resize handle of the selector\n * ResizeSouth - Shows/hides the bottom center resize handle of the selector\n * ResizeNorth - Shows/hides the top center resize handle of the selector\n * Rotate - Shows/hides the rotate handle of the selector\n * UserHandles - Shows/hides the user handles of the selector\n * Resize - Shows/hides all resize handles of the selector\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var SelectorConstraints;\n(function (SelectorConstraints) {\n    /** Hides all the selector elements */\n    SelectorConstraints[SelectorConstraints[\"None\"] = 1] = \"None\";\n    /** Shows/hides the source thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorSourceThumb\"] = 2] = \"ConnectorSourceThumb\";\n    /** Shows/hides the target thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorTargetThumb\"] = 4] = \"ConnectorTargetThumb\";\n    /** Shows/hides the bottom right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthEast\"] = 8] = \"ResizeSouthEast\";\n    /** Shows/hides the bottom left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthWest\"] = 16] = \"ResizeSouthWest\";\n    /** Shows/hides the top right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthEast\"] = 32] = \"ResizeNorthEast\";\n    /** Shows/hides the top left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthWest\"] = 64] = \"ResizeNorthWest\";\n    /** Shows/hides the middle right resize handle of the selector  */\n    SelectorConstraints[SelectorConstraints[\"ResizeEast\"] = 128] = \"ResizeEast\";\n    /** Shows/hides the middle left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeWest\"] = 256] = \"ResizeWest\";\n    /** Shows/hides the bottom center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouth\"] = 512] = \"ResizeSouth\";\n    /** Shows/hides the top center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorth\"] = 1024] = \"ResizeNorth\";\n    /**  Shows/hides the rotate handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"Rotate\"] = 2048] = \"Rotate\";\n    /** Shows/hides the user handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"UserHandle\"] = 4096] = \"UserHandle\";\n    /** Shows/hides the default tooltip of nodes and connectors */\n    SelectorConstraints[SelectorConstraints[\"ToolTip\"] = 8192] = \"ToolTip\";\n    /** Shows/hides all resize handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeAll\"] = 2046] = \"ResizeAll\";\n    /** Shows all handles of the selector  */\n    SelectorConstraints[SelectorConstraints[\"All\"] = 16382] = \"All\";\n})(SelectorConstraints || (SelectorConstraints = {}));\n/**\n * Defines the constraints to enable/disable certain features of connector.\n * * None - Interaction of the connectors cannot be done.\n * * Select - Selects the connector.\n * * Delete - Delete the connector.\n * * Drag - Drag the connector.\n * * DragSourceEnd - Drag the source end of the connector.\n * * DragTargetEnd - Drag the target end of the connector.\n * * DragSegmentThump - Drag the segment thumb of the connector.\n * * AllowDrop - Allow to drop a node.\n * * Bridging - Creates bridge  on intersection of two connectors.\n * * BridgeObstacle -\n * * InheritBridging - Creates bridge  on intersection of two connectors.\n * * PointerEvents - Sets the pointer events.\n * * Tooltip - Displays a tooltip for the connectors.\n * * InheritToolTip - Displays a tooltip for the connectors.\n * * Interaction - Features of the connector used for interaction.\n * * ReadOnly - Enables ReadOnly\n * * Default - Default features of the connector.\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var ConnectorConstraints;\n(function (ConnectorConstraints) {\n    /** Disable all connector Constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connector to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables connector to be Deleted. */\n    ConnectorConstraints[ConnectorConstraints[\"Delete\"] = 4] = \"Delete\";\n    /** Enables connector to be Dragged. */\n    ConnectorConstraints[ConnectorConstraints[\"Drag\"] = 8] = \"Drag\";\n    /** Enables connectors source end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSourceEnd\"] = 16] = \"DragSourceEnd\";\n    /** Enables connectors target end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragTargetEnd\"] = 32] = \"DragTargetEnd\";\n    /** Enables control point and end point of every segment in a connector for editing. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSegmentThumb\"] = 64] = \"DragSegmentThumb\";\n    /** Enables AllowDrop constraints to the  connector. */\n    ConnectorConstraints[ConnectorConstraints[\"AllowDrop\"] = 128] = \"AllowDrop\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"Bridging\"] = 256] = \"Bridging\";\n    /** Enables or Disables Bridge Obstacles with overlapping of connectors. */\n    ConnectorConstraints[ConnectorConstraints[\"BridgeObstacle\"] = 512] = \"BridgeObstacle\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritBridging\"] = 1024] = \"InheritBridging\";\n    /** Used to set the pointer events. */\n    ConnectorConstraints[ConnectorConstraints[\"PointerEvents\"] = 2048] = \"PointerEvents\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"Tooltip\"] = 4096] = \"Tooltip\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"InheritTooltip\"] = 8192] = \"InheritTooltip\";\n    /** Enables Interaction. */\n    ConnectorConstraints[ConnectorConstraints[\"Interaction\"] = 4218] = \"Interaction\";\n    /** Enables ReadOnly */\n    ConnectorConstraints[ConnectorConstraints[\"ReadOnly\"] = 16384] = \"ReadOnly\";\n    /** Enables or disables routing to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"LineRouting\"] = 32768] = \"LineRouting\";\n    /** Enables or disables routing to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritLineRouting\"] = 65536] = \"InheritLineRouting\";\n    /** Enables or disables near node padding to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"ConnectToNearByNode\"] = 131072] = \"ConnectToNearByNode\";\n    /** Enables or disables near port padding to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"ConnectToNearByPort\"] = 262144] = \"ConnectToNearByPort\";\n    /** Enables or disables Enables or disables near port and node padding to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"ConnectToNearByElement\"] = 393216] = \"ConnectToNearByElement\";\n    /** Enables all constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"Default\"] = 470590] = \"Default\";\n})(ConnectorConstraints || (ConnectorConstraints = {}));\n/**\n * Enables/Disables the annotation constraints\n * ReadOnly - Enables/Disables the ReadOnly Constraints\n * InheritReadOnly - Enables/Disables the InheritReadOnly Constraints\n * Select -Enables/Disable select support for the annotation\n * Drag - Enables/Disable drag support for the annotation\n * Resize - Enables/Disable resize support for the annotation\n * Rotate - Enables/Disable rotate support for the annotation\n * Interaction - Enables annotation to inherit the interaction option\n * None - Disable all annotation constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var AnnotationConstraints;\n(function (AnnotationConstraints) {\n    /** Enables/Disables the ReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"ReadOnly\"] = 2] = \"ReadOnly\";\n    /** Enables/Disables the InheritReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"InheritReadOnly\"] = 4] = \"InheritReadOnly\";\n    /** Enables/Disable select support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Select\"] = 8] = \"Select\";\n    /** Enables/Disable drag support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Drag\"] = 16] = \"Drag\";\n    /** Enables/Disable resize support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Resize\"] = 32] = \"Resize\";\n    /** Enables/Disable rotate support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Rotate\"] = 64] = \"Rotate\";\n    /** Enables annotation to inherit the interaction option */\n    AnnotationConstraints[AnnotationConstraints[\"Interaction\"] = 120] = \"Interaction\";\n    /** Disable all annotation Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"None\"] = 0] = \"None\";\n})(AnnotationConstraints || (AnnotationConstraints = {}));\n/**\n * Enables/Disables certain features of node\n * None - Disable all node Constraints\n * Select - Enables node to be selected\n * Drag - Enables node to be Dragged\n * Rotate - Enables node to be Rotate\n * Shadow - Enables node to display shadow\n * PointerEvents - Enables node to provide pointer  option\n * Delete - Enables node to delete\n * InConnect - Enables node to provide in connect option\n * OutConnect - Enables node to provide out connect option\n * Individual - Enables node to provide individual resize option\n * Expandable - Enables node to provide Expandable option\n * AllowDrop - Enables node to provide allow to drop option\n * Inherit - Enables node to inherit the interaction option\n * ResizeNorthEast - Enable ResizeNorthEast of the node\n * ResizeEast - Enable ResizeEast of the node\n * ResizeSouthEast - Enable ResizeSouthEast of the node\n * ResizeSouth - Enable ResizeSouthWest of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeSouth - Enable ResizeSouth of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeWest - Enable ResizeWest of the node\n * ResizeNorth - Enable ResizeNorth of the node\n * Resize - Enables the Aspect ratio fo the node\n * AspectRatio - Enables the Aspect ratio fo the node\n * Tooltip - Enables or disables tool tip for the Nodes\n * InheritTooltip - Enables or disables tool tip for the Nodes\n * ReadOnly - Enables the  ReadOnly support for Annotation\n * Default - Enables all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var NodeConstraints;\n(function (NodeConstraints) {\n    /** Disable all node Constraints. */\n    NodeConstraints[NodeConstraints[\"None\"] = 0] = \"None\";\n    /** Enables node to be selected. */\n    NodeConstraints[NodeConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables node to be Dragged. */\n    NodeConstraints[NodeConstraints[\"Drag\"] = 4] = \"Drag\";\n    /** Enables node to be Rotate. */\n    NodeConstraints[NodeConstraints[\"Rotate\"] = 8] = \"Rotate\";\n    /** Enables node to display shadow. */\n    NodeConstraints[NodeConstraints[\"Shadow\"] = 16] = \"Shadow\";\n    /** Enables node to provide pointer  option */\n    NodeConstraints[NodeConstraints[\"PointerEvents\"] = 32] = \"PointerEvents\";\n    /** Enables node to delete */\n    NodeConstraints[NodeConstraints[\"Delete\"] = 64] = \"Delete\";\n    /** Enables node to provide in connect option */\n    NodeConstraints[NodeConstraints[\"InConnect\"] = 128] = \"InConnect\";\n    /** Enables node to provide out connect option */\n    NodeConstraints[NodeConstraints[\"OutConnect\"] = 256] = \"OutConnect\";\n    /** Enables node to provide individual resize option */\n    NodeConstraints[NodeConstraints[\"Individual\"] = 512] = \"Individual\";\n    /** Enables node to provide Expandable option */\n    NodeConstraints[NodeConstraints[\"Expandable\"] = 1024] = \"Expandable\";\n    /** Enables node to provide allow to drop option */\n    NodeConstraints[NodeConstraints[\"AllowDrop\"] = 2048] = \"AllowDrop\";\n    /** Enables node to inherit the interaction option */\n    NodeConstraints[NodeConstraints[\"Inherit\"] = 78] = \"Inherit\";\n    /** Enable ResizeNorthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthEast\"] = 4096] = \"ResizeNorthEast\";\n    /** Enable ResizeEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeEast\"] = 8192] = \"ResizeEast\";\n    /** Enable ResizeSouthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthEast\"] = 16384] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouth\"] = 32768] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthWest\"] = 65536] = \"ResizeSouthWest\";\n    /** Enable ResizeWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeWest\"] = 131072] = \"ResizeWest\";\n    /** Enable ResizeNorthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthWest\"] = 262144] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorth\"] = 524288] = \"ResizeNorth\";\n    /** Enable Resize of the node  */\n    NodeConstraints[NodeConstraints[\"Resize\"] = 1044480] = \"Resize\";\n    /** Enables the Aspect ratio fo the node */\n    NodeConstraints[NodeConstraints[\"AspectRatio\"] = 1048576] = \"AspectRatio\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"Tooltip\"] = 2097152] = \"Tooltip\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"InheritTooltip\"] = 4194304] = \"InheritTooltip\";\n    /** Enables the  ReadOnly support for Annotation */\n    NodeConstraints[NodeConstraints[\"ReadOnly\"] = 8388608] = \"ReadOnly\";\n    /** hide all resize support for node */\n    NodeConstraints[NodeConstraints[\"HideThumbs\"] = 16777216] = \"HideThumbs\";\n    /** Enables or disables child in parent for the swimLane node */\n    NodeConstraints[NodeConstraints[\"AllowMovingOutsideLane\"] = 33554432] = \"AllowMovingOutsideLane\";\n    /** Enables all constraints */\n    NodeConstraints[NodeConstraints[\"Default\"] = 5240814] = \"Default\";\n})(NodeConstraints || (NodeConstraints = {}));\n/** Enables/Disables The element actions\n * None - Diables all element actions are none\n * ElementIsPort - Enable element action is port\n * ElementIsGroup - Enable element action as Group\n * @private\n */\nexport var ElementAction;\n(function (ElementAction) {\n    /** Disables all element actions are none  */\n    ElementAction[ElementAction[\"None\"] = 0] = \"None\";\n    /** Enable the element action is Port  */\n    ElementAction[ElementAction[\"ElementIsPort\"] = 2] = \"ElementIsPort\";\n    /** Enable the element action as Group  */\n    ElementAction[ElementAction[\"ElementIsGroup\"] = 4] = \"ElementIsGroup\";\n})(ElementAction || (ElementAction = {}));\n/** Enables/Disables the handles of the selector\n * Rotate - Enable Rotate Thumb\n * ConnectorSource - Enable Connector source point\n * ConnectorTarget - Enable Connector target point\n * ResizeNorthEast - Enable ResizeNorthEast Resize\n * ResizeEast - Enable ResizeEast Resize\n * ResizeSouthEast - Enable ResizeSouthEast Resize\n * ResizeSouth - Enable ResizeSouth Resize\n * ResizeSouthWest - Enable ResizeSouthWest Resize\n * ResizeWest - Enable ResizeWest Resize\n * ResizeNorthWest - Enable ResizeNorthWest Resize\n * ResizeNorth - Enable ResizeNorth Resize\n * Default - Enables all constraints\n * @private\n */\nexport var ThumbsConstraints;\n(function (ThumbsConstraints) {\n    /** Enable Rotate Thumb  */\n    ThumbsConstraints[ThumbsConstraints[\"Rotate\"] = 2] = \"Rotate\";\n    /** Enable Connector source point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorSource\"] = 4] = \"ConnectorSource\";\n    /** Enable Connector target point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorTarget\"] = 8] = \"ConnectorTarget\";\n    /** Enable ResizeNorthEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthEast\"] = 16] = \"ResizeNorthEast\";\n    /** Enable ResizeEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeEast\"] = 32] = \"ResizeEast\";\n    /** Enable ResizeSouthEast Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthEast\"] = 64] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouth\"] = 128] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthWest\"] = 256] = \"ResizeSouthWest\";\n    /** Enable ResizeWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeWest\"] = 512] = \"ResizeWest\";\n    /** Enable ResizeNorthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthWest\"] = 1024] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorth\"] = 2048] = \"ResizeNorth\";\n    /** Enables all constraints */\n    ThumbsConstraints[ThumbsConstraints[\"Default\"] = 4094] = \"Default\";\n})(ThumbsConstraints || (ThumbsConstraints = {}));\n/**\n * Enables/Disables certain features of diagram\n * None - Disable DiagramConstraints constraints\n * Bridging - Enables/Disable Bridging support for connector\n * UndoRedo - Enables/Disable the Undo/Redo support\n * Tooltip - Enables/Disable Tooltip support\n * UserInteraction - Enables/Disable UserInteraction support for the diagram\n * ApiUpdate - Enables/Disable ApiUpdate support for the diagram\n * PageEditable - Enables/Disable PageEditable support for the diagram\n * Zoom - Enables/Disable Zoom support for the diagram\n * PanX - Enables/Disable PanX support for the diagram\n * PanY - Enables/Disable PanY support for the diagram\n * Pan - Enables/Disable Pan support the diagram\n * ZoomTextEdit - Enables/Disables zooming the text box while editing the text\n * Virtualization - Enables/Disable Virtualization support the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramConstraints;\n(function (DiagramConstraints) {\n    /** Disable DiagramConstraints constraints */\n    DiagramConstraints[DiagramConstraints[\"None\"] = 1] = \"None\";\n    /** Enables/Disable Bridging support for connector */\n    DiagramConstraints[DiagramConstraints[\"Bridging\"] = 2] = \"Bridging\";\n    /** Enables/Disable the Undo/Redo support */\n    DiagramConstraints[DiagramConstraints[\"UndoRedo\"] = 4] = \"UndoRedo\";\n    /** Enables/Disable Tooltip support */\n    DiagramConstraints[DiagramConstraints[\"Tooltip\"] = 8] = \"Tooltip\";\n    /** Enables/Disable UserInteraction support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"UserInteraction\"] = 16] = \"UserInteraction\";\n    /** Enables/Disable ApiUpdate support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"ApiUpdate\"] = 32] = \"ApiUpdate\";\n    /** Enables/Disable PageEditable support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PageEditable\"] = 48] = \"PageEditable\";\n    /** Enables/Disable Zoom support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"Zoom\"] = 64] = \"Zoom\";\n    /** Enables/Disable PanX support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanX\"] = 128] = \"PanX\";\n    /** Enables/Disable PanY support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanY\"] = 256] = \"PanY\";\n    /** Enables/Disable Pan support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Pan\"] = 384] = \"Pan\";\n    /** Enables/Disables zooming the text box while editing the text */\n    DiagramConstraints[DiagramConstraints[\"ZoomTextEdit\"] = 512] = \"ZoomTextEdit\";\n    /** Enables/Disable Virtualization support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Virtualization\"] = 1024] = \"Virtualization\";\n    /** Enables/ Disable the line routing */\n    DiagramConstraints[DiagramConstraints[\"LineRouting\"] = 2048] = \"LineRouting\";\n    /** Enables/Disable all constraints */\n    DiagramConstraints[DiagramConstraints[\"Default\"] = 500] = \"Default\";\n})(DiagramConstraints || (DiagramConstraints = {}));\n/**\n * Activates the diagram tools\n * None - Enables/Disable single select support for the diagram\n * SingleSelect - Enables/Disable single select support for the diagram\n * MultipleSelect - Enables/Disable MultipleSelect select support for the diagram\n * ZoomPan - Enables/Disable ZoomPan support for the diagram\n * DrawOnce - Enables/Disable continuousDraw support for the diagram\n * ContinuousDraw - Enables/Disable continuousDraw support for the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramTools;\n(function (DiagramTools) {\n    /** Disable all constraints */\n    DiagramTools[DiagramTools[\"None\"] = 0] = \"None\";\n    /** Enables/Disable single select support for the diagram */\n    DiagramTools[DiagramTools[\"SingleSelect\"] = 1] = \"SingleSelect\";\n    /** Enables/Disable MultipleSelect select support for the diagram */\n    DiagramTools[DiagramTools[\"MultipleSelect\"] = 2] = \"MultipleSelect\";\n    /** Enables/Disable ZoomPan support for the diagram */\n    DiagramTools[DiagramTools[\"ZoomPan\"] = 4] = \"ZoomPan\";\n    /** Enables/Disable DrawOnce support for the diagram */\n    DiagramTools[DiagramTools[\"DrawOnce\"] = 8] = \"DrawOnce\";\n    /** Enables/Disable continuousDraw support for the diagram */\n    DiagramTools[DiagramTools[\"ContinuousDraw\"] = 16] = \"ContinuousDraw\";\n    /** Enables/Disable all constraints */\n    DiagramTools[DiagramTools[\"Default\"] = 3] = \"Default\";\n})(DiagramTools || (DiagramTools = {}));\n/**\n * Defines the container/canvas transform\n * Self - Sets the transform type as Self\n * Parent - Sets the transform type as Parent\n */\nexport var Transform;\n(function (Transform) {\n    /** Self - Sets the transform type as Self */\n    Transform[Transform[\"Self\"] = 1] = \"Self\";\n    /** Parent - Sets the transform type as Parent */\n    Transform[Transform[\"Parent\"] = 2] = \"Parent\";\n})(Transform || (Transform = {}));\n/**\n * Defines the rendering mode for diagram\n * Canvas - Sets the rendering mode type as Canvas\n * Svg - Sets the rendering mode type as Svg\n */\nexport var RenderMode;\n(function (RenderMode) {\n    /** Canvas - Sets the rendering mode type as Canvas */\n    RenderMode[RenderMode[\"Canvas\"] = 0] = \"Canvas\";\n    /** Svg - Sets the rendering mode type as Svg */\n    RenderMode[RenderMode[\"Svg\"] = 1] = \"Svg\";\n})(RenderMode || (RenderMode = {}));\n/**\n * Sets a combination of key modifiers, on recognition of which the command will be executed.They are\n * * None - no modifiers are pressed\n * * Control - ctrl key\n * * Meta - meta key im mac\n * * Alt - alt key\n * * Shift - shift key\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var KeyModifiers;\n(function (KeyModifiers) {\n    /** No modifiers are pressed */\n    KeyModifiers[KeyModifiers[\"None\"] = 0] = \"None\";\n    /** The CTRL key */\n    KeyModifiers[KeyModifiers[\"Control\"] = 1] = \"Control\";\n    /** The Meta key pressed in Mac */\n    KeyModifiers[KeyModifiers[\"Meta\"] = 1] = \"Meta\";\n    /** The ALT key */\n    KeyModifiers[KeyModifiers[\"Alt\"] = 2] = \"Alt\";\n    /** The Shift key */\n    KeyModifiers[KeyModifiers[\"Shift\"] = 4] = \"Shift\";\n})(KeyModifiers || (KeyModifiers = {}));\n/**\n * Sets the key value, on recognition of which the command will be executed. They are\n * * none - no key\n * * Number0 = The 0 key\n * * Number1 = The 1 key\n * * Number2 = The 2 key\n * * Number3 = The 3 key\n * * Number4 = The 4 key\n * * Number5 = The 5 key\n * * Number6 = The 6 key\n * * Number7 = The 7 key\n * * Number8 = The 8 key\n * * Number9 = The 9 key\n * * Number0 = The 0 key\n * * BackSpace = The BackSpace key\n * * F1 = The f1 key\n * * F2 = The f2 key\n * * F3 = The f3 key\n * * F4 = The f4 key\n * * F5 = The f5 key\n * * F6 = The f6 key\n * * F7 = The f7 key\n * * F8 = The f8 key\n * * F9 = The f9 key\n * * F10 = The f10 key\n * * F11 = The f11 key\n * * F12 = The f12 key\n * * A = The a key\n * * B = The b key\n * * C = The c key\n * * D = The d key\n * * E = The e key\n * * F = The f key\n * * G = The g key\n * * H = The h key\n * * I = The i key\n * * J = The j key\n * * K = The k key\n * * L = The l key\n * * M = The m key\n * * N = The n key\n * * O = The o key\n * * P = The p key\n * * Q = The q key\n * * R = The r key\n * * S = The s key\n * * T = The t key\n * * U = The u key\n * * V = The v key\n * * W = The w key\n * * X = The x key\n * * Y = The y key\n * * Z = The z key\n * * Left = The left key\n * * Right = The right key\n * * Top = The top key\n * * Bottom = The bottom key\n * * Escape = The Escape key\n * * Tab = The tab key\n * * Delete = The delete key\n * * Enter = The enter key\n * * The Space key\n * * The page up key\n * * The page down key\n * * The end key\n * * The home key\n * * The Minus\n * * The Plus\n * * The Star\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var Keys;\n(function (Keys) {\n    /** No key pressed */\n    Keys[Keys[\"None\"] = null] = \"None\";\n    /** The 0 key */\n    Keys[Keys[\"Number0\"] = 0] = \"Number0\";\n    /** The 1 key */\n    Keys[Keys[\"Number1\"] = 1] = \"Number1\";\n    /** The 2 key */\n    Keys[Keys[\"Number2\"] = 2] = \"Number2\";\n    /** The 3 key */\n    Keys[Keys[\"Number3\"] = 3] = \"Number3\";\n    /** The 4 key */\n    Keys[Keys[\"Number4\"] = 4] = \"Number4\";\n    /** The 5 key */\n    Keys[Keys[\"Number5\"] = 5] = \"Number5\";\n    /** The 6 key */\n    Keys[Keys[\"Number6\"] = 6] = \"Number6\";\n    /** The 7 key */\n    Keys[Keys[\"Number7\"] = 7] = \"Number7\";\n    /** The 8 key */\n    Keys[Keys[\"Number8\"] = 8] = \"Number8\";\n    /** The 9 key */\n    Keys[Keys[\"Number9\"] = 9] = \"Number9\";\n    /** The A key */\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    /** The B key */\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    /** The C key */\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    /** The D key */\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    /** The E key */\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    /** The F key */\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    /** The G key */\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    /** The H key */\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    /** The I key */\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    /** The J key */\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    /** The K key */\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    /** The L key */\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    /** The M key */\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    /** The N key */\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    /** The O key */\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    /** The P key */\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    /** The Q key */\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    /** The R key */\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    /** The S key */\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    /** The T key */\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    /** The U key */\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    /** The V key */\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    /** The W key */\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    /** The X key */\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    /** The Y key */\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    /** The Z key */\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    /** The left arrow key */\n    Keys[Keys[\"Left\"] = 37] = \"Left\";\n    /** The up arrow key */\n    Keys[Keys[\"Up\"] = 38] = \"Up\";\n    /** The right arrow key */\n    Keys[Keys[\"Right\"] = 39] = \"Right\";\n    /** The down arrow key */\n    Keys[Keys[\"Down\"] = 40] = \"Down\";\n    /** The Escape key */\n    Keys[Keys[\"Escape\"] = 27] = \"Escape\";\n    /** The Space key */\n    Keys[Keys[\"Space\"] = 32] = \"Space\";\n    /** The page up key */\n    Keys[Keys[\"PageUp\"] = 33] = \"PageUp\";\n    /** The Space key */\n    Keys[Keys[\"PageDown\"] = 34] = \"PageDown\";\n    /** The Space key */\n    Keys[Keys[\"End\"] = 35] = \"End\";\n    /** The Space key */\n    Keys[Keys[\"Home\"] = 36] = \"Home\";\n    /** The delete key */\n    Keys[Keys[\"Delete\"] = 46] = \"Delete\";\n    /** The tab key */\n    Keys[Keys[\"Tab\"] = 9] = \"Tab\";\n    /** The enter key */\n    Keys[Keys[\"Enter\"] = 13] = \"Enter\";\n    /** The BackSpace key */\n    Keys[Keys[\"BackSpace\"] = 8] = \"BackSpace\";\n    /** The F1 key */\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    /** The F2 key */\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    /** The F3 key */\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    /** The F4 key */\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    /** The F5 key */\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    /** The F6 key */\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    /** The F7 key */\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    /** The F8 key */\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    /** The F9 key */\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    /** The F10 key */\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    /** The F111 key */\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    /** The F12 key */\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    /** The Star */\n    Keys[Keys[\"Star\"] = 56] = \"Star\";\n    /** The Plus */\n    Keys[Keys[\"Plus\"] = 187] = \"Plus\";\n    /** The Minus */\n    Keys[Keys[\"Minus\"] = 189] = \"Minus\";\n})(Keys || (Keys = {}));\n/**\n * Enables/Disables certain actions of diagram\n * * Render - Indicates the diagram is in render state.\n * * PublicMethod - Indicates the diagram public method is in action.\n * * ToolAction - Indicates the diagram Tool is in action.\n * * UndoRedo - Indicates the diagram undo/redo is in action.\n * * TextEdit - Indicates the text editing is in progress.\n * * Group - Indicates the group is in progress.\n * * Clear - Indicates diagram have clear all.\n * * PreventClearSelection - prevents diagram from clear selection\n */\nexport var DiagramAction;\n(function (DiagramAction) {\n    /** Indicates the diagram is in render state.r */\n    DiagramAction[DiagramAction[\"Render\"] = 2] = \"Render\";\n    /** Indicates the diagram public method is in action. */\n    DiagramAction[DiagramAction[\"PublicMethod\"] = 4] = \"PublicMethod\";\n    /** Indicates the diagram Tool is in action. */\n    DiagramAction[DiagramAction[\"ToolAction\"] = 8] = \"ToolAction\";\n    /** Indicates the diagram undo/redo is in action. */\n    DiagramAction[DiagramAction[\"UndoRedo\"] = 16] = \"UndoRedo\";\n    /** Indicates the text editing is in progress. */\n    DiagramAction[DiagramAction[\"TextEdit\"] = 32] = \"TextEdit\";\n    /** Indicates the group is in progress. */\n    DiagramAction[DiagramAction[\"Group\"] = 64] = \"Group\";\n    /** Indicates diagram have clear all. */\n    DiagramAction[DiagramAction[\"Clear\"] = 128] = \"Clear\";\n    /** prevents diagram from clear selection. */\n    DiagramAction[DiagramAction[\"PreventClearSelection\"] = 256] = \"PreventClearSelection\";\n    /** Indicates whether drag or rotate tool has been activated */\n    DiagramAction[DiagramAction[\"Interactions\"] = 512] = \"Interactions\";\n    /** Use to prevent the history during some action in diagram */\n    DiagramAction[DiagramAction[\"PreventHistory\"] = 1024] = \"PreventHistory\";\n    /** Use to prevent the icon while expand a node in diagram */\n    DiagramAction[DiagramAction[\"PreventIconsUpdate\"] = 2048] = \"PreventIconsUpdate\";\n    /** Use to prevent the collection change event while dragging lane from palette and over it in diagram */\n    DiagramAction[DiagramAction[\"PreventCollectionChangeOnDragOver\"] = 4096] = \"PreventCollectionChangeOnDragOver\";\n    /** Use to prevent the z order on dragging the diagram elements */\n    DiagramAction[DiagramAction[\"PreventZIndexOnDragging\"] = 8192] = \"PreventZIndexOnDragging\";\n    /** Indicates whether group dragging has been activated */\n    DiagramAction[DiagramAction[\"isGroupDragging\"] = 16384] = \"isGroupDragging\";\n    /** Indicates whether drag is initiated by mouse  */\n    DiagramAction[DiagramAction[\"DragUsingMouse\"] = 32768] = \"DragUsingMouse\";\n    /** Indicates whether decorator property is changed or not */\n    DiagramAction[DiagramAction[\"DecoratorPropertyChange\"] = 65536] = \"DecoratorPropertyChange\";\n})(DiagramAction || (DiagramAction = {}));\n/**\n * Defines the Selector type to be drawn\n * None - Draws Normal selector with resize handles\n * Symbol - Draws only the rectangle for the selector\n */\nexport var RendererAction;\n(function (RendererAction) {\n    /** None - Draws Normal selector with resize handles */\n    RendererAction[RendererAction[\"None\"] = 2] = \"None\";\n    /** DrawSelectorBorder - Draws only the Border for the selector */\n    RendererAction[RendererAction[\"DrawSelectorBorder\"] = 4] = \"DrawSelectorBorder\";\n    /** PreventRenderSelector - Avoid the render of selector during interaction */\n    RendererAction[RendererAction[\"PreventRenderSelector\"] = 8] = \"PreventRenderSelector\";\n})(RendererAction || (RendererAction = {}));\nexport var RealAction;\n(function (RealAction) {\n    RealAction[RealAction[\"None\"] = 0] = \"None\";\n    RealAction[RealAction[\"PreventDrag\"] = 2] = \"PreventDrag\";\n    RealAction[RealAction[\"PreventScale\"] = 4] = \"PreventScale\";\n    RealAction[RealAction[\"PreventDataInit\"] = 8] = \"PreventDataInit\";\n    /** Indicates when the diagram is scrolled horizontal using scroll bar */\n    RealAction[RealAction[\"hScrollbarMoved\"] = 16] = \"hScrollbarMoved\";\n    /** Indicates when the diagram is scrolled vertical using scroll bar */\n    RealAction[RealAction[\"vScrollbarMoved\"] = 32] = \"vScrollbarMoved\";\n    /** Indicates whether animation happens or not  */\n    RealAction[RealAction[\"AnimationClick\"] = 64] = \"AnimationClick\";\n    /** Enable the group action */\n    RealAction[RealAction[\"EnableGroupAction\"] = 128] = \"EnableGroupAction\";\n})(RealAction || (RealAction = {}));\n/** @private */\nexport var NoOfSegments;\n(function (NoOfSegments) {\n    NoOfSegments[NoOfSegments[\"Zero\"] = 0] = \"Zero\";\n    NoOfSegments[NoOfSegments[\"One\"] = 1] = \"One\";\n    NoOfSegments[NoOfSegments[\"Two\"] = 2] = \"Two\";\n    NoOfSegments[NoOfSegments[\"Three\"] = 3] = \"Three\";\n    NoOfSegments[NoOfSegments[\"Four\"] = 4] = \"Four\";\n    NoOfSegments[NoOfSegments[\"Five\"] = 5] = \"Five\";\n})(NoOfSegments || (NoOfSegments = {}));\n/**\n * events of diagram\n * @private\n */\nexport var DiagramEvent;\n(function (DiagramEvent) {\n    DiagramEvent[DiagramEvent[\"collectionChange\"] = 0] = \"collectionChange\";\n    DiagramEvent[DiagramEvent[\"rotateChange\"] = 1] = \"rotateChange\";\n    DiagramEvent[DiagramEvent[\"positionChange\"] = 2] = \"positionChange\";\n    DiagramEvent[DiagramEvent[\"propertyChange\"] = 3] = \"propertyChange\";\n    DiagramEvent[DiagramEvent[\"selectionChange\"] = 4] = \"selectionChange\";\n    DiagramEvent[DiagramEvent[\"sizeChange\"] = 5] = \"sizeChange\";\n    DiagramEvent[DiagramEvent[\"drop\"] = 6] = \"drop\";\n    DiagramEvent[DiagramEvent[\"sourcePointChange\"] = 7] = \"sourcePointChange\";\n    DiagramEvent[DiagramEvent[\"targetPointChange\"] = 8] = \"targetPointChange\";\n    DiagramEvent[DiagramEvent[\"connectionChange\"] = 9] = \"connectionChange\";\n    DiagramEvent[DiagramEvent[\"animationComplete\"] = 10] = \"animationComplete\";\n    DiagramEvent[DiagramEvent[\"click\"] = 11] = \"click\";\n    DiagramEvent[DiagramEvent[\"doubleClick\"] = 12] = \"doubleClick\";\n    DiagramEvent[DiagramEvent[\"scrollChange\"] = 13] = \"scrollChange\";\n    DiagramEvent[DiagramEvent[\"dragEnter\"] = 14] = \"dragEnter\";\n    DiagramEvent[DiagramEvent[\"dragLeave\"] = 15] = \"dragLeave\";\n    DiagramEvent[DiagramEvent[\"dragOver\"] = 16] = \"dragOver\";\n    DiagramEvent[DiagramEvent[\"textEdit\"] = 17] = \"textEdit\";\n    DiagramEvent[DiagramEvent[\"paletteSelectionChange\"] = 18] = \"paletteSelectionChange\";\n    DiagramEvent[DiagramEvent[\"historyChange\"] = 19] = \"historyChange\";\n    DiagramEvent[DiagramEvent[\"mouseEnter\"] = 20] = \"mouseEnter\";\n    DiagramEvent[DiagramEvent[\"mouseLeave\"] = 21] = \"mouseLeave\";\n    DiagramEvent[DiagramEvent[\"mouseOver\"] = 22] = \"mouseOver\";\n    DiagramEvent[DiagramEvent[\"expandStateChange\"] = 23] = \"expandStateChange\";\n    DiagramEvent[DiagramEvent[\"segmentCollectionChange\"] = 24] = \"segmentCollectionChange\";\n    DiagramEvent[DiagramEvent[\"commandExecute\"] = 25] = \"commandExecute\";\n    DiagramEvent[DiagramEvent[\"historyStateChange\"] = 26] = \"historyStateChange\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseDown\"] = 27] = \"onUserHandleMouseDown\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseUp\"] = 28] = \"onUserHandleMouseUp\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseEnter\"] = 29] = \"onUserHandleMouseEnter\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseLeave\"] = 30] = \"onUserHandleMouseLeave\";\n    DiagramEvent[DiagramEvent[\"onImageLoad\"] = 31] = \"onImageLoad\";\n    DiagramEvent[DiagramEvent[\"onDoBindingInit\"] = 32] = \"onDoBindingInit\";\n    DiagramEvent[DiagramEvent[\"keyUp\"] = 33] = \"keyUp\";\n    DiagramEvent[DiagramEvent[\"keyDown\"] = 34] = \"keyDown\";\n})(DiagramEvent || (DiagramEvent = {}));\n/** Enables/Disables certain features of port connection\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var PortConstraints;\n(function (PortConstraints) {\n    /** Disable all constraints  */\n    PortConstraints[PortConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connections with connector  */\n    PortConstraints[PortConstraints[\"Drag\"] = 2] = \"Drag\";\n    /** Enables to create the connection when mouse hover on the port  */\n    PortConstraints[PortConstraints[\"Draw\"] = 4] = \"Draw\";\n    /** Enables to only connect the target end of connector */\n    PortConstraints[PortConstraints[\"InConnect\"] = 8] = \"InConnect\";\n    /** Enables to only connect the source end of connector */\n    PortConstraints[PortConstraints[\"OutConnect\"] = 16] = \"OutConnect\";\n    /** Enables all constraints */\n    PortConstraints[PortConstraints[\"Default\"] = 24] = \"Default\";\n})(PortConstraints || (PortConstraints = {}));\n/**\n * Defines the context menu click\n * contextMenuClick - Sets the context menu click as contextMenuClick\n */\nexport var contextMenuClick = \n/** contextMenuClick - Sets the context menu click as contextMenuClick */\n'contextMenuClick';\n/**\n * Defines the context menu open\n * contextMenuOpen - Sets the context menu open as contextMenuOpen\n */\nexport var contextMenuOpen = \n/** contextMenuOpen - Sets the context menu open as contextMenuOpen */\n'contextMenuOpen';\n/**\n * Defines the context menu Before Item Render\n * contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender\n */\nexport var contextMenuBeforeItemRender = \n/** contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender */\n'contextMenuBeforeItemRender';\n","import { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { getBounds } from '../../utility/base-util';\n/**\n * DiagramElement module defines the basic unit of diagram\n */\nvar DiagramElement = /** @class */ (function () {\n    function DiagramElement() {\n        /**\n         * Sets/Gets the reference point of the element\n         * ```html\n         * <div id='diagram'></div>\n         * ```\n         * ```typescript\n         * let stackPanel: StackPanel = new StackPanel();\n         * stackPanel.offsetX = 300; stackPanel.offsetY = 200;\n         * stackPanel.width = 100; stackPanel.height = 100;\n         * stackPanel.style.fill = 'red';\n         * stackPanel.pivot = { x: 0.5, y: 0.5 };\n         * let diagram: Diagram = new Diagram({\n         * ...\n         * basicElements: [stackPanel],\n         * ...\n         * });\n         * diagram.appendTo('#diagram');\n         * ```\n         */\n        this.pivot = { x: 0.5, y: 0.5 };\n        /**\n         * Sets or gets whether the content of the element needs to be measured\n         */\n        this.isDirt = true;\n        /**\n         * set to true during print and eport\n         */\n        /** @private */\n        this.isExport = false;\n        /**\n         * set scaling value for print and export\n         */\n        /** @private */\n        this.exportScaleValue = { x: 0, y: 0 };\n        /**\n         * set scaling value for print and export\n         */\n        /** @private */\n        this.exportScaleOffset = { x: 0, y: 0 };\n        /**\n         * Check whether style need to be apply or not\n         */\n        /** @private */\n        this.canApplyStyle = true;\n        /**\n         * Sets or gets whether the content of the element to be visible\n         */\n        this.visible = true;\n        /**\n         * Sets/Gets the x-coordinate of the element\n         */\n        this.offsetX = 0;\n        /**\n         * Sets/Gets the y-coordinate of the element\n         */\n        this.offsetY = 0;\n        /**\n         * Set the corner of the element\n         */\n        this.cornerRadius = 0;\n        /**\n         * Sets/Gets the minimum height of the element\n         */\n        this.minHeight = undefined;\n        /**\n         * Sets/Gets the minimum width of the element\n         */\n        this.minWidth = undefined;\n        /**\n         * Sets/Gets the maximum width of the element\n         */\n        this.maxWidth = undefined;\n        /**\n         * Sets/Gets the maximum height of the element\n         */\n        this.maxHeight = undefined;\n        /**\n         * Sets/Gets the width of the element\n         */\n        this.width = undefined;\n        /**\n         * Sets/Gets the height of the element\n         */\n        this.height = undefined;\n        /**\n         * Sets/Gets the rotate angle of the element\n         */\n        this.rotateAngle = 0;\n        /**\n         * Sets/Gets the margin of the element\n         */\n        this.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        /**\n         * Sets/Gets how the element has to be horizontally arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Left - Aligns the diagram element at the left of its immediate parent\n         * * Right - Aligns the diagram element at the right of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.horizontalAlignment = 'Auto';\n        /**\n         * Sets/Gets how the element has to be vertically arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Top - Aligns the diagram element at the top of its immediate parent\n         * * Bottom - Aligns the diagram element at the bottom of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.verticalAlignment = 'Auto';\n        /**\n         * Sets/Gets the mirror image of diagram element in both horizontal and vertical directions\n         * * FlipHorizontal - Translate the diagram element throughout its immediate parent\n         * * FlipVertical - Rotate the diagram element throughout its immediate parent\n         */\n        this.flip = 'None';\n        /**\n         * Sets whether the element has to be aligned with respect to a point/with respect to its immediate parent\n         * * Point - Diagram elements will be aligned with respect to a point\n         * * Object - Diagram elements will be aligned with respect to its immediate parent\n         */\n        this.relativeMode = 'Point';\n        /**\n         * Sets whether the element has to be transformed based on its parent or not\n         * * Self - Sets the transform type as Self\n         * * Parent - Sets the transform type as Parent\n         */\n        this.transform = Transform.Self | Transform.Parent;\n        /**\n         * Sets the style of the element\n         */\n        this.style = { fill: 'white', strokeColor: 'black', opacity: 1, strokeWidth: 1 };\n        /**\n         * Gets the minimum size that is required by the element\n         */\n        this.desiredSize = new Size();\n        /**\n         * Gets the size that the element will be rendered\n         */\n        this.actualSize = new Size();\n        /**\n         * Gets the rotate angle that is set to the immediate parent of the element\n         */\n        this.parentTransform = 0;\n        /** @private */\n        this.preventContainer = false;\n        /**\n         * Gets/Set the boolean value for the element\n         */\n        this.isSvgRender = false;\n        /**\n         * Gets/Sets the boundary of the element\n         */\n        this.bounds = new Rect(0, 0, 0, 0);\n        /**\n         * Defines the appearance of the shadow of the element\n         */\n        this.shadow = null;\n        /**\n         * Defines the description of the diagram element\n         */\n        this.description = '';\n        /**\n         * Defines whether the element has to be measured or not\n         */\n        this.staticSize = false;\n        /**\n         * check whether the element is rect or not\n         */\n        this.isRectElement = false;\n        /** @private */\n        this.isCalculateDesiredSize = true;\n        /**\n         * Set the offset values for container in flipping\n         */\n        /** @private */\n        this.flipOffset = { x: 0, y: 0 };\n        /**\n         * Defines whether the element is group or port\n         */\n        /** @private */\n        this.elementActions = ElementAction.None;\n        //private variables\n        this.position = undefined;\n        this.unitMode = undefined;\n        /**   @private  */\n        this.float = false;\n        this.floatingBounds = undefined;\n    }\n    // public constructor() {\n    //     this.id = randomId();\n    // }\n    /**\n     * Sets the offset of the element with respect to its parent\n     * @param {number} x\n     * @param {number} y\n     * @param {UnitMode} mode\n     */\n    DiagramElement.prototype.setOffsetWithRespectToBounds = function (x, y, mode) {\n        this.unitMode = mode;\n        this.position = { x: x, y: y };\n    };\n    /**\n     * Gets the position of the element with respect to its parent\n     * @param {Size} size\n     */\n    DiagramElement.prototype.getAbsolutePosition = function (size) {\n        if (this.position !== undefined) {\n            if (this.unitMode === 'Absolute') {\n                return this.position;\n            }\n            else {\n                return {\n                    x: this.position.x * size.width, y: this.position.y * size.height\n                };\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(DiagramElement.prototype, \"outerBounds\", {\n        get: function () {\n            return this.floatingBounds || this.bounds;\n        },\n        /**\n         * used to set the outer bounds value\n         * @private\n         */\n        set: function (bounds) {\n            this.floatingBounds = bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that the element requires\n     * @param {Size} availableSize\n     */\n    DiagramElement.prototype.measure = function (availableSize, obj, callback) {\n        var width = this.width !== undefined ? this.width : (availableSize.width || 0) - this.margin.left - this.margin.right;\n        var height = this.height !== undefined ? this.height : (availableSize.height || 0) - this.margin.top - this.margin.bottom;\n        this.desiredSize = new Size(width, height);\n        if (this.isCalculateDesiredSize) {\n            this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        }\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the element\n     * @param {Size} desiredSize\n     */\n    DiagramElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Updates the bounds of the element\n     */\n    DiagramElement.prototype.updateBounds = function () {\n        this.bounds = getBounds(this);\n    };\n    /**\n     * Validates the size of the element with respect to its minimum and maximum size\n     * @param {Size} desiredSize\n     * @param {Size} availableSize\n     */\n    DiagramElement.prototype.validateDesiredSize = function (desiredSize, availableSize) {\n        //Empty canvas\n        if (this.isRectElement && !this.width && !this.minWidth && !this.maxWidth) {\n            desiredSize.width = 50;\n        }\n        if (this.isRectElement && !this.height && !this.minHeight && !this.maxHeight) {\n            desiredSize.height = 50;\n        }\n        if (desiredSize === undefined || this.width !== undefined &&\n            this.height !== undefined) {\n            desiredSize = desiredSize || new Size();\n            desiredSize.width = this.width === undefined ? (availableSize.width || 0)\n                - this.margin.left - this.margin.right : this.width;\n            desiredSize.height = this.height === undefined ? (availableSize.height || 0)\n                - this.margin.top - this.margin.bottom : this.height;\n        }\n        //Considering min values\n        if (this.minWidth !== undefined) {\n            desiredSize.width = Math.max(desiredSize.width, this.minWidth);\n        }\n        if (this.minHeight !== undefined) {\n            desiredSize.height = Math.max(desiredSize.height, this.minHeight);\n        }\n        //Considering max values\n        if (this.maxWidth !== undefined && this.maxWidth !== 0) {\n            desiredSize.width = Math.min(desiredSize.width, this.maxWidth);\n        }\n        if (this.maxHeight !== undefined && this.maxHeight !== 0) {\n            desiredSize.height = Math.min(desiredSize.height, this.maxHeight);\n        }\n        return desiredSize;\n    };\n    return DiagramElement;\n}());\nexport { DiagramElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { ElementAction } from '../../enum/enum';\nimport { Thickness } from '../appearance';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { rotatePoint, getOffset } from '../../utility/base-util';\n/**\n * Container module is used to group related objects\n */\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the space between the container and its immediate children\n         */\n        _this.padding = new Thickness(0, 0, 0, 0);\n        //private members    \n        _this.desiredBounds = undefined;\n        /** @private */\n        _this.measureChildren = true;\n        /**   @private  */\n        _this.prevRotateAngle = 0;\n        return _this;\n    }\n    /**\n     * returns whether the container has child elements or not\n     */\n    Container.prototype.hasChildren = function () {\n        if (this.children !== undefined && this.children.length > 0) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Measures the minimum space that the container requires\n     *\n     * @param {Size} availableSize\n     */\n    Container.prototype.measure = function (availableSize, id, callback) {\n        // measure the element and find the desired size\n        this.desiredBounds = undefined;\n        var desired = undefined;\n        var child;\n        var center = { x: 0, y: 0 };\n        var y;\n        var x;\n        var childBounds;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var i = 0; i < this.children.length; i++) {\n                child = this.children[i];\n                if (child.horizontalAlignment === 'Stretch' && !availableSize.width) {\n                    availableSize.width = child.bounds.width;\n                }\n                if (child.verticalAlignment === 'Stretch' && !availableSize.height) {\n                    availableSize.height = child.bounds.height;\n                }\n                var force = child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch';\n                if (this.measureChildren || force || (child instanceof Container && child.measureChildren !== undefined)) {\n                    child.measure(availableSize, id, callback);\n                }\n                childBounds = this.GetChildrenBounds(child);\n                if (child.horizontalAlignment !== 'Stretch' && child.verticalAlignment !== 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = childBounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(childBounds);\n                    }\n                }\n                else if (this.actualSize && !this.actualSize.width && !this.actualSize.height &&\n                    !child.preventContainer && child.horizontalAlignment === 'Stretch' && child.verticalAlignment === 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = child.bounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(child.bounds);\n                    }\n                }\n            }\n            if (this.desiredBounds !== undefined && this.rotateAngle !== 0) {\n                var offsetPt = {\n                    x: this.desiredBounds.x + this.desiredBounds.width * this.pivot.x,\n                    y: this.desiredBounds.y + this.desiredBounds.height * this.pivot.y\n                };\n                var newPoint = rotatePoint(this.rotateAngle, undefined, undefined, offsetPt);\n                this.desiredBounds.x = newPoint.x - this.desiredBounds.width * this.pivot.x;\n                this.desiredBounds.y = newPoint.y - this.desiredBounds.height * this.pivot.y;\n            }\n            if (this.desiredBounds) {\n                desired = new Size(this.desiredBounds.width, this.desiredBounds.height);\n            }\n        }\n        desired = this.validateDesiredSize(desired, availableSize);\n        this.stretchChildren(desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the container and its children\n     * @param {Size} desiredSize\n     */\n    Container.prototype.arrange = function (desiredSize) {\n        var child;\n        var bounds;\n        var childBounds = this.desiredBounds;\n        if (childBounds) {\n            var x = this.offsetX;\n            var y = this.offsetY;\n            this.offsetX = childBounds.x + childBounds.width * this.pivot.x;\n            this.offsetY = childBounds.y + childBounds.height * this.pivot.y;\n            // container has rotateAngle\n            if (this.hasChildren()) {\n                //Measuring the children\n                for (var i = 0; i < this.children.length; i++) {\n                    child = this.children[i];\n                    var arrange = false;\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.offsetX = this.offsetX;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        if (this.flip && (this.elementActions & ElementAction.ElementIsGroup)) {\n                            child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                                -child.parentTransform : child.parentTransform;\n                        }\n                        arrange = true;\n                    }\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.offsetY = this.offsetY;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (arrange || this.measureChildren || (child instanceof Container && child.measureChildren !== undefined)) {\n                        child.arrange(child.desiredSize);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.prevRotateAngle = this.rotateAngle;\n        return desiredSize;\n    };\n    //protected methods\n    /**\n     * Stretches the child elements based on the size of the container\n     * @param {Size} size\n     */\n    Container.prototype.stretchChildren = function (size) {\n        if (this.hasChildren()) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.horizontalAlignment === 'Stretch' || child.desiredSize.width === undefined) {\n                    child.desiredSize.width = size.width - child.margin.left - child.margin.right;\n                }\n                if (child.verticalAlignment === 'Stretch' || child.desiredSize.height === undefined) {\n                    child.desiredSize.height = size.height - child.margin.top - child.margin.bottom;\n                }\n                if (child instanceof Container) {\n                    child.stretchChildren(child.desiredSize);\n                }\n            }\n        }\n    };\n    /**\n     * Considers the padding of the element when measuring its desired size\n     * @param {Size} size\n     */\n    Container.prototype.applyPadding = function (size) {\n        size.width += this.padding.left + this.padding.right;\n        size.height += this.padding.top + this.padding.bottom;\n    };\n    /**\n     * Finds the offset of the child element with respect to the container\n     * @param {DiagramElement} child\n     * @param {PointModel} center\n     */\n    Container.prototype.findChildOffsetFromCenter = function (child, center) {\n        var topLeft = { x: center.x - child.desiredSize.width / 2, y: center.y - child.desiredSize.height / 2 };\n        var offset = getOffset(topLeft, child);\n        //Rotate based on child rotate angle\n        offset = rotatePoint(child.rotateAngle, center.x, center.y, offset);\n        //Rotate based on parent pivot\n        offset = rotatePoint(this.rotateAngle + this.parentTransform, this.offsetX, this.offsetY, offset);\n        child.offsetX = offset.x;\n        child.offsetY = offset.y;\n    };\n    //private methods - check its need\n    Container.prototype.GetChildrenBounds = function (child) {\n        var childBounds;\n        var childSize;\n        childSize = child.desiredSize.clone();\n        var diffAngle = child.rotateAngle - this.rotateAngle;\n        var refPoint = { x: child.offsetX, y: child.offsetY };\n        var left = refPoint.x - childSize.width * child.pivot.x;\n        var top = refPoint.y - childSize.height * child.pivot.y;\n        var right = left + childSize.width;\n        var bottom = top + childSize.height;\n        var topLeft = { x: left, y: top };\n        var topRight = { x: right, y: top };\n        var bottomLeft = { x: left, y: bottom };\n        var bottomRight = { x: right, y: bottom };\n        topLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topLeft);\n        topRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topRight);\n        bottomLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomLeft);\n        bottomRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomRight);\n        if (this.rotateAngle !== 0) {\n            topLeft = rotatePoint(-this.rotateAngle, undefined, undefined, topLeft);\n            topRight = rotatePoint(-this.rotateAngle, undefined, undefined, topRight);\n            bottomLeft = rotatePoint(-this.rotateAngle, undefined, undefined, bottomLeft);\n            bottomRight = rotatePoint(-this.rotateAngle, undefined, undefined, bottomRight);\n        }\n        return Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    };\n    return Container;\n}(DiagramElement));\nexport { Container };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureText } from './../../utility/dom-util';\n/**\n * TextElement is used to display text/annotations\n */\nvar TextElement = /** @class */ (function (_super) {\n    __extends(TextElement, _super);\n    /**\n     * set the id for each element\n     */\n    function TextElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.textContent = '';\n        /** @private */\n        _this.canMeasure = true;\n        /** @private */\n        _this.isLaneOrientation = false;\n        /** @private */\n        _this.canConsiderBounds = true;\n        /**\n         * sets the hyperlink color to blue\n         */\n        _this.hyperlink = {\n            color: 'blue'\n        };\n        /** @private */\n        _this.doWrap = true;\n        _this.textNodes = [];\n        /**\n         * Defines the appearance of the text element\n         */\n        _this.style = {\n            color: 'black', fill: 'transparent', strokeColor: 'black',\n            strokeWidth: 1, fontFamily: 'Arial', fontSize: 12, whiteSpace: 'CollapseSpace',\n            textWrapping: 'WrapWithOverflow', textAlign: 'Center', italic: false, bold: false,\n            textDecoration: 'None', strokeDashArray: '', opacity: 5, gradient: null,\n            textOverflow: 'Wrap'\n        };\n        _this.style.fill = 'transparent';\n        _this.style.strokeColor = 'transparent';\n        return _this;\n    }\n    Object.defineProperty(TextElement.prototype, \"content\", {\n        /**\n         * gets the content for the text element\n         */\n        get: function () {\n            return this.textContent;\n        },\n        /**\n         * sets the content for the text element\n         */\n        set: function (value) {\n            if (this.textContent !== value) {\n                this.textContent = value;\n                this.isDirt = true;\n                this.doWrap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"childNodes\", {\n        /**\n         * sets the content for the text element\n         */\n        get: function () {\n            return this.textNodes;\n        },\n        /**\n         * gets the content for the text element\n         */\n        set: function (value) {\n            this.textNodes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"wrapBounds\", {\n        /**\n         * gets the wrapBounds for the text\n         */\n        get: function () {\n            return this.textWrapBounds;\n        },\n        /**\n         * sets the wrapBounds for the text\n         */\n        set: function (value) {\n            this.textWrapBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    TextElement.prototype.refreshTextElement = function () {\n        this.isDirt = true;\n    };\n    /**\n     * Measures the minimum size that is required for the text element\n     * @param {Size} availableSize\n     */\n    TextElement.prototype.measure = function (availableSize) {\n        var size;\n        if (this.isDirt && this.canMeasure) {\n            size = measureText(this, this.style, this.content, this.isLaneOrientation ?\n                availableSize.height : (this.width || availableSize.width));\n        }\n        else {\n            size = this.desiredSize;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            this.desiredSize = new Size(size.width, size.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the text element\n     * @param {Size} desiredSize\n     */\n    TextElement.prototype.arrange = function (desiredSize) {\n        if (desiredSize.width !== this.actualSize.width || desiredSize.height !== this.actualSize.height || this.isDirt) {\n            this.doWrap = true;\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    return TextElement;\n}(DiagramElement));\nexport { TextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\nimport { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { TextElement } from '../elements/text-element';\n/**\n * Canvas module is used to define a plane(canvas) and to arrange the children based on margin\n */\nvar Canvas = /** @class */ (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Not applicable for canvas\n         *  @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the canvas requires\n     * @param {Size} availableSize\n     */\n    Canvas.prototype.measure = function (availableSize, id, callback) {\n        var desired = undefined;\n        var desiredBounds = undefined;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child instanceof TextElement) {\n                    if (child.canMeasure) {\n                        availableSize.width = availableSize.width || this.maxWidth || this.minWidth;\n                        child.measure(availableSize);\n                    }\n                }\n                else if (!(child instanceof TextElement)) {\n                    child.measure(availableSize, id, callback);\n                }\n                var childSize = child.desiredSize.clone();\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var right = childSize.width + child.margin.right;\n                var bottom = childSize.height + child.margin.bottom;\n                var childBounds = new Rect(child.margin.left, child.margin.top, right, bottom);\n                if (child.float) {\n                    var position = child.getAbsolutePosition(childSize);\n                    if (position !== undefined) {\n                        continue;\n                    }\n                }\n                if ((!(child instanceof TextElement)) || (child instanceof TextElement && child.canConsiderBounds)) {\n                    if (desiredBounds === undefined) {\n                        desiredBounds = childBounds;\n                    }\n                    else {\n                        desiredBounds.uniteRect(childBounds);\n                    }\n                }\n            }\n            if (desiredBounds) {\n                var leftMargin = 0;\n                var topMargin = 0;\n                leftMargin = Math.max(desiredBounds.left, 0);\n                topMargin = Math.max(desiredBounds.top, 0);\n                desired = new Size(desiredBounds.width + leftMargin, desiredBounds.height + topMargin);\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        _super.prototype.stretchChildren.call(this, desired);\n        //Considering padding values\n        desired.width += this.padding.left + this.padding.right;\n        desired.height += this.padding.top + this.padding.bottom;\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the child elements of the canvas\n     */\n    Canvas.prototype.arrange = function (desiredSize, isStack) {\n        this.outerBounds = new Rect();\n        if (this.hasChildren()) {\n            var y = void 0;\n            var x = void 0;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if ((child.transform & Transform.Parent) !== 0) {\n                    child.parentTransform = this.parentTransform + this.rotateAngle;\n                    if (this.flip !== 'None' || this.elementActions & ElementAction.ElementIsGroup) {\n                        child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                            -child.parentTransform : child.parentTransform;\n                    }\n                    var childSize = child.desiredSize.clone();\n                    var topLeft = void 0;\n                    var center = { x: 0, y: 0 };\n                    var childX = x;\n                    var childY = y;\n                    if (child.relativeMode === 'Point') {\n                        var position = child.getAbsolutePosition(desiredSize);\n                        if (position !== undefined) {\n                            childX += position.x;\n                            childY += position.y;\n                        }\n                    }\n                    if (child.relativeMode === 'Object') {\n                        topLeft = this.alignChildBasedOnParent(child, childSize, desiredSize, childX, childY);\n                    }\n                    else {\n                        topLeft = this.alignChildBasedOnaPoint(child, childX, childY);\n                    }\n                    center = { x: topLeft.x + childSize.width / 2, y: topLeft.y + childSize.height / 2 };\n                    _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                }\n                if (isStack && (child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch')) {\n                    child.arrange(desiredSize);\n                }\n                else {\n                    if (child instanceof TextElement && child.canMeasure) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                    else if (!(child instanceof TextElement)) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.outerBounds.uniteRect(this.bounds);\n        return desiredSize;\n    };\n    /**\n     * Aligns the child element based on its parent\n     * @param {DiagramElement} child\n     * @param {Size} childSize\n     * @param {Size} parentSize\n     * @param {number} x\n     * @param {number} y\n     */\n    Canvas.prototype.alignChildBasedOnParent = function (child, childSize, parentSize, x, y) {\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x += child.margin.left;\n                break;\n            case 'Right':\n                x += parentSize.width - childSize.width - child.margin.right;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x += parentSize.width / 2 - childSize.width / 2;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y += child.margin.top;\n                break;\n            case 'Bottom':\n                y += parentSize.height - childSize.height - child.margin.bottom;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y += parentSize.height / 2 - childSize.height / 2;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Aligns the child elements based on a point\n     * @param {DiagramElement} child\n     * @param {number} x\n     * @param {number} y\n     */\n    Canvas.prototype.alignChildBasedOnaPoint = function (child, x, y) {\n        x += child.margin.left - child.margin.right;\n        y += child.margin.top - child.margin.bottom;\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x = x;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x -= child.desiredSize.width * child.pivot.x;\n                break;\n            case 'Right':\n                x -= child.desiredSize.width;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y = y;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y -= child.desiredSize.height * child.pivot.y;\n                break;\n            case 'Bottom':\n                y -= child.desiredSize.height;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    return Canvas;\n}(Container));\nexport { Canvas };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { Rect } from '../../primitives/rect';\nimport { measurePath, findSegmentPoints, translatePoints } from './../../utility/dom-util';\nimport { processPathData, splitArrayCollection, transformPath, getPathString } from '../../utility/path-util';\n/**\n * PathElement takes care of how to align the path based on offsetX and offsetY\n */\nvar PathElement = /** @class */ (function (_super) {\n    __extends(PathElement, _super);\n    /**\n     * set the id for each element\n     */\n    function PathElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * Gets or sets the geometry of the path element\n         */\n        _this.pathData = '';\n        /**\n         * Gets/Sets whether the path has to be transformed to fit the given x,y, width, height\n         */\n        _this.transformPath = true;\n        /**\n         * Gets/Sets the equivalent path, that will have the origin as 0,0\n         */\n        _this.absolutePath = '';\n        /**   @private  */\n        _this.canMeasurePath = false;\n        //Private variables\n        /**   @private  */\n        _this.absoluteBounds = new Rect();\n        return _this;\n    }\n    Object.defineProperty(PathElement.prototype, \"data\", {\n        /**\n         * Gets the geometry of the path element\n         */\n        get: function () {\n            return this.pathData;\n        },\n        /**\n         * Sets the geometry of the path element\n         */\n        set: function (value) {\n            if (this.pathData !== value) {\n                this.pathData = value;\n                this.isDirt = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    PathElement.prototype.getPoints = function () {\n        var _this = this;\n        if (!this.pointTimer) {\n            this.pointTimer = setTimeout(function () {\n                _this.points = null;\n                _this.pointTimer = null;\n            }, 200);\n        }\n        this.points = this.points || findSegmentPoints(this);\n        return translatePoints(this, this.points);\n    };\n    /**\n     * Measures the minimum space that is required to render the element\n     * @param {Size} availableSize\n     */\n    PathElement.prototype.measure = function (availableSize) {\n        //Performance issue - Avoiding measuring the connector path\n        if (this.staticSize && this.width !== undefined && this.height !== undefined) {\n            this.absoluteBounds = new Rect(this.offsetX - this.width * this.pivot.x, this.offsetY - this.height * this.pivot.y, this.width, this.height);\n        }\n        else if (this.isDirt && (this.transformPath || (this.width === undefined || this.height === undefined))\n            && (!this.absoluteBounds || this.absoluteBounds.height === 0) || this.canMeasurePath) {\n            //Measure the element only whent the path data is changed/ size is not specified\n            this.absoluteBounds = measurePath(this.data ? this.data : '');\n        }\n        if (this.width === undefined) {\n            this.desiredSize = new Size(this.absoluteBounds.width, this.height || this.absoluteBounds.height);\n        }\n        else if (this.height === undefined) {\n            this.desiredSize = new Size(this.width || this.absoluteBounds.width, this.absoluteBounds.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        this.canMeasurePath = false;\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the path element\n     * @param {Size} desiredSize\n     */\n    PathElement.prototype.arrange = function (desiredSize) {\n        if (this.isDirt || this.actualSize.width !== desiredSize.width || this.actualSize.height !== desiredSize.height) {\n            this.isDirt = true;\n            this.absolutePath = this.updatePath(this.data, this.absoluteBounds, desiredSize);\n            if (!this.staticSize) {\n                this.points = null;\n            }\n        }\n        this.actualSize = this.desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    /**\n     * Translates the path to 0,0 and scales the path based on the actual size\n     * @param {string} pathData\n     * @param {Rect} bounds\n     * @param {Size} actualSize\n     */\n    PathElement.prototype.updatePath = function (pathData, bounds, actualSize) {\n        var isScale = false;\n        var newPathString = '';\n        var scaleX = -bounds.x;\n        var scaleY = -bounds.y;\n        var arrayCollection = [];\n        if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n            scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n            scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n            isScale = true;\n        }\n        arrayCollection = processPathData(pathData);\n        arrayCollection = splitArrayCollection(arrayCollection);\n        if ((isScale || this.isDirt) && this.transformPath) {\n            newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n        }\n        else {\n            newPathString = getPathString(arrayCollection);\n        }\n        isScale = false;\n        return newPathString;\n    };\n    return PathElement;\n}(DiagramElement));\nexport { PathElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureImage } from './../../utility/dom-util';\n/**\n * ImageElement defines a basic image elements\n */\nvar ImageElement = /** @class */ (function (_super) {\n    __extends(ImageElement, _super);\n    /**\n     * set the id for each element\n     */\n    function ImageElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.imageSource = '';\n        /**\n         * sets scaling factor of the image\n         */\n        _this.imageScale = 'None';\n        /**\n         * sets the alignment of the image\n         */\n        _this.imageAlign = 'None';\n        /**\n         * Sets how to stretch the image\n         */\n        _this.stretch = 'Stretch';\n        return _this;\n    }\n    Object.defineProperty(ImageElement.prototype, \"source\", {\n        /**\n         * Gets the source for the image element\n         */\n        get: function () {\n            return this.imageSource;\n        },\n        /**\n         * Sets the source for the image element\n         */\n        set: function (value) {\n            this.imageSource = value;\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the image\n     * @param {Size} availableSize\n     */\n    ImageElement.prototype.measure = function (availableSize, id, callback) {\n        if (this.isDirt && (this.stretch !== 'Stretch' || this.width === undefined && this.height === undefined)) {\n            this.contentSize = measureImage(this.source, this.contentSize, id, callback);\n            this.isDirt = false;\n        }\n        if (this.width !== undefined && this.height !== undefined) {\n            this.desiredSize = new Size(this.width, this.height);\n            this.contentSize = this.desiredSize;\n        }\n        else {\n            this.desiredSize = this.contentSize;\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the image\n     * @param {Size} desiredSize\n     */\n    ImageElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return ImageElement;\n}(DiagramElement));\nexport { ImageElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureNativeContent, getContent, measureNativeSvg } from './../../utility/dom-util';\n/**\n * NativeElement defines the basic native elements\n */\nvar DiagramNativeElement = /** @class */ (function (_super) {\n    __extends(DiagramNativeElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramNativeElement(nodeId, diagramId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * set the node id\n         */\n        _this.nodeId = '';\n        /**\n         * set the diagram id\n         */\n        _this.diagramId = '';\n        /**\n         * sets scaling factor of the Native Element\n         */\n        _this.scale = 'Stretch';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        return _this;\n    }\n    Object.defineProperty(DiagramNativeElement.prototype, \"content\", {\n        /**   @private  */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * sets the geometry of the native element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, false);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the Native Element\n     * @param {Size} availableSize\n     */\n    DiagramNativeElement.prototype.measure = function (availableSize) {\n        if (this.isDirt) {\n            var rect = measureNativeContent(this.template);\n            this.contentSize = new Size();\n            this.contentSize.width = rect.width;\n            this.contentSize.height = rect.height;\n            var x = rect.x;\n            var y = rect.y;\n            this.templatePosition = { x: x, y: y };\n            this.isDirt = false;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            var getAvailableSize = measureNativeSvg(this.template);\n            this.desiredSize = new Size(getAvailableSize.width, getAvailableSize.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the Native Element\n     * @param {Size} desiredSize\n     */\n    DiagramNativeElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return DiagramNativeElement;\n}(DiagramElement));\nexport { DiagramNativeElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { PortConstraints, PortVisibility } from '../enum/enum';\n/**\n * Defines the behavior of connection ports\n */\nvar Port = /** @class */ (function (_super) {\n    __extends(Port, _super);\n    // tslint:disable-next-line:no-any\n    function Port(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        _this.inEdges = [];\n        _this.outEdges = [];\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Port.prototype, \"id\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Port.prototype, \"margin\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"width\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ShapeStyle)\n    ], Port.prototype, \"style\", void 0);\n    __decorate([\n        Property('Square')\n    ], Port.prototype, \"shape\", void 0);\n    __decorate([\n        Property(PortVisibility.Connect)\n    ], Port.prototype, \"visibility\", void 0);\n    __decorate([\n        Property('')\n    ], Port.prototype, \"pathData\", void 0);\n    __decorate([\n        Property(PortConstraints.Default)\n    ], Port.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"outEdges\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"inEdges\", void 0);\n    return Port;\n}(ChildProperty));\nexport { Port };\n/**\n * Defines the behavior of a port, that sticks to a point\n */\nvar PointPort = /** @class */ (function (_super) {\n    __extends(PointPort, _super);\n    // tslint:disable-next-line:no-any\n    function PointPort(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class PointPort\n     */\n    PointPort.prototype.getClassName = function () {\n        return 'PointPort';\n    };\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], PointPort.prototype, \"offset\", void 0);\n    return PointPort;\n}(Port));\nexport { PointPort };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { TextStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { AnnotationConstraints } from '../enum/enum';\nimport { randomId } from '../utility/base-util';\n/**\n * Defines the hyperlink for the annotations in the nodes/connectors\n */\nvar Hyperlink = /** @class */ (function (_super) {\n    __extends(Hyperlink, _super);\n    function Hyperlink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('blue')\n    ], Hyperlink.prototype, \"color\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"link\", void 0);\n    __decorate([\n        Property('None')\n    ], Hyperlink.prototype, \"textDecoration\", void 0);\n    return Hyperlink;\n}(ChildProperty));\nexport { Hyperlink };\n/**\n * Defines the textual description of nodes/connectors\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    // tslint:disable-next-line:no-any\n    function Annotation(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        if (!defaultValue.id) {\n            if (parent.parentObj && parent.parentObj.propName && parent.parentObj.propName === 'phases') {\n                _this.id = parent.parentObj.id;\n            }\n            else {\n                _this.id = randomId();\n            }\n        }\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(undefined)\n    ], Annotation.prototype, \"template\", void 0);\n    __decorate([\n        Property('String')\n    ], Annotation.prototype, \"annotationType\", void 0);\n    __decorate([\n        Property(true)\n    ], Annotation.prototype, \"visibility\", void 0);\n    __decorate([\n        Property(AnnotationConstraints.InheritReadOnly)\n    ], Annotation.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex(undefined, Hyperlink)\n    ], Annotation.prototype, \"hyperlink\", void 0);\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Annotation.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 0, strokeColor: 'transparent', fill: 'transparent' }, TextStyle)\n    ], Annotation.prototype, \"style\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Annotation.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ top: undefined, bottom: undefined, left: undefined, right: undefined }, Margin)\n    ], Annotation.prototype, \"dragLimit\", void 0);\n    __decorate([\n        Property('Shape')\n    ], Annotation.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"addInfo\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Defines the textual description of nodes/connectors with respect to bounds\n */\nvar ShapeAnnotation = /** @class */ (function (_super) {\n    __extends(ShapeAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function ShapeAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class ShapeAnnotation\n     */\n    ShapeAnnotation.prototype.getClassName = function () {\n        return 'ShapeAnnotation';\n    };\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], ShapeAnnotation.prototype, \"offset\", void 0);\n    return ShapeAnnotation;\n}(Annotation));\nexport { ShapeAnnotation };\n/**\n * Defines the connector annotation\n */\nvar PathAnnotation = /** @class */ (function (_super) {\n    __extends(PathAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function PathAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class PathAnnotation\n     */\n    PathAnnotation.prototype.getClassName = function () {\n        return 'PathAnnotation';\n    };\n    __decorate([\n        Property(0.5)\n    ], PathAnnotation.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], PathAnnotation.prototype, \"displacement\", void 0);\n    __decorate([\n        Property('Center')\n    ], PathAnnotation.prototype, \"alignment\", void 0);\n    __decorate([\n        Property(false)\n    ], PathAnnotation.prototype, \"segmentAngle\", void 0);\n    return PathAnnotation;\n}(Annotation));\nexport { PathAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { DiagramTooltip } from './tooltip';\n/**\n * Defines the common behavior of nodes, connectors and groups\n */\nvar NodeBase = /** @class */ (function (_super) {\n    __extends(NodeBase, _super);\n    function NodeBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], NodeBase.prototype, \"id\", void 0);\n    __decorate([\n        Property(-1)\n    ], NodeBase.prototype, \"zIndex\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], NodeBase.prototype, \"margin\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"visible\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], NodeBase.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property(false)\n    ], NodeBase.prototype, \"excludeFromLayout\", void 0);\n    __decorate([\n        Property()\n    ], NodeBase.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property('None')\n    ], NodeBase.prototype, \"flip\", void 0);\n    return NodeBase;\n}(ChildProperty));\nexport { NodeBase };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from './diagram-element';\nimport { getContent } from '../../utility/dom-util';\nimport { templateCompiler } from '../../utility/base-util';\n/**\n * HTMLElement defines the basic html elements\n */\nvar DiagramHtmlElement = /** @class */ (function (_super) {\n    __extends(DiagramHtmlElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramHtmlElement(nodeId, diagramId, annotationId, nodeTemplate) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * Gets the node id for the element\n         */\n        _this.nodeId = '';\n        /**\n         * defines the id of the annotation on rendering template on label.\n         * @private\n         */\n        _this.annotationId = '';\n        /**\n         * Gets the diagram id for the html element\n         */\n        _this.diagramId = '';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        _this.annotationId = annotationId;\n        _this.templateFn = templateCompiler(nodeTemplate);\n        return _this;\n    }\n    /** @private */\n    DiagramHtmlElement.prototype.getNodeTemplate = function () {\n        return this.templateFn;\n    };\n    Object.defineProperty(DiagramHtmlElement.prototype, \"content\", {\n        /**\n         * Gets or sets the geometry of the html element\n         */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * Gets or sets the value of the html element\n         */\n        set: function (value) {\n            this.data = value;\n            if (!this.isTemplate) {\n                this.template = getContent(this, true);\n            }\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DiagramHtmlElement;\n}(DiagramElement));\nexport { DiagramHtmlElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * customize the size of the individual palette items.\n */\nvar SymbolSize = /** @class */ (function (_super) {\n    __extends(SymbolSize, _super);\n    function SymbolSize() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolSize.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolSize.prototype, \"height\", void 0);\n    return SymbolSize;\n}(ChildProperty));\nexport { SymbolSize };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property } from '@syncfusion/ej2-base';\nimport { createSvgElement, createHtmlElement, setAttributeSvg } from '../diagram/utility/dom-util';\nimport { Size } from '../diagram/primitives/size';\nimport { getFunction } from '../diagram/utility/base-util';\n/**\n * Represents the Ruler component that measures the Diagram objects, indicate positions, and align Diagram elements.\n * ```html\n * <div id='ruler'>Show Ruler</div>\n * ```\n * ```typescript\n * <script>\n *   var rulerObj = new Ruler({ showRuler: true });\n *   rulerObj.appendTo('#ruler');\n * </script>\n * ```\n */\nvar Ruler = /** @class */ (function (_super) {\n    __extends(Ruler, _super);\n    /**\n     * Constructor for creating the Ruler Component\n     */\n    function Ruler(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.offset = 0;\n        /**   @private  */\n        _this.scale = 1;\n        return _this;\n    }\n    /**\n     * Initializes the values of private members.\n     * @private\n     */\n    Ruler.prototype.preRender = function () {\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders the rulers.\n     * @private\n     */\n    Ruler.prototype.render = function () {\n        this.updateRulerGeometry();\n        this.renderComplete();\n    };\n    /**\n     * Core method to return the component name.\n     * @private\n     */\n    Ruler.prototype.getModuleName = function () {\n        return 'Ruler';\n    };\n    /**\n     * To destroy the ruler\n     * @return {void}\n     */\n    Ruler.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        this.element.classList.remove('e-ruler');\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Ruler.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Refreshes the ruler when the Ruler properties are updated\n     * @param options\n     */\n    Ruler.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'length':\n                case 'interval':\n                case 'segmentWidth':\n                case 'tickAlignment':\n                case 'markerColor':\n                case 'thickness':\n                    this.updateRuler();\n                    break;\n            }\n        }\n    };\n    Ruler.prototype.updateRulerGeometry = function () {\n        this.element.style.textAlign = 'left';\n        this.renderRulerSpace();\n        this.updateRuler();\n    };\n    Ruler.prototype.renderRulerSpace = function () {\n        var rulerGeometry = this.getRulerGeometry();\n        var div = document.getElementById(this.element.id + '_ruler_space');\n        if (!div) {\n            div = createHtmlElement('div', {\n                'id': this.element.id + '_ruler_space',\n                'style': 'height:' + rulerGeometry.height + 'px;width:' + rulerGeometry.width + 'px;cssFloat:' + 'left;'\n            });\n            this.element.appendChild(div);\n        }\n        return div;\n    };\n    Ruler.prototype.updateRuler = function () {\n        var rulerSize = this.getRulerSize();\n        var rulerGeometry = this.getRulerGeometry();\n        var length = 0;\n        var offset = 0;\n        var availableSize = new Size();\n        var svg = this.getRulerSVG(rulerGeometry);\n        if (svg) {\n            length = this.length;\n            availableSize.height = rulerSize;\n            offset = this.offset;\n            if (length && length !== Infinity) {\n                var unitLength = length + this.segmentWidth;\n                var unitOffset = offset;\n                this.updateSegments(unitOffset, (unitLength + Math.abs(unitOffset)), svg, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegments = function (start, end, svg, rulerSize) {\n        var run = start;\n        var trans = { trans: 0 };\n        while (run < end) {\n            var rulerSegment = this.getNewSegment(run, svg);\n            if (rulerSegment) {\n                svg.appendChild(rulerSegment.segment);\n                run = this.updateSegment(start, end, rulerSegment, run, trans, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegment = function (start, end, rulerSegment, run, trans, rulerSize) {\n        var segWidth = this.updateSegmentWidth(this.scale);\n        if (run === start) {\n            this.startValue = Math.floor(start / segWidth) * segWidth / this.scale;\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n            this.defStartValue = run = this.startValue * this.scale;\n            if (this.orientation === 'Horizontal') {\n                this.hRulerOffset = start - run;\n            }\n            else {\n                this.vRulerOffset = start - run;\n            }\n        }\n        else {\n            this.startValue = (run / this.scale);\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n        }\n        this.updateTickLabel(rulerSegment, rulerSize);\n        var translate = (this.orientation === 'Horizontal') ? ((trans.trans + 0.5) + ',0.5') : ('0.5,' + (trans.trans + 0.5));\n        rulerSegment.segment.setAttribute('transform', 'translate(' + translate + ')');\n        trans.trans += segWidth;\n        run += segWidth;\n        return run;\n    };\n    Ruler.prototype.updateTickLabel = function (rulerSegment, rulerSize) {\n        var bBox = rulerSegment.segment.lastChild.getBBox();\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var x = isHorizontal ? 2 : 0;\n        var y = isHorizontal ? (isRightOrBottom ? (rulerSize / 2 + (11 / 2) - (11 / 2)) :\n            (rulerSize / 2 + (11 / 2))) : bBox.height;\n        var translate = isRightOrBottom ? (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height)) :\n            (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height / 2));\n        var attr = isHorizontal ? { 'x': x, 'y': y } :\n            { 'x': x, 'y': y, 'transform': 'rotate(270)' + 'translate(' + translate + ')' };\n        setAttributeSvg(rulerSegment.segment.lastChild, attr);\n    };\n    Ruler.prototype.getNewSegment = function (run, svg) {\n        var segment = this.createNewTicks(run, svg);\n        var label = this.createTickLabel(svg, segment);\n        return { segment: segment, label: label };\n    };\n    Ruler.prototype.createNewTicks = function (run, svg) {\n        var tick;\n        var tickInterval;\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var g;\n        var attr = { 'class': 'e-ruler-segment' };\n        g = createSvgElement('g', attr);\n        for (var i = 0; i < this.interval; i++) {\n            tickInterval = segmentWidth / this.interval;\n            tick = this.createTick(svg, tickInterval, i + 1, run);\n            g.appendChild(tick);\n        }\n        return g;\n    };\n    Ruler.prototype.getLinePoint = function (svg, tickInterval, length) {\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var rulerSize = this.getRulerSize();\n        tickInterval = tickInterval * (length - 1);\n        length = ((tickInterval % segmentWidth) === 0) ? rulerSize : rulerSize * 0.3;\n        return length;\n    };\n    Ruler.prototype.createTick = function (svg, tickInterval, length, run) {\n        var ruler;\n        var line;\n        var linePoint = this.getLinePoint(svg, tickInterval, length);\n        var rulerSize = this.getRulerSize();\n        var args;\n        var attr;\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var arrangeTick = getFunction(this.arrangeTick);\n        args = { ruler: ruler, tickLength: linePoint, tickInterval: ((this.segmentWidth / this.interval) * (length - 1)) };\n        if (arrangeTick) {\n            arrangeTick(args);\n        }\n        linePoint = args.tickLength;\n        var point = tickInterval * (length - 1);\n        var x1 = isHorizontal ? point : (isRightOrBottom ? rulerSize : 0);\n        var x2 = isHorizontal ? point : (isRightOrBottom ? (rulerSize - linePoint) : (rulerSize - (rulerSize - linePoint)));\n        var y1 = isHorizontal ? (isRightOrBottom ? rulerSize : (rulerSize - (rulerSize - linePoint))) : point;\n        var y2 = isHorizontal ? (isRightOrBottom ? (rulerSize - linePoint) : 0) : point;\n        attr = { 'x1': x1, 'y1': y1, 'x2': x2, 'y2': y2, 'stroke-width': '1', 'stroke': 'black' };\n        line = createSvgElement('line', attr);\n        line.setAttribute('class', 'e-ruler-tick');\n        return line;\n    };\n    Ruler.prototype.createTickLabel = function (svg, segment) {\n        var text;\n        if (segment) {\n            var attr = { 'class': 'e-ruler-tick-label' };\n            text = createSvgElement('text', attr);\n            segment.appendChild(text);\n        }\n        return text;\n    };\n    /**\n     * @private\n     * @param {number} scale\n     */\n    Ruler.prototype.updateSegmentWidth = function (scale) {\n        if (this.segmentWidth !== 100) {\n            return this.segmentWidth;\n        }\n        var five = 25;\n        var multiples = 1;\n        var div;\n        var scaleRound;\n        var fifty = 100;\n        scaleRound = Math.pow(2, Math.round(Math.log(scale) / Math.log(2)));\n        div = fifty;\n        div = (fifty / scaleRound);\n        while (div > 100) {\n            multiples /= 10;\n            div /= 10;\n        }\n        while (div < 25) {\n            multiples *= 10;\n            div *= 10;\n        }\n        if (div >= five && div % five !== 0) {\n            div = Math.round(div / five) * five;\n        }\n        return div * scale / multiples;\n    };\n    Ruler.prototype.createMarkerLine = function (rulerSvg, rulerObj, attr) {\n        var line;\n        if (rulerObj) {\n            line = rulerSvg.getElementById(rulerObj.id + '_marker');\n            if (line) {\n                line.parentNode.removeChild(line);\n            }\n            line = createSvgElement('line', attr);\n        }\n        return line;\n    };\n    /**\n     * @private\n     * @param {HTMLElement} rulerObj - Defines the ruler Object\n     * @param {PointModel} currentPoint - Defines the current point for ruler Object\n     * @param {number} offset - Defines the offset ruler Object\n     */\n    Ruler.prototype.drawRulerMarker = function (rulerObj, currentPoint, offset) {\n        var rulerSvg;\n        var rulerSize;\n        var scale;\n        var diff;\n        var i;\n        var attr;\n        var line;\n        var isHorizontal = this.orientation === 'Horizontal' ? true : false;\n        var rulerSvgElements = rulerObj.getElementsByTagName('svg');\n        for (i = 0; i < rulerSvgElements.length; i++) {\n            if (rulerSvgElements[i]) {\n                rulerSvg = rulerSvgElements[i];\n            }\n            break;\n        }\n        if (rulerSvg) {\n            rulerSize = this.getRulerSize();\n            attr = {\n                'id': rulerObj.id + '_marker', 'x1': 0, 'y1': 0, 'x2': (isHorizontal ? 0 : rulerSize),\n                'y2': (isHorizontal ? rulerSize : 0), 'stroke': this.markerColor, 'stroke-width': 1.5,\n                'class': 'e-d-ruler-marker'\n            };\n            line = this.createMarkerLine(rulerSvg, rulerObj, attr);\n            scale = this.scale;\n            diff = this.offset - this.defStartValue;\n            var point = isHorizontal ? currentPoint.x : currentPoint.y;\n            var move = (point * scale) + offset + diff;\n            line.setAttribute('transform', 'translate(' + (isHorizontal ? ((move + 0.5) + ' 0.5') : ('0.5 ' + (move + 0.5))) + ')');\n            rulerSvg.appendChild(line);\n        }\n    };\n    Ruler.prototype.getRulerGeometry = function () {\n        return new Size(this.element ? this.element.getBoundingClientRect().width : 0, this.element ? this.element.getBoundingClientRect().height : 0);\n    };\n    Ruler.prototype.getRulerSize = function () {\n        return this.thickness;\n    };\n    Ruler.prototype.getRulerSVG = function (rulerGeometry) {\n        var rulerSpace;\n        var rulerSize = this.getRulerSize();\n        var svg;\n        if (this.element) {\n            rulerSpace = document.getElementById(this.element.id + '_ruler_space');\n            if (rulerSpace) {\n                var attr = {\n                    'id': this.element.id + '_Ruler_svg',\n                    width: this.orientation === 'Horizontal' ? (rulerGeometry.width + 200) : rulerSize + 'px',\n                    height: this.orientation === 'Horizontal' ? rulerSize : (rulerGeometry.height + 200) + 'px',\n                    style: 'position:inherit;'\n                };\n                svg = createSvgElement('svg', attr);\n                if (rulerSpace.childNodes.length > 0) {\n                    for (var i = rulerSpace.childNodes.length - 1; i >= 0; i--) {\n                        rulerSpace.childNodes[i].parentNode.removeChild(rulerSpace.childNodes[i]);\n                    }\n                }\n                rulerSpace.appendChild(svg);\n            }\n        }\n        return svg;\n    };\n    /**\n     * Method to bind events for the ruler\n     */\n    Ruler.prototype.wireEvents = function () {\n        //wire Events\n    };\n    /**\n     * Method to unbind events for the ruler\n     */\n    Ruler.prototype.unWireEvents = function () {\n        //unWire Events\n    };\n    __decorate([\n        Property(5)\n    ], Ruler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], Ruler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Ruler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], Ruler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], Ruler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], Ruler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], Ruler.prototype, \"arrangeTick\", void 0);\n    __decorate([\n        Property(400)\n    ], Ruler.prototype, \"length\", void 0);\n    return Ruler;\n}(Component));\nexport { Ruler };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * A collection of frequently used commands that will be added around the selector\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let nodes: NodeModel[] = [{\n *           id: 'node1', width: 100, height: 100, offsetX: 100, offsetY: 100,\n *           annotations: [{ content: 'Default Shape' }]\n *       },\n *       {\n *           id: 'node2', width: 100, height: 100, offsetX: 300, offsetY: 100,\n *           shape: {\n *               type: 'Basic', shape: 'Ellipse'\n *           },\n *           annotations: [{ content: 'Path Element' }]\n *       }\n *       ];\n *       let connectors: ConnectorModel[] = [{\n *           id: 'connector1',\n *           type: 'Straight',\n *           sourcePoint: { x: 100, y: 300 },\n *           targetPoint: { x: 200, y: 400 },\n *       }];\n * let handle: UserHandleModel[] = [\n * { name: 'handle', margin: { top: 0, bottom: 0, left: 0, right: 0 }, offset: 0,\n * pathData: 'M 376.892,225.284L 371.279,211.95L 376.892,198.617L 350.225,211.95L 376.892,225.284 Z',\n * side: 'Top', horizontalAlignment: 'Center', verticalAlignment: 'Center',\n * pathColor: 'yellow' }];\n * let diagram: Diagram = new Diagram({\n * ...\n *     connectors: connectors, nodes: nodes,\n *     selectedItems: { constraints: SelectorConstraints.All, userHandles: handle },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar UserHandle = /** @class */ (function (_super) {\n    __extends(UserHandle, _super);\n    function UserHandle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UserHandle\n     */\n    UserHandle.prototype.getClassName = function () {\n        return 'UserHandle';\n    };\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"source\", void 0);\n    __decorate([\n        Property('#000000')\n    ], UserHandle.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('Top')\n    ], UserHandle.prototype, \"side\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0.5)\n    ], UserHandle.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property(25)\n    ], UserHandle.prototype, \"size\", void 0);\n    __decorate([\n        Property('white')\n    ], UserHandle.prototype, \"pathColor\", void 0);\n    __decorate([\n        Property(10)\n    ], UserHandle.prototype, \"displacement\", void 0);\n    __decorate([\n        Property(true)\n    ], UserHandle.prototype, \"visible\", void 0);\n    __decorate([\n        Property(0)\n    ], UserHandle.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], UserHandle.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(false)\n    ], UserHandle.prototype, \"disableNodes\", void 0);\n    __decorate([\n        Property(false)\n    ], UserHandle.prototype, \"disableConnectors\", void 0);\n    return UserHandle;\n}(ChildProperty));\nexport { UserHandle };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\n/**\n * Defines the combination of keys and modifier keys\n */\nvar KeyGesture = /** @class */ (function (_super) {\n    __extends(KeyGesture, _super);\n    function KeyGesture() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"keyModifiers\", void 0);\n    return KeyGesture;\n}(ChildProperty));\nexport { KeyGesture };\n/**\n * Defines a command and a key gesture to define when the command should be executed\n */\nvar Command = /** @class */ (function (_super) {\n    __extends(Command, _super);\n    function Command() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Command\n     */\n    Command.prototype.getClassName = function () {\n        return 'Command';\n    };\n    __decorate([\n        Property('')\n    ], Command.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"canExecute\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"execute\", void 0);\n    __decorate([\n        Complex({}, KeyGesture)\n    ], Command.prototype, \"gesture\", void 0);\n    __decorate([\n        Property('')\n    ], Command.prototype, \"parameter\", void 0);\n    return Command;\n}(ChildProperty));\nexport { Command };\n/**\n * Defines the collection of commands and the corresponding key gestures\n */\nvar CommandManager = /** @class */ (function (_super) {\n    __extends(CommandManager, _super);\n    function CommandManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Command)\n    ], CommandManager.prototype, \"commands\", void 0);\n    return CommandManager;\n}(ChildProperty));\nexport { CommandManager };\n/**\n * Defines the behavior of the context menu items\n */\nvar ContextMenuSettings = /** @class */ (function (_super) {\n    __extends(ContextMenuSettings, _super);\n    function ContextMenuSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"show\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"showCustomMenuOnly\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"items\", void 0);\n    return ContextMenuSettings;\n}(ChildProperty));\nexport { ContextMenuSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { Canvas } from './canvas';\nimport { Container } from './container';\nimport { Size } from '../../primitives/size';\nimport { randomId } from '../../utility/base-util';\nimport { TextElement } from '../elements/text-element';\n/**\n * Grid panel is used to arrange the children in a table like structure\n */\nvar GridPanel = /** @class */ (function (_super) {\n    __extends(GridPanel, _super);\n    function GridPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.childTable = [];\n        _this.cellStyle = {};\n        _this.desiredRowHeight = [];\n        _this.desiredCellWidth = [];\n        return _this;\n    }\n    /** @private */\n    GridPanel.prototype.rowDefinitions = function () {\n        return this.rowDefns;\n    };\n    /** @private */\n    GridPanel.prototype.columnDefinitions = function () {\n        return this.colDefns;\n    };\n    GridPanel.prototype.addObject = function (obj, rowId, columnId, rowSpan, columnSpan) {\n        //check if exists\n        if (this.rows.length >= rowId) {\n            var row = this.rows[rowId];\n            if (row.cells.length > columnId) {\n                columnSpan = columnSpan || 1;\n                rowSpan = rowSpan || 1;\n                var cell = row.cells[columnId];\n                cell.columnSpan = Math.max(columnSpan, cell.columnSpan);\n                cell.rowSpan = Math.max(rowSpan, cell.rowSpan);\n                var object = new GridCellItem();\n                object = obj;\n                object.rowId = rowId;\n                object.columnId = columnId;\n                object.columnSpan = columnSpan;\n                this.childTable[object.id] = object;\n                this.addObjectToCell(object, cell);\n            }\n        }\n    };\n    // public setCellStyle(rowId: number, columnId: number, cellStyle: ShapeStyleModel): void {\n    //     if (this.rows.length > rowId) {\n    //         let row: GridRow = this.rows[rowId];\n    //         if (row.cells.length > columnId) {\n    //             let cell: GridCell = row.cells[columnId];\n    //             cell.style = cellStyle;\n    //         }\n    //     }\n    // }\n    // public getRowId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowId;\n    // }\n    // public getColumnId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnId;\n    // }\n    // public getRowSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowSpan;\n    // }\n    // public getColumnSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnSpan;\n    // }\n    GridPanel.prototype.addObjectToCell = function (obj, cell) {\n        if (!cell.children) {\n            cell.children = [];\n        }\n        // obj.minWidth = cell.desiredCellWidth; obj.minHeight = cell.desiredCellHeight;\n        obj.style.strokeColor = 'black';\n        obj.style.strokeWidth = 1;\n        obj.style.fill = 'white';\n        cell.children.push(obj);\n    };\n    /** @private */\n    GridPanel.prototype.updateProperties = function (offsetX, offsetY, width, height) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.width = width;\n        this.height = height;\n    };\n    /** @private */\n    GridPanel.prototype.setDefinitions = function (rows, columns) {\n        this.rowDefns = rows;\n        this.colDefns = columns;\n        this.children = [];\n        this.rows = this.rows || [];\n        for (var i = 0; i < rows.length; i++) {\n            var rowDefn = rows[i];\n            var row = new GridRow();\n            row.cells = [];\n            var defaultCell = new ColumnDefinition();\n            //replace this 100 with a proper property            \n            defaultCell.width = this.width;\n            var columns_1 = this.colDefns;\n            if (columns_1 === undefined || columns_1.length < 1) {\n                columns_1 = [defaultCell];\n            }\n            this.addCellInRow(columns_1, rowDefn, row);\n            this.rows.push(row);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addCellInRow = function (columns, rowDefn, row) {\n        for (var j = 0; j < columns.length; j++) {\n            var colDefn = columns[j];\n            var cell = new GridCell();\n            cell.children = [];\n            this.cellStyle.fill = 'none';\n            this.cellStyle.strokeColor = 'none';\n            cell.id = randomId();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            row.cells.push(cell);\n            this.children.push(cell);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.calculateSize = function () {\n        var rows = this.rows || [];\n        var calculateHeight = 0;\n        var calculateWidth = 0;\n        for (var i = 0; i < rows.length; i++) {\n            var row = this.rows[i];\n            calculateWidth = 0;\n            for (var j = 0; j < row.cells.length; j++) {\n                calculateWidth += row.cells[j].desiredCellWidth;\n                if (j === row.cells.length - 1) {\n                    if (this.width && this.width !== calculateWidth) {\n                        row.cells[j].desiredCellWidth += (this.width - calculateWidth);\n                        row.cells[j].minWidth = row.cells[j].desiredCellWidth;\n                        if (row.cells[j].children && row.cells[j].children.length) {\n                            row.cells[j].children[0].width = row.cells[j].desiredCellWidth;\n                        }\n                        this.colDefns[j].width = row.cells[j].desiredCellWidth;\n                    }\n                    calculateHeight += row.cells[j].desiredCellHeight;\n                    if (i === rows.length - 1) {\n                        if (this.height && this.height !== calculateHeight) {\n                            var height = (this.height - calculateHeight);\n                            if (height > 0) {\n                                for (var k = 0; k < row.cells.length; k++) {\n                                    row.cells[k].desiredCellHeight += height;\n                                    row.cells[k].minHeight = row.cells[k].desiredCellHeight = row.cells[k].desiredCellHeight;\n                                    if (row.cells[k].children && row.cells[k].children.length) {\n                                        row.cells[k].children[0].height = row.cells[k].desiredCellHeight;\n                                    }\n                                }\n                                this.rowDefns[i].height += height;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateRowHeight = function (rowId, height, isConsiderChild, padding) {\n        var row = this.rows[rowId];\n        this.rowDefns[rowId].height = height;\n        if (this.height !== undefined) {\n            this.height += height - row.cells[0].desiredCellHeight;\n        }\n        for (var i = 0; i < row.cells.length; i++) {\n            row.cells[i].desiredCellHeight = row.cells[i].minHeight = height;\n            if (row.cells[i].children && row.cells[i].children.length) {\n                row.cells[i].children[0].height = height;\n                this.setTextRefresh(row.cells[i].children[0]);\n            }\n        }\n        this.desiredRowHeight[rowId] = height;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n        if (isConsiderChild) {\n            var minHeight = (padding !== undefined) ? this.calculateCellHeightBasedOnChildren(rowId, padding) :\n                this.calculateCellHeight(rowId);\n            if (minHeight > height) {\n                this.updateRowHeight(rowId, minHeight, false);\n            }\n        }\n    };\n    GridPanel.prototype.setTextRefresh = function (canvas) {\n        if (canvas.children && canvas.children.length) {\n            var children = canvas.children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i] instanceof TextElement) {\n                    children[i].refreshTextElement();\n                }\n                if (children[i] instanceof Canvas) {\n                    this.setTextRefresh(children[i]);\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnWidth = function (colId, width, isConsiderChild, padding) {\n        this.colDefns[colId].width = width;\n        if (this.width !== undefined) {\n            this.width += width - this.rows[this.rows.length - 1].cells[colId].desiredCellWidth;\n        }\n        for (var i = 0; i < this.rows.length; i++) {\n            this.setTextRefresh(this.rows[i].cells[0]);\n            this.rows[i].cells[colId].desiredCellWidth = this.rows[i].cells[colId].minWidth = width;\n            if (this.rows[i].cells[colId].children && this.rows[i].cells[colId].children.length) {\n                this.rows[i].cells[colId].children[0].width = width;\n            }\n        }\n        this.desiredCellWidth[colId] = width;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n        if (isConsiderChild) {\n            var minWidth = (padding !== undefined) ? this.calculateCellWidthBasedOnChildren(colId, padding) :\n                this.calculateCellWidth(colId);\n            if (minWidth > width) {\n                this.updateColumnWidth(colId, minWidth, false);\n            }\n        }\n    };\n    GridPanel.prototype.calculateCellWidth = function (colIndex) {\n        var maxWidth;\n        var width;\n        var cell;\n        for (var i = 0; i < this.rows.length; i++) {\n            cell = this.rows[i].cells[colIndex];\n            if (cell.columnSpan === 1) {\n                width = (cell.outerBounds.width > cell.bounds.width &&\n                    (cell.children.length === 0 || cell.children[0].maxWidth === undefined)) ? cell.outerBounds.width : cell.bounds.width;\n                if (maxWidth) {\n                    maxWidth = (maxWidth < width) ? width : maxWidth;\n                }\n                else {\n                    maxWidth = width;\n                }\n            }\n        }\n        return maxWidth;\n    };\n    GridPanel.prototype.calculateCellHeight = function (rowIndex) {\n        var maxHeight;\n        var height;\n        var cell;\n        var row = this.rows[rowIndex];\n        for (var i = 0; i < row.cells.length; i++) {\n            cell = row.cells[i];\n            height = (cell.outerBounds.height > cell.bounds.height) ? cell.outerBounds.height : cell.bounds.height;\n            if (maxHeight) {\n                maxHeight = (maxHeight < height) ? height : maxHeight;\n            }\n            else {\n                maxHeight = height;\n            }\n        }\n        return maxHeight;\n    };\n    GridPanel.prototype.calculateCellSizeBasedOnChildren = function (cell, option, padding, maxSize) {\n        var maxBounds;\n        var canvas;\n        canvas = (cell && cell.children.length > 0) ? cell.children[0] : undefined;\n        if (canvas && cell.columnSpan === 1) {\n            maxBounds = (option === 'Width') ? canvas.bounds.right : canvas.bounds.bottom;\n            if (!maxSize) {\n                maxSize = (option === 'Width') ? canvas.bounds.width : canvas.bounds.height;\n            }\n            for (var j = 0; j < canvas.children.length; j++) {\n                var children = canvas.children[j];\n                if (children instanceof Canvas) {\n                    if (children.id.indexOf('header') === -1) {\n                        var bounds = ((option === 'Width') ? children.bounds.right : children.bounds.bottom) + padding;\n                        if (bounds > maxBounds) {\n                            var size = (bounds - maxBounds) + ((option === 'Width') ? canvas.bounds.width : canvas.bounds.height);\n                            if (maxSize) {\n                                maxSize = (maxSize < size) ? size : maxSize;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return maxSize;\n    };\n    GridPanel.prototype.calculateCellWidthBasedOnChildren = function (colIndex, padding) {\n        var maxWidth;\n        var width;\n        var cell;\n        var maxBounds;\n        var canvas;\n        for (var i = 0; i < this.rows.length; i++) {\n            cell = this.rows[i].cells[colIndex];\n            maxWidth = this.calculateCellSizeBasedOnChildren(cell, 'Width', padding, maxWidth);\n        }\n        return maxWidth;\n    };\n    GridPanel.prototype.calculateCellHeightBasedOnChildren = function (rowIndex, padding) {\n        var maxHeight;\n        var height;\n        var cell;\n        var maxBounds;\n        var canvas;\n        var row = this.rows[rowIndex];\n        for (var i = 0; i < row.cells.length; i++) {\n            cell = row.cells[i];\n            maxHeight = this.calculateCellSizeBasedOnChildren(cell, 'Height', padding, maxHeight);\n        }\n        return maxHeight;\n    };\n    /** @private */\n    GridPanel.prototype.addRow = function (rowId, rowDefn, isMeasure) {\n        if (this.rowDefns.length > 0) {\n            this.rowDefns.splice(rowId, 0, rowDefn);\n        }\n        else {\n            this.rowDefns.push(rowDefn);\n        }\n        var row = new GridRow();\n        row.cells = [];\n        var defaultCell = new ColumnDefinition();\n        defaultCell.width = this.width;\n        var columns = this.colDefns;\n        this.addCellInRow(columns, rowDefn, row);\n        if (rowId > this.rows.length - 1) {\n            this.rows.push(row);\n        }\n        else {\n            this.rows.splice(rowId, 0, row);\n        }\n        if (isMeasure) {\n            this.measure(new Size(this.width, this.height));\n            this.arrange(this.desiredSize);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addColumn = function (columnId, column, isMeasure) {\n        var row;\n        var rowDefn;\n        var colDefn;\n        var cell;\n        var rows = this.rows;\n        if (this.colDefns.length > 0) {\n            this.colDefns.splice(columnId, 0, column);\n        }\n        else {\n            this.colDefns.push(column);\n        }\n        if (this.width !== undefined) {\n            this.width += column.width;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            row = rows[i];\n            rowDefn = this.rowDefns[i];\n            colDefn = column;\n            cell = new GridCell();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            cell.children = [];\n            if (columnId > row.cells.length - 1) {\n                row.cells.push(cell);\n            }\n            else {\n                row.cells.splice(columnId, 0, cell);\n            }\n            this.children.push(cell);\n        }\n        if (isMeasure) {\n            this.measure(new Size(this.width, this.height));\n            this.arrange(this.desiredSize);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.removeRow = function (rowId) {\n        var cell;\n        var element;\n        var rows = this.rows;\n        var removeRow = rows[rowId];\n        this.height -= this.rowDefns[rowId].height;\n        for (var i = 0; i < removeRow.cells.length; i++) {\n            cell = removeRow.cells[i];\n            this.children.splice(this.children.indexOf(cell), 1);\n            element = document.getElementById(cell.id + '_groupElement');\n            if (element && element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n        }\n        this.rows.splice(rowId, 1);\n        this.rowDefns.splice(rowId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.removeColumn = function (columnId) {\n        var cell;\n        var element;\n        var rows = this.rows;\n        this.width -= this.colDefns[columnId].width;\n        for (var i = 0; i < rows.length; i++) {\n            cell = rows[i].cells[columnId];\n            this.children.splice(this.children.indexOf(cell), 1);\n            element = document.getElementById(cell.id + '_groupElement');\n            if (element && element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n            rows[i].cells.splice(columnId, 1);\n        }\n        this.colDefns.splice(columnId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateRowIndex = function (currentIndex, newIndex) {\n        var rows = this.rows;\n        var temp = this.rows[currentIndex];\n        this.rows.splice(currentIndex, 1);\n        this.rows.splice(newIndex, 0, temp);\n        var tempRow = this.rowDefns[currentIndex];\n        this.rowDefns.splice(currentIndex, 1);\n        this.rowDefns.splice(newIndex, 0, tempRow);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnIndex = function (startRowIndex, currentIndex, newIndex) {\n        var temp;\n        var cell;\n        var tempSize;\n        for (var i = startRowIndex; i < this.rows.length; i++) {\n            temp = this.rows[i];\n            cell = this.rows[i].cells[currentIndex];\n            temp.cells.splice(currentIndex, 1);\n            temp.cells.splice(newIndex, 0, cell);\n        }\n        var tempCol = this.colDefns[currentIndex];\n        this.colDefns.splice(currentIndex, 1);\n        this.colDefns.splice(newIndex, 0, tempCol);\n        tempSize = this.desiredCellWidth[currentIndex];\n        this.desiredCellWidth.splice(currentIndex, 1);\n        this.desiredCellWidth.splice(newIndex, 0, tempSize);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var i = 0;\n            var j = 0;\n            desired = new Size(0, 0);\n            this.calculateSize();\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var size = cell.measure(new Size(cell.desiredCellWidth, cell.desiredCellHeight));\n                    if (cell.rowSpan === 1) {\n                        if (j === 0 || this.desiredRowHeight[i] === undefined) {\n                            this.desiredRowHeight[i] = size.height;\n                        }\n                        else {\n                            this.desiredRowHeight[i] = Math.max(size.height, this.desiredRowHeight[i]);\n                        }\n                    }\n                    if (cell.columnSpan === 1) {\n                        if (i === 0 || this.desiredCellWidth[j] === undefined) {\n                            this.desiredCellWidth[j] = size.width;\n                        }\n                        else {\n                            this.desiredCellWidth[j] = Math.max(size.width, this.desiredCellWidth[j]);\n                        }\n                        if (i === this.rows.length - 1) {\n                            desired.width += this.desiredCellWidth[j];\n                        }\n                    }\n                    j++;\n                }\n                desired.height += this.desiredRowHeight[i];\n                i++;\n            }\n            //to-do update definitions\n            i = j = 0;\n            var rowIndex = 0;\n            for (var _d = 0, _e = this.rows; _d < _e.length; _d++) {\n                var row = _e[_d];\n                j = 0;\n                var cellIndex = 0;\n                for (var _f = 0, _g = row.cells; _f < _g.length; _f++) {\n                    var cell = _g[_f];\n                    if (cell.columnSpan !== 1) {\n                        cell.desiredSize.width = 0;\n                        for (var start = 0; start < cell.columnSpan; start++) {\n                            if ((start + j) < row.cells.length) {\n                                cell.desiredSize.width += this.desiredCellWidth[start + j];\n                                cell.minWidth = cell.desiredSize.width;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                        j++;\n                    }\n                    else {\n                        cell.desiredSize.width = this.desiredCellWidth[cellIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    if (cell.rowSpan !== 1) {\n                        cell.desiredSize.height = 0;\n                        for (var start = 0; start < cell.rowSpan; start++) {\n                            if ((start + rowIndex) < this.rows.length) {\n                                cell.desiredSize.height += this.desiredRowHeight[start + rowIndex];\n                                cell.minHeight = cell.desiredSize.height;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                    }\n                    else {\n                        cell.desiredSize.height = this.desiredRowHeight[rowIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    i++;\n                    cellIndex++;\n                }\n                rowIndex++;\n            }\n        }\n        if (desired === undefined) {\n            desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        }\n        _super.prototype.stretchChildren.call(this, desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /** @private */\n    GridPanel.prototype.arrange = function (desiredSize, isChange) {\n        var j = 0;\n        var i = 0;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var x = this.offsetX - desiredSize.width * this.pivot.x;\n            var y = this.offsetY - desiredSize.height * this.pivot.y;\n            var cellX = x;\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                cellX = x;\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var cellWidth = Math.max(this.desiredCellWidth[j], cell.desiredSize.width);\n                    var cellHeight = Math.max(this.desiredRowHeight[i], cell.desiredSize.height);\n                    cell.offsetX = cellX + cellWidth * cell.pivot.x;\n                    cell.offsetY = y + cellHeight * cell.pivot.y;\n                    cellX += this.desiredCellWidth[j];\n                    cell.arrange(new Size(cellWidth, cellHeight));\n                    j++;\n                }\n                y += this.desiredRowHeight[i];\n                i++;\n            }\n            if (isChange) {\n                // Need to remove the unwanted the child elements in the grid\n                // Used for row span and column span.\n                var cell = void 0;\n                var row = void 0;\n                var k = void 0;\n                var z = void 0;\n                var removeCell = void 0;\n                for (i = 0; i < this.rows.length; i++) {\n                    row = this.rows[i];\n                    for (j = 0; j < row.cells.length; j++) {\n                        cell = row.cells[j];\n                        if (cell.columnSpan > 1) {\n                            // remove a child element when a column span is greater than 1\n                            this.children.splice((this.children.indexOf(cell)) + 1, cell.columnSpan - 1);\n                        }\n                        if (cell.rowSpan > 1) {\n                            for (k = i, z = 0; ((k + cell.rowSpan - 1) < this.rows.length && z < cell.rowSpan - 1); k++, z++) {\n                                removeCell = this.rows[k + 1].cells[j];\n                                // remove a child element when a row span is greater than 1\n                                this.children.splice(this.children.indexOf(removeCell), 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return desiredSize;\n    };\n    return GridPanel;\n}(Container));\nexport { GridPanel };\n/**\n * Defines the behavior of the RowDefinition of node\n */\nvar RowDefinition = /** @class */ (function () {\n    function RowDefinition() {\n        /** returns the height of node */\n        this.height = undefined;\n    }\n    return RowDefinition;\n}());\nexport { RowDefinition };\n/**\n * Defines the behavior of the ColumnDefinition of node\n */\nvar ColumnDefinition = /** @class */ (function () {\n    function ColumnDefinition() {\n        /** returns the width of node */\n        this.width = undefined;\n    }\n    return ColumnDefinition;\n}());\nexport { ColumnDefinition };\n/** @private */\nvar GridRow = /** @class */ (function () {\n    function GridRow() {\n        this.cells = null;\n    }\n    return GridRow;\n}());\nexport { GridRow };\n/** @private */\nvar GridCell = /** @class */ (function (_super) {\n    __extends(GridCell, _super);\n    function GridCell() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.columnSpan = 1;\n        _this.rowSpan = 1;\n        return _this;\n    }\n    return GridCell;\n}(Canvas));\nexport { GridCell };\nvar GridCellItem = /** @class */ (function (_super) {\n    __extends(GridCellItem, _super);\n    function GridCellItem() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.rowId = 0;\n        _this.columnId = 0;\n        _this.rowSpan = 1;\n        _this.columnSpan = 1;\n        return _this;\n    }\n    return GridCellItem;\n}(DiagramElement));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\n/**\n * Defines the behavior of default IconShapes\n */\nvar IconShape = /** @class */ (function (_super) {\n    __extends(IconShape, _super);\n    function IconShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], IconShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property('white')\n    ], IconShape.prototype, \"fill\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 1 }, Point)\n    ], IconShape.prototype, \"offset\", void 0);\n    __decorate([\n        Property('#1a1a1a')\n    ], IconShape.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(1)\n    ], IconShape.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], IconShape.prototype, \"margin\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"content\", void 0);\n    __decorate([\n        Property(0)\n    ], IconShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ left: 2, right: 2, top: 2, bottom: 2 }, Margin)\n    ], IconShape.prototype, \"padding\", void 0);\n    return IconShape;\n}(ChildProperty));\nexport { IconShape };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\n/**\n * StackPanel module is used to arrange its children in a line\n */\nvar StackPanel = /** @class */ (function (_super) {\n    __extends(StackPanel, _super);\n    function StackPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the orientation of the stack panel\n         */\n        _this.orientation = 'Vertical';\n        /**\n         * Not applicable for canvas\n         * to avoid the child size updation with respect to parent ser true\n         * @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the panel needs\n     * @param {Size} availableSize\n     */\n    StackPanel.prototype.measure = function (availableSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.updateHorizontalStack : this.updateVerticalStack;\n        this.desiredSize = this.measureStackPanel(availableSize, updateSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the child elements of the stack panel\n     * @param {Size} desiredSize\n     */\n    StackPanel.prototype.arrange = function (desiredSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.arrangeHorizontalStack : this.arrangeVerticalStack;\n        this.actualSize = this.arrangeStackPanel(desiredSize, updateSize);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Measures the minimum space that the panel needs\n     * @param {Size} availableSize\n     */\n    StackPanel.prototype.measureStackPanel = function (availableSize, updateSize) {\n        var desired = undefined;\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.parentTransform = this.rotateAngle + this.parentTransform;\n                //Measure children\n                if (this.measureChildren) {\n                    child.measure(child.desiredSize);\n                }\n                else {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                //Consider Child's margin\n                this.applyChildMargin(child, childSize);\n                //Consider children's rotation\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                //Measure stack panel\n                if (desired === undefined) {\n                    desired = childSize;\n                }\n                else {\n                    if (!child.preventContainer) {\n                        updateSize(childSize, desired);\n                    }\n                }\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        this.stretchChildren(desired);\n        //Considering padding values\n        this.applyPadding(desired);\n        return desired;\n    };\n    StackPanel.prototype.arrangeStackPanel = function (desiredSize, updatePosition) {\n        if (this.children !== undefined && this.children.length > 0) {\n            var x = void 0;\n            var y = void 0;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                var childSize = child.desiredSize.clone();\n                var rotatedSize = childSize;\n                if (this.orientation === 'Vertical') {\n                    y += child.margin.top;\n                }\n                else {\n                    x += child.margin.left;\n                }\n                if (child.rotateAngle !== 0) {\n                    rotatedSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var center = updatePosition(x, y, child, this, desiredSize, rotatedSize);\n                _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                child.arrange(childSize, true);\n                if (this.orientation === 'Vertical') {\n                    y += rotatedSize.height + child.margin.bottom;\n                }\n                else {\n                    x += rotatedSize.width + child.margin.right;\n                }\n            }\n        }\n        return desiredSize;\n    };\n    StackPanel.prototype.updateHorizontalStack = function (child, parent) {\n        parent.height = Math.max(child.height, parent.height);\n        parent.width += child.width;\n    };\n    StackPanel.prototype.updateVerticalStack = function (child, parent) {\n        parent.width = Math.max(child.width, parent.width);\n        parent.height += child.height;\n    };\n    StackPanel.prototype.arrangeHorizontalStack = function (x, y, child, parent, parenBounds, childBounds) {\n        var centerY = 0;\n        if (child.verticalAlignment === 'Top') {\n            centerY = y + child.margin.top + childBounds.height / 2;\n        }\n        else if (child.verticalAlignment === 'Bottom') {\n            var parentBottom = parent.offsetY + parenBounds.height * (1 - parent.pivot.y);\n            centerY = parentBottom - parent.padding.bottom - child.margin.bottom - childBounds.height / 2;\n        }\n        else {\n            centerY = parent.offsetY - parenBounds.height * parent.pivot.y + parenBounds.height / 2;\n            if (child.margin.top) {\n                centerY = y + child.margin.top + childBounds.height / 2;\n            }\n        }\n        return { x: x + childBounds.width / 2, y: centerY };\n    };\n    StackPanel.prototype.arrangeVerticalStack = function (x, y, child, parent, parentSize, childSize) {\n        var centerX = 0;\n        if (child.horizontalAlignment === 'Left') {\n            centerX = x + child.margin.left + childSize.width / 2;\n        }\n        else if (child.horizontalAlignment === 'Right') {\n            var parentRight = parent.offsetX + parentSize.width * (1 - parent.pivot.x);\n            centerX = parentRight - parent.padding.right - child.margin.right - childSize.width / 2;\n        }\n        else {\n            centerX = parent.offsetX - parentSize.width * parent.pivot.x + parentSize.width / 2;\n            if (child.margin.left) {\n                centerX = x + child.margin.left + childSize.width / 2;\n            }\n        }\n        return { x: centerX, y: y + childSize.height / 2 };\n    };\n    StackPanel.prototype.stretchChildren = function (size) {\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (this.orientation === 'Vertical') {\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.desiredSize.width = size.width - (child.margin.left + child.margin.right);\n                    }\n                }\n                else {\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.desiredSize.height = size.height - (child.margin.top + child.margin.bottom);\n                    }\n                }\n            }\n        }\n    };\n    StackPanel.prototype.applyChildMargin = function (child, size) {\n        size.height += child.margin.top + child.margin.bottom;\n        size.width += child.margin.left + child.margin.right;\n    };\n    return StackPanel;\n}(Container));\nexport { StackPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar LayoutInfo = /** @class */ (function (_super) {\n    __extends(LayoutInfo, _super);\n    function LayoutInfo() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Horizontal')\n    ], LayoutInfo.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Center')\n    ], LayoutInfo.prototype, \"type\", void 0);\n    __decorate([\n        Property(undefined)\n    ], LayoutInfo.prototype, \"offset\", void 0);\n    __decorate([\n        Property(false)\n    ], LayoutInfo.prototype, \"enableRouting\", void 0);\n    __decorate([\n        Property([])\n    ], LayoutInfo.prototype, \"children\", void 0);\n    __decorate([\n        Property('')\n    ], LayoutInfo.prototype, \"assistants\", void 0);\n    __decorate([\n        Property('')\n    ], LayoutInfo.prototype, \"level\", void 0);\n    __decorate([\n        Property('')\n    ], LayoutInfo.prototype, \"hasSubTree\", void 0);\n    __decorate([\n        Property('')\n    ], LayoutInfo.prototype, \"rows\", void 0);\n    return LayoutInfo;\n}(ChildProperty));\nexport { LayoutInfo };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory, isBlazor } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin, TextStyle, Shadow } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { ElementAction } from '../enum/enum';\nimport { Container } from '../core/containers/container';\nimport { Canvas } from '../core/containers/canvas';\nimport { getBasicShape } from './dictionary/basic-shapes';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { PointPort } from './port';\nimport { SelectorConstraints } from '../enum/enum';\nimport { Annotation, ShapeAnnotation } from './annotation';\nimport { getPortShape, getIconShape } from './dictionary/common';\nimport { getFlowShape } from './dictionary/flow-shapes';\nimport { NodeConstraints } from '../enum/enum';\nimport { checkPortRestriction, setUMLActivityDefaults, getUMLActivityShapes, updatePortEdges } from './../utility/diagram-util';\nimport { setSwimLaneDefaults } from './../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { NodeBase } from './node-base';\nimport { canShadow } from './../utility/constraints-util';\nimport { PortVisibility } from '../enum/enum';\nimport { IconShape } from './icon';\nimport { measurePath, getContent, getTemplateContent } from './../utility/dom-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { StackPanel } from '../core/containers/stack-panel';\nimport { GridPanel } from '../core/containers/grid';\nimport { getULMClassifierShapes } from '../utility/uml-util';\nimport { initSwimLane } from './../utility/swim-lane-util';\nimport { Connector } from './connector';\nimport { UserHandle } from '../interaction/selector';\nimport { LayoutInfo } from '../diagram/layoutinfo';\nimport { SymbolSize } from './preview';\nvar getShapeType = function (obj) {\n    if (obj) {\n        if (isBlazor()) {\n            return DiagramShape;\n        }\n        else {\n            switch (obj.type) {\n                case 'Basic':\n                    return BasicShape;\n                case 'Flow':\n                    return FlowShape;\n                case 'Path':\n                    return Path;\n                case 'Image':\n                    return Image;\n                case 'Text':\n                    return Text;\n                case 'Bpmn':\n                    return BpmnShape;\n                case 'Native':\n                    return Native;\n                case 'HTML':\n                    return Html;\n                case 'UmlActivity':\n                    return UmlActivityShape;\n                case 'UmlClassifier':\n                    return UmlClassifierShape;\n                case 'SwimLane':\n                    return SwimLane;\n                default:\n                    return BasicShape;\n            }\n        }\n    }\n    return (isBlazor()) ? DiagramShape : BasicShape;\n};\n/**\n * Defines the behavior of default shape\n */\nvar Shape = /** @class */ (function (_super) {\n    __extends(Shape, _super);\n    function Shape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], Shape.prototype, \"type\", void 0);\n    return Shape;\n}(ChildProperty));\nexport { Shape };\n/**\n * Defines the behavior of path shape\n */\nvar Path = /** @class */ (function (_super) {\n    __extends(Path, _super);\n    function Path() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Path\n     */\n    Path.prototype.getClassName = function () {\n        return 'Path';\n    };\n    __decorate([\n        Property('Path')\n    ], Path.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Path.prototype, \"data\", void 0);\n    return Path;\n}(Shape));\nexport { Path };\n/**\n * Defines the behavior of Native shape\n */\nvar Native = /** @class */ (function (_super) {\n    __extends(Native, _super);\n    function Native() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Native\n     */\n    Native.prototype.getClassName = function () {\n        return 'Native';\n    };\n    __decorate([\n        Property('Native')\n    ], Native.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Native.prototype, \"content\", void 0);\n    __decorate([\n        Property('Stretch')\n    ], Native.prototype, \"scale\", void 0);\n    return Native;\n}(Shape));\nexport { Native };\n/**\n * Defines the behavior of html shape\n */\nvar Html = /** @class */ (function (_super) {\n    __extends(Html, _super);\n    function Html() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Html\n     */\n    Html.prototype.getClassName = function () {\n        return 'Html';\n    };\n    __decorate([\n        Property('HTML')\n    ], Html.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Html.prototype, \"content\", void 0);\n    return Html;\n}(Shape));\nexport { Html };\n/**\n * Defines the behavior of image shape\n */\nvar Image = /** @class */ (function (_super) {\n    __extends(Image, _super);\n    function Image() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Image\n     */\n    Image.prototype.getClassName = function () {\n        return 'Image';\n    };\n    __decorate([\n        Property('Image')\n    ], Image.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"source\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"align\", void 0);\n    return Image;\n}(Shape));\nexport { Image };\n/**\n * Defines the behavior of the text shape\n */\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Text\n     */\n    Text.prototype.getClassName = function () {\n        return 'Text';\n    };\n    __decorate([\n        Property('Text')\n    ], Text.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Text.prototype, \"content\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Text.prototype, \"margin\", void 0);\n    return Text;\n}(Shape));\nexport { Text };\n/**\n * Defines the behavior of the basic shape\n */\nvar BasicShape = /** @class */ (function (_super) {\n    __extends(BasicShape, _super);\n    function BasicShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BasicShape\n     */\n    BasicShape.prototype.getClassName = function () {\n        return 'BasicShape';\n    };\n    __decorate([\n        Property('Basic')\n    ], BasicShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], BasicShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property(0)\n    ], BasicShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Collection([], Point)\n    ], BasicShape.prototype, \"points\", void 0);\n    return BasicShape;\n}(Shape));\nexport { BasicShape };\n/**\n * Defines the behavior of the flow shape\n */\nvar FlowShape = /** @class */ (function (_super) {\n    __extends(FlowShape, _super);\n    function FlowShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class FlowShape\n     */\n    FlowShape.prototype.getClassName = function () {\n        return 'FlowShape';\n    };\n    __decorate([\n        Property('Flow')\n    ], FlowShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Terminator')\n    ], FlowShape.prototype, \"shape\", void 0);\n    return FlowShape;\n}(Shape));\nexport { FlowShape };\n/**\n * Defines the behavior of the bpmn gateway shape\n */\nvar BpmnGateway = /** @class */ (function (_super) {\n    __extends(BpmnGateway, _super);\n    function BpmnGateway() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnGateway\n     */\n    BpmnGateway.prototype.getClassName = function () {\n        return 'BpmnGateway';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnGateway.prototype, \"type\", void 0);\n    return BpmnGateway;\n}(ChildProperty));\nexport { BpmnGateway };\n/**\n * Defines the behavior of the bpmn data object\n */\nvar BpmnDataObject = /** @class */ (function (_super) {\n    __extends(BpmnDataObject, _super);\n    function BpmnDataObject() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnDataObject\n     */\n    BpmnDataObject.prototype.getClassName = function () {\n        return 'BpmnDataObject';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnDataObject.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnDataObject.prototype, \"collection\", void 0);\n    return BpmnDataObject;\n}(ChildProperty));\nexport { BpmnDataObject };\n/**\n * Defines the behavior of the bpmn task shape\n */\nvar BpmnTask = /** @class */ (function (_super) {\n    __extends(BpmnTask, _super);\n    function BpmnTask() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"type\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"loop\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"call\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"compensation\", void 0);\n    return BpmnTask;\n}(ChildProperty));\nexport { BpmnTask };\n/**\n * Defines the behavior of the bpmn Event shape\n */\nvar BpmnEvent = /** @class */ (function (_super) {\n    __extends(BpmnEvent, _super);\n    function BpmnEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnEvent\n     */\n    BpmnEvent.prototype.getClassName = function () {\n        return 'BpmnEvent';\n    };\n    __decorate([\n        Property('Start')\n    ], BpmnEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnEvent.prototype, \"trigger\", void 0);\n    return BpmnEvent;\n}(ChildProperty));\nexport { BpmnEvent };\n/**\n * Defines the behavior of the bpmn sub event\n */\nvar BpmnSubEvent = /** @class */ (function (_super) {\n    __extends(BpmnSubEvent, _super);\n    function BpmnSubEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnSubEvent\n     */\n    BpmnSubEvent.prototype.getClassName = function () {\n        return 'BpmnSubEvent';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnSubEvent.prototype, \"trigger\", void 0);\n    __decorate([\n        Property('Start')\n    ], BpmnSubEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnSubEvent.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], BpmnSubEvent.prototype, \"offset\", void 0);\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], BpmnSubEvent.prototype, \"annotations\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], BpmnSubEvent.prototype, \"ports\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], BpmnSubEvent.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubEvent.prototype, \"visible\", void 0);\n    return BpmnSubEvent;\n}(ChildProperty));\nexport { BpmnSubEvent };\n/**\n * Defines the behavior of the BpmnTransactionSubProcess\n */\nvar BpmnTransactionSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnTransactionSubProcess, _super);\n    function BpmnTransactionSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ id: 'success', event: 'End', offset: { x: 1, y: 0.5 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"success\", void 0);\n    __decorate([\n        Complex({ id: 'failure', event: 'Intermediate', trigger: 'Error', offset: { x: 0.25, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"failure\", void 0);\n    __decorate([\n        Complex({ id: 'cancel', event: 'Intermediate', trigger: 'Cancel', offset: { x: 0.75, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"cancel\", void 0);\n    return BpmnTransactionSubProcess;\n}(ChildProperty));\nexport { BpmnTransactionSubProcess };\n/**\n * Defines the behavior of the BPMNSubProcess\n */\nvar BpmnSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnSubProcess, _super);\n    function BpmnSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"adhoc\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnSubProcess.prototype, \"boundary\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"compensation\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"loop\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubProcess.prototype, \"collapsed\", void 0);\n    __decorate([\n        Collection([], BpmnSubEvent)\n    ], BpmnSubProcess.prototype, \"events\", void 0);\n    __decorate([\n        Complex({}, BpmnTransactionSubProcess)\n    ], BpmnSubProcess.prototype, \"transaction\", void 0);\n    __decorate([\n        Property(undefined)\n    ], BpmnSubProcess.prototype, \"processes\", void 0);\n    return BpmnSubProcess;\n}(ChildProperty));\nexport { BpmnSubProcess };\n/**\n * Defines the behavior of the bpmn activity shape\n */\nvar BpmnActivity = /** @class */ (function (_super) {\n    __extends(BpmnActivity, _super);\n    function BpmnActivity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnActivity\n     */\n    BpmnActivity.prototype.getClassName = function () {\n        return 'BpmnActivity';\n    };\n    __decorate([\n        Property('Task')\n    ], BpmnActivity.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnTask)\n    ], BpmnActivity.prototype, \"task\", void 0);\n    __decorate([\n        Complex({}, BpmnSubProcess)\n    ], BpmnActivity.prototype, \"subProcess\", void 0);\n    return BpmnActivity;\n}(ChildProperty));\nexport { BpmnActivity };\n/**\n * Defines the behavior of the bpmn annotation\n */\nvar BpmnAnnotation = /** @class */ (function (_super) {\n    __extends(BpmnAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function BpmnAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnAnnotation\n     */\n    BpmnAnnotation.prototype.getClassName = function () {\n        return 'BpmnAnnotation';\n    };\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"id\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"width\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"length\", void 0);\n    return BpmnAnnotation;\n}(ChildProperty));\nexport { BpmnAnnotation };\n/**\n * Defines the behavior of the bpmn shape\n */\nvar BpmnShape = /** @class */ (function (_super) {\n    __extends(BpmnShape, _super);\n    function BpmnShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnShape\n     */\n    BpmnShape.prototype.getClassName = function () {\n        return 'BpmnShape';\n    };\n    __decorate([\n        Property('Bpmn')\n    ], BpmnShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Event')\n    ], BpmnShape.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({}, BpmnEvent)\n    ], BpmnShape.prototype, \"event\", void 0);\n    __decorate([\n        Complex({}, BpmnGateway)\n    ], BpmnShape.prototype, \"gateway\", void 0);\n    __decorate([\n        Complex({}, BpmnDataObject)\n    ], BpmnShape.prototype, \"dataObject\", void 0);\n    __decorate([\n        Complex({}, BpmnActivity)\n    ], BpmnShape.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotation\", void 0);\n    __decorate([\n        Collection([], BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotations\", void 0);\n    return BpmnShape;\n}(Shape));\nexport { BpmnShape };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlActivityShape = /** @class */ (function (_super) {\n    __extends(UmlActivityShape, _super);\n    function UmlActivityShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlActivityShape\n     */\n    UmlActivityShape.prototype.getClassName = function () {\n        return 'UmlActivityShape';\n    };\n    __decorate([\n        Property('UmlActivity')\n    ], UmlActivityShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Action')\n    ], UmlActivityShape.prototype, \"shape\", void 0);\n    return UmlActivityShape;\n}(Shape));\nexport { UmlActivityShape };\n/**\n * Defines the behavior of the uml class method\n */\nvar MethodArguments = /** @class */ (function (_super) {\n    __extends(MethodArguments, _super);\n    function MethodArguments() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class MethodArguments\n     */\n    MethodArguments.prototype.getClassName = function () {\n        return 'MethodArguments';\n    };\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], MethodArguments.prototype, \"style\", void 0);\n    return MethodArguments;\n}(ChildProperty));\nexport { MethodArguments };\n/**\n * Defines the behavior of the uml class attributes\n */\nvar UmlClassAttribute = /** @class */ (function (_super) {\n    __extends(UmlClassAttribute, _super);\n    function UmlClassAttribute() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassAttribute\n     */\n    UmlClassAttribute.prototype.getClassName = function () {\n        return 'UmlClassAttribute';\n    };\n    __decorate([\n        Property('Public')\n    ], UmlClassAttribute.prototype, \"scope\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlClassAttribute.prototype, \"isSeparator\", void 0);\n    return UmlClassAttribute;\n}(MethodArguments));\nexport { UmlClassAttribute };\n/**\n * Defines the behavior of the uml class method\n */\nvar UmlClassMethod = /** @class */ (function (_super) {\n    __extends(UmlClassMethod, _super);\n    function UmlClassMethod() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassMethod\n     */\n    UmlClassMethod.prototype.getClassName = function () {\n        return 'UmlClassMethod';\n    };\n    __decorate([\n        Collection([], MethodArguments)\n    ], UmlClassMethod.prototype, \"parameters\", void 0);\n    return UmlClassMethod;\n}(UmlClassAttribute));\nexport { UmlClassMethod };\n/**\n * Defines the behavior of the uml class shapes\n */\nvar UmlClass = /** @class */ (function (_super) {\n    __extends(UmlClass, _super);\n    function UmlClass() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClass\n     */\n    UmlClass.prototype.getClassName = function () {\n        return 'UmlClass';\n    };\n    __decorate([\n        Property('')\n    ], UmlClass.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlClassAttribute)\n    ], UmlClass.prototype, \"attributes\", void 0);\n    __decorate([\n        Collection([], UmlClassMethod)\n    ], UmlClass.prototype, \"methods\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlClass.prototype, \"style\", void 0);\n    return UmlClass;\n}(ChildProperty));\nexport { UmlClass };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlInterface = /** @class */ (function (_super) {\n    __extends(UmlInterface, _super);\n    function UmlInterface() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlInterface\n     */\n    UmlInterface.prototype.getClassName = function () {\n        return 'UmlInterface';\n    };\n    __decorate([\n        Property(false)\n    ], UmlInterface.prototype, \"isSeparator\", void 0);\n    return UmlInterface;\n}(UmlClass));\nexport { UmlInterface };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumerationMember = /** @class */ (function (_super) {\n    __extends(UmlEnumerationMember, _super);\n    function UmlEnumerationMember() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlEnumerationMember\n     */\n    UmlEnumerationMember.prototype.getClassName = function () {\n        return 'UmlEnumerationMember';\n    };\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"value\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlEnumerationMember.prototype, \"isSeparator\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumerationMember.prototype, \"style\", void 0);\n    return UmlEnumerationMember;\n}(ChildProperty));\nexport { UmlEnumerationMember };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumeration = /** @class */ (function (_super) {\n    __extends(UmlEnumeration, _super);\n    function UmlEnumeration() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlEnumeration\n     */\n    UmlEnumeration.prototype.getClassName = function () {\n        return 'UmlEnumeration';\n    };\n    __decorate([\n        Property('')\n    ], UmlEnumeration.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlEnumerationMember)\n    ], UmlEnumeration.prototype, \"members\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumeration.prototype, \"style\", void 0);\n    return UmlEnumeration;\n}(ChildProperty));\nexport { UmlEnumeration };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlClassifierShape = /** @class */ (function (_super) {\n    __extends(UmlClassifierShape, _super);\n    function UmlClassifierShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassifierShape\n     */\n    UmlClassifierShape.prototype.getClassName = function () {\n        return 'UmlClassifierShape';\n    };\n    __decorate([\n        Property('UmlClassifier')\n    ], UmlClassifierShape.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, UmlClass)\n    ], UmlClassifierShape.prototype, \"classShape\", void 0);\n    __decorate([\n        Complex({}, UmlInterface)\n    ], UmlClassifierShape.prototype, \"interfaceShape\", void 0);\n    __decorate([\n        Complex({}, UmlEnumeration)\n    ], UmlClassifierShape.prototype, \"enumerationShape\", void 0);\n    __decorate([\n        Property('Class')\n    ], UmlClassifierShape.prototype, \"classifier\", void 0);\n    return UmlClassifierShape;\n}(Shape));\nexport { UmlClassifierShape };\n/* tslint:disable */\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar DiagramShape = /** @class */ (function (_super) {\n    __extends(DiagramShape, _super);\n    function DiagramShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassifierShape\n     */\n    DiagramShape.prototype.getClassName = function () {\n        return 'DiagramShape';\n    };\n    __decorate([\n        Property('Basic')\n    ], DiagramShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], DiagramShape.prototype, \"basicShape\", void 0);\n    __decorate([\n        Property('Terminator')\n    ], DiagramShape.prototype, \"flowShape\", void 0);\n    __decorate([\n        Property('Event')\n    ], DiagramShape.prototype, \"bpmnShape\", void 0);\n    __decorate([\n        Property('Action')\n    ], DiagramShape.prototype, \"umlActivityShape\", void 0);\n    __decorate([\n        Property('')\n    ], DiagramShape.prototype, \"data\", void 0);\n    __decorate([\n        Property('')\n    ], DiagramShape.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], DiagramShape.prototype, \"textContent\", void 0);\n    __decorate([\n        Property('Stretch')\n    ], DiagramShape.prototype, \"scale\", void 0);\n    __decorate([\n        Property('')\n    ], DiagramShape.prototype, \"source\", void 0);\n    __decorate([\n        Property('None')\n    ], DiagramShape.prototype, \"align\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], DiagramShape.prototype, \"margin\", void 0);\n    __decorate([\n        Property(0)\n    ], DiagramShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Collection([], Point)\n    ], DiagramShape.prototype, \"points\", void 0);\n    __decorate([\n        Complex({}, BpmnDataObject)\n    ], DiagramShape.prototype, \"dataObject\", void 0);\n    __decorate([\n        Complex({}, BpmnEvent)\n    ], DiagramShape.prototype, \"event\", void 0);\n    __decorate([\n        Complex({}, BpmnGateway)\n    ], DiagramShape.prototype, \"gateway\", void 0);\n    __decorate([\n        Collection([], BpmnAnnotation)\n    ], DiagramShape.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({}, BpmnActivity)\n    ], DiagramShape.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnAnnotation)\n    ], DiagramShape.prototype, \"annotation\", void 0);\n    __decorate([\n        Complex({}, UmlEnumeration)\n    ], DiagramShape.prototype, \"enumerationShape\", void 0);\n    __decorate([\n        Property('Class')\n    ], DiagramShape.prototype, \"classifier\", void 0);\n    __decorate([\n        Complex({}, UmlClass)\n    ], DiagramShape.prototype, \"classShape\", void 0);\n    __decorate([\n        Complex({}, UmlInterface)\n    ], DiagramShape.prototype, \"interfaceShape\", void 0);\n    return DiagramShape;\n}(ChildProperty));\nexport { DiagramShape };\n/* tslint:enable */\n/**\n * Defines the behavior of nodes\n */\nvar Node = /** @class */ (function (_super) {\n    __extends(Node, _super);\n    // tslint:disable-next-line:no-any\n    function Node(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.isCanvasUpdate = false;\n        /** @private */\n        _this.status = 'None';\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.processId = '';\n        /** @private */\n        _this.umlIndex = -1;\n        /** @private */\n        _this.outEdges = [];\n        /** @private */\n        _this.inEdges = [];\n        /** @private */\n        _this.isHeader = false;\n        /** @private */\n        _this.isLane = false;\n        /** @private */\n        _this.isPhase = false;\n        var nodeDefault;\n        if (_this.children && _this.children.length > 0) {\n            nodeDefault = defaultValue;\n            if (!nodeDefault.style || !nodeDefault.style.fill) {\n                _this.style.fill = 'transparent';\n            }\n            if (!nodeDefault.style || !nodeDefault.style.strokeColor) {\n                _this.style.strokeColor = 'transparent';\n            }\n        }\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        if (_this.shape && _this.shape.type === 'SwimLane') {\n            setSwimLaneDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    Object.defineProperty(Node.prototype, \"actualSize\", {\n        /** @private */\n        get: function () {\n            if (this.wrapper !== null) {\n                return this.wrapper.actualSize;\n            }\n            else {\n                return new Size(this.width || 0, this.height || 0);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Allows to initialize the UI of a node\n     */\n    /** @private */\n    /* tslint:disable */\n    Node.prototype.init = function (diagram) {\n        var content;\n        if (this.shape.type != 'SwimLane') {\n            content = new DiagramElement();\n        }\n        else {\n            content = new GridPanel();\n        }\n        var textStyle;\n        var changedProperties = 'changedProperties';\n        var oldProperties = 'oldProperties';\n        this.shape[changedProperties] = {};\n        this.shape[oldProperties] = {};\n        switch (this.shape.type) {\n            case 'Path':\n                var pathContent = new PathElement();\n                pathContent.data = this.shape.data;\n                content = pathContent;\n                break;\n            case 'Image':\n                var imageContent = new ImageElement();\n                imageContent.source = this.shape.source;\n                imageContent.imageAlign = this.shape.align;\n                imageContent.imageScale = this.shape.scale;\n                content = imageContent;\n                break;\n            case 'Text':\n                var textContent = new TextElement();\n                textContent.content = (isBlazor() ? this.shape.textContent : this.shape.content);\n                content = textContent;\n                textStyle = this.style;\n                content.style = textStyle;\n                break;\n            case 'Basic':\n                if ((!isBlazor() && this.shape.shape === 'Rectangle') || (isBlazor() && this.shape.basicShape === 'Rectangle')) {\n                    var basicshape = new DiagramElement();\n                    content = basicshape;\n                    content.cornerRadius = this.shape.cornerRadius;\n                }\n                else if ((!isBlazor() && this.shape.shape === 'Polygon') || (isBlazor() && this.shape.basicShape === 'Polygon')) {\n                    var path = new PathElement();\n                    path.data = getPolygonPath(this.shape.points);\n                    content = path;\n                }\n                else {\n                    var basicshape = new PathElement();\n                    var basicshapedata = getBasicShape((isBlazor()) ? this.shape.basicShape : this.shape.shape);\n                    basicshape.data = basicshapedata;\n                    content = basicshape;\n                }\n                break;\n            case 'Flow':\n                var flowshape = new PathElement();\n                var flowshapedata = getFlowShape((isBlazor() ? this.shape.flowShape : this.shape.shape));\n                flowshape.data = flowshapedata;\n                content = flowshape;\n                break;\n            case 'UmlActivity':\n                var umlactivityshape = new PathElement();\n                content = getUMLActivityShapes(umlactivityshape, content, this);\n                break;\n            case 'Bpmn':\n                if (diagram.bpmnModule) {\n                    content = diagram.bpmnModule.initBPMNContent(content, this, diagram);\n                    this.wrapper.elementActions = this.wrapper.elementActions | ElementAction.ElementIsGroup;\n                    var subProcess = this.shape.activity.subProcess;\n                    if (subProcess.processes && subProcess.processes.length) {\n                        var children = this.shape.activity.subProcess.processes;\n                        for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                            var i = children_1[_i];\n                            if (diagram.nameTable[i] && (!diagram.nameTable[i].processId || diagram.nameTable[i].processId === this.id)) {\n                                diagram.nameTable[i].processId = this.id;\n                                if (subProcess.collapsed) {\n                                    diagram.updateElementVisibility(diagram.nameTable[i].wrapper, diagram.nameTable[i], !subProcess.collapsed);\n                                }\n                                content.children.push(diagram.nameTable[i].wrapper);\n                            }\n                        }\n                    }\n                }\n                break;\n            case 'Native':\n                var nativeContent = new DiagramNativeElement(this.id, diagram.element.id);\n                nativeContent.content = this.shape.content;\n                nativeContent.scale = this.shape.scale;\n                content = nativeContent;\n                break;\n            case 'HTML':\n                var htmlContent = new DiagramHtmlElement(this.id, diagram.element.id, undefined, diagram.nodeTemplate);\n                if (this.shape.content) {\n                    htmlContent.content = this.shape.content;\n                }\n                else if (diagram.nodeTemplate) {\n                    htmlContent.isTemplate = true;\n                    htmlContent.template = htmlContent.content = getContent(htmlContent, true, this);\n                }\n                content = htmlContent;\n                break;\n            case 'UmlClassifier':\n                //   let umlClassifierShape: StackPanel = new StackPanel();\n                content = getULMClassifierShapes(content, this, diagram);\n                break;\n            case 'SwimLane':\n                this.annotations = [];\n                this.ports = [];\n                content.cellStyle.fill = \"none\";\n                content.cellStyle.strokeColor = \"none\";\n                this.container = { type: 'Grid', orientation: this.shape.orientation };\n                content.id = this.id;\n                this.container.orientation = this.shape.orientation;\n                this.constraints |= NodeConstraints.HideThumbs;\n                initSwimLane(content, diagram, this);\n                break;\n        }\n        content.id = this.id + '_content';\n        content.relativeMode = 'Object';\n        if (this.width !== undefined) {\n            content.width = this.width;\n        }\n        content.horizontalAlignment = 'Stretch';\n        if (this.height !== undefined) {\n            content.height = this.height;\n        }\n        if (this.minHeight !== undefined) {\n            content.minHeight = this.minHeight;\n        }\n        if (this.maxHeight !== undefined) {\n            content.maxHeight = this.maxHeight;\n        }\n        if (this.minWidth !== undefined) {\n            content.minWidth = this.minWidth;\n        }\n        if (this.maxWidth !== undefined) {\n            content.maxWidth = this.maxWidth;\n        }\n        if ((!isBlazor() && this.shape.shape === 'Rectangle' && !this.shape.cornerRadius) ||\n            ((isBlazor()) && (this.shape.basicShape === 'Rectangle'\n                && this.shape.type === \"Basic\" && !this.shape.cornerRadius))) {\n            content.isRectElement = true;\n        }\n        content.verticalAlignment = 'Stretch';\n        if ((this.shape instanceof Text) || (isBlazor() && this.shape.type === \"Text\")) {\n            content.margin = this.shape.margin;\n        }\n        if (canShadow(this)) {\n            if ((this.constraints & NodeConstraints.Shadow) !== 0) {\n                content.shadow = this.shadow;\n            }\n        }\n        if ((this.shape.type !== 'Bpmn' || ((!isBlazor() && this.shape.shape === 'Message') || (isBlazor() && this.shape.bpmnShape === 'Message')) ||\n            ((!isBlazor() && this.shape.shape === 'DataSource') || (isBlazor() && this.shape.bpmnShape === 'DataSource'))) && ((this.shape.type !== 'UmlActivity' || ((!isBlazor() && this.shape.shape !== 'FinalNode') ||\n            (isBlazor() && this.shape.umlActivityShape !== 'FinalNode'))))) {\n            if (this.shape.type !== 'Text') {\n                content.style = this.style;\n            }\n        }\n        if (!(this.wrapper.elementActions & ElementAction.ElementIsGroup) && this.flip === 'Horizontal' || this.flip === 'Vertical') {\n            content.flip = this.flip;\n        }\n        return content;\n    };\n    /* tslint:enable */\n    /** @private */\n    Node.prototype.initContainer = function () {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        // Creates canvas element\n        var canvas;\n        if (!this.container || this.shape instanceof SwimLane) {\n            canvas = this.children ? new Container() : new Canvas();\n        }\n        else {\n            switch (this.container.type) {\n                case 'Canvas':\n                    canvas = new Canvas();\n                    break;\n                case 'Stack':\n                    canvas = new StackPanel();\n                    break;\n                case 'Grid':\n                    canvas = new GridPanel();\n                    canvas.setDefinitions(this.rows, this.columns);\n                    break;\n            }\n        }\n        canvas.id = this.id;\n        canvas.offsetX = this.offsetX;\n        canvas.offsetY = this.offsetY;\n        canvas.visible = this.visible;\n        canvas.horizontalAlignment = this.horizontalAlignment;\n        canvas.verticalAlignment = this.verticalAlignment;\n        if (this.container) {\n            canvas.width = this.width;\n            canvas.height = this.height;\n            if (this.container.type === 'Stack') {\n                canvas.orientation = this.container.orientation;\n            }\n        }\n        canvas.style.fill = this.backgroundColor;\n        canvas.style.strokeColor = this.borderColor;\n        canvas.style.strokeWidth = this.borderWidth;\n        canvas.rotateAngle = this.rotateAngle;\n        canvas.minHeight = this.minHeight;\n        canvas.minWidth = this.minWidth;\n        canvas.maxHeight = this.maxHeight;\n        canvas.maxWidth = this.maxWidth;\n        canvas.pivot = this.pivot;\n        canvas.margin = this.margin;\n        canvas.flip = this.flip;\n        this.wrapper = canvas;\n        return canvas;\n    };\n    /** @private */\n    Node.prototype.initPorts = function (accessibilityContent, container) {\n        var canvas = this.wrapper;\n        var port;\n        for (var i = 0; this.ports !== undefined, i < this.ports.length; i++) {\n            port = this.initPortWrapper(this.ports[i]);\n            port.elementActions = port.elementActions | ElementAction.ElementIsPort;\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(port, this);\n            }\n            port.description = wrapperContent ? wrapperContent : port.id;\n            container.children.push(port);\n        }\n    };\n    Node.prototype.getIconOffet = function (layout, icon) {\n        var x;\n        var y;\n        if (layout.orientation === 'BottomToTop') {\n            x = icon.offset.x;\n            y = 1 - icon.offset.y;\n        }\n        else if (layout.orientation === 'LeftToRight') {\n            x = icon.offset.y;\n            y = icon.offset.x;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            x = 1 - icon.offset.y;\n            y = icon.offset.x;\n        }\n        else {\n            x = icon.offset.x;\n            y = icon.offset.y;\n        }\n        return { x: x, y: y };\n    };\n    /** @private */\n    Node.prototype.initIcons = function (accessibilityContent, layout, container, diagramId) {\n        var canvas = this.wrapper;\n        var offset;\n        var icon = this.isExpanded ? this.expandIcon : this.collapseIcon;\n        if (icon.shape !== 'None') {\n            var iconContainer = new Canvas();\n            iconContainer.float = true;\n            var children = [];\n            iconContainer.id = this.id + '_icon_content';\n            iconContainer.children = children;\n            iconContainer.height = icon.height;\n            iconContainer.width = icon.width;\n            iconContainer.style.strokeColor = 'transparent';\n            iconContainer.margin = icon.margin;\n            iconContainer.horizontalAlignment = 'Center';\n            iconContainer.verticalAlignment = 'Center';\n            iconContainer.visible = this.visible;\n            offset = this.getIconOffet(layout, icon);\n            iconContainer.setOffsetWithRespectToBounds(offset.x, offset.y, 'Fraction');\n            iconContainer.relativeMode = 'Point';\n            this.initIconSymbol(icon, iconContainer, accessibilityContent, diagramId);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(icon, this);\n            }\n            iconContainer.description = wrapperContent ? wrapperContent : iconContainer.id;\n            container.children.push(iconContainer);\n        }\n    };\n    /** @private */\n    Node.prototype.initAnnotations = function (accessibilityContent, container, diagramId, virtualize, annotationTemplate) {\n        var annotation;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            annotation = this.initAnnotationWrapper(this.annotations[i], diagramId, virtualize, i, annotationTemplate);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(annotation, this);\n            }\n            annotation.description = wrapperContent ? wrapperContent : annotation.id;\n            container.children.push(annotation);\n        }\n    };\n    /** @private */\n    Node.prototype.initPortWrapper = function (ports) {\n        ports.id = ports.id || randomId();\n        // Creates port element\n        var portContent = new PathElement();\n        portContent.height = ports.height;\n        portContent.width = ports.width;\n        var pathdata = (ports.shape === 'Custom') ? ports.pathData : getPortShape(ports.shape);\n        portContent.id = this.id + '_' + (ports.id);\n        portContent.margin = ports.margin;\n        portContent.data = pathdata;\n        var style = ports.style;\n        portContent.style = {\n            fill: style.fill, strokeColor: style.strokeColor, gradient: null,\n            opacity: style.opacity, strokeDashArray: style.strokeDashArray, strokeWidth: style.strokeWidth\n        };\n        portContent.horizontalAlignment = ports.horizontalAlignment;\n        portContent.verticalAlignment = ports.verticalAlignment;\n        portContent = updatePortEdges(portContent, this.flip, ports);\n        if (this.width !== undefined || this.height !== undefined) {\n            portContent.float = true;\n        }\n        portContent.relativeMode = 'Point';\n        portContent.visible = checkPortRestriction(ports, PortVisibility.Visible) &&\n            !checkPortRestriction(ports, PortVisibility.Hover) && !checkPortRestriction(ports, PortVisibility.Connect) ? true : false;\n        return portContent;\n    };\n    /** @private */\n    Node.prototype.initAnnotationWrapper = function (annotation, diagramId, virtualize, value, annotationTemplate) {\n        annotation.id = annotation.id || value + 'annotation' || randomId();\n        var label = annotation;\n        var annotationcontent;\n        if (isBlazor() && annotation.annotationType === 'Template') {\n            annotation.template = annotation.template ? annotation.template : '';\n        }\n        if (diagramId && (annotation.template || annotation.annotationType === 'Template'\n            || (annotationTemplate && annotation.content === ''))) {\n            annotationcontent = new DiagramHtmlElement(this.id, diagramId, annotation.id, annotationTemplate);\n            annotationcontent = getTemplateContent(annotationcontent, annotation, annotationTemplate);\n        }\n        else {\n            annotationcontent = new TextElement();\n            annotationcontent.canMeasure = !virtualize;\n            var style = annotation.style;\n            var link = annotation.hyperlink.link ? annotation.hyperlink : undefined;\n            annotationcontent.style = {\n                fill: style.fill, strokeColor: style.strokeColor, strokeWidth: style.strokeWidth,\n                bold: style.bold, textWrapping: style.textWrapping,\n                color: link ? link.color || annotationcontent.hyperlink.color : style.color, whiteSpace: style.whiteSpace,\n                fontFamily: style.fontFamily, fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n                strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textOverflow: annotation.style.textOverflow,\n                textDecoration: link ? link.textDecoration ||\n                    annotationcontent.hyperlink.textDecoration : style.textDecoration,\n            };\n            annotationcontent.hyperlink.link = annotation.hyperlink.link || undefined;\n            annotationcontent.hyperlink.content = annotation.hyperlink.content || undefined;\n            annotationcontent.hyperlink.textDecoration = annotation.hyperlink.textDecoration || undefined;\n            annotationcontent.content = link ? link.content ||\n                annotationcontent.hyperlink.link : annotation.content;\n        }\n        annotationcontent.constraints = annotation.constraints;\n        annotationcontent.height = annotation.height;\n        annotationcontent.width = annotation.width;\n        annotationcontent.visible = annotation.visibility;\n        annotationcontent.rotateAngle = annotation.rotateAngle;\n        annotationcontent.id = this.id + '_' + annotation.id;\n        if (this.width !== undefined && !annotation.template) {\n            if (annotation.width === undefined || (annotation.width > this.width &&\n                (annotation.style.textWrapping === 'Wrap' || annotation.style.textWrapping === 'WrapWithOverflow'))) {\n                annotationcontent.width = this.width;\n            }\n        }\n        annotationcontent.margin = annotation.margin;\n        annotationcontent.horizontalAlignment = annotation.horizontalAlignment;\n        annotationcontent.verticalAlignment = annotation.verticalAlignment;\n        annotationcontent.setOffsetWithRespectToBounds(label.offset.x, label.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            annotationcontent.float = true;\n        }\n        annotationcontent.relativeMode = 'Point';\n        return annotationcontent;\n    };\n    Node.prototype.initIconContainer = function (options, iconContainer) {\n        var rect = new DiagramElement();\n        rect.id = iconContainer.id + '_rect';\n        rect.height = options.height;\n        rect.width = options.width;\n        rect.visible = iconContainer.visible;\n        rect.margin = options.margin;\n        rect.cornerRadius = options.cornerRadius;\n        rect.style = {\n            fill: options.fill, strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        rect.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        rect.horizontalAlignment = 'Center';\n        rect.verticalAlignment = 'Center';\n        rect.relativeMode = 'Object';\n        rect.description = rect.description || 'Click here to expand or collapse';\n        return rect;\n    };\n    Node.prototype.initIconSymbol = function (options, iconContainer, accessibilityContent, diagramId) {\n        var iconContent;\n        iconContainer.children.push(this.initIconContainer(options, iconContainer));\n        if (options.shape === 'Template') {\n            iconContent = new DiagramNativeElement(this.id, diagramId);\n            iconContent.content = options.content;\n            iconContent.height = 10;\n            iconContent.width = 10;\n        }\n        else {\n            iconContent = new PathElement();\n            iconContent.data = getIconShape(options);\n            var iconContentBounds = measurePath(iconContent.data);\n            iconContent.height =\n                iconContentBounds.height < 10 ? iconContentBounds.height : 10 - (options.padding.bottom + options.padding.top);\n            iconContent.width =\n                iconContentBounds.width < 10 ? iconContentBounds.width : 10 - (options.padding.left + options.padding.right);\n        }\n        iconContent.id = iconContainer.id + '_shape';\n        iconContent.horizontalAlignment = 'Center';\n        iconContent.verticalAlignment = 'Center';\n        iconContent.visible = iconContainer.visible;\n        iconContent.visible = iconContainer.visible;\n        iconContent.style = {\n            fill: 'black', strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        iconContent.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        iconContent.relativeMode = 'Object';\n        iconContent.description = iconContainer.description || 'Click here to expand or collapse';\n        iconContainer.children.push(iconContent);\n    };\n    /**\n     * @private\n     * Returns the name of class Node\n     */\n    Node.prototype.getClassName = function () {\n        return 'Node';\n    };\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], Node.prototype, \"annotations\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetX\", void 0);\n    __decorate([\n        Complex({}, LayoutInfo)\n    ], Node.prototype, \"layoutInfo\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetY\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], Node.prototype, \"ports\", void 0);\n    __decorate([\n        Property(true)\n    ], Node.prototype, \"isExpanded\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], Node.prototype, \"expandIcon\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], Node.prototype, \"collapseIcon\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Node.prototype, \"pivot\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minHeight\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxHeight\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ fill: 'white' }, TextStyle)\n    ], Node.prototype, \"style\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Node.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('none')\n    ], Node.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"data\", void 0);\n    __decorate([\n        ComplexFactory(getShapeType)\n    ], Node.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({}, SymbolSize)\n    ], Node.prototype, \"previewSize\", void 0);\n    __decorate([\n        Complex({}, SymbolSize)\n    ], Node.prototype, \"dragSize\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"wrapper\", void 0);\n    __decorate([\n        Property(NodeConstraints.Default)\n    ], Node.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex({}, Shadow)\n    ], Node.prototype, \"shadow\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"children\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"container\", void 0);\n    __decorate([\n        Property('Left')\n    ], Node.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Top')\n    ], Node.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rows\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columns\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowSpan\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnSpan\", void 0);\n    __decorate([\n        Property('')\n    ], Node.prototype, \"branch\", void 0);\n    return Node;\n}(NodeBase));\nexport { Node };\n/**\n * Defines the behavior of header in swimLane\n */\nvar Header = /** @class */ (function (_super) {\n    __extends(Header, _super);\n    function Header() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Header.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Annotation)\n    ], Header.prototype, \"annotation\", void 0);\n    __decorate([\n        Complex({ fill: '#E7F4FF', strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Header.prototype, \"style\", void 0);\n    __decorate([\n        Property(50)\n    ], Header.prototype, \"height\", void 0);\n    __decorate([\n        Property(50)\n    ], Header.prototype, \"width\", void 0);\n    return Header;\n}(ChildProperty));\nexport { Header };\n/**\n * Defines the behavior of lane in swimLane\n */\nvar Lane = /** @class */ (function (_super) {\n    __extends(Lane, _super);\n    function Lane() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Lane\n     */\n    Lane.prototype.getClassName = function () {\n        return 'Lane';\n    };\n    __decorate([\n        Property('')\n    ], Lane.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ fill: '#F9F9F9', strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Lane.prototype, \"style\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Lane.prototype, \"children\", void 0);\n    __decorate([\n        Property(100)\n    ], Lane.prototype, \"height\", void 0);\n    __decorate([\n        Property(100)\n    ], Lane.prototype, \"width\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#E7F4FF', strokeColor: '#CCCCCC' }, annotation: { content: 'Function' } }, Header)\n    ], Lane.prototype, \"header\", void 0);\n    __decorate([\n        Property(true)\n    ], Lane.prototype, \"canMove\", void 0);\n    return Lane;\n}(ChildProperty));\nexport { Lane };\n/**\n * Defines the behavior of phase in swimLane\n */\nvar Phase = /** @class */ (function (_super) {\n    __extends(Phase, _super);\n    function Phase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Phase\n     */\n    Phase.prototype.getClassName = function () {\n        return 'Phase';\n    };\n    __decorate([\n        Property('')\n    ], Phase.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Phase.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ annotation: { content: 'Phase' } }, Header)\n    ], Phase.prototype, \"header\", void 0);\n    __decorate([\n        Property(100)\n    ], Phase.prototype, \"offset\", void 0);\n    return Phase;\n}(ChildProperty));\nexport { Phase };\n/**\n * Defines the behavior of swimLane shape\n */\nvar SwimLane = /** @class */ (function (_super) {\n    __extends(SwimLane, _super);\n    function SwimLane() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * @private\n         * Defines space between children and lane\n         */\n        _this.padding = 20;\n        /**\n         * @private\n         * Defines header by user or not\n         */\n        _this.hasHeader = true;\n        return _this;\n    }\n    /**\n     * @private\n     * Returns the name of class Phase\n     */\n    SwimLane.prototype.getClassName = function () {\n        return 'SwimLane';\n    };\n    __decorate([\n        Property('SwimLane')\n    ], SwimLane.prototype, \"type\", void 0);\n    __decorate([\n        Property(20)\n    ], SwimLane.prototype, \"phaseSize\", void 0);\n    __decorate([\n        Collection([], Phase)\n    ], SwimLane.prototype, \"phases\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], SwimLane.prototype, \"orientation\", void 0);\n    __decorate([\n        Collection([], Lane)\n    ], SwimLane.prototype, \"lanes\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#E7F4FF', strokeColor: '#CCCCCC' }, annotation: { content: 'Function' } }, Header)\n    ], SwimLane.prototype, \"header\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isLane\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isPhase\", void 0);\n    return SwimLane;\n}(Shape));\nexport { SwimLane };\n/**\n * Defines the behavior of container\n */\nvar ChildContainer = /** @class */ (function () {\n    function ChildContainer() {\n    }\n    /**\n     * @private\n     * Returns the name of class ChildContainer\n     */\n    ChildContainer.prototype.getClassName = function () {\n        return 'ChildContainer';\n    };\n    __decorate([\n        Property('Canvas')\n    ], ChildContainer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Vertical')\n    ], ChildContainer.prototype, \"orientation\", void 0);\n    return ChildContainer;\n}());\nexport { ChildContainer };\n/**\n * Defines the size and position of selected items and defines the appearance of selector\n */\nvar Selector = /** @class */ (function (_super) {\n    __extends(Selector, _super);\n    function Selector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Initializes the UI of the container\n     */\n    Selector.prototype.init = function (diagram) {\n        var container = new Container();\n        container.measureChildren = false;\n        var consize = new Size();\n        container.children = [];\n        if (this.annotation) {\n            var object = (this.nodes.length > 0) ? diagram.nameTable[this.nodes[0].id].wrapper :\n                diagram.nameTable[this.connectors[0].id].wrapper;\n            var wrapper = diagram.getWrapper(object, this.annotation.id);\n            container.children.push(wrapper);\n        }\n        else {\n            if (this.nodes || this.connectors) {\n                for (var i = 0; i < this.nodes.length; i++) {\n                    var node = diagram.nameTable[this.nodes[i].id];\n                    var wrapper = node.wrapper;\n                    // this.width = wrapper.actualSize.width; \n                    // this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle;\n                    // this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n                for (var j = 0; j < this.connectors.length; j++) {\n                    var connector = diagram.nameTable[this.connectors[j].id];\n                    var wrapper = connector.wrapper;\n                    // this.width = wrapper.actualSize.width; this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle; this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n            }\n        }\n        this.wrapper = container;\n        return container;\n    };\n    __decorate([\n        Property(null)\n    ], Selector.prototype, \"wrapper\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Selector.prototype, \"nodes\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Selector.prototype, \"connectors\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Selector.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('CompleteIntersect')\n    ], Selector.prototype, \"rubberBandSelectionMode\", void 0);\n    __decorate([\n        Collection([], UserHandle)\n    ], Selector.prototype, \"userHandles\", void 0);\n    __decorate([\n        Property(SelectorConstraints.All)\n    ], Selector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"setTooltipTemplate\", void 0);\n    return Selector;\n}(ChildProperty));\nexport { Selector };\n","import { Size } from './../primitives/size';\nimport { Point } from './../primitives/point';\nimport { processPathData, pathSegmentCollection, getRectanglePath } from './../utility/path-util';\nimport { overFlow } from './../utility/base-util';\nimport { createHtmlElement, setChildPosition } from './../utility/dom-util';\n/**\n * Canvas Renderer\n */\n/** @private */\nvar CanvasRenderer = /** @class */ (function () {\n    function CanvasRenderer() {\n    }\n    /**   @private  */\n    CanvasRenderer.getContext = function (canvas) {\n        return canvas.getContext('2d');\n    };\n    CanvasRenderer.setCanvasSize = function (canvas, width, height) {\n        if (canvas) {\n            canvas.setAttribute('width', width.toString());\n            canvas.setAttribute('height', height.toString());\n        }\n    };\n    ;\n    /**   @private  */\n    CanvasRenderer.prototype.renderGradient = function (options, ctx, x, y) {\n        var max;\n        var min;\n        var grd;\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = max !== undefined ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = min !== undefined ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                var linear = options.gradient;\n                grd = ctx.createLinearGradient(x + linear.x1, y + linear.y1, x + linear.x2, y + linear.y2);\n            }\n            else {\n                var radial = options.gradient;\n                grd = ctx.createRadialGradient(x + radial.fx, y + radial.fy, 0, x + radial.cx, y + radial.cy, radial.r);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                grd.addColorStop(offset, stop_1.color);\n            }\n            ctx.fillStyle = grd;\n        }\n        return ctx;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderShadow = function (options, canvas, collection) {\n        if (collection === void 0) { collection = null; }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = options.shadow.color;\n        ctx.globalAlpha = options.shadow.opacity;\n        var ptModel = { x: 0, y: 0 };\n        var point = Point.transform(ptModel, options.shadow.angle, options.shadow.distance);\n        var transX = options.x + point.x;\n        var transY = options.y + point.y;\n        var pivotX = transX + options.width * options.pivotX;\n        var pivotY = transY + options.height * options.pivotY;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        if (collection) {\n            ctx.translate(transX, transY);\n            this.renderPath(canvas, options, collection);\n            ctx.translate(-transX, -transY);\n        }\n        else {\n            ctx.rect(transX, transY, options.width, options.height);\n            ctx.fillRect(transX, transY, options.width, options.height);\n        }\n        ctx.fill();\n        ctx.stroke();\n        ctx.closePath();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.createCanvas = function (id, width, height) {\n        var canvasObj = createHtmlElement('canvas', { 'id': id });\n        this.setCanvasSize(canvasObj, width, height);\n        return canvasObj;\n    };\n    ;\n    CanvasRenderer.prototype.setStyle = function (canvas, style) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        ctx.strokeStyle = style.stroke;\n        ctx.lineWidth = style.strokeWidth;\n        if (style.strokeWidth === 0) {\n            ctx.strokeStyle = 'transparent';\n        }\n        ctx.globalAlpha = style.opacity;\n        var dashArray = [];\n        if (style.dashArray) {\n            dashArray = this.parseDashArray(style.dashArray);\n        }\n        ctx.setLineDash(dashArray);\n        if (style.gradient && style.gradient.type !== 'None') {\n            this.renderGradient(style, ctx, 0, 0);\n        }\n        else {\n            ctx.fillStyle = style.fill;\n        }\n    };\n    CanvasRenderer.prototype.rotateContext = function (canvas, angle, x, y) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.translate(x, y);\n        ctx.rotate(angle * Math.PI / 180);\n        ctx.translate(-x, -y);\n    };\n    CanvasRenderer.prototype.setFontStyle = function (canvas, text) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        var font = '';\n        if (text.italic) {\n            font += 'italic ';\n        }\n        if (text.bold) {\n            font += 'bold ';\n        }\n        font += (text.fontSize) + 'px ';\n        font += text.fontFamily;\n        ctx.font = font;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        var separator = dashArray.indexOf(' ') !== -1 ? ' ' : ',';\n        var splittedDashes = dashArray.split(separator);\n        for (var _i = 0, splittedDashes_1 = splittedDashes; _i < splittedDashes_1.length; _i++) {\n            var i = splittedDashes_1[_i];\n            dashes.push(Number(i));\n        }\n        return dashes;\n    };\n    //Rendering Part\n    /**   @private  */\n    CanvasRenderer.prototype.drawRectangle = function (canvas, options) {\n        if (options.visible === true) {\n            if (options.cornerRadius) {\n                options.data = getRectanglePath(options.cornerRadius, options.height, options.width);\n                this.drawPath(canvas, options);\n            }\n            else {\n                var ctx = CanvasRenderer.getContext(canvas);\n                if (options.shadow) {\n                    this.renderShadow(options, canvas);\n                }\n                ctx.save();\n                ctx.beginPath();\n                var cornerRadius = options.cornerRadius;\n                var pivotX = options.x + options.width * options.pivotX;\n                var pivotY = options.y + options.height * options.pivotY;\n                this.rotateContext(canvas, options.angle, pivotX, pivotY);\n                this.setStyle(canvas, options);\n                ctx.rect(options.x, options.y, options.width, options.height);\n                ctx.fillRect(options.x, options.y, options.width, options.height);\n                ctx.fill();\n                ctx.stroke();\n                ctx.closePath();\n                ctx.restore();\n            }\n        }\n    };\n    // public updateSelectionRegion(canvas: HTMLCanvasElement, options: RectAttributes): void {\n    //     this.drawRectangle(canvas, options);\n    // }\n    // public drawLine(canvas: HTMLCanvasElement, options: LineAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     ctx.translate(options.x, options.y);\n    //     ctx.moveTo(options.startPoint.x, options.startPoint.y);\n    //     ctx.lineTo(options.endPoint.x, options.endPoint.y);\n    //     ctx.translate(-options.x, -options.y);\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    // public drawCircle(canvas: HTMLCanvasElement, options: CircleAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     ctx.arc(options.centerX, options.centerY, options.radius, 0, 2 * Math.PI);\n    //     ctx.fill();\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    /**   @private  */\n    CanvasRenderer.prototype.drawPath = function (canvas, options) {\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, canvas, collection);\n        }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        var pivotY = options.y + options.height * options.pivotY;\n        var pivotX = options.x + options.width * options.pivotX;\n        if (options.flip === 'Horizontal' || options.flip === 'Vertical') {\n            ctx.translate(options.x + options.width / 2, options.y + options.height / 2);\n            ctx.rotate(-options.angle * Math.PI / 180);\n            ctx.translate(-options.x - options.width / 2, -options.y - options.height / 2);\n        }\n        else {\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        }\n        this.setStyle(canvas, options);\n        ctx.translate(options.x, options.y);\n        if (options.flip === 'Horizontal') {\n            ctx.scale(-1, 1);\n            ctx.translate(options.width * -1, 0);\n        }\n        else if (options.flip === 'Vertical') {\n            ctx.scale(1, -1);\n            ctx.translate(0, options.height * -1);\n        }\n        else if (options.flip === 'Both') {\n            ctx.scale(-1, -1);\n            ctx.translate(options.width * -1, options.height * -1);\n        }\n        this.renderPath(canvas, options, collection);\n        ctx.fill();\n        ctx.translate(-options.x, -options.y);\n        ctx.stroke();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderPath = function (canvas, options, collection) {\n        if (options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            var x0 = void 0;\n            var y0 = void 0;\n            var x1 = void 0;\n            var y1 = void 0;\n            var x2 = void 0;\n            var y2 = void 0;\n            var x = void 0;\n            var y = void 0;\n            var length_1;\n            var i = void 0;\n            var newSeg = void 0;\n            var segs = collection;\n            for (x = 0, y = 0, i = 0, length_1 = segs.length; i < length_1; ++i) {\n                var obj = segs[i];\n                var seg = obj;\n                var char = seg.command;\n                if ('x1' in seg) {\n                    x1 = seg.x1;\n                }\n                if ('x2' in seg) {\n                    x2 = seg.x2;\n                }\n                if ('y1' in seg) {\n                    y1 = seg.y1;\n                }\n                if ('y2' in seg) {\n                    y2 = seg.y2;\n                }\n                if ('x' in seg) {\n                    x = seg.x;\n                }\n                if ('y' in seg) {\n                    y = seg.y;\n                }\n                switch (char) {\n                    case 'M':\n                        ctx.moveTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'L':\n                        ctx.lineTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'C':\n                        ctx.bezierCurveTo(x1, y1, x2, y2, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        seg.x2 = x2;\n                        seg.y2 = y2;\n                        break;\n                    case 'Q':\n                        ctx.quadraticCurveTo(x1, y1, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        break;\n                    case 'A':\n                        var curr = { x: x0, y: y0 };\n                        var rx = seg.r1;\n                        var ry = seg.r2;\n                        var xAxisRotation = seg.angle * (Math.PI / 180.0);\n                        var largeArc = seg.largeArc;\n                        var sweep = seg.sweep;\n                        var cp = { x: x, y: y };\n                        var currp = {\n                            x: Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,\n                            y: -Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\n                        };\n                        var l = Math.pow(currp.x, 2) / Math.pow(rx, 2) + Math.pow(currp.y, 2) / Math.pow(ry, 2);\n                        if (l > 1) {\n                            rx *= Math.sqrt(l);\n                            ry *= Math.sqrt(l);\n                        }\n                        var k = (Math.pow(ry, 2) * Math.pow(currp.x, 2));\n                        var s = (largeArc === sweep ? -1 : 1) * Math.sqrt(((Math.pow(rx, 2) * Math.pow(ry, 2)) - (Math.pow(rx, 2) * Math.pow(currp.y, 2)) - k) /\n                            (Math.pow(rx, 2) * Math.pow(currp.y, 2) + Math.pow(ry, 2) * Math.pow(currp.x, 2)));\n                        if (isNaN(s)) {\n                            s = 0;\n                        }\n                        var cpp = { x: s * rx * currp.y / ry, y: s * -ry * currp.x / rx };\n                        var centp = {\n                            x: (curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\n                            y: (curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\n                        };\n                        var a1 = this.a([1, 0], [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry]);\n                        var u = [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry];\n                        var v = [(-currp.x - cpp.x) / rx, (-currp.y - cpp.y) / ry];\n                        var ad = this.a(u, v);\n                        if (this.r(u, v) <= -1) {\n                            ad = Math.PI;\n                        }\n                        if (this.r(u, v) >= 1) {\n                            ad = 0;\n                        }\n                        var dir = !sweep ? -1.0 : 1.0;\n                        var ah = a1 + dir * (ad / 2.0);\n                        var halfWay = {\n                            x: centp.x + rx * Math.cos(ah),\n                            y: centp.y + ry * Math.sin(ah)\n                        };\n                        seg.centp = centp;\n                        seg.xAxisRotation = xAxisRotation;\n                        seg.rx = rx;\n                        seg.ry = ry;\n                        seg.a1 = a1;\n                        seg.ad = ad;\n                        seg.sweep = sweep;\n                        if (ctx != null) {\n                            var ra = rx > ry ? rx : ry;\n                            var sx = rx > ry ? 1 : rx / ry;\n                            var sy = rx > ry ? ry / rx : 1;\n                            ctx.save();\n                            ctx.translate(centp.x, centp.y);\n                            ctx.rotate(xAxisRotation);\n                            ctx.scale(sx, sy);\n                            ctx.arc(0, 0, ra, a1, a1 + ad, !sweep);\n                            ctx.scale(1 / sx, 1 / sy);\n                            ctx.rotate(-xAxisRotation);\n                            ctx.translate(-centp.x, -centp.y);\n                            ctx.restore();\n                        }\n                        break;\n                    case 'Z':\n                    case 'z':\n                        ctx.closePath();\n                        x = x0;\n                        y = y0;\n                        break;\n                }\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId, scaleValue, parentNode) {\n        if (options.content && options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            ctx.save();\n            this.setStyle(canvas, options);\n            if (scaleValue) {\n                options.fontSize *= scaleValue;\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n            this.setFontStyle(canvas, options);\n            var i = 0;\n            var childNodes = [];\n            childNodes = options.childNodes;\n            var wrapBounds = options.wrapBounds;\n            ctx.fillStyle = options.color;\n            if (wrapBounds) {\n                var position = this.labelAlign(options, wrapBounds, childNodes);\n                for (i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[i];\n                    child.x = setChildPosition(child, childNodes, i, options);\n                    var offsetX = position.x + (scaleValue ? child.x * scaleValue : child.x) - wrapBounds.x;\n                    var offsetY = position.y + (scaleValue ? child.dy * scaleValue : child.dy) * i + ((options.fontSize) * 0.8);\n                    if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap' && options.textWrapping === 'NoWrap') {\n                        child.text = overFlow(child.text, options);\n                    }\n                    if ((options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') && options.textWrapping === 'Wrap') {\n                        if (offsetY < parentNode.actualSize.height + parentNode.bounds.y) {\n                            if (options.textOverflow === 'Ellipsis' && childNodes[i + 1]) {\n                                var temp = childNodes[i + 1];\n                                var y = position.y + temp.dy * (i + 1) + ((options.fontSize) * 0.8);\n                                if (y > parentNode.actualSize.height + parentNode.bounds.y) {\n                                    child.text = child.text.slice(0, child.text.length - 3);\n                                    child.text = child.text.concat('...');\n                                }\n                            }\n                            ctx.fillText(child.text, offsetX, offsetY);\n                        }\n                    }\n                    else {\n                        ctx.fillText(child.text, offsetX, offsetY);\n                    }\n                    if (options.textDecoration === 'Underline'\n                        || options.textDecoration === 'Overline'\n                        || options.textDecoration === 'LineThrough') {\n                        var startPointX = offsetX;\n                        var startPointY = void 0;\n                        var textlength = ctx.measureText(child.text).width;\n                        var endPointX = offsetX + textlength;\n                        var endPointY = void 0;\n                        switch (options.textDecoration) {\n                            case 'Underline':\n                                startPointY = offsetY + 2;\n                                endPointY = offsetY + 2;\n                                break;\n                            case 'Overline':\n                                startPointY = (position.y + child.dy * i);\n                                endPointY = (position.y + child.dy * i);\n                                break;\n                            case 'LineThrough':\n                                startPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                                endPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                        }\n                        ctx.beginPath();\n                        ctx.moveTo(startPointX, startPointY);\n                        ctx.lineTo(endPointX, endPointY);\n                        ctx.strokeStyle = options.color;\n                        ctx.lineWidth = options.fontSize * .08;\n                        ctx.globalAlpha = options.opacity;\n                        ctx.stroke();\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    };\n    CanvasRenderer.prototype.loadImage = function (ctx, obj, canvas, pivotX, pivotY) {\n        this.rotateContext(canvas, obj.angle, pivotX, pivotY);\n        var image = new Image();\n        image.src = obj.source;\n        this.image(ctx, image, obj.x, obj.y, obj.width, obj.height, obj);\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var _this = this;\n        if (obj.visible) {\n            var ctx_1 = CanvasRenderer.getContext(canvas);\n            ctx_1.save();\n            var pivotX_1 = obj.x + obj.width * obj.pivotX;\n            var pivotY_1 = obj.y + obj.height * obj.pivotY;\n            var imageObj = new Image();\n            imageObj.src = obj.source;\n            var id = ctx_1.canvas.id.split('_');\n            var value = id[id.length - 1] === ('diagram' || 'diagramLayer') ? true : false;\n            /**\n             *  Since Clipping portion for node with slice option is not calculated properly\n             * if (obj.sourceX !== undefined && obj.sourceY !== undefined && obj.sourceWidth !== undefined\n             *  && obj.sourceHeight !== undefined) {\n             *  ctx.drawImage(imageObj, obj.sourceX, obj.sourceY, obj.sourceWidth, obj.sourceHeight, obj.x, obj.y, obj.width, obj.height);\n             *  } else {\n             *             ctx.drawImage(imageObj, obj.x, obj.y, obj.width, obj.height);\n             * }\n             */\n            if (!fromPalette) {\n                this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n            }\n            else {\n                imageObj.onload = function () {\n                    _this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n                };\n            }\n            ctx_1.restore();\n        }\n    };\n    CanvasRenderer.prototype.image = function (ctx, image, x, y, width, height, alignOptions) {\n        ctx.beginPath();\n        var srcWidth = image.width;\n        var srcHeight = image.height;\n        var destinationW = width;\n        var destinationH = height;\n        var resultWidth = 0;\n        var resultHeight = 0;\n        if (alignOptions && alignOptions.alignment !== 'None') {\n            var xalign = alignOptions.alignment.toLowerCase().substr(1, 3);\n            var yalign = alignOptions.alignment.toLowerCase().substr(5, 3);\n            if (alignOptions.scale === 'Slice') {\n                var a = function () {\n                    resultWidth = destinationW;\n                    resultHeight = srcHeight * destinationW / srcWidth;\n                };\n                var b = function () {\n                    resultWidth = srcWidth * destinationH / srcHeight;\n                    resultHeight = destinationH;\n                };\n                if (destinationW > destinationH) {\n                    a();\n                    if (destinationH > resultHeight) {\n                        b();\n                    }\n                }\n                else if (destinationW === destinationH) {\n                    if (srcWidth > srcHeight) {\n                        b();\n                    }\n                    else {\n                        a();\n                    }\n                }\n                else {\n                    b();\n                    if (destinationW > resultWidth) {\n                        a();\n                    }\n                }\n                var x1 = this.getSliceOffset(xalign, resultWidth, destinationW, srcWidth);\n                var y1 = this.getSliceOffset(yalign, resultHeight, destinationH, srcHeight);\n                var sWidth = srcWidth - x1;\n                var sHeight = srcHeight - y1;\n                var dWidth = resultWidth - (x1 * (resultWidth / srcWidth));\n                var dHeight = resultHeight - (y1 * (resultHeight / srcHeight));\n                var canvas1 = createHtmlElement('canvas', { 'width': width.toString(), 'height': height.toString() });\n                var ctx1 = canvas1.getContext('2d');\n                ctx1.drawImage(image, x1, y1, sWidth, sHeight, 0, 0, dWidth, dHeight);\n                ctx.drawImage(canvas1, x, y, width, height);\n            }\n            else if (alignOptions.scale === 'Meet') {\n                var srcRatio = (srcHeight / srcWidth);\n                var destRatio = (destinationH / destinationW);\n                resultWidth = destRatio > srcRatio ? destinationW : destinationH / srcRatio;\n                resultHeight = destRatio > srcRatio ? destinationW * srcRatio : destinationH;\n                x += this.getMeetOffset(xalign, resultWidth, destinationW);\n                y += this.getMeetOffset(yalign, resultHeight, destinationH);\n                ctx.drawImage(image, 0, 0, srcWidth, srcHeight, x, y, resultWidth, resultHeight);\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n        else if (alignOptions.flip !== 'None') {\n            var scaleX = 1;\n            var scaleY = 1;\n            if (alignOptions.flip === 'Horizontal' || alignOptions.flip === 'Both') {\n                x = -x;\n                width = -width;\n                scaleX = -1;\n            }\n            if (alignOptions.flip === 'Vertical' || alignOptions.flip === 'Both') {\n                y = -y;\n                height = -height;\n                scaleY = -1;\n            }\n            ctx.scale(scaleX, scaleY);\n            ctx.drawImage(image, x, y, width, height);\n        }\n        else {\n            ctx.drawImage(image, x, y, width, height);\n        }\n        ctx.closePath();\n    };\n    CanvasRenderer.prototype.getSliceOffset = function (arg, res, dest, src) {\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (res - dest) / 2 * src / res;\n            case 'max': return (res - dest) * src / res;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.getMeetOffset = function (arg, res, dest) {\n        var max = Math.max(res, dest);\n        var min = Math.min(res, dest);\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (max - min) / 2;\n            case 'max': return max - min;\n            default: return 0;\n        }\n    };\n    //end region\n    // vector magnitude\n    CanvasRenderer.prototype.m = function (v) { return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2)); };\n    // ratio between two vectors\n    CanvasRenderer.prototype.r = function (u, v) { return (u[0] * v[0] + u[1] * v[1]) / (this.m(u) * this.m(v)); };\n    // angle between two vectors\n    CanvasRenderer.prototype.a = function (u, v) { return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(this.r(u, v)); };\n    // text utility\n    /**   @private  */\n    CanvasRenderer.prototype.labelAlign = function (text, wrapBounds, childNodes) {\n        var bounds = new Size(wrapBounds.width, childNodes.length * (text.fontSize * 1.2));\n        var position = { x: 0, y: 0 };\n        var labelX = text.x;\n        var labelY = text.y;\n        var offsetx = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointx = offsetx;\n        var pointy = offsety;\n        if (text.textAlign === 'left') {\n            pointx = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBounds.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                if (text.textWrapping === 'NoWrap') {\n                    pointx = 0;\n                }\n                else {\n                    pointx = text.width * 0.5;\n                }\n            }\n            else {\n                pointx = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointx = (text.width * 1);\n        }\n        position.x = labelX + pointx + (wrapBounds ? wrapBounds.x : 0);\n        position.y = labelY + pointy - bounds.height / 2;\n        return position;\n    };\n    return CanvasRenderer;\n}());\nexport { CanvasRenderer };\n","import { Point } from './../primitives/point';\nimport { Size } from './../primitives/size';\nimport { pathSegmentCollection, processPathData } from './../utility/path-util';\nimport { setAttributeSvg, setChildPosition } from './../utility/dom-util';\nimport { overFlow, wordBreakToString, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { CanvasRenderer } from './../rendering/canvas-renderer';\nimport { createSvgElement, createHtmlElement, getBackgroundLayerSvg } from '../utility/dom-util';\nimport { removeGradient, checkBrowserInfo } from '../utility/diagram-util';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * SVG Renderer\n */\n/** @private */\nvar SvgRenderer = /** @class */ (function () {\n    function SvgRenderer() {\n    }\n    /**   @private  */\n    SvgRenderer.prototype.renderShadow = function (options, canvas, collection, parentSvg) {\n        if (collection === void 0) { collection = null; }\n        var pointModel = { x: 0, y: 0 };\n        var point = Point.transform(pointModel, options.shadow.angle, options.shadow.distance);\n        var tX = options.x + point.x;\n        var tY = options.y + point.y;\n        var pivotX = tX + options.width * options.pivotX;\n        var pivotY = tY + options.height * options.pivotY;\n        var type;\n        var shadowElement;\n        if (parentSvg) {\n            shadowElement = parentSvg.getElementById(canvas.id + '_shadow');\n        }\n        if (!shadowElement) {\n            type = collection ? 'path' : 'rect';\n            shadowElement = document.createElementNS('http://www.w3.org/2000/svg', type);\n            canvas.appendChild(shadowElement);\n        }\n        var attr = {\n            'id': canvas.id + '_shadow', 'fill': options.shadow.color, 'stroke': options.shadow.color,\n            'opacity': options.shadow.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' +\n                'translate(' + (options.x + point.x) + ',' + (options.y + point.y) + ')'\n        };\n        if (parentSvg) {\n            var svgContainer = parentSvg.getElementById(canvas.id);\n            if (svgContainer) {\n                svgContainer.insertBefore(shadowElement, svgContainer.firstChild);\n            }\n        }\n        setAttributeSvg(shadowElement, attr);\n        if (!collection) {\n            setAttributeSvg(shadowElement, { 'width': options.width, 'height': options.height });\n        }\n        else if (collection) {\n            this.renderPath(shadowElement, options, collection);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        return dashes;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawRectangle = function (svg, options, diagramId, onlyRect, isSelector, parentSvg, ariaLabel) {\n        if (options.shadow && !onlyRect) {\n            this.renderShadow(options, svg, undefined, parentSvg);\n        }\n        var id;\n        if (options.id === svg.id) {\n            id = options.id + '_container';\n        }\n        else {\n            id = options.id;\n        }\n        var rect;\n        if (parentSvg) {\n            rect = parentSvg.getElementById(id);\n        }\n        if (!rect || isSelector) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            svg.appendChild(rect);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var attr = {\n            'id': id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'visibility': options.visible ? 'visible' : 'hidden',\n            'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            'rx': options.cornerRadius || 0, 'ry': options.cornerRadius || 0, 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        var poiterEvents = 'pointer-events';\n        if (!ariaLabel) {\n            attr[poiterEvents] = 'none';\n        }\n        setAttributeSvg(rect, attr);\n        this.setSvgStyle(rect, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.updateSelectionRegion = function (gElement, options) {\n        var rect;\n        rect = gElement.parentNode.getElementById(options.id);\n        var attr;\n        attr = {\n            'id': options.id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            class: 'e-diagram-selected-region'\n        };\n        if (!rect) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            gElement.appendChild(rect);\n        }\n        this.setSvgStyle(rect, options);\n        setAttributeSvg(rect, attr);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createGElement = function (elementType, attribute) {\n        var gElement = createSvgElement(elementType, attribute);\n        return gElement;\n    };\n    /** @private */\n    SvgRenderer.prototype.drawLine = function (gElement, options) {\n        var line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        this.setSvgStyle(line, options);\n        var pivotX = options.x + options.width * options.pivotX;\n        var pivotY = options.y + options.height * options.pivotY;\n        var kk = '';\n        var attr = {\n            'id': options.id,\n            'x1': options.startPoint.x + options.x,\n            'y1': options.startPoint.y + options.y,\n            'x2': options.endPoint.x + options.x,\n            'y2': options.endPoint.y + options.y,\n            'stroke': options.stroke,\n            'stroke-width': options.strokeWidth.toString(), 'opacity': options.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ' ' + pivotX + ' ' + pivotY + ')',\n            'visibility': options.visible ? 'visible' : 'hidden',\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(line, attr);\n        gElement.appendChild(line);\n    };\n    /** @private */\n    SvgRenderer.prototype.drawCircle = function (gElement, options, enableSelector, ariaLabel) {\n        var circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        this.setSvgStyle(circle, options);\n        var classval = options.class || '';\n        if (!enableSelector) {\n            classval += ' e-disabled';\n        }\n        var attr = {\n            'id': options.id,\n            'cx': options.centerX,\n            'cy': options.centerY,\n            'r': options.radius,\n            'visibility': options.visible ? 'visible' : 'hidden',\n            'class': classval,\n            'aria-label': ariaLabel ? ariaLabel['aria-label'] : ''\n        };\n        circle.style.display = options.visible ? 'block' : 'none';\n        setAttributeSvg(circle, attr);\n        gElement.appendChild(circle);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawPath = function (svg, options, diagramId, isSelector, parentSvg, ariaLabel) {\n        var id;\n        var x = Math.floor((Math.random() * 10) + 1);\n        id = svg.id + '_shape' + x.toString();\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, svg, collection, parentSvg);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var path;\n        if (parentSvg) {\n            path = parentSvg.getElementById(options.id);\n        }\n        if (!path || isSelector) {\n            path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            svg.appendChild(path);\n        }\n        this.renderPath(path, options, collection);\n        var attr = {\n            'id': options.id, 'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' + 'translate(' + (options.x) + ',' + (options.y) + ')',\n            'visibility': options.visible ? 'visible' : 'hidden', 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(path, attr);\n        this.setSvgStyle(path, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderPath = function (svg, options, collection) {\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        var x;\n        var y;\n        var length;\n        var i;\n        var segments = collection;\n        var d = '';\n        for (x = 0, y = 0, i = 0, length = segments.length; i < length; ++i) {\n            var obj = segments[i];\n            var segment = obj;\n            var char = segment.command;\n            if ('x1' in segment) {\n                x1 = segment.x1;\n            }\n            if ('x2' in segment) {\n                x2 = segment.x2;\n            }\n            if ('y1' in segment) {\n                y1 = segment.y1;\n            }\n            if ('y2' in segment) {\n                y2 = segment.y2;\n            }\n            if ('x' in segment) {\n                x = segment.x;\n            }\n            if ('y' in segment) {\n                y = segment.y;\n            }\n            switch (char) {\n                case 'M':\n                    d = d + 'M' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'L':\n                    d = d + 'L' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'C':\n                    d = d + 'C' + x1.toString() + ',' + y1.toString() + ',' + x2.toString() + ',' + y2.toString() + ',';\n                    d += x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Q':\n                    d = d + 'Q' + x1.toString() + ',' + y1.toString() + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'A':\n                    d = d + 'A' + segment.r1.toString() + ',' + segment.r2.toString() + ',' + segment.angle.toString() + ',';\n                    d += segment.largeArc.toString() + ',' + segment.sweep + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Z':\n                case 'z':\n                    d = d + 'Z' + ' ';\n                    break;\n            }\n        }\n        svg.setAttribute('d', d);\n    };\n    SvgRenderer.prototype.setSvgFontStyle = function (text, options) {\n        text.style.fontStyle = options.italic ? 'italic' : 'normal';\n        text.style.fontWeight = options.bold ? 'bold' : 'normal';\n        text.style.fontSize = options.fontSize.toString() + 'px';\n        text.style.fontFamily = options.fontFamily;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId, scaleValue, parentNode) {\n        if (options.content !== undefined) {\n            var textNode = void 0;\n            var childNodes = void 0;\n            var wrapBounds = void 0;\n            var position = void 0;\n            var child = void 0;\n            var tspanElement = void 0;\n            var offsetX = 0;\n            var offsetY = 0;\n            var i = 0;\n            var text = void 0;\n            if (parentSvg) {\n                text = parentSvg.getElementById(options.id + '_text');\n            }\n            if (text) {\n                if (options.doWrap) {\n                    while (text.firstChild) {\n                        text.removeChild(text.firstChild);\n                    }\n                }\n            }\n            else {\n                options.doWrap = true;\n                text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n                if (options.whiteSpace === 'pre-wrap') {\n                    text.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n                }\n                canvas.appendChild(text);\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            var childNodesHeight = 0;\n            if (options.doWrap || options.textOverflow !== 'Wrap') {\n                var innerHtmlTextElement = document.getElementById(options.id + '_text');\n                if (innerHtmlTextElement) {\n                    innerHtmlTextElement.innerHTML = '';\n                }\n                this.setSvgStyle(text, options, diagramId);\n                this.setSvgFontStyle(text, options);\n                textNode = document.createTextNode(options.content);\n                childNodes = options.childNodes;\n                wrapBounds = options.wrapBounds;\n                position = this.svgLabelAlign(options, wrapBounds, childNodes);\n                if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap' && options.textWrapping === 'NoWrap') {\n                    childNodes[0].text = overFlow(options.content, options);\n                }\n                for (i = 0; i < childNodes.length; i++) {\n                    tspanElement = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n                    textNode = document.createTextNode(childNodes[i].text);\n                    child = childNodes[i];\n                    child.x = setChildPosition(child, childNodes, i, options);\n                    offsetX = position.x + child.x - wrapBounds.x;\n                    offsetY = position.y + child.dy * (i) + ((options.fontSize) * 0.8);\n                    if ((options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') &&\n                        (options.textWrapping === 'WrapWithOverflow' || options.textWrapping === 'Wrap') && parentNode) {\n                        var size = (options.isHorizontalLane) ? parentNode.actualSize.width : parentNode.actualSize.height;\n                        if (offsetY < size) {\n                            if (options.textOverflow === 'Ellipsis' && childNodes[i + 1]) {\n                                var temp = childNodes[i + 1];\n                                var y = position.y + temp.dy * (i + 1) + ((options.fontSize) * 0.8);\n                                if (y > size) {\n                                    child.text = child.text.slice(0, child.text.length - 3);\n                                    child.text = child.text.concat('...');\n                                    textNode.data = child.text;\n                                }\n                            }\n                            this.setText(text, tspanElement, child, textNode, offsetX, offsetY);\n                            childNodesHeight += child.dy;\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                    else {\n                        this.setText(text, tspanElement, child, textNode, offsetX, offsetY);\n                    }\n                }\n            }\n            if (childNodesHeight && options.isHorizontalLane) {\n                pivotX = options.parentOffsetX + options.pivotX;\n                pivotY = options.parentOffsetY + options.pivotY;\n                options.y = options.parentOffsetY - childNodesHeight * options.pivotY + 0.5;\n            }\n            if (options.textDecoration && options.textDecoration === 'LineThrough') {\n                options.textDecoration = wordBreakToString(options.textDecoration);\n            }\n            var attr = {\n                'id': options.id + '_text', 'fill': options.color, 'visibility': options.visible ? 'visible' : 'hidden',\n                'text-decoration': options.textDecoration, 'transform': 'rotate(' + options.angle + ','\n                    + (pivotX) + ',' + (pivotY) + ')'\n                    + 'translate(' + (options.x) + ',' + (options.y) + ')', 'opacity': options.opacity,\n                'aria-label': ariaLabel ? ariaLabel : ''\n            };\n            setAttributeSvg(text, attr);\n        }\n    };\n    SvgRenderer.prototype.setText = function (text, tspanElement, child, textNode, offsetX, offsetY) {\n        setAttributeSvg(tspanElement, { 'x': offsetX.toString(), 'y': offsetY.toString() });\n        text.setAttribute('fill', child.text);\n        tspanElement.appendChild(textNode);\n        text.appendChild(tspanElement);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var id = obj.id + '_image';\n        var image;\n        if (parentSvg) {\n            image = parentSvg.getElementById(obj.id + 'image');\n        }\n        if (!image) {\n            image = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            canvas.appendChild(image);\n        }\n        var imageObj = new Image();\n        imageObj.src = obj.source;\n        var scale = obj.scale !== 'None' ? obj.scale : '';\n        if (isBlazor() && obj.alignment === 'None' && scale === 'Stretch') {\n            scale = '';\n        }\n        var imgAlign = obj.alignment;\n        var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n        if (scale) {\n            aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n        }\n        var attr = {\n            'id': obj.id + 'image', 'x': obj.x.toString(), 'y': obj.y.toString(), 'transform': 'rotate(' + obj.angle + ','\n                + (obj.x + obj.width * obj.pivotX) + ',' + (obj.y + obj.height * obj.pivotY) + ')',\n            'width': obj.width.toString(), 'visibility': obj.visible ? 'visible' : 'hidden',\n            'height': obj.height.toString(), 'preserveAspectRatio': aspectRatio, 'opacity': (obj.opacity || 1).toString()\n        };\n        setAttributeSvg(image, attr);\n        image.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n    };\n    /** @private */\n    SvgRenderer.prototype.drawHTMLContent = function (element, canvas, transform, value, indexValue) {\n        var htmlElement;\n        var parentHtmlElement;\n        if (canvas) {\n            var i = void 0;\n            var j = void 0;\n            var parentElement = void 0;\n            for (i = 0; i < canvas.childNodes.length; i++) {\n                parentElement = canvas.childNodes[i];\n                for (j = 0; j < parentElement.childNodes.length; j++) {\n                    if (parentElement.childNodes[j].id === element.id + '_html_element') {\n                        htmlElement = parentElement.childNodes[j];\n                        break;\n                    }\n                }\n            }\n        }\n        if (!htmlElement) {\n            parentHtmlElement = canvas.querySelector(('#' + element.id + '_html_element')) ||\n                canvas.querySelector(('#' + element.nodeId + '_html_element'));\n            if (!parentHtmlElement) {\n                var attr_1 = {\n                    'id': element.nodeId + '_html_element',\n                    'class': 'foreign-object'\n                };\n                parentHtmlElement = createHtmlElement('div', attr_1);\n            }\n            var attr = {\n                'id': element.id + '_html_element',\n                'class': 'foreign-object'\n            };\n            htmlElement = createHtmlElement('div', attr);\n            element.isTemplate ? htmlElement.appendChild(element.template) : htmlElement.appendChild(element.template.cloneNode(true));\n            if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                canvas.insertBefore(htmlElement, canvas.childNodes[indexValue]);\n            }\n            parentHtmlElement.appendChild(htmlElement);\n            canvas.appendChild(parentHtmlElement);\n        }\n        var point = cornersPointsBeforeRotation(element).topLeft;\n        htmlElement.setAttribute('style', 'height:' + (element.actualSize.height) + 'px; width:' + (element.actualSize.width) +\n            'px;left:' + point.x + 'px; top:' + point.y + 'px;' +\n            'position:absolute;transform:rotate(' + (element.rotateAngle + element.parentTransform) + 'deg);' +\n            'pointer-events:' + (value ? 'all' : 'none')\n            + ';visibility:' + ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n    };\n    /** @private */\n    SvgRenderer.prototype.drawNativeContent = function (element, canvas, height, width, parentSvg) {\n        var nativeElement;\n        var clipPath;\n        if (parentSvg) {\n            nativeElement = parentSvg.getElementById(element.id + '_native_element');\n            clipPath = parentSvg.getElementById(element.id + '_clip');\n        }\n        if (!nativeElement) {\n            nativeElement = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            nativeElement.setAttribute('id', element.id + '_native_element');\n            nativeElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(nativeElement);\n        }\n        if (clipPath) {\n            nativeElement.removeChild(clipPath);\n        }\n        nativeElement.setAttribute('style', 'visibility:' +\n            ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n        this.setNativTransform(element, nativeElement, height, width);\n        if (element.scale === 'Slice') {\n            this.drawClipPath(element, nativeElement, height, width, parentSvg);\n        }\n        setAttributeSvg(nativeElement, element.description ? { 'aria-label': element.description } : {});\n    };\n    SvgRenderer.prototype.setNativTransform = function (element, nativeElement, height, width) {\n        var angle;\n        var contentWidth = element.contentSize.width !== 0 ? element.contentSize.width : 1;\n        var contentHeight = element.contentSize.height !== 0 ? element.contentSize.height : 1;\n        var x = element.templatePosition.x * width / contentWidth;\n        var y = element.templatePosition.y * height / contentHeight;\n        nativeElement.setAttribute('transform', 'rotate(' + element.parentTransform + ',' + element.offsetX + ',' + element.offsetY +\n            ') translate(' + (element.offsetX - x - width * element.pivot.x) + ',' + (element.offsetY - y - height * element.pivot.y) +\n            ') scale(' + (width / contentWidth) + ',' + (height / contentHeight) + ')');\n    };\n    /**\n     * used to crop the given native element into a rectangle of the given size\n     * @private\n     * @param {DiagramNativeElement} node\n     * @param {SVGElement} group\n     * @param {number} height\n     * @param {number} width\n     * @param {SVGSVGElement} parentSvg\n     */\n    SvgRenderer.prototype.drawClipPath = function (node, group, height, width, parentSvg) {\n        var contentWidth = node.contentSize.width;\n        var contentHeight = node.contentSize.height;\n        var actualWidth = node.actualSize.width;\n        var actualHeight = node.actualSize.height;\n        var clipWidth = node.width / (width / contentWidth);\n        var clipHeight = node.height / (height / contentHeight);\n        var x = node.templatePosition.x + (node.width >= node.height ? 0 : (contentWidth - clipWidth) / 2);\n        var y = node.templatePosition.y + (node.height >= node.width ? 0 : (contentHeight - clipHeight) / 2);\n        var clipPath = parentSvg.getElementById(node.id + '_clip');\n        clipPath = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n        clipPath.setAttribute('id', node.id + '_clip');\n        group.appendChild(clipPath);\n        var rect = parentSvg.getElementById(node.id + '_clip_rect');\n        rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        clipPath.appendChild(rect);\n        var attr = {\n            'id': node.id + '_clip_rect', 'width': clipWidth.toString(), 'height': clipHeight.toString(),\n            'x': x.toString(), 'y': y.toString()\n        };\n        setAttributeSvg(rect, attr);\n        if (checkBrowserInfo()) {\n            group.setAttribute('clip-path', 'url(' + location.href + '#' + node.id + '_clip)');\n        }\n        else {\n            group.setAttribute('clip-path', 'url(#' + node.id + '_clip)');\n        }\n        return group;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderGradient = function (options, svg, diagramId) {\n        var max;\n        var min;\n        var grd;\n        var svgContainer = getBackgroundLayerSvg(diagramId);\n        var defs = svgContainer.getElementById(diagramId + 'gradient_pattern');\n        if (!defs) {\n            defs = createSvgElement('defs', { id: diagramId + 'gradient_pattern' });\n            svgContainer.insertBefore(defs, svgContainer.firstChild);\n        }\n        var radial;\n        var linear;\n        var stop;\n        var offset;\n        removeGradient(svg.id);\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = !max ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = !min ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                linear = options.gradient;\n                linear.id = svg.id + '_linear';\n                grd = this.createLinearGradient(linear);\n                defs.appendChild(grd);\n            }\n            else {\n                radial = options.gradient;\n                radial.id = svg.id + '_radial';\n                grd = this.createRadialGradient(radial);\n                defs.appendChild(grd);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset_1 = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                var stopElement = document.createElementNS('http://www.w3.org/2000/svg', 'stop');\n                setAttributeSvg(stopElement, { 'offset': offset_1.toString(), 'style': 'stop-color:' + stop_1.color });\n                grd.appendChild(stopElement);\n            }\n        }\n        return grd;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createLinearGradient = function (linear) {\n        var lineargradient = document.createElementNS('http://www.w3.org/2000/svg', 'linearGradient');\n        var attr = {\n            'id': linear.id, 'x1': linear.x1 + '%', 'y1': linear.y1 + '%', 'x2': linear.x2 + '%', 'y2': linear.y2 + '%'\n        };\n        setAttributeSvg(lineargradient, attr);\n        return lineargradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createRadialGradient = function (radial) {\n        var radialgradient = document.createElementNS('http://www.w3.org/2000/svg', 'radialGradient');\n        var attr = {\n            'id': radial.id, 'cx': radial.cx + '%', 'cy': radial.cy + '%', 'r': radial.r + '%', 'fx': radial.fx + '%', 'fy': radial.fy + '%'\n        };\n        setAttributeSvg(radialgradient, attr);\n        return radialgradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.setSvgStyle = function (svg, style, diagramId) {\n        if (style.canApplyStyle || style.canApplyStyle === undefined) {\n            if (style.fill === 'none') {\n                style.fill = 'transparent';\n            }\n            if (style.stroke === 'none') {\n                style.stroke = 'transparent';\n            }\n            var dashArray = [];\n            var fill = void 0;\n            if (style.dashArray) {\n                var canvasRenderer = new CanvasRenderer();\n                dashArray = canvasRenderer.parseDashArray(style.dashArray);\n            }\n            if (style.gradient && style.gradient.type !== 'None') {\n                var grd = this.renderGradient(style, svg, diagramId);\n                if (checkBrowserInfo()) {\n                    fill = 'url(' + location.href + '#' + grd.id + ')';\n                }\n                else {\n                    fill = 'url(#' + grd.id + ')';\n                }\n            }\n            else {\n                fill = style.fill;\n            }\n            if (style.stroke) {\n                svg.setAttribute('stroke', style.stroke);\n            }\n            if (style.strokeWidth !== undefined && style.strokeWidth !== null) {\n                svg.setAttribute('stroke-width', style.strokeWidth.toString());\n            }\n            if (dashArray) {\n                svg.setAttribute('stroke-dasharray', dashArray.toString() || 'none');\n            }\n            if (fill) {\n                svg.setAttribute('fill', fill);\n            }\n        }\n    };\n    //end region\n    // text utility\n    /**   @private  */\n    SvgRenderer.prototype.svgLabelAlign = function (text, wrapBound, childNodes) {\n        var bounds = new Size(wrapBound.width, childNodes.length * (text.fontSize * 1.2));\n        var pos = { x: 0, y: 0 };\n        var x = 0;\n        var y = 1.2;\n        var offsetX = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointX = offsetX;\n        var pointY = offsety;\n        if (text.textAlign === 'left') {\n            pointX = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBound.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                if (text.textWrapping === 'NoWrap') {\n                    pointX = 0;\n                }\n                else {\n                    pointX = text.width * 0.5;\n                }\n            }\n            else {\n                pointX = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointX = (text.width * 1);\n        }\n        pos.x = x + pointX + (wrapBound ? wrapBound.x : 0);\n        pos.y = y + pointY - bounds.height / 2;\n        return pos;\n    };\n    return SvgRenderer;\n}());\nexport { SvgRenderer };\n","import { PathElement } from '../core/elements/path-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Container } from '../core/containers/container';\nimport { rotateMatrix, identityMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { Size } from '../primitives/size';\nimport { wordBreakToString, whiteSpaceToString, textAlignToString } from '../utility/base-util';\nimport { getUserHandlePosition, canShowCorner, getInterval, getSpaceValue } from '../utility/diagram-util';\nimport { getDiagramElement, getAdornerLayer, getGridLayer, getHTMLLayer, updatePath } from '../utility/dom-util';\nimport { measurePath, getBackgroundLayerSvg, getBackgroundImageLayer, setAttributeSvg } from '../utility/dom-util';\nimport { SnapConstraints, RendererAction } from '../enum/enum';\nimport { ThumbsConstraints, SelectorConstraints, ElementAction } from '../enum/enum';\nimport { SvgRenderer } from './svg-renderer';\nimport { CanvasRenderer } from './canvas-renderer';\nimport { processPathData, splitArrayCollection, transformPath } from '../utility/path-util';\nimport { isDiagramChild } from '../utility/diagram-util';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { Point } from '../primitives/point';\nimport { canDrawThumbs, avoidDrawSelector } from '../utility/constraints-util';\n/**\n * Renderer module is used to render basic diagram elements\n */\n/** @private */\nvar DiagramRenderer = /** @class */ (function () {\n    function DiagramRenderer(name, svgRender, isSvgMode) {\n        /**   @private  */\n        this.renderer = null;\n        /** @private */\n        this.isSvgMode = true;\n        this.transform = { x: 0, y: 0 };\n        this.diagramId = name;\n        this.element = getDiagramElement(this.diagramId);\n        this.svgRenderer = svgRender;\n        this.isSvgMode = isSvgMode;\n        this.renderer = isSvgMode ? new SvgRenderer() : new CanvasRenderer();\n    }\n    /**   @private  */\n    DiagramRenderer.prototype.setCursor = function (canvas, cursor) {\n        canvas.style.cursor = cursor;\n    };\n    /** @private */\n    DiagramRenderer.prototype.setLayers = function () {\n        this.iconSvgLayer = this.element.getElementsByClassName('e-ports-expand-layer')[0];\n        this.adornerSvgLayer = this.element.getElementsByClassName('e-adorner-layer')[0];\n        this.nativeSvgLayer = this.element.getElementsByClassName('e-native-layer')[0];\n        this.diagramSvgLayer = this.element.getElementsByClassName('e-diagram-layer')[0];\n    };\n    DiagramRenderer.prototype.getAdornerLayer = function () {\n        var adornerLayer = getAdornerLayer(this.diagramId);\n        return adornerLayer;\n    };\n    DiagramRenderer.prototype.getParentSvg = function (element, targetElement, canvas) {\n        if (this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1 || element.id.split('_nodeport').length > 1) {\n                return this.iconSvgLayer;\n            }\n            if (targetElement && targetElement === 'selector') {\n                return this.adornerSvgLayer;\n            }\n            else if (element instanceof DiagramNativeElement) {\n                return this.nativeSvgLayer;\n            }\n            else {\n                return this.diagramSvgLayer;\n            }\n        }\n        return canvas;\n    };\n    DiagramRenderer.prototype.getParentElement = function (element, defaultParent, svgElement, indexValue) {\n        var layerGElement = defaultParent;\n        if (svgElement && this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramExpander');\n                defaultParent = null;\n            }\n            else if (element.id.split('_nodeport').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramPorts');\n            }\n            else if (element instanceof DiagramNativeElement) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_nativeLayer');\n                defaultParent = null;\n            }\n            else {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramLayer');\n            }\n            var groupElement = this.getGroupElement(element, defaultParent || layerGElement, indexValue);\n            layerGElement = groupElement.g;\n            if (groupElement.svg) {\n                svgElement = groupElement.svg;\n            }\n        }\n        return { g: layerGElement, svg: svgElement };\n    };\n    DiagramRenderer.prototype.getGroupElement = function (element, canvas, indexValue) {\n        var gElement;\n        var parentSvg = this.getParentSvg(element);\n        var svgElement;\n        if (canvas && parentSvg) {\n            if (parentSvg) {\n                gElement = parentSvg.getElementById(element.id + '_groupElement');\n                if (!gElement && parentSvg !== this.nativeSvgLayer) { //code added\n                    var nativeSvg = this.nativeSvgLayer;\n                    gElement = nativeSvg.getElementById(element.id + '_groupElement');\n                    svgElement = nativeSvg;\n                }\n            }\n            if (!gElement) {\n                gElement = this.svgRenderer.createGElement('g', { id: element.id + '_groupElement' });\n                if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                    canvas.insertBefore(gElement, canvas.childNodes[indexValue]);\n                }\n                else {\n                    canvas.appendChild(gElement);\n                }\n            }\n        }\n        return { g: gElement, svg: svgElement };\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderElement = function (element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue, isPreviewNode) {\n        var isElement = true;\n        if (element instanceof Container) {\n            isElement = false;\n            this.renderContainer(element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue, isPreviewNode);\n        }\n        else if (element instanceof ImageElement) {\n            this.renderImageElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof PathElement) {\n            this.renderPathElement(element, canvas, transform, parentSvg, fromPalette, isPreviewNode);\n        }\n        else if (element instanceof TextElement) {\n            this.renderTextElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramNativeElement) {\n            this.renderNativeElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramHtmlElement) {\n            this.renderHTMLElement(element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue);\n        }\n        else {\n            this.renderRect(element, canvas, transform, parentSvg, isPreviewNode);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawSelectionRectangle = function (x, y, w, h, canvas, t) {\n        x = (x + t.tx) * t.scale;\n        y = (y + t.ty) * t.scale;\n        var options = {\n            width: w * t.scale, height: h * t.scale,\n            x: x + 0.5, y: y + 0.5, fill: 'transparent', stroke: 'gray', angle: 0,\n            pivotX: 0.5, pivotY: 0.5, strokeWidth: 1,\n            dashArray: '6 3', opacity: 1,\n            visible: true, id: canvas.id + '_selected_region'\n        };\n        var adornerLayer = this.getAdornerLayer();\n        this.svgRenderer.updateSelectionRegion(adornerLayer, options);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderHighlighter = function (element, canvas, transform) {\n        var width = element.actualSize.width || 2;\n        var height = element.actualSize.height || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        y = (y + transform.ty) * transform.scale;\n        var options = {\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 4,\n            dashArray: '', opacity: 1, cornerRadius: 0,\n            visible: true, id: canvas.id + '_highlighter', class: 'e-diagram-highlighter'\n        };\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, canvas);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderStackHighlighter = function (element, canvas, transform, isVertical, position, isUml, isSwimlane) {\n        var width = element.actualSize.width || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var height = element.actualSize.height || 2;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        var data;\n        var bounds = element.bounds;\n        var newPathString = '';\n        y = (y + transform.ty) * transform.scale;\n        if (!isVertical) {\n            var d = height * transform.scale;\n            data = 'M 10 -10 L 0 0 Z M -10 -10 L 0 0 Z M 0 0 L 0 ' + (d) + ' Z M 0  ' + (d) +\n                ' L -10  ' + (d + 10) + ' Z L 10  ' + (d + 10) + ' Z';\n            if (position.x >= element.offsetX) {\n                x += width;\n            }\n        }\n        else {\n            if (isUml) {\n                var d = width * transform.scale;\n                data = 'M 0 0 L ' + (d + 2) + ' 0 Z';\n                var scaleX = -bounds.x;\n                var scaleY = -bounds.y;\n                var arrayCollection = [];\n                scaleX = element.actualSize.width / Number(bounds.width ? bounds.width : 1) * transform.scale;\n                scaleY = element.actualSize.height / Number(bounds.height ? bounds.height : 1) * transform.scale;\n                var umlData = 'M7,4 L8,4 8,7 11,7 11,8 8,8 8,11 7,11 7,8 4,8 4,7 7,7 z M7.5,0.99999994' +\n                    'C3.9160004,1 1,3.9160004 0.99999994,7.5 1,11.084 3.9160004,14 7.5,14 11.084,14 14,11.084 14,7.5 14,' +\n                    '3.9160004 11.084,1 7.5,0.99999994 z M7.5,0 C11.636002,0 15,3.3639984 15,7.5 15,11.636002 11.636002,15 7.5,' +\n                    '15 3.3640003,15 0,11.636002 0,7.5 0,3.3639984 3.3640003,0 7.5,0 z';\n                arrayCollection = processPathData(umlData);\n                arrayCollection = splitArrayCollection(arrayCollection);\n                newPathString = transformPath(arrayCollection, scaleX + d + 2, scaleY - 8, false, bounds.x, bounds.y, 0, 0);\n                if (position.y >= element.offsetY) {\n                    y += height;\n                }\n            }\n            else {\n                if (isSwimlane) {\n                    if (position.y >= element.offsetY) {\n                        y += height;\n                    }\n                }\n                var d = width * transform.scale;\n                data = 'M -10 -10 L 0 0 Z M -10 10 L 0 0 Z M 0 0 L ' + (d) + ' 0 Z M ' + (d) + ' 0 L ' +\n                    (d + 10) + ' 10 Z L ' + (d + 10) + ' -10 Z';\n            }\n        }\n        var options = {\n            data: data + newPathString,\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 1,\n            dashArray: '', opacity: 1,\n            visible: true, id: canvas.id + '_stack_highlighter', class: 'e-diagram-highlighter',\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawLine = function (canvas, options) {\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawPath = function (canvas, options) {\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderResizeHandle = function (element, canvas, constraints, currentZoom, selectorConstraints, transform, canMask, enableNode, nodeConstraints, isSwimlane) {\n        var left = element.offsetX - element.actualSize.width * element.pivot.x;\n        var top = element.offsetY - element.actualSize.height * element.pivot.y;\n        var height = element.actualSize.height;\n        var width = element.actualSize.width;\n        if (!isSwimlane &&\n            (constraints & ThumbsConstraints.Rotate && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions)))) {\n            this.renderPivotLine(element, canvas, transform, selectorConstraints, canMask);\n            this.renderRotateThumb(element, canvas, transform, selectorConstraints, canMask);\n        }\n        this.renderBorder(element, canvas, transform, enableNode, nodeConstraints, isSwimlane);\n        var nodeWidth = element.actualSize.width * currentZoom;\n        var nodeHeight = element.actualSize.height * currentZoom;\n        if (!nodeConstraints && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions))) {\n            if (nodeWidth >= 40 && nodeHeight >= 40) {\n                //Hide corners when the size is less than 40\n                if (selectorConstraints & SelectorConstraints.ResizeNorthWest) {\n                    this.renderCircularHandle('resizeNorthWest', element, left, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthWest'), constraints & ThumbsConstraints.ResizeNorthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top left side direction' }, undefined, 'e-diagram-resize-handle e-northwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeNorthEast) {\n                    this.renderCircularHandle('resizeNorthEast', element, left + width, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthEast'), constraints & ThumbsConstraints.ResizeNorthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top right side direction' }, undefined, 'e-diagram-resize-handle e-northeast');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthWest) {\n                    this.renderCircularHandle('resizeSouthWest', element, left, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthWest'), constraints & ThumbsConstraints.ResizeSouthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom left side direction' }, undefined, 'e-diagram-resize-handle e-southwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthEast) {\n                    this.renderCircularHandle('resizeSouthEast', element, left + width, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthEast'), constraints & ThumbsConstraints.ResizeSouthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom right side direction' }, undefined, 'e-diagram-resize-handle e-southeast');\n                }\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeNorth) {\n                this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorth'), constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top side direction' }, undefined, 'e-diagram-resize-handle e-north');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeSouth) {\n                this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouth'), constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom side direction' }, undefined, 'e-diagram-resize-handle e-south');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeWest) {\n                this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeWest'), constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on left side direction' }, undefined, 'e-diagram-resize-handle e-west');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeEast) {\n                this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeEast'), constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on right side direction' }, undefined, 'e-diagram-resize-handle e-east');\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderEndPointHandle = function (selector, canvas, constraints, selectorConstraints, transform, connectedSource, connectedTarget, isSegmentEditing) {\n        var sourcePoint = selector.sourcePoint;\n        var targetPoint = selector.targetPoint;\n        var wrapper = selector.wrapper;\n        var i;\n        var segment;\n        this.renderCircularHandle('connectorSourceThumb', wrapper, sourcePoint.x, sourcePoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        this.renderCircularHandle('connectorTargetThumb', wrapper, targetPoint.x, targetPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, connectedTarget, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        if (isSegmentEditing) {\n            if ((selector.type === 'Straight' || selector.type === 'Bezier') && selector.segments.length > 0) {\n                for (i = 0; i < selector.segments.length - 1; i++) {\n                    segment = selector.segments[i];\n                    this.renderCircularHandle(('segementThumb_' + (i + 1)), wrapper, segment.point.x, segment.point.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i);\n                }\n            }\n            else {\n                for (i = 0; i < selector.segments.length; i++) {\n                    var seg = selector.segments[i];\n                    this.renderOrthogonalThumbs('orthoThumb_' + (i + 1), wrapper, seg, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), transform);\n                }\n            }\n        }\n        if (selector.type === 'Bezier') {\n            for (i = 0; i < selector.segments.length; i++) {\n                var segment_1 = selector.segments[i];\n                var bezierPoint = !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1\n                    : segment_1.bezierPoint1;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_1', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, undefined, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-bezier-handle e-source');\n                if (canShowCorner(selectorConstraints, 'ConnectorSourceThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_1', wrapper, canvas, segment_1.points[0], !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1 : segment_1.bezierPoint1, transform);\n                }\n                bezierPoint = !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_2', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, undefined, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-bezier-handle e-target');\n                if (canShowCorner(selectorConstraints, 'ConnectorTargetThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_2', wrapper, canvas, segment_1.points[1], !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2, transform);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumbs = function (id, selector, segment, canvas, visibility, t) {\n        var orientation;\n        var visible;\n        var length;\n        var j = 0;\n        for (j = 0; j < segment.points.length - 1; j++) {\n            length = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n            orientation = (segment.points[j].y.toFixed(2) === segment.points[j + 1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n            visible = (length >= 50 && segment.allowDrag) ? true : false;\n            this.renderOrthogonalThumb((id + '_' + (j + 1)), selector, (((segment.points[j].x + segment.points[j + 1].x) / 2)), (((segment.points[j].y + segment.points[j + 1].y) / 2)), canvas, visible, orientation, t);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumb = function (id, selector, x, y, canvas, visible, orientation, t) {\n        var path;\n        var h;\n        var v;\n        if (orientation === 'horizontal') {\n            path = 'M0,7 L15,0 L30,7 L15,14 z';\n            h = -15;\n            v = -7;\n        }\n        else {\n            path = 'M7,0 L0,15 L7,30 L14,15 z';\n            h = -7;\n            v = -15;\n        }\n        var options = {\n            x: ((x + t.tx) * t.scale) + h, y: ((y + t.ty) * t.scale) + v, angle: 0,\n            fill: '#e2e2e2', stroke: 'black', strokeWidth: 1, dashArray: '', data: path,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: id\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPivotLine = function (element, canvas, transform, selectorConstraints, canMask) {\n        var wrapper = element;\n        var dashArray = '2,3';\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.fill = 'None';\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.visible = visible;\n        var scale = transform.scale;\n        options.x *= scale;\n        options.y *= scale;\n        options.width *= scale;\n        options.height *= scale;\n        options.id = 'pivotLine';\n        options.class = 'e-diagram-pivot-line';\n        var startPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: -20 };\n        var endPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: 0 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBezierLine = function (id, wrapper, canvas, start, end, transform) {\n        var dashArray = '3,3';\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.id = id;\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.fill = 'None';\n        options.class = 'e-diagram-bezier-line';\n        options.x = 0;\n        options.y = 0;\n        var scale = transform.scale;\n        var x1 = (start.x + transform.tx) * scale;\n        var y1 = (start.y + transform.ty) * scale;\n        var x2 = (end.x + transform.tx) * scale;\n        var y2 = (end.y + transform.ty) * scale;\n        var startPoint = { x: x1, y: y1 };\n        var endPoint = { x: x2, y: y2 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderCircularHandle = function (id, selector, cx, cy, canvas, visible, enableSelector, t, connected, canMask, ariaLabel, count, className) {\n        var wrapper = selector;\n        var radius = 7;\n        var newPoint = { x: cx, y: cy };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = this.getBaseAttributes(wrapper);\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        if (count !== undefined) {\n            radius = 5;\n            options.id = 'segmentEnd_' + count;\n            options.fill = '#e2e2e2';\n        }\n        else {\n            radius = 7;\n            options.fill = connected ? '#8CC63F' : 'white';\n        }\n        options.centerX = (newPoint.x + t.tx) * t.scale;\n        options.centerY = (newPoint.y + t.ty) * t.scale;\n        options.radius = radius;\n        options.angle = 0;\n        options.id = id;\n        options.visible = visible;\n        options.class = className;\n        if (connected) {\n            options.class += ' e-connected';\n        }\n        if (canMask) {\n            options.visible = false;\n        }\n        this.svgRenderer.drawCircle(canvas, options, enableSelector, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBorder = function (selector, canvas, transform, enableNode, isBorderTickness, isSwimlane) {\n        var wrapper = selector;\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.x *= transform.scale;\n        options.y *= transform.scale;\n        options.width *= transform.scale;\n        options.height *= transform.scale;\n        options.fill = 'transparent';\n        options.stroke = '#097F7F';\n        options.strokeWidth = 1.2;\n        options.dashArray = '6,3';\n        options.class = 'e-diagram-border';\n        if (isSwimlane) {\n            options.class += ' e-diagram-lane';\n        }\n        options.id = 'borderRect';\n        options.id = (this.rendererActions & RendererAction.DrawSelectorBorder) ? 'borderRect_symbol' : 'borderRect';\n        if (!enableNode) {\n            options.class += ' e-disabled';\n        }\n        if (isBorderTickness) {\n            options.class += ' e-thick-border';\n        }\n        options.cornerRadius = 0;\n        var parentSvg = this.getParentSvg(selector, 'selector');\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, true, parentSvg);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderUserHandler = function (selectorItem, canvas, transform) {\n        var wrapper = selectorItem.wrapper;\n        var canDraw;\n        for (var _i = 0, _a = selectorItem.userHandles; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            canDraw = true;\n            if (obj.disableConnectors && selectorItem.connectors.length > 0) {\n                canDraw = false;\n            }\n            if (obj.disableNodes && selectorItem.nodes.length > 0) {\n                canDraw = false;\n            }\n            var element = new PathElement();\n            var newPoint = void 0;\n            newPoint = getUserHandlePosition(selectorItem, obj, transform);\n            newPoint.x = (newPoint.x + transform.tx) * transform.scale;\n            newPoint.y = (newPoint.y + transform.ty) * transform.scale;\n            if (obj.visible) {\n                obj.visible = (selectorItem.constraints & SelectorConstraints.UserHandle) ? true : false;\n            }\n            if (canDraw) {\n                if (obj.content === '' && obj.source === '') {\n                    var data = obj.pathData ? obj.pathData : obj.content;\n                    var option = this.getBaseAttributes(wrapper);\n                    option.id = obj.name + '_userhandle';\n                    option.fill = obj.backgroundColor;\n                    option.stroke = obj.borderColor;\n                    option.strokeWidth = obj.borderWidth;\n                    option.centerX = newPoint.x;\n                    option.centerY = newPoint.y;\n                    option.radius = obj.size * 0.5;\n                    option.class = 'e-diagram-userhandle-circle';\n                    option.angle = 0;\n                    option.visible = obj.visible;\n                    option.opacity = 1;\n                    this.svgRenderer.drawCircle(canvas, option, 1, { 'aria-label': obj.name + 'user handle' });\n                    var pathPading = 5;\n                    var arrayCollection = [];\n                    arrayCollection = processPathData(data);\n                    arrayCollection = splitArrayCollection(arrayCollection);\n                    var pathSize = measurePath(data);\n                    //requiredSize/contentSize\n                    var scaleX = (obj.size - 0.45 * obj.size) / pathSize.width;\n                    var scaleY = (obj.size - 0.45 * obj.size) / pathSize.height;\n                    var newData = transformPath(arrayCollection, scaleX, scaleY, true, pathSize.x, pathSize.y, 0, 0);\n                    pathSize = measurePath(newData);\n                    var options = {\n                        x: newPoint.x - pathSize.width / 2,\n                        y: newPoint.y - pathSize.height / 2,\n                        angle: 0, id: '',\n                        class: 'e-diagram-userhandle-path',\n                        fill: obj.pathColor, stroke: obj.backgroundColor, strokeWidth: 0.5, dashArray: '', data: newData,\n                        width: obj.size - pathPading, height: obj.size - pathPading, pivotX: 0, pivotY: 0, opacity: 1, visible: obj.visible\n                    };\n                    this.svgRenderer.drawPath(canvas, options, this.diagramId, undefined, undefined, { 'aria-label': obj.name + 'user handle' });\n                }\n                else if (obj.content !== '') {\n                    var handleContent = void 0;\n                    handleContent = new DiagramNativeElement(obj.name, this.diagramId);\n                    handleContent.content = obj.content;\n                    handleContent.offsetX = newPoint.x;\n                    handleContent.offsetY = newPoint.y;\n                    handleContent.height = obj.size;\n                    handleContent.width = obj.size;\n                    handleContent.id = obj.name + '_shape';\n                    handleContent.horizontalAlignment = 'Center';\n                    handleContent.verticalAlignment = 'Center';\n                    handleContent.visible = obj.visible;\n                    handleContent.setOffsetWithRespectToBounds(newPoint.x, newPoint.y, 'Fraction');\n                    handleContent.relativeMode = 'Object';\n                    handleContent.description = obj.name || 'User handle';\n                    handleContent.measure(new Size(obj.size, obj.size));\n                    handleContent.arrange(handleContent.desiredSize);\n                    this.svgRenderer.drawNativeContent(handleContent, canvas, obj.size, obj.size, this.adornerSvgLayer);\n                }\n                else {\n                    var element_1 = new ImageElement();\n                    var options = this.getBaseAttributes(element_1, transform);\n                    options.width = obj.size;\n                    options.height = obj.size;\n                    options.x = newPoint.x - (obj.size / 2);\n                    options.y = newPoint.y - (obj.size / 2);\n                    options.sourceWidth = obj.size;\n                    options.sourceHeight = obj.size;\n                    options.alignment = element_1.imageAlign;\n                    options.source = obj.source;\n                    options.scale = element_1.imageScale;\n                    options.visible = obj.visible;\n                    options.description = obj.name || 'User handle';\n                    options.id = obj.name + '_';\n                    this.renderer.drawImage(canvas, options, this.adornerSvgLayer, false);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRotateThumb = function (wrapper, canvas, transform, selectorConstraints, canMask) {\n        var element = new PathElement();\n        var newPoint;\n        var size = new Size();\n        size.width = 18;\n        size.height = 16;\n        var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n        var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var data = 'M 16.856144362449648 10.238890446662904 L 18.000144362449646 3.437890446662903' +\n            'L 15.811144362449646 4.254890446662903 C 14.837144362449646 2.5608904466629028 13.329144362449647 ' +\n            ' 1.2598904466629026 11.485144362449645 0.5588904466629026 C 9.375144362449646 - 0.24510955333709716 7.071144362449646 ' +\n            ' - 0.18010955333709716 5.010144362449646 0.7438904466629028 C 2.942144362449646 1.6678904466629028 1.365144362449646' +\n            ' 3.341890446662903 0.558144362449646 5.452890446662903 C - 0.244855637550354 7.567890446662903 - 0.17985563755035394' +\n            ' 9.866890446662904 0.7431443624496461 11.930890446662904 C 1.6681443624496461 13.994890446662904 3.343144362449646' +\n            ' 15.575890446662903 5.457144362449647 16.380890446662903 C 6.426144362449647 16.7518904466629 7.450144362449647' +\n            ' 16.9348904466629 8.470144362449647 16.9348904466629 C 9.815144362449647 16.9348904466629 11.155144362449647 ' +\n            '16.6178904466629 12.367144362449647 15.986890446662901 L 11.351144362449647 14.024890446662901 C 9.767144362449647' +\n            ' 14.8468904466629 7.906144362449647 14.953890446662902 6.237144362449647 14.3178904466629 C 4.677144362449647' +\n            ' 13.7218904466629 3.444144362449647 12.5558904466629 2.758144362449647 11.028890446662901 C 2.078144362449646 ' +\n            '9.501890446662903 2.031144362449646 7.802890446662903 2.622144362449646 6.243890446662903 C 3.216144362449646' +\n            ' 4.6798904466629025 4.387144362449646 3.442890446662903 5.914144362449646 2.760890446662903 C 7.437144362449646 ' +\n            '2.078890446662903 9.137144362449646 2.0298904466629026 10.700144362449645 2.6258904466629027 C 11.946144362449646 ' +\n            '3.100890446662903 12.971144362449646 3.9538904466629026 13.686144362449646 5.049890446662903 L 11.540144362449645 ' +\n            '5.850890446662903 L 16.856144362449648 10.238890446662904 Z';\n        var pivotX = left + wrapper.pivot.x * wrapper.actualSize.width;\n        var pivotY = top;\n        pivotX = (pivotX + transform.tx) * transform.scale;\n        pivotY = (pivotY + transform.ty) * transform.scale;\n        newPoint = { x: pivotX - size.width * 0.5, y: pivotY - 30 - size.height * 0.5 };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, (transform.tx + wrapper.offsetX) * transform.scale, (transform.ty + wrapper.offsetY) * transform.scale);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = {\n            x: newPoint.x,\n            y: newPoint.y,\n            angle: wrapper.rotateAngle + wrapper.parentTransform,\n            fill: '#231f20', stroke: 'black', strokeWidth: 0.5, dashArray: '', data: data,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: wrapper.id, class: 'e-diagram-rotate-handle'\n        };\n        options.id = 'rotateThumb';\n        this.svgRenderer.drawPath(canvas, options, this.diagramId, true, undefined, { 'aria-label': 'Thumb to rotate the selected object' });\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPathElement = function (element, canvas, transform, parentSvg, fromPalette, isPreviewNode) {\n        var options = this.getBaseAttributes(element, transform, isPreviewNode);\n        options.data = element.absolutePath;\n        options.data = element.absolutePath;\n        var ariaLabel = element.description ? element.description : element.id;\n        if (!this.isSvgMode) {\n            options.x = element.flipOffset.x ? element.flipOffset.x : options.x;\n            options.y = element.flipOffset.y ? element.flipOffset.y : options.y;\n        }\n        if (element.isExport) {\n            var pathBounds = element.absoluteBounds;\n            options.data = updatePath(element, pathBounds, undefined, options);\n        }\n        this.renderer.drawPath(canvas, options, this.diagramId, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderSvgGridlines = function (snapSettings, gridSvg, t, rulerSettings, hRuler, vRuler) {\n        var pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n        var defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n        defs.setAttribute('id', this.diagramId + '_grid_pattern_defn');\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines ||\n            snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            pattern.setAttribute('id', this.diagramId + '_pattern');\n        }\n        var hWidth = 0;\n        var hHeight = 0;\n        var hSegmentwidth = 0;\n        var vSegmentwidth = 0;\n        var scale = 1;\n        var isRulerGrid = false;\n        var isLine = snapSettings.gridType === 'Lines';\n        var verticalLineIntervals = isLine ?\n            snapSettings.verticalGridlines.lineIntervals : snapSettings.verticalGridlines.dotIntervals;\n        var horizontalLineIntervals = isLine ?\n            snapSettings.horizontalGridlines.lineIntervals : snapSettings.horizontalGridlines.dotIntervals;\n        if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler && vRuler) {\n            hSegmentwidth = vRuler.updateSegmentWidth(t.scale);\n            vSegmentwidth = hRuler.updateSegmentWidth(t.scale);\n            snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n            snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            isRulerGrid = true;\n        }\n        else {\n            for (var i = 0; i < verticalLineIntervals.length; i = i + 1) {\n                hWidth += verticalLineIntervals[i];\n            }\n            for (var i = 0; i < horizontalLineIntervals.length; i = i + 1) {\n                hHeight += horizontalLineIntervals[i];\n            }\n            scale = this.scaleSnapInterval(snapSettings, t.scale);\n        }\n        hWidth = isRulerGrid ? vSegmentwidth : hWidth * scale;\n        hHeight = isRulerGrid ? hSegmentwidth : hHeight * scale;\n        var attr = {\n            id: this.diagramId + '_pattern', x: 0, y: 0, width: hWidth,\n            height: hHeight, patternUnits: 'userSpaceOnUse'\n        };\n        setAttributeSvg(pattern, attr);\n        this.horizontalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid, isLine, horizontalLineIntervals);\n        this.verticalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid, isLine, verticalLineIntervals);\n        defs.appendChild(pattern);\n        gridSvg.appendChild(defs);\n    };\n    DiagramRenderer.prototype.horizontalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid, isLine, intervals) {\n        var space = 0;\n        var dashArray = [];\n        var hLine;\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines) {\n            if (snapSettings.horizontalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.horizontalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, vRuler, hHeight, isLine);\n            }\n            intervals = getInterval(intervals, isLine);\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                space = getSpaceValue(intervals, isLine, i, space);\n                var spaceY = 0;\n                hLine = document.createElementNS('http://www.w3.org/2000/svg', isLine ? 'path' : 'circle');\n                var d = isLine ? space + intervals[i] / 2 : space;\n                d = isRulerGrid ? d : d * scale;\n                var attr = void 0;\n                if (isLine) {\n                    attr = {\n                        'stroke-width': intervals[i], 'stroke': snapSettings.horizontalGridlines.lineColor,\n                        'd': 'M0,' + (d) + ' L' + hWidth + ',' + (d) + ' Z',\n                        'dashArray': dashArray.toString(),\n                        'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                    };\n                    setAttributeSvg(hLine, attr);\n                    pattern.appendChild(hLine);\n                    space += intervals[i + 1] + intervals[i];\n                }\n                else {\n                    this.renderDotGrid(i, pattern, snapSettings, spaceY, d, scale, true);\n                    space += intervals[i];\n                }\n            }\n        }\n    };\n    DiagramRenderer.prototype.renderDotGrid = function (i, pattern, snapSettings, spacey, d, scale, isHorizontal) {\n        var intervals = !isHorizontal ?\n            snapSettings.horizontalGridlines.dotIntervals : snapSettings.verticalGridlines.dotIntervals;\n        intervals = getInterval(intervals, false);\n        var r;\n        var hLine;\n        var doubleRadius;\n        var dy;\n        var attr;\n        for (var j = 1; j < intervals.length; j = j + 2) {\n            r = j === intervals.length - 1 ? intervals[0] : intervals[j - 1];\n            hLine = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n            dy = spacey;\n            dy = dy * scale;\n            attr = {\n                'cx': isHorizontal ? dy : d, 'cy': isHorizontal ? d : dy, 'fill': snapSettings.horizontalGridlines.lineColor, 'r': r\n            };\n            setAttributeSvg(hLine, attr);\n            pattern.appendChild(hLine);\n            spacey += intervals[j] + intervals[j - 1];\n        }\n    };\n    DiagramRenderer.prototype.verticalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid, isLine, intervals) {\n        var space = 0;\n        var dashArray = [];\n        var vLine;\n        if (snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            if (snapSettings.verticalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.verticalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, hRuler, hWidth, isLine);\n            }\n            var spaceY = 0;\n            intervals = getInterval(intervals, isLine);\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                space = getSpaceValue(intervals, isLine, i, space);\n                vLine = document.createElementNS('http://www.w3.org/2000/svg', isLine ? 'path' : 'circle');\n                var d = isLine ? space + intervals[i] / 2 : space;\n                d = isRulerGrid ? d : d * scale;\n                var attr = void 0;\n                if (isLine) {\n                    attr = {\n                        'stroke-width': intervals[i], 'stroke': snapSettings.verticalGridlines.lineColor,\n                        'd': 'M' + (d) + ',0 L' + (d) + ',' + hHeight + ' Z',\n                        'dashArray': dashArray.toString(),\n                        'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                    };\n                    setAttributeSvg(vLine, attr);\n                    pattern.appendChild(vLine);\n                    space += intervals[i + 1] + intervals[i];\n                }\n                else {\n                    this.renderDotGrid(i, pattern, snapSettings, spaceY, d, scale, false);\n                    space += intervals[i];\n                }\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.updateGrid = function (snapSettings, svgGrid, transform, rulerSettings, hRuler, vRuler) {\n        var grid = svgGrid.getElementById(this.diagramId + '_grid_rect');\n        var i;\n        var isRulerGrid = false;\n        if (grid) {\n            var pattern = svgGrid.getElementById(this.diagramId + '_pattern');\n            if (pattern) {\n                pattern.parentNode.removeChild(pattern);\n            }\n            var hSegmentwidth = 0;\n            var vSegmentwidth = 0;\n            var scale = 1;\n            var isLine = snapSettings.gridType === 'Lines';\n            var verticalLineIntervals = isLine ?\n                snapSettings.verticalGridlines.lineIntervals : snapSettings.verticalGridlines.dotIntervals;\n            var horizontalLineIntervals = isLine ?\n                snapSettings.horizontalGridlines.lineIntervals : snapSettings.horizontalGridlines.dotIntervals;\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler && hRuler) {\n                hSegmentwidth = vRuler.updateSegmentWidth(transform.scale);\n                vSegmentwidth = hRuler.updateSegmentWidth(transform.scale);\n                isRulerGrid = true;\n                snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n                snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            }\n            else {\n                scale = this.scaleSnapInterval(snapSettings, transform.scale);\n            }\n            var height = 0;\n            for (var j = 0; j < horizontalLineIntervals.length; j = j + 1) {\n                height += horizontalLineIntervals[j];\n            }\n            var width = 0;\n            for (var j = 0; j < verticalLineIntervals.length; j = j + 1) {\n                width += verticalLineIntervals[j];\n            }\n            var attr = {\n                x: -transform.tx * transform.scale,\n                y: -transform.ty * transform.scale\n            };\n            setAttributeSvg(grid, attr);\n            width = isRulerGrid ? vSegmentwidth : width * scale;\n            height = isRulerGrid ? hSegmentwidth : height * scale;\n            attr = {\n                id: this.diagramId + '_pattern', x: 0, y: 0, width: width,\n                height: height, patternUnits: 'userSpaceOnUse'\n            };\n            pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n            setAttributeSvg(pattern, attr);\n            this.horizontalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, vRuler, isRulerGrid, isLine, horizontalLineIntervals);\n            this.verticalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, hRuler, isRulerGrid, isLine, verticalLineIntervals);\n            var defs = svgGrid.getElementById(this.diagramId + '_grid_pattern_defn');\n            if (defs) {\n                defs.appendChild(pattern);\n            }\n        }\n    };\n    DiagramRenderer.prototype.updateLineIntervals = function (intervals, rulerSettings, ruler, segmentWidth, isLine) {\n        var newInterval = [];\n        var tickInterval = segmentWidth / ruler.interval;\n        var interval = isLine ? ruler.interval : ruler.interval + 1;\n        for (var i = 0; i < interval * 2; i++) {\n            if (i % 2 === 0) {\n                newInterval[i] = isLine ? ((i === 0) ? 1.25 : 0.25) : 0;\n            }\n            else {\n                newInterval[i] = isLine ? (tickInterval - newInterval[i - 1]) : tickInterval;\n            }\n        }\n        return newInterval;\n    };\n    DiagramRenderer.prototype.scaleSnapInterval = function (snapSettings, scale) {\n        if (scale >= 2) {\n            while (scale >= 2) {\n                scale /= 2;\n            }\n        }\n        else if (scale <= 0.5) {\n            while (scale <= 0.5) {\n                scale *= 2;\n            }\n        }\n        var i;\n        snapSettings.horizontalGridlines.scaledIntervals = snapSettings.horizontalGridlines.snapIntervals;\n        snapSettings.verticalGridlines.scaledIntervals = snapSettings.verticalGridlines.snapIntervals;\n        if (scale !== 1) {\n            var gridlines = snapSettings.horizontalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n            gridlines = snapSettings.verticalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n        }\n        return scale;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderTextElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n        options.content = element.content;\n        options.breakWord = wordBreakToString(element.style.textWrapping);\n        options.textAlign = textAlignToString(element.style.textAlign);\n        options.color = element.style.color;\n        options.italic = element.style.italic;\n        options.bold = element.style.bold;\n        options.fontSize = element.style.fontSize;\n        options.fontFamily = element.style.fontFamily;\n        options.textOverflow = element.style.textOverflow;\n        options.textWrapping = element.style.textWrapping;\n        options.textDecoration = element.style.textDecoration;\n        options.doWrap = element.doWrap;\n        options.wrapBounds = element.wrapBounds;\n        options.childNodes = element.childNodes;\n        options.isHorizontalLane = element.isLaneOrientation;\n        if (element.isLaneOrientation) {\n            options.parentOffsetX = this.groupElement.offsetX;\n            options.parentOffsetY = this.groupElement.offsetY;\n            options.parentWidth = this.groupElement.actualSize.width;\n            options.parentHeight = this.groupElement.actualSize.height;\n        }\n        options.dashArray = '';\n        options.strokeWidth = 0;\n        options.fill = element.style.fill;\n        var ariaLabel = element.description ? element.description : element.content ? element.content : element.id;\n        if ((element.style.textWrapping === 'Wrap' || element.style.textWrapping === 'WrapWithOverflow') &&\n            this.groupElement && options.height > this.groupElement.actualSize.height &&\n            (element.style.textOverflow === 'Clip' || element.style.textOverflow === 'Ellipsis')) {\n            options.y = options.y + (options.height - this.groupElement.actualSize.height) / 2;\n        }\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        this.renderer.drawText(canvas, options, parentSvg, ariaLabel, this.diagramId, (element.isExport && Math.min(element.exportScaleValue.x || element.exportScaleValue.y)), this.groupElement);\n        if (this.isSvgMode) {\n            element.doWrap = false;\n        }\n    };\n    DiagramRenderer.prototype.renderNativeElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var templateWidth;\n        var templateHeight;\n        var nativeSvg = this.getParentSvg(element, undefined, canvas) || parentSvg;\n        var nativeLayer = this.getParentElement(element, canvas, nativeSvg).g || canvas;\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        switch (element.scale) {\n            case 'None':\n                templateWidth = element.contentSize.width;\n                templateHeight = element.contentSize.height;\n                break;\n            case 'Stretch':\n                templateWidth = element.actualSize.width;\n                templateHeight = element.actualSize.height;\n                break;\n            case 'Meet':\n                if (element.actualSize.width <= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n            case 'Slice':\n                if (element.actualSize.width >= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n        }\n        if (this.svgRenderer) {\n            this.svgRenderer.drawNativeContent(element, nativeLayer, templateHeight, templateWidth, nativeSvg);\n        }\n    };\n    DiagramRenderer.prototype.renderHTMLElement = function (element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue) {\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        if (this.svgRenderer) {\n            this.svgRenderer.drawHTMLContent(element, htmlLayer.children[0], transform, isDiagramChild(htmlLayer), indexValue);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderImageElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        // let sx: number; let sy: number;\n        var imageWidth;\n        var imageHeight;\n        var sourceWidth;\n        var sourceHeight;\n        if (element.stretch === 'Stretch') {\n            imageWidth = element.actualSize.width;\n            imageHeight = element.actualSize.height;\n        }\n        else {\n            var contentWidth = element.contentSize.width;\n            var contentHeight = element.contentSize.height;\n            var widthRatio = options.width / contentWidth;\n            var heightRatio = options.height / contentHeight;\n            var ratio = void 0;\n            switch (element.stretch) {\n                case 'Meet':\n                    ratio = Math.min(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    options.x += Math.abs(options.width - imageWidth) / 2;\n                    options.y += Math.abs(options.height - imageHeight) / 2;\n                    break;\n                case 'Slice':\n                    widthRatio = options.width / contentWidth;\n                    heightRatio = options.height / contentHeight;\n                    ratio = Math.max(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    sourceWidth = options.width / imageWidth * contentWidth;\n                    sourceHeight = options.height / imageHeight * contentHeight;\n                    break;\n                case 'None':\n                    imageWidth = contentWidth;\n                    imageHeight = contentHeight;\n                    break;\n            }\n        }\n        options.width = imageWidth;\n        options.height = imageHeight;\n        //Commented for code coverage\n        //(options as ImageAttributes).sourceX = sx;\n        //(options as ImageAttributes).sourceY = sy;\n        options.sourceWidth = sourceWidth;\n        options.sourceHeight = sourceHeight;\n        options.source = element.source;\n        options.alignment = element.imageAlign;\n        options.scale = element.imageScale;\n        options.description = element.description ? element.description : element.id;\n        this.renderer.drawImage(canvas, options, parentSvg, fromPalette);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderContainer = function (group, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue, isPreviewNode) {\n        var svgParent = { svg: parentSvg, g: canvas };\n        if (this.diagramId) {\n            parentSvg = this.getParentSvg(group) || parentSvg;\n            if (this.isSvgMode) {\n                var groupElement = void 0;\n                groupElement = this.getParentElement(group, canvas, parentSvg, indexValue).g || canvas;\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children)) || parentSvg;\n                var svgNativeParent = this.getParentElement(this.hasNativeParent(group.children), groupElement, parentSvg, indexValue);\n                svgParent.svg = svgNativeParent.svg || parentSvg;\n                svgParent.g = svgNativeParent.g || groupElement;\n                if (createParent) {\n                    if (parentSvg) {\n                        if (!parentSvg.getElementById(svgParent.g.id)) {\n                            canvas.appendChild(svgParent.g);\n                        }\n                    }\n                    canvas = svgParent.g;\n                }\n                else {\n                    canvas = svgParent.g;\n                }\n            }\n        }\n        this.renderRect(group, canvas, transform, parentSvg);\n        this.groupElement = group;\n        if (group.hasChildren()) {\n            var parentG = void 0;\n            var svgParent_1;\n            var flip = void 0;\n            for (var _i = 0, _a = group.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children) || child) || parentSvg;\n                if (this.isSvgMode) {\n                    svgParent_1 = this.getParentElement(this.hasNativeParent(group.children) || child, canvas, parentSvg);\n                    parentG = svgParent_1.g || canvas;\n                    if (svgParent_1.svg) {\n                        parentSvg = svgParent_1.svg;\n                    }\n                }\n                if (!this.isSvgMode) {\n                    child.flip = group.flip;\n                }\n                this.renderElement(child, parentG || canvas, htmlLayer, transform, parentSvg, true, fromPalette, indexValue, isPreviewNode);\n                if (child instanceof TextElement && parentG && !(group.elementActions & ElementAction.ElementIsGroup)) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(child, parentG, flip);\n                }\n                if ((child.elementActions & ElementAction.ElementIsPort) && parentG) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(group, parentG, flip);\n                }\n                if (!(child instanceof TextElement) && group.flip !== 'None' &&\n                    (group.elementActions & ElementAction.ElementIsGroup)) {\n                    this.renderFlipElement(child, parentG || canvas, group.flip);\n                }\n            }\n            if (!(group.elementActions & ElementAction.ElementIsGroup)) {\n                this.renderFlipElement(group, canvas, group.flip);\n            }\n        }\n    };\n    DiagramRenderer.prototype.renderFlipElement = function (element, canvas, flip) {\n        var attr = {};\n        var scaleX = 1;\n        var scaleY = 1;\n        var posX = 0;\n        var posY = 0;\n        var offsetX = 0;\n        var offsetY = 0;\n        if (flip !== 'None') {\n            if (flip === 'Horizontal' || flip === 'Both') {\n                posX = element.bounds.center.x;\n                offsetX = -element.bounds.center.x;\n                scaleX = -1;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                posY = element.bounds.center.y;\n                offsetY = -element.bounds.center.y;\n                scaleY = -1;\n            }\n            attr = {\n                'transform': 'translate(' + posX + ',' + posY + ') scale(' + scaleX + ','\n                    + scaleY + ') translate(' + offsetX + ',' + offsetY + ')'\n            };\n        }\n        else {\n            attr = {\n                'transform': 'translate(' + 0 + ',' + 0 + ')'\n            };\n        }\n        if (attr) {\n            if (element && element.children &&\n                element.children.length && (element.children[0] instanceof DiagramHtmlElement)) {\n                var id = canvas.id.split('_preview');\n                var layer = document.getElementById(id[0] + '_html_div') ||\n                    (getHTMLLayer(this.diagramId).children[0]);\n                canvas = layer.querySelector(('#' + element.id + '_content_html_element'));\n                if (canvas) {\n                    canvas.style.transform =\n                        'scale(' + scaleX + ',' + scaleY + ')' + 'rotate(' + (element.rotateAngle + element.parentTransform) + 'deg)';\n                }\n            }\n            else {\n                setAttributeSvg(canvas, attr);\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.hasNativeParent = function (children, count) {\n        if (children && children.length > 0 && (count || 0 < 3)) {\n            var child = children[0];\n            if (child instanceof DiagramNativeElement) {\n                return child;\n            }\n            else if (child.children && child.children.length) {\n                this.hasNativeParent(child.children, count++ || 0);\n            }\n        }\n        return undefined;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRect = function (element, canvas, transform, parentSvg, isPreviewNode) {\n        var options = this.getBaseAttributes(element, transform, isPreviewNode);\n        options.cornerRadius = element.cornerRadius || 0;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawRect = function (canvas, options) {\n        options.cornerRadius = 0;\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.getBaseAttributes = function (element, transform, isPreviewNode) {\n        var options = {\n            width: element.actualSize.width, height: element.actualSize.height,\n            x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5,\n            fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n            dashArray: element.style.strokeDashArray || '', opacity: element.style.opacity, shadow: element.shadow,\n            gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n            canApplyStyle: element.canApplyStyle\n        };\n        if (isPreviewNode) {\n            options.x = options.x - .5;\n            options.y = options.y - .5;\n        }\n        if (element.isExport) {\n            options.width *= element.exportScaleValue.x;\n            options.height *= element.exportScaleValue.y;\n            options.x *= element.exportScaleValue.x;\n            options.y *= element.exportScaleValue.y;\n            options.strokeWidth *= element.exportScaleValue.x;\n        }\n        if (element.flip) {\n            options.flip = element.flip;\n        }\n        if (transform) {\n            options.x += transform.tx;\n            options.y += transform.ty;\n        }\n        return options;\n    };\n    /**   @private  */\n    DiagramRenderer.renderSvgBackGroundImage = function (background, diagramElement, x, y, width, height) {\n        if (background.source) {\n            var backgroundLayer = getBackgroundLayerSvg(diagramElement.id);\n            var target = backgroundLayer.getElementById(diagramElement.id + '_image');\n            if (!target) {\n                var bgimageLayer = getBackgroundImageLayer(diagramElement.id);\n                target = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n                target.setAttribute('id', diagramElement.id + '_image');\n                bgimageLayer.appendChild(target);\n            }\n            var imageObj = new Image();\n            imageObj.src = background.source;\n            target.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n            var scale = background.scale !== 'None' ? background.scale : '';\n            var imgAlign = background.align;\n            var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n            if (scale) {\n                aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n            }\n            var attr = {\n                'id': diagramElement.id + '_image', 'x': x, 'y': y,\n                'width': width, 'height': height,\n                'preserveAspectRatio': aspectRatio\n            };\n            setAttributeSvg(target, attr);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.transformLayers = function (transform, svgMode) {\n        var tx = transform.tx * transform.scale;\n        var ty = transform.ty * transform.scale;\n        var domTable = 'domTable';\n        if (tx !== this.transform.x || ty !== this.transform.y || (tx === 0 || ty === 0)) {\n            //diagram layer\n            if (svgMode) {\n                if (!window[domTable][this.diagramId + '_diagramLayer']) {\n                    window[domTable][this.diagramId + '_diagramLayer'] =\n                        this.diagramSvgLayer.getElementById(this.diagramId + '_diagramLayer');\n                }\n                var diagramLayer = window[domTable][this.diagramId + '_diagramLayer'];\n                diagramLayer.setAttribute('transform', 'translate('\n                    + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                    + transform.scale + ')');\n            }\n            //background\n            //gridline\n            var gridLayer = getGridLayer(this.diagramId);\n            gridLayer.setAttribute('transform', 'translate(' + (transform.tx * transform.scale) + ','\n                + (transform.ty * transform.scale) + ')');\n            //portslayer    \n            if (!window[domTable][this.diagramId + '_diagramPorts']) {\n                window[domTable][this.diagramId + '_diagramPorts'] = this.iconSvgLayer.getElementById(this.diagramId + '_diagramPorts');\n            }\n            var portsLayer = window[domTable][this.diagramId + '_diagramPorts'];\n            portsLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //expandlayer\n            if (!window[domTable][this.diagramId + '_diagramExpander']) {\n                window[domTable][this.diagramId + '_diagramExpander'] =\n                    this.iconSvgLayer.getElementById(this.diagramId + '_diagramExpander');\n            }\n            var expandLayer = window[domTable][this.diagramId + '_diagramExpander'];\n            expandLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //nativelayer\n            if (!window[domTable][this.diagramId + '_nativeLayer']) {\n                window[domTable][this.diagramId + '_nativeLayer'] = this.nativeSvgLayer.getElementById(this.diagramId + '_nativeLayer');\n            }\n            var nativeLayer = window[domTable][this.diagramId + '_nativeLayer'];\n            nativeLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //htmlLayer\n            var htmlLayer = getHTMLLayer(this.diagramId).children[0];\n            htmlLayer.style.transform = 'translate('\n                + (transform.tx * transform.scale) + 'px,' + (transform.ty * transform.scale) + 'px)scale('\n                + transform.scale + ')';\n            this.transform = { x: transform.tx * transform.scale, y: transform.ty * transform.scale };\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramRenderer.prototype.updateNode = function (element, diagramElementsLayer, htmlLayer, transform, insertIndex) {\n        this.renderElement(element, diagramElementsLayer, htmlLayer, transform, this.getParentSvg(element), undefined, undefined, insertIndex);\n    };\n    return DiagramRenderer;\n}());\nexport { DiagramRenderer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * Defines the size and appearance of the diagram page\n */\nvar Background = /** @class */ (function (_super) {\n    __extends(Background, _super);\n    function Background() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Background.prototype, \"source\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Background.prototype, \"color\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"align\", void 0);\n    return Background;\n}(ChildProperty));\nexport { Background };\nvar FitOptions = /** @class */ (function (_super) {\n    __extends(FitOptions, _super);\n    function FitOptions() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Page')\n    ], FitOptions.prototype, \"mode\", void 0);\n    __decorate([\n        Property('PageSettings')\n    ], FitOptions.prototype, \"region\", void 0);\n    __decorate([\n        Complex({ top: 25, bottom: 25, left: 25, right: 25 }, Margin)\n    ], FitOptions.prototype, \"margin\", void 0);\n    __decorate([\n        Property(false)\n    ], FitOptions.prototype, \"canZoomIn\", void 0);\n    __decorate([\n        Property(undefined)\n    ], FitOptions.prototype, \"customBounds\", void 0);\n    __decorate([\n        Property(false)\n    ], FitOptions.prototype, \"canFit\", void 0);\n    return FitOptions;\n}(ChildProperty));\nexport { FitOptions };\n/**\n * Defines the size and appearance of diagram page\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * pageSettings: {  width: 800, height: 600, orientation: 'Landscape',\n * background: { color: 'blue' }, boundaryConstraints: 'Infinity',\n * multiplePage: true, showPageBreaks: true, },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], PageSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Landscape')\n    ], PageSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Infinity')\n    ], PageSettings.prototype, \"boundaryConstraints\", void 0);\n    __decorate([\n        Complex({}, Background)\n    ], PageSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"multiplePage\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"showPageBreaks\", void 0);\n    __decorate([\n        Complex({}, FitOptions)\n    ], PageSettings.prototype, \"fitOptions\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n/**\n * Diagram ScrollSettings module handles the scroller properties of the diagram\n */\nvar ScrollSettings = /** @class */ (function (_super) {\n    __extends(ScrollSettings, _super);\n    function ScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"horizontalOffset\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"verticalOffset\", void 0);\n    __decorate([\n        Property(1)\n    ], ScrollSettings.prototype, \"currentZoom\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortHeight\", void 0);\n    __decorate([\n        Property(0.2)\n    ], ScrollSettings.prototype, \"minZoom\", void 0);\n    __decorate([\n        Property(30)\n    ], ScrollSettings.prototype, \"maxZoom\", void 0);\n    __decorate([\n        Property('Diagram')\n    ], ScrollSettings.prototype, \"scrollLimit\", void 0);\n    __decorate([\n        Property()\n    ], ScrollSettings.prototype, \"scrollableArea\", void 0);\n    __decorate([\n        Property(false)\n    ], ScrollSettings.prototype, \"canAutoScroll\", void 0);\n    __decorate([\n        Complex({ left: 15, right: 15, top: 15, bottom: 15 }, Margin)\n    ], ScrollSettings.prototype, \"autoScrollBorder\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], ScrollSettings.prototype, \"padding\", void 0);\n    return ScrollSettings;\n}(ChildProperty));\nexport { ScrollSettings };\n","/**\n * ServiceLocator\n * @hidden\n */\nvar ServiceLocator = /** @class */ (function () {\n    function ServiceLocator() {\n        this.services = {};\n    }\n    ServiceLocator.prototype.register = function (name, type) {\n        this.services[name] = type;\n    };\n    ServiceLocator.prototype.getService = function (name) {\n        return this.services[name];\n    };\n    return ServiceLocator;\n}());\nexport { ServiceLocator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { SnapConstraints } from '../enum/enum';\n/**\n * Provides a visual guidance while dragging or arranging the objects on the Diagram surface\n */\nvar Gridlines = /** @class */ (function (_super) {\n    __extends(Gridlines, _super);\n    function Gridlines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('lightgray')\n    ], Gridlines.prototype, \"lineColor\", void 0);\n    __decorate([\n        Property('')\n    ], Gridlines.prototype, \"lineDashArray\", void 0);\n    __decorate([\n        Property([1.25, 18.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75])\n    ], Gridlines.prototype, \"lineIntervals\", void 0);\n    __decorate([\n        Property([1, 19, 0.5, 19.5, 0.5, 19.5, 0.5, 19.5, 0.5, 19.5])\n    ], Gridlines.prototype, \"dotIntervals\", void 0);\n    __decorate([\n        Property([20])\n    ], Gridlines.prototype, \"snapIntervals\", void 0);\n    return Gridlines;\n}(ChildProperty));\nexport { Gridlines };\n/**\n * Defines the gridlines and defines how and when the objects have to be snapped\n * @default {}\n */\nvar SnapSettings = /** @class */ (function (_super) {\n    __extends(SnapSettings, _super);\n    function SnapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"horizontalGridlines\", void 0);\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"verticalGridlines\", void 0);\n    __decorate([\n        Property(SnapConstraints.All)\n    ], SnapSettings.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapAngle\", void 0);\n    __decorate([\n        Property('Lines')\n    ], SnapSettings.prototype, \"gridType\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapObjectDistance\", void 0);\n    return SnapSettings;\n}(ChildProperty));\nexport { SnapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Defines the properties of both horizontal and vertical guides/rulers to measure the diagram area.\n */\nvar DiagramRuler = /** @class */ (function (_super) {\n    __extends(DiagramRuler, _super);\n    function DiagramRuler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(5)\n    ], DiagramRuler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], DiagramRuler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], DiagramRuler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], DiagramRuler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], DiagramRuler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], DiagramRuler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramRuler.prototype, \"arrangeTick\", void 0);\n    return DiagramRuler;\n}(ChildProperty));\nexport { DiagramRuler };\n/**\n * Defines the ruler settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * rulerSettings: { showRulers: true,\n * horizontalRuler: { segmentWidth: 50,interval: 10 },\n * verticalRuler: {segmentWidth: 200,interval: 20}\n * },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar RulerSettings = /** @class */ (function (_super) {\n    __extends(RulerSettings, _super);\n    function RulerSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], RulerSettings.prototype, \"showRulers\", void 0);\n    __decorate([\n        Property(true)\n    ], RulerSettings.prototype, \"dynamicGrid\", void 0);\n    __decorate([\n        Complex({ orientation: 'Horizontal' }, DiagramRuler)\n    ], RulerSettings.prototype, \"horizontalRuler\", void 0);\n    __decorate([\n        Complex({ orientation: 'Vertical' }, DiagramRuler)\n    ], RulerSettings.prototype, \"verticalRuler\", void 0);\n    return RulerSettings;\n}(ChildProperty));\nexport { RulerSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar DataMappingItems = /** @class */ (function (_super) {\n    __extends(DataMappingItems, _super);\n    function DataMappingItems() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataMappingItems.prototype, \"property\", void 0);\n    __decorate([\n        Property('')\n    ], DataMappingItems.prototype, \"field\", void 0);\n    return DataMappingItems;\n}(ChildProperty));\nexport { DataMappingItems };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nimport { DataMappingItems as DataMappingItems } from './data-mapping';\n/**\n * Configures the data source that is to be bound with diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let data: object[] = [\n * { Name: \"Elizabeth\", Role: \"Director\" },\n * { Name: \"Christina\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Yoshi\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Philip\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Yang\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Roland\", ReportingPerson: \"Yang\", Role: \"Lead\" },\n * { Name: \"Yvonne\", ReportingPerson: \"Yang\", Role: \"Lead\" }\n * ];\n * let items: DataManager = new DataManager(data as JSON[]);\n * let diagram: Diagram = new Diagram({\n * ...\n * layout: {\n *             type: 'OrganizationalChart'\n * },\n * dataSourceSettings: {\n * id: 'Name', parentId: 'ReportingPerson', dataManager: items,\n * }\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar CrudAction = /** @class */ (function (_super) {\n    __extends(CrudAction, _super);\n    function CrudAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"read\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"create\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"update\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"destroy\", void 0);\n    __decorate([\n        Property()\n    ], CrudAction.prototype, \"customFields\", void 0);\n    return CrudAction;\n}(ChildProperty));\nexport { CrudAction };\nvar ConnectionDataSource = /** @class */ (function (_super) {\n    __extends(ConnectionDataSource, _super);\n    function ConnectionDataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], ConnectionDataSource.prototype, \"crudAction\", void 0);\n    return ConnectionDataSource;\n}(ChildProperty));\nexport { ConnectionDataSource };\nvar DataSource = /** @class */ (function (_super) {\n    __extends(DataSource, _super);\n    function DataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"root\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"parentId\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"doBinding\", void 0);\n    __decorate([\n        Collection([], DataMappingItems)\n    ], DataSource.prototype, \"dataMapSettings\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], DataSource.prototype, \"crudAction\", void 0);\n    __decorate([\n        Complex({}, ConnectionDataSource)\n    ], DataSource.prototype, \"connectionDataSource\", void 0);\n    return DataSource;\n}(ChildProperty));\nexport { DataSource };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Margin } from '../core/appearance';\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines the behavior of the automatic layouts\n */\nvar Layout = /** @class */ (function (_super) {\n    __extends(Layout, _super);\n    function Layout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"fixedNode\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"horizontalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"verticalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"maxIteration\", void 0);\n    __decorate([\n        Property(40)\n    ], Layout.prototype, \"springFactor\", void 0);\n    __decorate([\n        Property(50)\n    ], Layout.prototype, \"springLength\", void 0);\n    __decorate([\n        Complex({ left: 50, top: 50, right: 0, bottom: 0 }, Margin)\n    ], Layout.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property('TopToBottom')\n    ], Layout.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"connectionDirection\", void 0);\n    __decorate([\n        Property('Default')\n    ], Layout.prototype, \"connectorSegments\", void 0);\n    __decorate([\n        Property('None')\n    ], Layout.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getLayoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"layoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getBranch\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"bounds\", void 0);\n    __decorate([\n        Property(true)\n    ], Layout.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"root\", void 0);\n    return Layout;\n}(ChildProperty));\nexport { Layout };\n","import { TextElement } from '../core/elements/text-element';\nimport { Node } from '../objects/node';\nimport { getIndex, cloneObject } from './base-util';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * Defines the behavior of commands\n */\n/* tslint:disable */\nvar DeepDiffMapper = /** @class */ (function () {\n    function DeepDiffMapper() {\n        this.valueCreated = 'created';\n        this.valueUpdated = \"updated\";\n        this.valueDeleted = \"deleted\";\n        this.valueUnchanged = \"unchanged\";\n        /** @private */\n        this.newNodeObject = [];\n        /** @private */\n        this.newConnectorObject = [];\n        /**   @private  */\n        this.diagramObject = {};\n        /* tslint:enable */\n    }\n    /** @private */\n    DeepDiffMapper.prototype.updateObjectCollection = function (layers, diagram) {\n        for (var i = 0; i < layers.length; i++) {\n            if (layers[i]['objects']) {\n                layers[i]['objects'] = (diagram.layers[i].objects);\n            }\n            else {\n                layers[i]['objects'] = [];\n                layers[i]['objects'] = diagram.layers[i].objects;\n            }\n        }\n    };\n    /**   @private  */\n    DeepDiffMapper.prototype.getOldObject = function (id, isNode, diagram) {\n        var oldObject = isNode ? diagram.oldNodeObjects : diagram.oldConnectorObjects;\n        for (var i = 0; i < oldObject.length; i++) {\n            if (oldObject[i].id === id) {\n                return oldObject[i];\n            }\n        }\n        return undefined;\n    };\n    /** @private */\n    DeepDiffMapper.prototype.changeSegments = function (diff, newObject) {\n        for (var _i = 0, _a = Object.keys(diff); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            if (prop === 'segments') {\n                var seg = this.removeNullValues(newObject[prop]);\n                diff[prop] = seg;\n            }\n        }\n        return diff;\n    };\n    DeepDiffMapper.prototype.removeNullValues = function (segments) {\n        var newSegments = [];\n        var seg = {};\n        for (var i = 0; i < segments.length; i++) {\n            seg = this.removeNullObjectValues(segments[i]);\n            newSegments.push(seg);\n        }\n        return newSegments;\n    };\n    ;\n    /** @private */\n    DeepDiffMapper.prototype.removeNullObjectValues = function (segment) {\n        var newSegObject = {};\n        for (var _i = 0, _a = Object.keys(segment); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            if (segment[prop] !== undefined) {\n                newSegObject[prop] = (segment[prop] instanceof Object) ? this.removeNullObjectValues(segment[prop]) : segment[prop];\n            }\n        }\n        return newSegObject;\n    };\n    ;\n    /** @private */\n    DeepDiffMapper.prototype.getDifferenceValues = function (selectedObject, args, labelDrag, diagram) {\n        var diffValue;\n        var diff;\n        var result;\n        var isNode = selectedObject instanceof Node;\n        var oldObject;\n        if (selectedObject) {\n            oldObject = isNode ? this.getOldObject(selectedObject.id, true, diagram) : this.getOldObject(selectedObject.id, false, diagram);\n            if (oldObject) {\n                var newObject = cloneObject(selectedObject);\n                result = this.map(newObject, oldObject);\n                diffValue = this.frameObject({}, result);\n                diff = this.removeEmptyValues(diffValue);\n                diff = this.changeSegments(diff, newObject);\n                if (diff.children) {\n                    diff.children = cloneObject(selectedObject).children;\n                }\n                return this.getDiagramObjects(diff, selectedObject.id, isNode, args, labelDrag, diagram);\n            }\n        }\n    };\n    /** @private */\n    DeepDiffMapper.prototype.getLayerObject = function (oldDiagram, temp, diagram) {\n        if (isBlazor()) {\n            var diffLayers = {};\n            diffLayers['layers'] = [];\n            var newDiagram = {};\n            newDiagram['layers'] = [];\n            for (var i = 0; i < diagram.layers.length; i++) {\n                newDiagram['layers'].push(cloneObject(diagram.layers[i]));\n            }\n            var result = void 0;\n            for (var i = 0; i < newDiagram['layers'].length; i++) {\n                if (!temp) {\n                    result = this.map(cloneObject(newDiagram['layers'][i]), oldDiagram['layers'][i]);\n                }\n                else {\n                    result = this.map(oldDiagram['layers'][i], cloneObject(newDiagram['layers'][i]));\n                }\n                var diffValue = this.frameObject({}, result);\n                var diff = this.removeEmptyValues(diffValue);\n                diffLayers['layers'][i] = diff;\n            }\n            this.updateObjectCollection(diffLayers['layers'], diagram);\n            return diffLayers;\n        }\n    };\n    /** @private */\n    DeepDiffMapper.prototype.getDiagramObjects = function (diffValue, object, isNode, args, labelDrag, diagram) {\n        var index = 0;\n        index = getIndex(diagram, object);\n        diffValue.sfIndex = index;\n        if (isNode) {\n            this.newNodeObject.push(diffValue);\n        }\n        else {\n            this.newConnectorObject.push(diffValue);\n        }\n        if (args && (((args.sourceWrapper instanceof TextElement) && labelDrag) || args.portId)) {\n            var tempObject = void 0;\n            var objectValue = void 0;\n            if (isNode) {\n                objectValue = args.portId ? this.newNodeObject[0].ports : this.newNodeObject[0].annotations;\n            }\n            else {\n                objectValue = this.newConnectorObject[0].annotations || [];\n            }\n            for (var i = 0; i < objectValue.length; i++) {\n                if (Object.keys(objectValue[i]).length > 0) {\n                    var selectedObject = diagram.nameTable[object];\n                    tempObject = objectValue[i];\n                    if (args.portId) {\n                        this.newNodeObject[0].ports = [tempObject];\n                    }\n                    else {\n                        for (var j = 0; j < selectedObject.annotations.length; j++) {\n                            if (args.sourceWrapper.id === selectedObject.id + \"_\" + selectedObject.annotations[j].id) {\n                                tempObject.sfIndex = j;\n                            }\n                        }\n                        if (isNode) {\n                            this.newNodeObject[0].annotations = [tempObject];\n                        }\n                        else {\n                            this.newConnectorObject[0].annotations = [tempObject];\n                        }\n                    }\n                }\n            }\n        }\n        this.diagramObject = { nodes: this.newNodeObject, connectors: this.newConnectorObject };\n        //return returnValue;\n    };\n    DeepDiffMapper.prototype.removeArrayValues = function (obj) {\n        var newObj = [];\n        var value = JSON.stringify(obj);\n        if (!(value === JSON.stringify({ 'data': [] }))) {\n            for (var i = 0; i < obj.length; i++) {\n                if (obj[i] instanceof Object) {\n                    var newValue = this.removeEmptyValues(obj[i]);\n                    newObj.push(newValue);\n                }\n                else {\n                    newObj.push(obj[i]);\n                }\n            }\n        }\n        return newObj;\n    };\n    /** @private */\n    DeepDiffMapper.prototype.removeEmptyValues = function (frame) {\n        var newObj = {};\n        for (var _i = 0, _a = Object.keys(frame); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            if (prop !== 'wrapper' && prop !== 'data') {\n                var obj = frame[prop];\n                var value = JSON.stringify(obj);\n                if (obj instanceof Array) {\n                    var newValue = this.removeArrayValues(obj);\n                    if (JSON.stringify(newValue) !== '[]') {\n                        newObj[prop] = newValue;\n                    }\n                }\n                else {\n                    if (obj instanceof Object) {\n                        if (!(value === JSON.stringify({ 'data': [] }))) {\n                            var newValue = this.removeEmptyValues(obj);\n                            if (JSON.stringify(newValue) !== '{}') {\n                                newObj[prop] = newValue;\n                            }\n                        }\n                    }\n                    else {\n                        if (!(value === JSON.stringify(['data']) || value === JSON.stringify('data')\n                            || value === JSON.stringify({ 'data': [] }))) {\n                            if (prop !== 'version' && prop !== 'ejsAction') {\n                                newObj[prop] = frame[prop];\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return newObj;\n    };\n    DeepDiffMapper.prototype.map = function (obj1, obj2, arrayName) {\n        if (this.isFunction(obj1) || this.isFunction(obj2)) {\n            throw 'Invalid argument. Function given, object expected.';\n        }\n        if (this.isValue(obj1) || this.isValue(obj2)) {\n            return {\n                type: this.compareValues(obj1, obj2),\n                data: obj1 === undefined ? obj2 : obj1\n            };\n        }\n        var diff = {};\n        if (this.isArray(obj1)) {\n            for (var i = 0; i < obj1.length; i++) {\n                if (!diff[arrayName]) {\n                    diff[arrayName] = [];\n                }\n                var ss = this.map(obj1[i], obj2[i]);\n                diff[arrayName].push(ss);\n            }\n        }\n        else {\n            for (var key in obj1) {\n                if (this.isFunction(obj1[key])) {\n                    continue;\n                }\n                var value2 = undefined;\n                if (obj2[key] !== undefined) {\n                    value2 = obj2[key];\n                }\n                var kk = this.map(obj1[key], value2, this.isArray(value2) ? key : undefined);\n                if (this.isArray(value2)) {\n                    diff[key] = kk[key];\n                }\n                else {\n                    diff[key] = kk;\n                }\n            }\n        }\n        if (this.isArray(obj2)) {\n            for (var i = 0; i < obj2.length; i++) {\n                if (!diff[arrayName]) {\n                    diff[arrayName] = [];\n                }\n                if (this.isFunction(obj2[i]) || diff[arrayName][i] !== undefined) {\n                    if (diff[arrayName][i].type && diff[arrayName][i].type !== this.valueUpdated) {\n                        delete diff[arrayName];\n                    }\n                    continue;\n                }\n                var ss = this.map(undefined, obj2[i]);\n                diff[arrayName][i] = ss;\n            }\n        }\n        else {\n            for (var key in obj2) {\n                if (this.isFunction(obj2[key]) || diff[key] !== undefined) {\n                    if (diff[key].type && ((diff[key].type !== this.valueUpdated) && (diff[key].type !== this.valueDeleted))) {\n                        delete diff[key];\n                    }\n                    continue;\n                }\n                var kk = this.map(undefined, obj2[key]);\n                diff[key] = kk;\n            }\n        }\n        return diff;\n    };\n    DeepDiffMapper.prototype.compareValues = function (value1, value2) {\n        if (value1 === value2) {\n            return this.valueUnchanged;\n        }\n        if (this.isDate(value1) && this.isDate(value2) && value1.getTime() === value2.getTime()) {\n            return this.valueUnchanged;\n        }\n        if (value1 === undefined) {\n            return this.valueCreated;\n        }\n        if (value2 === undefined) {\n            return this.valueDeleted;\n        }\n        return this.valueUpdated;\n    };\n    DeepDiffMapper.prototype.isFunction = function (x) {\n        return Object.prototype.toString.call(x) === '[object Function]';\n    };\n    DeepDiffMapper.prototype.isArray = function (x) {\n        return Object.prototype.toString.call(x) === '[object Array]';\n    };\n    DeepDiffMapper.prototype.isDate = function (x) {\n        return Object.prototype.toString.call(x) === '[object Date]';\n    };\n    DeepDiffMapper.prototype.isObject = function (x) {\n        return Object.prototype.toString.call(x) === '[object Object]';\n    };\n    DeepDiffMapper.prototype.isValue = function (x) {\n        return !this.isObject(x) && !this.isArray(x);\n    };\n    DeepDiffMapper.prototype.frameObject = function (final, obj) {\n        for (var key in obj) {\n            if (this.isArray(obj[key])) {\n                if (!final[key]) {\n                    final[key] = [];\n                }\n                for (var i = 0; i < obj[key].length; i++) {\n                    var kk = this.frameObject({}, obj[key][i]);\n                    final[key].push(kk);\n                }\n            }\n            else {\n                if ((key != 'type') || (key == 'type' && (obj[key] !== this.valueUpdated && obj[key] !== this.valueUnchanged && obj[key] !== this.valueDeleted && obj[key] !== this.valueCreated))) {\n                    if (this.isFunction(obj[key])) {\n                        continue;\n                    }\n                    if (this.isValue(obj[key])) {\n                        return obj['data'];\n                    }\n                    else {\n                        var kk = this.frameObject({}, obj[key]);\n                        if (this.isValue(kk) || Object.keys(kk).length > 0) {\n                            final[key] = kk;\n                        }\n                    }\n                }\n            }\n        }\n        return final;\n    };\n    return DeepDiffMapper;\n}());\nexport { DeepDiffMapper };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { Node } from '../objects/node';\nimport { Connector, StraightSegment } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { BpmnSubEvent } from '../objects/node';\nimport { PointPort } from '../objects/port';\nimport { rotatePoint, cloneObject } from '../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { getPolygonPath } from '../utility/path-util';\nimport { canOutConnect, canInConnect, canAllowDrop, canPortInConnect, canPortOutConnect } from '../utility/constraints-util';\nimport { transformPointByMatrix, rotateMatrix, identityMatrix } from '../primitives/matrix';\nimport { NodeConstraints, DiagramEvent, PortConstraints } from './../enum/enum';\nimport { TextElement } from '../core/elements/text-element';\nimport { contains } from './actions';\nimport { Selector } from '../objects/node';\nimport { getInOutConnectPorts, cloneBlazorObject, getDropEventArguements, getObjectType, checkPort } from '../utility/diagram-util';\nimport { isBlazor } from '@syncfusion/ej2-base';\nimport { DeepDiffMapper } from '../utility/diff-map';\n/**\n * Defines the interactive tools\n */\nvar ToolBase = /** @class */ (function () {\n    /**\n     * Initializes the tool\n     * @param {CommandHandler} command Command that is corresponding to the current action\n     */\n    function ToolBase(command, protectChange) {\n        if (protectChange === void 0) { protectChange = false; }\n        /**\n         * Command that is corresponding to the current action\n         */\n        this.commandHandler = null;\n        this.deepDiffer = new DeepDiffMapper();\n        /**\n         * Sets/Gets whether the interaction is being done\n         */\n        this.inAction = false;\n        /**\n         * Sets/Gets the protect change\n         */\n        this.isProtectChange = false;\n        /**\n         * Sets/Gets the current element that is under mouse\n         */\n        this.currentElement = null;\n        /**   @private  */\n        this.blocked = false;\n        this.isTooltipVisible = false;\n        /** @private */\n        this.childTable = {};\n        /**\n         * Sets/Gets the previous object when mouse down\n         */\n        this.undoElement = { nodes: [], connectors: [] };\n        this.checkProperty = true;\n        this.undoParentElement = { nodes: [], connectors: [] };\n        this.commandHandler = command;\n        this.isProtectChange = protectChange;\n    }\n    ToolBase.prototype.startAction = function (currentElement) {\n        this.currentElement = currentElement;\n        this.inAction = true;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseDown = function (args) {\n        if (isBlazor()) {\n            this.commandHandler.enableCloneObject(true);\n            this.commandHandler.ismouseEvents(true);\n        }\n        this.currentElement = args.source;\n        this.startPosition = this.currentPosition = this.prevPosition = args.position;\n        this.isTooltipVisible = true;\n        this.startAction(args.source);\n        this.checkProperty = true;\n    };\n    ToolBase.prototype.checkPropertyValue = function () {\n        if (this.checkProperty) {\n            this.commandHandler.startTransaction(this.isProtectChange);\n        }\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseMove = function (args) {\n        this.currentPosition = args.position;\n        if (this.inAction) {\n            this.commandHandler.startTransaction(this.isProtectChange);\n            this.checkProperty = false;\n        }\n        //this.currentElement = currentElement;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.currentPosition = args.position;\n        // this.currentElement = currentElement;\n        this.isTooltipVisible = false;\n        this.commandHandler.endTransaction(this.isProtectChange);\n        if (isBlazor()) {\n            this.commandHandler.enableCloneObject(false);\n            this.commandHandler.ismouseEvents(false);\n            this.commandHandler.getBlazorOldValues(args, this instanceof LabelDragTool);\n        }\n        this.endAction();\n    };\n    ToolBase.prototype.endAction = function () {\n        if (!this.isTooltipVisible) {\n            this.commandHandler.closeTooltip();\n        }\n        this.commandHandler = null;\n        this.currentElement = null;\n        this.currentPosition = null;\n        this.inAction = false;\n        this.blocked = false;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseWheel = function (args) {\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ToolBase.prototype.updateSize = function (shape, startPoint, endPoint, corner, initialBounds, angle) {\n        shape = this.commandHandler.renderContainerHelper(shape) || shape;\n        var horizontalsnap = { snapped: false, offset: 0, left: false, right: false };\n        var verticalsnap = { snapped: false, offset: 0, top: false, bottom: false };\n        var difx = this.currentPosition.x - this.startPosition.x;\n        var dify = this.currentPosition.y - this.startPosition.y;\n        var snapEnabled = (!(shape instanceof TextElement)) && this.commandHandler.snappingModule\n            && this.commandHandler.snappingModule.canSnap();\n        var snapLine = snapEnabled ? this.commandHandler.snappingModule.getLayer() : null;\n        var rotateAngle = (shape instanceof TextElement) ? angle : shape.rotateAngle;\n        var matrix;\n        matrix = identityMatrix();\n        rotateMatrix(matrix, -rotateAngle, 0, 0);\n        var x = shape.offsetX;\n        var y = shape.offsetY;\n        var w = shape.width;\n        var h = shape.height;\n        x = x - w * shape.pivot.x;\n        y = y - h * shape.pivot.y;\n        var deltaWidth = 0;\n        var deltaHeight = 0;\n        var diff;\n        var width = (shape instanceof TextElement) ? shape.actualSize.width : shape.width;\n        var height = (shape instanceof TextElement) ? shape.actualSize.height : shape.height;\n        switch (corner) {\n            case 'ResizeWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                deltaHeight = 1;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width - difx) / width;\n                break;\n            case 'ResizeEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = 1;\n                break;\n            case 'ResizeNorth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n            case 'ResizeNorthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeNorthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaHeight = (initialBounds.height + dify) / height;\n                deltaWidth = (initialBounds.width + difx) / width;\n                break;\n            case 'ResizeSouthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : dify;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n        }\n        return { width: deltaWidth, height: deltaHeight };\n    };\n    ToolBase.prototype.getPivot = function (corner) {\n        switch (corner) {\n            case 'ResizeWest':\n                return { x: 1, y: 0.5 };\n            case 'ResizeEast':\n                return { x: 0, y: 0.5 };\n            case 'ResizeNorth':\n                return { x: 0.5, y: 1 };\n            case 'ResizeSouth':\n                return { x: 0.5, y: 0 };\n            case 'ResizeNorthEast':\n                return { x: 0, y: 1 };\n            case 'ResizeNorthWest':\n                return { x: 1, y: 1 };\n            case 'ResizeSouthEast':\n                return { x: 0, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: 1, y: 0 };\n        }\n        return { x: 0.5, y: 0.5 };\n    };\n    return ToolBase;\n}());\nexport { ToolBase };\n/**\n * Helps to select the objects\n */\nvar SelectTool = /** @class */ (function (_super) {\n    __extends(SelectTool, _super);\n    function SelectTool(commandHandler, protectChange, action) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.action = action;\n        return _this;\n    }\n    /**   @private  */\n    SelectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        //draw selected region\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.clearSelectedItems();\n            this.commandHandler.drawSelectionRectangle(rect.x, rect.y, rect.width, rect.height);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        //rubber band selection\n        if (!this.commandHandler.isUserHandle(this.currentPosition)) {\n            if (Point.equals(this.currentPosition, this.prevPosition) === false && this.inAction) {\n                var region = Rect.toBounds([this.prevPosition, this.currentPosition]);\n                this.commandHandler.doRubberBandSelection(region);\n            }\n            else {\n                //single selection\n                var arrayNodes = this.commandHandler.getSelectedObject();\n                if (!this.commandHandler.hasSelection() || !args.info || !args.info.ctrlKey) {\n                    this.commandHandler.clearSelection(args.source === null ? true : false);\n                    if (this.action === 'LabelSelect') {\n                        this.commandHandler.labelSelect(args.source, args.sourceWrapper);\n                    }\n                    else if (args.source) {\n                        this.commandHandler.selectObjects([args.source], false, arrayNodes);\n                    }\n                }\n                else {\n                    //handling multiple selection\n                    if (args && args.source) {\n                        if (!this.commandHandler.isSelected(args.source)) {\n                            this.commandHandler.selectObjects([args.source], true);\n                        }\n                        else {\n                            if (args.clickCount === 1) {\n                                this.commandHandler.unSelect(args.source);\n                                this.commandHandler.updateBlazorSelector();\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return SelectTool;\n}(ToolBase));\nexport { SelectTool };\n/**\n * Helps to edit the selected connectors\n */\nvar ConnectTool = /** @class */ (function (_super) {\n    __extends(ConnectTool, _super);\n    function ConnectTool(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.isConnected = false;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectTool.prototype.mouseDown = function (args) {\n        return __awaiter(this, void 0, void 0, function () {\n            var selectorModel, connector, arg, trigger, temparg, oldValue, connectors, i, segment, segmentpoint1, segmentpoint2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(isBlazor() && args && args.source)) return [3 /*break*/, 2];\n                        selectorModel = args.source;\n                        if (!selectorModel.connectors) return [3 /*break*/, 2];\n                        connector = selectorModel.connectors[0];\n                        this.oldConnector = cloneObject(connector);\n                        arg = {\n                            connector: cloneBlazorObject(connector),\n                            oldValue: { connectorTargetValue: { portId: undefined, nodeId: undefined } },\n                            newValue: { connectorTargetValue: { portId: undefined, nodeId: undefined } },\n                            cancel: false, state: 'Changing', connectorEnd: this.endPoint\n                        };\n                        trigger = DiagramEvent.connectionChange;\n                        temparg = void 0;\n                        return [4 /*yield*/, this.commandHandler.triggerEvent(trigger, arg)];\n                    case 1:\n                        temparg = (_a.sent()) || arg;\n                        this.tempArgs = temparg;\n                        if (arg.cancel || (temparg && temparg.cancel)) {\n                            this.canCancel = true;\n                        }\n                        _a.label = 2;\n                    case 2:\n                        this.inAction = true;\n                        this.undoElement = undefined;\n                        if (!(this instanceof ConnectorDrawingTool)) {\n                            this.undoElement = cloneObject(args.source);\n                        }\n                        _super.prototype.mouseDown.call(this, args);\n                        if (args.source && args.source.connectors) {\n                            oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                            connectors = args.source.connectors[0];\n                            this.oldConnector = cloneObject(connectors);\n                        }\n                        // Sets the selected segment \n                        if (this.endPoint === 'BezierSourceThumb' || this.endPoint === 'BezierTargetThumb') {\n                            for (i = 0; i < connectors.segments.length; i++) {\n                                segment = connectors.segments[i];\n                                segmentpoint1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n                                segmentpoint2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n                                if (contains(this.currentPosition, segmentpoint1, connectors.hitPadding) ||\n                                    contains(this.currentPosition, segmentpoint2, connectors.hitPadding)) {\n                                    this.selectedSegment = segment;\n                                }\n                            }\n                        }\n                        this.currentPosition = args.position;\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseUp = function (args) {\n        return __awaiter(this, void 0, void 0, function () {\n            var trigger, temparg, connector, nodeEndId, portEndId, connector, nodeEndId, portEndId, arg, oldValues, connector, targetPortName, targetNodeNode, target, arg, trigger, obj, entry, obj, entry;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!isBlazor()) return [3 /*break*/, 2];\n                        trigger = DiagramEvent.connectionChange;\n                        temparg = void 0;\n                        if (!this.tempArgs) return [3 /*break*/, 2];\n                        this.tempArgs.state = 'Changed';\n                        connector = args.source.connectors[0];\n                        nodeEndId = this.endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                        portEndId = this.endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                        this.tempArgs.oldValue = this.endPoint === 'ConnectorSourceEnd' ?\n                            { connectorSourceValue: { nodeId: this.oldConnector[nodeEndId], portId: this.oldConnector[portEndId] } } :\n                            { connectorTargetValue: { nodeId: this.oldConnector[nodeEndId], portId: this.oldConnector[portEndId] } };\n                        return [4 /*yield*/, this.commandHandler.triggerEvent(trigger, this.tempArgs)];\n                    case 1:\n                        temparg = (_a.sent());\n                        if (temparg) {\n                            this.commandHandler.updateConnectorValue(temparg);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        if (!isBlazor() && this.isConnected && args.source.connectors) {\n                            connector = args.source.connectors[0];\n                            nodeEndId = this.endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                            portEndId = this.endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                            arg = {\n                                connector: cloneBlazorObject(connector),\n                                oldValue: { nodeId: this.oldConnector[nodeEndId], portId: this.oldConnector[portEndId] },\n                                newValue: { nodeId: connector[nodeEndId], portId: connector[portEndId] }, cancel: false,\n                                state: 'Changed', connectorEnd: this.endPoint\n                            };\n                            if (connector[nodeEndId] !== this.oldConnector[nodeEndId]) {\n                                this.commandHandler.triggerEvent(DiagramEvent.connectionChange, arg);\n                                this.isConnected = false;\n                            }\n                        }\n                        this.checkPropertyValue();\n                        this.commandHandler.updateSelector();\n                        this.commandHandler.removeSnap();\n                        this.commandHandler.changeAnnotationDrag(args);\n                        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n                            args.source.connectors.length &&\n                            ((!Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint) ||\n                                (args.source.connectors[0].sourceID !== this.undoElement.connectors[0].sourceID)))) ||\n                            (this.endPoint === 'ConnectorTargetEnd' &&\n                                ((!Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint))\n                                    || (args.source.connectors[0].targetID !== this.undoElement.connectors[0].targetID))))) {\n                            oldValues = void 0;\n                            connector = void 0;\n                            if (args.source && args.source.connectors) {\n                                oldValues = {\n                                    x: this.prevPosition.x, y: this.prevPosition.y\n                                };\n                                connector = args.source.connectors[0];\n                            }\n                            targetPortName = void 0;\n                            targetNodeNode = void 0;\n                            if (args.target) {\n                                target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                                (target instanceof PointPort) ? targetPortName = target.id : targetNodeNode = target.id;\n                            }\n                            arg = {\n                                connector: connector, state: 'Completed', targetNode: targetNodeNode,\n                                oldValue: oldValues, newValue: oldValues, cancel: false, targetPort: targetPortName\n                            };\n                            if (isBlazor()) {\n                                arg = {\n                                    connector: cloneBlazorObject(connector), state: 'Completed', targetNode: targetNodeNode,\n                                    oldValue: cloneBlazorObject(oldValues), newValue: oldValues, cancel: arg.cancel, targetPort: targetPortName\n                                };\n                            }\n                            trigger = this.endPoint === 'ConnectorSourceEnd' ? DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n                            this.commandHandler.triggerEvent(trigger, arg);\n                            this.commandHandler.removeTerminalSegment(connector, true);\n                            if (this.undoElement && args.source) {\n                                obj = void 0;\n                                obj = cloneObject(args.source);\n                                entry = {\n                                    type: 'ConnectionChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement),\n                                    category: 'Internal'\n                                };\n                                this.commandHandler.addHistoryEntry(entry);\n                            }\n                        }\n                        else if (!(this instanceof ConnectorDrawingTool) &&\n                            (this.endPoint === 'BezierTargetThumb' || this.endPoint === 'BezierSourceThumb')) {\n                            if (this.undoElement && args.source) {\n                                obj = void 0;\n                                obj = cloneObject(args.source);\n                                entry = {\n                                    type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n                                };\n                                this.commandHandler.addHistoryEntry(entry);\n                            }\n                        }\n                        this.commandHandler.updateBlazorSelector();\n                        this.canCancel = undefined;\n                        this.tempArgs = undefined;\n                        _super.prototype.mouseUp.call(this, args);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /* tslint:disable */\n    /**   @private  */\n    ConnectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var tempArgs;\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint)) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint)))) {\n            var oldValue = void 0;\n            var connectors = void 0;\n            if (args.source && args.source.connectors) {\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connectors = args.source.connectors[0];\n            }\n            var targetPort = void 0;\n            var targetNode = void 0;\n            if (args.target) {\n                targetNode = args.target.id;\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort || target instanceof BpmnSubEvent) ? targetPort = target.id : targetNode = target.id;\n            }\n            var arg = {\n                connector: connectors, state: 'Start', targetNode: targetNode,\n                oldValue: oldValue, newValue: oldValue, cancel: false, targetPort: targetPort\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connectors), state: 'Start', targetNode: targetNode,\n                    oldValue: oldValue, newValue: oldValue, cancel: arg.cancel, targetPort: targetPort\n                };\n            }\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var newValue = void 0;\n            var oldValue = void 0;\n            var inPort = void 0;\n            var outPort = void 0;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                newValue = { x: this.currentPosition.x, y: this.currentPosition.y, };\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connector = args.source.connectors[0];\n            }\n            var targetPortId = void 0;\n            var targetNodeId = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortId = target.id : targetNodeId = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Progress', targetNode: targetNodeId,\n                oldValue: oldValue, newValue: newValue, cancel: false, targetPort: targetPortId\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector), state: 'Progress', targetNode: targetNodeId,\n                    oldValue: oldValue, newValue: newValue, cancel: arg.cancel, targetPort: targetPortId\n                };\n            }\n            if (!(this instanceof ConnectorDrawingTool)) {\n                var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                    DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n                this.commandHandler.triggerEvent(trigger, arg);\n            }\n            if (args.target) {\n                inPort = getInOutConnectPorts(args.target, true);\n                outPort = getInOutConnectPorts(args.target, false);\n            }\n            if (!arg.cancel && this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, args.source, this.currentPosition, this.selectedSegment, args.target, targetPortId);\n                this.commandHandler.updateSelector();\n                if (args.target && ((this.endPoint === 'ConnectorSourceEnd' && (canOutConnect(args.target) || canPortOutConnect(outPort)))\n                    || (this.endPoint === 'ConnectorTargetEnd' && (canInConnect(args.target) || canPortInConnect(inPort))))) {\n                    if (this.commandHandler.canDisconnect(this.endPoint, args, targetPortId, targetNodeId)) {\n                        tempArgs = this.commandHandler.disConnect(args.source, this.endPoint, this.canCancel);\n                        this.isConnected = true;\n                    }\n                    var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                    if (target instanceof Node) {\n                        if ((canInConnect(target) && this.endPoint === 'ConnectorTargetEnd')\n                            || (canOutConnect(target) && this.endPoint === 'ConnectorSourceEnd')) {\n                            tempArgs = this.commandHandler.connect(this.endPoint, args, this.canCancel);\n                            this.isConnected = true;\n                        }\n                    }\n                    else {\n                        var isConnect = this.checkConnect(target);\n                        if (isConnect) {\n                            this.isConnected = true;\n                            tempArgs = this.commandHandler.connect(this.endPoint, args, this.canCancel);\n                        }\n                    }\n                }\n                else if (this.endPoint.indexOf('Bezier') === -1) {\n                    this.isConnected = true;\n                    tempArgs = this.commandHandler.disConnect(args.source, this.endPoint, this.canCancel);\n                    this.commandHandler.updateSelector();\n                }\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.position);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'ConnectTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n            if (tempArgs) {\n                this.tempArgs = tempArgs;\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ConnectTool.prototype.getTooltipContent = function (position) {\n        return 'X:' + Math.round(position.x) + ' ' + 'Y:' + Math.round(position.y);\n    };\n    ConnectTool.prototype.checkConnect = function (target) {\n        if (canPortInConnect(target) && this.endPoint === 'ConnectorTargetEnd') {\n            return true;\n        }\n        else if (canPortOutConnect(target) && this.endPoint === 'ConnectorSourceEnd') {\n            return true;\n        }\n        else if (!(target.constraints & PortConstraints.None) && !canPortInConnect(target) && !canPortOutConnect(target)) {\n            return true;\n        }\n        return false;\n    };\n    /**   @private  */\n    ConnectTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.prevPosition = null;\n        this.endPoint = null;\n    };\n    return ConnectTool;\n}(ToolBase));\nexport { ConnectTool };\n/**\n * Drags the selected objects\n */\nvar MoveTool = /** @class */ (function (_super) {\n    __extends(MoveTool, _super);\n    function MoveTool(commandHandler, objType) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.currentTarget = null;\n        _this.canCancel = false;\n        _this.objectType = objType;\n        return _this;\n    }\n    /**   @private  */\n    MoveTool.prototype.mouseDown = function (args) {\n        if (args.source instanceof Node || args.source instanceof Connector) {\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            this.commandHandler.selectObjects([args.source], args.info && args.info.ctrlKey, arrayNodes);\n            var selectedObject = { nodes: [], connectors: [] };\n            if (args.source instanceof Node) {\n                selectedObject.nodes.push(cloneObject(args.source));\n            }\n            else {\n                selectedObject.connectors.push(cloneObject(args.source));\n            }\n            this.undoElement = cloneObject(selectedObject);\n        }\n        else {\n            this.undoElement = cloneObject(args.source);\n        }\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        if (this.objectType === 'Port') {\n            this.portId = args.sourceWrapper.id;\n        }\n        var oldValues;\n        if (isBlazor()) {\n            this.startPosition = this.currentPosition = this.prevPosition = args.position;\n            this.initialOffset = { x: 0, y: 0 };\n            if (args.source) {\n                oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n            }\n            var arg = {\n                source: cloneObject(args.source), state: 'Start', oldValue: oldValues, newValue: {},\n                target: cloneObject(args.target), targetPosition: args.position, allowDrop: true, cancel: false\n            };\n            this.tempArgs = arg;\n        }\n        _super.prototype.mouseDown.call(this, args);\n        this.initialOffset = { x: 0, y: 0 };\n    };\n    /* tslint:disable */\n    /**   @private  */\n    MoveTool.prototype.mouseUp = function (args, isPreventHistory) {\n        return __awaiter(this, void 0, void 0, function () {\n            var oldValues, newValues, arg, blazorArgs, tx, ty, obj, historyAdded, object, redoObject, wrapper, arg, entry, entry_1, snappedPoint, arg, nodes, isEndGroup, i, entry;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(isBlazor() && this.objectType !== 'Port')) return [3 /*break*/, 2];\n                        if (args.source) {\n                            newValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                            oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                        }\n                        arg = {\n                            source: cloneBlazorObject(args.source), state: 'Completed',\n                            oldValue: cloneBlazorObject(this.tempArgs.oldValue), newValue: cloneBlazorObject(newValues),\n                            target: cloneBlazorObject(this.currentTarget), targetPosition: cloneBlazorObject(this.currentPosition),\n                            allowDrop: true, cancel: false\n                        };\n                        return [4 /*yield*/, this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg)];\n                    case 1:\n                        blazorArgs = _a.sent();\n                        if (blazorArgs && blazorArgs.cancel) {\n                            this.canCancel = true;\n                        }\n                        if (this.canCancel) {\n                            tx = this.tempArgs.oldValue.offsetX - args.source.wrapper.offsetX;\n                            ty = this.tempArgs.oldValue.offsetY - args.source.wrapper.offsetY;\n                            this.commandHandler.dragSelectedObjects(tx, ty);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        this.checkPropertyValue();\n                        historyAdded = false;\n                        redoObject = { nodes: [], connectors: [] };\n                        if (!(this.objectType !== 'Port')) return [3 /*break*/, 7];\n                        if (args.source instanceof Node || args.source instanceof Connector) {\n                            if (args.source instanceof Node) {\n                                redoObject.nodes.push(cloneObject(args.source));\n                            }\n                            else {\n                                redoObject.connectors.push(cloneObject(args.source));\n                            }\n                            obj = cloneObject(redoObject);\n                            wrapper = args.source.wrapper;\n                            obj.offsetX = wrapper.offsetX;\n                            obj.offsetY = wrapper.offsetY;\n                        }\n                        else {\n                            obj = cloneObject(args.source);\n                        }\n                        object = this.commandHandler.renderContainerHelper(args.source) || args.source || this.commandHandler.renderContainerHelper(args.source);\n                        if ((object.id === 'helper' && !obj.nodes[0].isLane && !obj.nodes[0].isPhase)\n                            || (object.id !== 'helper')) {\n                            if (object.offsetX !== this.undoElement.offsetX || object.offsetY !== this.undoElement.offsetY ||\n                                object.sourcePoint !== this.undoElement.sourcePoint\n                                || object.targetPoint !== this.undoElement.targetPoint) {\n                                if (args.source) {\n                                    newValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                                    oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                                }\n                                arg = {\n                                    source: args.source, state: 'Completed', oldValue: oldValues, newValue: newValues,\n                                    target: this.currentTarget, targetPosition: this.currentPosition, allowDrop: true, cancel: false\n                                };\n                                arg = {\n                                    source: cloneBlazorObject(args.source), state: 'Completed',\n                                    oldValue: cloneBlazorObject(oldValues), newValue: cloneBlazorObject(newValues),\n                                    target: cloneBlazorObject(this.currentTarget), targetPosition: cloneBlazorObject(this.currentPosition),\n                                    allowDrop: arg.allowDrop, cancel: arg.cancel\n                                };\n                                if (isBlazor()) {\n                                    arg = this.getBlazorPositionChangeEventArgs(arg, this.currentTarget);\n                                }\n                                if (!isBlazor()) {\n                                    this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n                                }\n                                if (!isPreventHistory) {\n                                    this.commandHandler.startGroupAction();\n                                    historyAdded = true;\n                                    entry = {\n                                        type: 'PositionChanged',\n                                        redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n                                    };\n                                    if (obj.nodes[0] && obj.nodes[0].processId) {\n                                        entry_1 = {\n                                            type: 'SizeChanged', category: 'Internal',\n                                            undoObject: this.undoParentElement, redoObject: this.commandHandler.getSubProcess(args.source)\n                                        };\n                                        this.commandHandler.addHistoryEntry(entry_1);\n                                    }\n                                    this.commandHandler.addHistoryEntry(entry);\n                                }\n                            }\n                        }\n                        snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, 0, 0);\n                        this.commandHandler.removeSnap();\n                        this.commandHandler.removeHighlighter();\n                        if (!(args.source && this.currentTarget && canAllowDrop(this.currentTarget) &&\n                            this.commandHandler.isDroppable(args.source, this.currentTarget))) return [3 /*break*/, 6];\n                        this.commandHandler.drop(this.currentElement, this.currentTarget, this.currentPosition);\n                        arg = {\n                            element: args.source, target: this.currentTarget, position: this.currentPosition, cancel: false\n                        };\n                        if (!isBlazor()) return [3 /*break*/, 4];\n                        arg = getDropEventArguements(args, arg);\n                        return [4 /*yield*/, this.commandHandler.triggerEvent(DiagramEvent.drop, arg)];\n                    case 3:\n                        arg = (_a.sent()) || arg;\n                        return [3 /*break*/, 5];\n                    case 4:\n                        this.commandHandler.triggerEvent(DiagramEvent.drop, arg);\n                        _a.label = 5;\n                    case 5:\n                        if (!arg.cancel && args.source && this.commandHandler.isParentAsContainer(this.currentTarget)) {\n                            nodes = (args.source instanceof Selector) ? args.source.nodes : [args.source];\n                            isEndGroup = false;\n                            for (i = 0; i < nodes.length; i++) {\n                                if (!nodes[i].container) {\n                                    isEndGroup = true;\n                                    this.commandHandler.dropChildToContainer(this.currentTarget, nodes[i]);\n                                    this.commandHandler.renderContainerHelper(nodes[i]);\n                                }\n                            }\n                            if (historyAdded && this.commandHandler.isContainer && isEndGroup) {\n                                this.commandHandler.endGroupAction();\n                            }\n                        }\n                        _a.label = 6;\n                    case 6:\n                        if (args.source && this.currentTarget) {\n                            this.commandHandler.dropAnnotation(args.source, this.currentTarget);\n                        }\n                        this.commandHandler.updateSelector();\n                        if (historyAdded && !this.commandHandler.isContainer) {\n                            this.commandHandler.endGroupAction();\n                        }\n                        return [3 /*break*/, 8];\n                    case 7:\n                        redoObject.nodes.push(cloneObject(args.source));\n                        args.portId = this.portId;\n                        obj = cloneObject(redoObject);\n                        entry = {\n                            type: 'PortPositionChanged', objectId: this.portId,\n                            redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n                        };\n                        this.commandHandler.addHistoryEntry(entry);\n                        _a.label = 8;\n                    case 8:\n                        this.commandHandler.updateBlazorSelector();\n                        _super.prototype.mouseUp.call(this, args);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MoveTool.prototype.getBlazorPositionChangeEventArgs = function (args, target) {\n        args = {\n            source: cloneBlazorObject(args.source), state: args.state, oldValue: args.oldValue, newValue: args.newValue,\n            target: getObjectType(target) === Connector ? { connector: cloneBlazorObject(target) }\n                : { node: cloneBlazorObject(target) },\n            targetPosition: this.currentPosition, allowDrop: true, cancel: false\n        };\n        return args;\n    };\n    /* tslint:disable */\n    /**   @private  */\n    MoveTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var isSame = false;\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) ||\n            args.source;\n        if (object instanceof Node || object instanceof Connector) {\n            if (object instanceof Node) {\n                if (object.offsetX === this.undoElement.nodes[0].offsetX &&\n                    object.offsetY === this.undoElement.nodes[0].offsetY) {\n                    isSame = true;\n                }\n            }\n            else {\n                if (Point.equals(object.sourcePoint, this.undoElement.connectors[0].sourcePoint) &&\n                    Point.equals(object.targetPoint, this.undoElement.connectors[0].targetPoint)) {\n                    isSame = true;\n                }\n            }\n        }\n        else {\n            if (object.wrapper.offsetX === this.undoElement.wrapper.offsetX &&\n                object.wrapper.offsetY === this.undoElement.wrapper.offsetY) {\n                isSame = true;\n            }\n        }\n        var oldValues;\n        if (object) {\n            oldValues = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n        }\n        var arg = {\n            source: object, state: 'Start', oldValue: oldValues, newValue: oldValues,\n            target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n        };\n        arg = {\n            source: cloneBlazorObject(object), state: 'Start', oldValue: cloneBlazorObject(oldValues),\n            newValue: cloneBlazorObject(oldValues),\n            target: args.target, targetPosition: args.position, allowDrop: arg.allowDrop, cancel: arg.cancel\n        };\n        if (isSame && !isBlazor()) {\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.objectType !== 'Port') {\n            var x = this.currentPosition.x - this.prevPosition.x;\n            var y = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.initialOffset.x + (this.currentPosition.x - this.prevPosition.x);\n            var diffY = this.initialOffset.y + (this.currentPosition.y - this.prevPosition.y);\n            this.commandHandler.dragOverElement(args, this.currentPosition);\n            this.commandHandler.disConnect(args.source);\n            this.commandHandler.removeSnap();\n            var oldValues_1;\n            var newValues = void 0;\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, diffX, diffY);\n            this.initialOffset.x = diffX - snappedPoint.x;\n            this.initialOffset.y = diffY - snappedPoint.y;\n            if (object) {\n                oldValues_1 = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n                newValues = {\n                    offsetX: object.wrapper.offsetX + snappedPoint.x,\n                    offsetY: object.wrapper.offsetY + snappedPoint.y\n                };\n            }\n            if (this.currentTarget && args.target !== this.currentTarget) {\n                this.commandHandler.removeChildFromBPmn(args.source, args.target, this.currentTarget);\n            }\n            this.currentTarget = args.target;\n            var arg_1 = {\n                source: object, state: 'Progress', oldValue: oldValues_1, newValue: newValues,\n                target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n            };\n            if (isBlazor()) {\n                arg_1 = this.getBlazorPositionChangeEventArgs(arg_1, args.target);\n            }\n            if (!isBlazor()) {\n                this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg_1);\n            }\n            if (!arg_1.cancel && !this.canCancel) {\n                this.blocked = !this.commandHandler.dragSelectedObjects(snappedPoint.x, snappedPoint.y);\n                var blocked = !(this.commandHandler.mouseOver(this.currentElement, this.currentTarget, this.currentPosition));\n                this.blocked = this.blocked || blocked;\n            }\n            this.commandHandler.removeStackHighlighter();\n            this.commandHandler.renderStackHighlighter(args);\n            if (this.currentTarget && (args.source !== this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget) && args.source.id !== 'helper') {\n                var object_1 = (args.source instanceof Selector) ? args.source.nodes[0] : args.source;\n                if ((!this.commandHandler.isParentAsContainer(object_1, true))\n                    && (object_1.shape.type !== 'SwimLane' && !object_1.shape.isPhase)) {\n                    if (this.currentTarget.isLane) {\n                        this.commandHandler.renderStackHighlighter(args, this.currentTarget);\n                    }\n                    else {\n                        this.commandHandler.drawHighlighter(this.currentTarget);\n                    }\n                }\n            }\n            else {\n                this.commandHandler.removeHighlighter();\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.source);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'MoveTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        else {\n            var matrix = identityMatrix();\n            var node = args.source;\n            rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n            var prevPosition = transformPointByMatrix(matrix, { x: this.prevPosition.x, y: this.prevPosition.y });\n            var position = transformPointByMatrix(matrix, { x: args.position.x, y: args.position.y });\n            this.commandHandler.portDrag(args.source, args.sourceWrapper, position.x - prevPosition.x, position.y - prevPosition.y);\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    MoveTool.prototype.getTooltipContent = function (node) {\n        return 'X:' + Math.round(node.wrapper.bounds.x) + ' ' + 'Y:' + Math.round(node.wrapper.bounds.y);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    MoveTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.currentTarget = null;\n        this.prevPosition = null;\n    };\n    return MoveTool;\n}(ToolBase));\nexport { MoveTool };\n/**\n * Rotates the selected objects\n */\nvar RotateTool = /** @class */ (function (_super) {\n    __extends(RotateTool, _super);\n    function RotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    RotateTool.prototype.mouseDown = function (args) {\n        if (isBlazor()) {\n            var object = void 0;\n            object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n            var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n            var arg = {\n                source: cloneBlazorObject(args.source), state: 'Start', oldValue: oldValue, newValue: undefined, cancel: false\n            };\n            var temparg = arg;\n            this.tempArgs = temparg;\n            if (this.tempArgs && this.tempArgs.cancel) {\n                this.canCancel = true;\n            }\n        }\n        this.undoElement = cloneObject(args.source);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var objects = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], objects);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseUp = function (args) {\n        return __awaiter(this, void 0, void 0, function () {\n            var object_2, oldValue, newValue, arg, args1, object, oldValue, arg, obj, entry;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.checkPropertyValue();\n                        if (!isBlazor()) return [3 /*break*/, 2];\n                        object_2 = this.commandHandler.renderContainerHelper(args.source) || args.source;\n                        oldValue = { rotateAngle: this.tempArgs.oldValue.rotateAngle };\n                        newValue = { rotateAngle: object_2.wrapper.rotateAngle };\n                        arg = {\n                            source: cloneBlazorObject(args.source), state: 'Completed', oldValue: oldValue, newValue: newValue, cancel: false\n                        };\n                        return [4 /*yield*/, this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg)];\n                    case 1:\n                        args1 = _a.sent();\n                        if (args1 && args1.cancel) {\n                            this.canCancel = true;\n                        }\n                        if (this.canCancel) {\n                            this.commandHandler.rotatePropertyChnage(this.tempArgs.oldValue.rotateAngle);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n                        if (this.undoElement.rotateAngle !== object.wrapper.rotateAngle) {\n                            oldValue = { rotateAngle: object.wrapper.rotateAngle };\n                            arg = {\n                                source: args.source, state: 'Completed', oldValue: oldValue,\n                                newValue: oldValue, cancel: false\n                            };\n                            if (!isBlazor())\n                                this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n                            obj = void 0;\n                            obj = cloneObject(args.source);\n                            entry = {\n                                type: 'RotationChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                                childTable: this.childTable\n                            };\n                            this.commandHandler.addHistoryEntry(entry);\n                            this.commandHandler.updateSelector();\n                        }\n                        this.commandHandler.updateBlazorSelector();\n                        this.canCancel = undefined;\n                        this.tempArgs = undefined;\n                        _super.prototype.mouseUp.call(this, args);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle === object.wrapper.rotateAngle) {\n            var oldValue_1 = { rotateAngle: object.wrapper.rotateAngle };\n            var arg_2 = {\n                source: args.source, state: 'Start', oldValue: oldValue_1, newValue: oldValue_1, cancel: false\n            };\n            if (!isBlazor()) {\n                this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg_2);\n            }\n        }\n        this.currentPosition = args.position;\n        var refPoint = { x: object.wrapper.offsetX, y: object.wrapper.offsetY };\n        var angle = Point.findAngle(refPoint, this.currentPosition) + 90;\n        var snapAngle = this.commandHandler.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        angle = (angle + 360) % 360;\n        var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n        var newValue = { rotateAngle: angle };\n        var arg = {\n            source: args.source, state: 'Progress', oldValue: oldValue,\n            newValue: newValue, cancel: false\n        };\n        var arg1 = {\n            source: cloneBlazorObject(args.source), state: 'Progress', oldValue: cloneBlazorObject(oldValue),\n            newValue: cloneBlazorObject(newValue), cancel: arg.cancel\n        };\n        if (!isBlazor()) {\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg1);\n        }\n        if ((!isBlazor() && !arg1.cancel) || (isBlazor() && !this.canCancel)) {\n            this.blocked = !(this.commandHandler.rotateSelectedItems(angle - object.wrapper.rotateAngle));\n        }\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'RotateTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        return !this.blocked;\n    };\n    RotateTool.prototype.getTooltipContent = function (node) {\n        return Math.round((node.rotateAngle % 360)).toString() + '\\xB0';\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    RotateTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return RotateTool;\n}(ToolBase));\nexport { RotateTool };\n/**\n * Scales the selected objects\n */\nvar ResizeTool = /** @class */ (function (_super) {\n    __extends(ResizeTool, _super);\n    function ResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.initialBounds = new Rect();\n        _this.canCancel = false;\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    ResizeTool.prototype.mouseDown = function (args) {\n        var oldValues;\n        if (isBlazor()) {\n            this.startPosition = this.currentPosition = this.prevPosition = args.position;\n            this.currentElement = args.source;\n            this.initialBounds.x = args.source.wrapper.offsetX;\n            this.initialBounds.y = args.source.wrapper.offsetY;\n            this.initialBounds.height = args.source.wrapper.actualSize.height;\n            this.initialBounds.width = args.source.wrapper.actualSize.width;\n            if (args.source) {\n                oldValues = {\n                    offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                    width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n                };\n            }\n            var arg = {\n                source: cloneBlazorObject(args.source), state: 'Start', oldValue: oldValues, newValue: cloneBlazorObject(this.currentElement), cancel: false\n            };\n            this.tempArgs = arg;\n        }\n        this.undoElement = cloneObject(args.source);\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var elements = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], elements);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        this.commandHandler.checkSelection(args.source, this.corner);\n        _super.prototype.mouseDown.call(this, args);\n        this.initialBounds.x = args.source.wrapper.offsetX;\n        this.initialBounds.y = args.source.wrapper.offsetY;\n        this.initialBounds.height = args.source.wrapper.actualSize.height;\n        this.initialBounds.width = args.source.wrapper.actualSize.width;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseUp = function (args, isPreventHistory) {\n        return __awaiter(this, void 0, void 0, function () {\n            var obj, oldValues, arg, blazarArgs, scaleWidth, scaleHeight, object, deltaValues, oldValue, arg, obj, entry, entry_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!isBlazor()) return [3 /*break*/, 3];\n                        obj = cloneObject(args.source);\n                        oldValues = {\n                            width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height,\n                            offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY\n                        };\n                        arg = {\n                            oldValue: this.tempArgs.oldValue, newValue: oldValues, cancel: false,\n                            source: cloneBlazorObject(args.source), state: 'Completed'\n                        };\n                        if (!!this.canCancel) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg)];\n                    case 1:\n                        blazarArgs = _a.sent();\n                        if (blazarArgs && blazarArgs.cancel) {\n                            scaleWidth = this.tempArgs.oldValue.width / obj.wrapper.actualSize.width;\n                            scaleHeight = this.tempArgs.oldValue.height / obj.wrapper.actualSize.height;\n                            this.commandHandler.scaleSelectedItems(scaleWidth, scaleHeight, this.getPivot(this.corner));\n                        }\n                        _a.label = 2;\n                    case 2:\n                        this.tempArgs = undefined;\n                        this.canCancel = undefined;\n                        _a.label = 3;\n                    case 3:\n                        this.checkPropertyValue();\n                        this.commandHandler.removeSnap();\n                        this.commandHandler.updateSelector();\n                        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n                        if ((this.undoElement.offsetX !== object.wrapper.offsetX || this.undoElement.offsetY !== object.wrapper.offsetY)) {\n                            if (!isBlazor()) {\n                                deltaValues = this.updateSize(args.source, this.currentPosition, this.prevPosition, this.corner, this.initialBounds);\n                                this.blocked = this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.currentPosition, this.prevPosition, object);\n                                oldValue = {\n                                    offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                                    width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n                                };\n                                arg = {\n                                    source: cloneBlazorObject(args.source), state: 'Completed',\n                                    oldValue: oldValue, newValue: oldValue, cancel: false\n                                };\n                                this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n                            }\n                            obj = cloneObject(args.source);\n                            entry = {\n                                type: 'SizeChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                                childTable: this.childTable\n                            };\n                            if (!isPreventHistory) {\n                                this.commandHandler.startGroupAction();\n                                this.commandHandler.addHistoryEntry(entry);\n                                if (obj.nodes[0] && obj.nodes[0].processId) {\n                                    entry_2 = {\n                                        type: 'SizeChanged', redoObject: this.commandHandler.getSubProcess(args.source),\n                                        undoObject: this.undoParentElement, category: 'Internal'\n                                    };\n                                    this.commandHandler.addHistoryEntry(entry_2);\n                                }\n                                this.commandHandler.endGroupAction();\n                            }\n                        }\n                        this.commandHandler.updateBlazorSelector();\n                        _super.prototype.mouseUp.call(this, args);\n                        return [2 /*return*/, !this.blocked];\n                }\n            });\n        });\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX === object.wrapper.offsetX && this.undoElement.offsetY === object.wrapper.offsetY) {\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Start', oldValue: oldValue, newValue: this.currentElement, cancel: false\n            };\n            if (!isBlazor()) {\n                this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n            }\n        }\n        this.currentPosition = args.position;\n        var x = this.currentPosition.x - this.startPosition.x;\n        var y = this.currentPosition.y - this.startPosition.y;\n        var changes = { x: x, y: y };\n        changes = rotatePoint(-this.currentElement.wrapper.rotateAngle, undefined, undefined, changes);\n        var sx = (this.currentElement.wrapper.actualSize.width + changes.x) / this.currentElement.wrapper.actualSize.width;\n        var sy = (this.currentElement.wrapper.actualSize.height + changes.y) / this.currentElement.wrapper.actualSize.height;\n        changes = this.getChanges(changes);\n        this.commandHandler.removeSnap();\n        var deltaValues = this.updateSize(args.source, this.startPosition, this.currentPosition, this.corner, this.initialBounds);\n        this.blocked = !(this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.startPosition, this.currentPosition, object));\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'ResizeTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ResizeTool.prototype.getTooltipContent = function (node) {\n        return 'W:' + Math.round(node.wrapper.bounds.width) + ' ' + 'H:' + Math.round(node.wrapper.bounds.height);\n    };\n    ResizeTool.prototype.getChanges = function (change) {\n        switch (this.corner) {\n            case 'ResizeEast':\n                return { x: change.x, y: 0 };\n            case 'ResizeSouthEast':\n                return change;\n            case 'ResizeSouth':\n                return { x: 0, y: change.y };\n            case 'ResizeNorth':\n                return { x: 0, y: -change.y };\n            case 'ResizeNorthEast':\n                return { x: change.x, y: -change.y };\n            case 'ResizeNorthWest':\n                return { x: -change.x, y: -change.y };\n            case 'ResizeWest':\n                return { x: -change.x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -change.x, y: change.y };\n        }\n        return change;\n    };\n    /**\n     * Updates the size with delta width and delta height using scaling.\n     */\n    /**\n     * Aspect ratio used to resize the width or height based on resizing the height or width\n     */\n    ResizeTool.prototype.scaleObjects = function (deltaWidth, deltaHeight, corner, startPoint, endPoint, source) {\n        if (source instanceof Selector && source.nodes.length === 1 && source.nodes[0].constraints & NodeConstraints.AspectRatio) {\n            if (corner === 'ResizeWest' || corner === 'ResizeEast' || corner === 'ResizeNorth' || corner === 'ResizeSouth') {\n                if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                    deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n                }\n            }\n            else if (startPoint !== endPoint) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n            }\n            else {\n                deltaHeight = deltaWidth = 0;\n            }\n        }\n        var oldValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        this.blocked = this.commandHandler.scaleSelectedItems(deltaWidth, deltaHeight, this.getPivot(this.corner));\n        var newValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        var arg;\n        arg = { source: source, state: 'Progress', oldValue: oldValue, newValue: newValue, cancel: false };\n        var arg1;\n        arg1 = {\n            source: cloneBlazorObject(source), state: 'Progress',\n            oldValue: cloneBlazorObject(oldValue), newValue: cloneBlazorObject(newValue), cancel: arg.cancel\n        };\n        if (!isBlazor()) {\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg1);\n        }\n        if (arg1.cancel || this.canCancel) {\n            this.commandHandler.scaleSelectedItems(1 / deltaWidth, 1 / deltaHeight, this.getPivot(this.corner));\n        }\n        return this.blocked;\n    };\n    return ResizeTool;\n}(ToolBase));\nexport { ResizeTool };\n/**\n * Draws a node that is defined by the user\n */\nvar NodeDrawingTool = /** @class */ (function (_super) {\n    __extends(NodeDrawingTool, _super);\n    function NodeDrawingTool(commandHandler, sourceObject) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        this.commandHandler.setFocus();\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var checkBoundaryConstraints;\n        var node = {\n            offsetX: this.currentPosition.x, width: 3, height: 3,\n            offsetY: this.currentPosition.y\n        };\n        if (!this.drawingObject) {\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n            if (checkBoundaryConstraints) {\n                this.commandHandler.updateNodeDimension(this.drawingObject, rect);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var checkBoundaryConstraints;\n        var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n        checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n        if (this.drawingObject && this.drawingObject instanceof Node) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        this.commandHandler.updateBlazorSelector();\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return NodeDrawingTool;\n}(ToolBase));\nexport { NodeDrawingTool };\n/**\n * Draws a connector that is defined by the user\n */\nvar ConnectorDrawingTool = /** @class */ (function (_super) {\n    __extends(ConnectorDrawingTool, _super);\n    function ConnectorDrawingTool(commandHandler, endPoint, sourceObject) {\n        var _this = _super.call(this, commandHandler, endPoint) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /** @private */\n    ConnectorDrawingTool.prototype.mouseDown = function (args) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                _super.prototype.mouseDown.call(this, args);\n                this.inAction = true;\n                this.commandHandler.setFocus();\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseMove = function (args) {\n        if (this.inAction) {\n            var connector = {\n                sourcePoint: this.currentPosition, targetPoint: this.currentPosition,\n            };\n            if (!this.drawingObject) {\n                this.drawingObject = this.commandHandler.drawObject(connector);\n            }\n            args.source = this.drawingObject;\n            if ((args.target || (args.actualObject && args.sourceWrapper && checkPort(args.actualObject, args.sourceWrapper)))\n                && (this.endPoint !== 'ConnectorTargetEnd' || (canInConnect(args.target)))) {\n                this.commandHandler.diagram.allowServerDataBinding = false;\n                this.commandHandler.connect(this.endPoint, args);\n                this.commandHandler.diagram.allowServerDataBinding = true;\n            }\n            this.endPoint = 'ConnectorTargetEnd';\n        }\n        if (!this.inAction) {\n            this.commandHandler.updateSelector();\n            if (args.source && args.sourceWrapper) {\n                this.commandHandler.renderHighlighter(args, true);\n            }\n        }\n        _super.prototype.mouseMove.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseUp = function (args) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                this.checkPropertyValue();\n                if (this.drawingObject && this.drawingObject instanceof Connector) {\n                    this.commandHandler.addObjectToDiagram(this.drawingObject);\n                    this.drawingObject = null;\n                }\n                this.commandHandler.updateBlazorSelector();\n                this.inAction = false;\n                _super.prototype.mouseUp.call(this, args);\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return ConnectorDrawingTool;\n}(ConnectTool));\nexport { ConnectorDrawingTool };\nvar TextDrawingTool = /** @class */ (function (_super) {\n    __extends(TextDrawingTool, _super);\n    function TextDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    TextDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.commandHandler.clearSelection();\n        var node = {\n            shape: { type: 'Text' },\n            offsetX: this.currentPosition.x,\n            offsetY: this.currentPosition.y\n        };\n        if (!args.source) {\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (!this.drawingNode) {\n            var node = {\n                shape: { type: 'Text' }, offsetX: this.currentPosition.x, width: 30, height: 30,\n                style: { strokeDashArray: '2 2', fill: 'transparent' }, offsetY: this.currentPosition.y\n            };\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n        else {\n            this.drawingNode.style.strokeColor = 'black';\n            this.drawingNode.style.strokeDashArray = '2 2';\n            this.drawingNode.style.fill = 'transparent';\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.updateNodeDimension(this.drawingNode, rect);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        if (this.drawingNode) {\n            this.drawingNode.style.strokeColor = 'none';\n            this.drawingNode.style.fill = 'none';\n        }\n        else {\n            this.drawingNode = args.source;\n        }\n        if (this.drawingNode && (this.drawingNode instanceof Node || this.drawingNode instanceof Connector)) {\n            this.commandHandler.addText(this.drawingNode, this.currentPosition);\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return TextDrawingTool;\n}(ToolBase));\nexport { TextDrawingTool };\n/**\n * Pans the diagram control on drag\n */\nvar ZoomPanTool = /** @class */ (function (_super) {\n    __extends(ZoomPanTool, _super);\n    function ZoomPanTool(commandHandler, zoom) {\n        var _this = _super.call(this, commandHandler) || this;\n        _this.zooming = zoom;\n        return _this;\n    }\n    /**   @private  */\n    ZoomPanTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (!this.zooming && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                var difX = this.currentPosition.x - this.prevPosition.x;\n                var difY = this.currentPosition.y - this.prevPosition.y;\n                this.commandHandler.scroll(difX, difY, this.currentPosition);\n            }\n            else if (args.moveTouches && args.moveTouches.length && args.moveTouches.length >= 2) {\n                var startTouch0 = args.startTouches[0];\n                var startTouch1 = args.startTouches[1];\n                var moveTouch0 = args.moveTouches[0];\n                var moveTouch1 = args.moveTouches[1];\n                var scale = this.getDistance(moveTouch0, moveTouch1) / this.getDistance(startTouch0, startTouch1);\n                var focusPoint = args.position;\n                this.commandHandler.zoom(scale, 0, 0, focusPoint);\n                this.updateTouch(startTouch0, moveTouch0);\n                this.updateTouch(startTouch1, moveTouch1);\n            }\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    ZoomPanTool.prototype.getDistance = function (touch1, touch2) {\n        var x = touch2.pageX - touch1.pageX;\n        var y = touch2.pageY - touch1.pageY;\n        return Math.sqrt((x * x) + (y * y));\n    };\n    ZoomPanTool.prototype.updateTouch = function (startTouch, moveTouch) {\n        startTouch.pageX = moveTouch.pageX;\n        startTouch.pageY = moveTouch.pageY;\n    };\n    return ZoomPanTool;\n}(ToolBase));\nexport { ZoomPanTool };\n/**\n * Animate the layout during expand and collapse\n */\nvar ExpandTool = /** @class */ (function (_super) {\n    __extends(ExpandTool, _super);\n    function ExpandTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    ExpandTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.commandHandler.initExpand(args);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return ExpandTool;\n}(ToolBase));\nexport { ExpandTool };\n/**\n * Opens the annotation hypeLink at mouse up\n */\nvar LabelTool = /** @class */ (function (_super) {\n    __extends(LabelTool, _super);\n    function LabelTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var win = window.open(args.sourceWrapper.hyperlink.link, '_blank');\n        win.focus();\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return LabelTool;\n}(ToolBase));\nexport { LabelTool };\n/**\n * Draws a Polygon shape node dynamically using polygon Tool\n */\nvar PolygonDrawingTool = /** @class */ (function (_super) {\n    __extends(PolygonDrawingTool, _super);\n    function PolygonDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            this.startPoint = { x: this.startPosition.x, y: this.startPosition.y };\n            var node = {\n                offsetX: this.currentPosition.x,\n                offsetY: this.currentPosition.y,\n                width: 5, height: 5,\n                style: { strokeColor: 'black', strokeWidth: 1 },\n                shape: {\n                    type: 'Basic',\n                    shape: 'Polygon',\n                    points: [{ x: this.startPoint.x, y: this.startPoint.y }, { x: this.currentPosition.x, y: this.currentPosition.y }]\n                }\n            };\n            if (isBlazor() && node.shape.type === 'Basic') {\n                node.shape.basicShape = 'Polygon';\n            }\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        else {\n            var pt = void 0;\n            var obj = this.drawingObject.shape;\n            pt = obj.points[obj.points.length - 1];\n            pt = { x: pt.x, y: pt.y };\n            this.drawingObject.shape.points.push(pt);\n        }\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject.shape;\n            if (this.drawingObject && this.currentPosition) {\n                obj.points[obj.points.length - 1].x = this.currentPosition.x;\n                obj.points[obj.points.length - 1].y = this.currentPosition.y;\n                this.drawingObject.wrapper.children[0].data = getPolygonPath(this.drawingObject.shape.points);\n                if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                    var region = Rect.toBounds(this.drawingObject.shape.points);\n                    this.commandHandler.updateNodeDimension(this.drawingObject, region);\n                }\n            }\n        }\n        return true;\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseUp = function (args, dblClickArgs) {\n        this.checkPropertyValue();\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.inAction = false;\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.endAction = function () {\n        this.inAction = false;\n        this.drawingObject = null;\n    };\n    return PolygonDrawingTool;\n}(ToolBase));\nexport { PolygonDrawingTool };\n/**\n * Draws a PolyLine Connector dynamically using PolyLine Drawing Tool\n */\nvar PolyLineDrawingTool = /** @class */ (function (_super) {\n    __extends(PolyLineDrawingTool, _super);\n    function PolyLineDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject;\n            obj.targetPoint = this.currentPosition;\n            this.commandHandler.updateConnectorPoints(obj);\n        }\n        return true;\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            var connector = {\n                id: 'Connector',\n                type: 'Straight',\n                sourcePoint: this.currentPosition,\n                targetPoint: this.currentPosition\n            };\n            this.drawingObject = this.commandHandler.drawObject(connector);\n        }\n        else {\n            var drawObject = this.drawingObject;\n            var segment = void 0;\n            segment = new StraightSegment(drawObject, 'segments', { type: 'Straight' }, true);\n            segment.point = this.currentPosition;\n            drawObject.segments[drawObject.segments.length - 1] = segment;\n        }\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (this.drawingObject) {\n                var drawObject = this.drawingObject;\n                drawObject.segments[drawObject.segments.length - 1].point = { x: 0, y: 0 };\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.endAction = function () {\n        this.drawingObject = null;\n        this.inAction = false;\n    };\n    return PolyLineDrawingTool;\n}(ToolBase));\nexport { PolyLineDrawingTool };\nvar LabelDragTool = /** @class */ (function (_super) {\n    __extends(LabelDragTool, _super);\n    function LabelDragTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelDragTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        this.annotationId = args.sourceWrapper.id;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var difx = this.currentPosition.x - this.prevPosition.x;\n        var dify = this.currentPosition.y - this.prevPosition.y;\n        var node = args.source;\n        if (node instanceof Node) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, -node.rotateAngle, 0, 0);\n            var diff = transformPointByMatrix(matrix, { x: difx, y: dify });\n            difx = diff.x;\n            dify = diff.y;\n        }\n        if (this.inAction) {\n            this.commandHandler.labelDrag(args.source, args.sourceWrapper, difx, dify);\n            this.commandHandler.updateSelector();\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var redoValue = args.source;\n        this.inAction = false;\n        var entryValue = {\n            type: 'AnnotationPropertyChanged',\n            objectId: this.annotationId, undoObject: cloneObject(this.undoElement),\n            category: 'Internal', redoObject: cloneObject(redoValue)\n        };\n        this.commandHandler.addHistoryEntry(entryValue);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelDragTool;\n}(ToolBase));\nexport { LabelDragTool };\nvar LabelResizeTool = /** @class */ (function (_super) {\n    __extends(LabelResizeTool, _super);\n    function LabelResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    LabelResizeTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.annotationId = args.source.wrapper.children[0].id;\n        this.undoElement = cloneObject(object);\n        var annotation = args.source.wrapper.children[0];\n        this.initialBounds = {\n            x: annotation.offsetX,\n            y: annotation.offsetY,\n            width: annotation.actualSize.width,\n            height: annotation.actualSize.height\n        };\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.resizeObject(args);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var redoObject = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.inAction = false;\n        var entry = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoObject), undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entry);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.resizeObject = function (args) {\n        var object;\n        object = (args.source.nodes.length) ? args.source.nodes[0] : args.source.connectors[0];\n        var textElement = args.source.wrapper.children[0];\n        var deltaWidth;\n        var deltaHeight;\n        var center = { x: textElement.offsetX, y: textElement.offsetY };\n        var rotateAngle = textElement.rotateAngle;\n        rotateAngle += (object instanceof Node) ? object.rotateAngle : 0;\n        rotateAngle = (rotateAngle + 360) % 360;\n        var trans = identityMatrix();\n        rotateMatrix(trans, rotateAngle, center.x, center.y);\n        var corner = this.corner.slice(5);\n        var pivot = this.updateSize(textElement, this.startPosition, this.currentPosition, corner, this.initialBounds, rotateAngle);\n        var x = textElement.offsetX - textElement.actualSize.width * textElement.pivot.x;\n        var y = textElement.offsetY - textElement.actualSize.height * textElement.pivot.y;\n        var pivotPoint = this.getPivot(corner);\n        pivotPoint = { x: x + textElement.actualSize.width * pivotPoint.x, y: y + textElement.actualSize.height * pivotPoint.y };\n        var point = transformPointByMatrix(trans, pivotPoint);\n        pivot.x = point.x;\n        pivot.y = point.y;\n        deltaWidth = pivot.width;\n        deltaHeight = pivot.height;\n        deltaWidth = (deltaWidth < 0) ? 1 : deltaWidth;\n        deltaHeight = (deltaHeight < 0) ? 1 : deltaHeight;\n        this.commandHandler.labelResize(object, args.source.annotation, deltaWidth, deltaHeight, pivot, args.source);\n        this.commandHandler.updateSelector();\n    };\n    return LabelResizeTool;\n}(ToolBase));\nexport { LabelResizeTool };\nvar LabelRotateTool = /** @class */ (function (_super) {\n    __extends(LabelRotateTool, _super);\n    function LabelRotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelRotateTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.annotationId = args.source.wrapper.children[0].id;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.undoElement = cloneObject(object);\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (args.source) {\n            if (this.inAction) {\n                var object = args.source.nodes[0] ? args.source.nodes[0] :\n                    args.source.connectors[0];\n                var annotation = void 0;\n                annotation = (args.source.annotation);\n                this.commandHandler.labelRotate(object, annotation, this.currentPosition, args.source);\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.inAction = false;\n        var redoEntry = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        var entryObject = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoEntry),\n            undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entryObject);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelRotateTool;\n}(ToolBase));\nexport { LabelRotateTool };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect3, cloneBlazorObject } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { DiagramEvent } from './../enum/enum';\nimport { contains } from './actions';\nimport { getOppositeDirection } from '../utility/connector';\nimport { StraightSegment, OrthogonalSegment } from '../objects/connector';\nimport { ToolBase } from './tool';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * Multiple segments editing for Connector\n */\nvar ConnectorEditing = /** @class */ (function (_super) {\n    __extends(ConnectorEditing, _super);\n    function ConnectorEditing(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorEditing.prototype.mouseDown = function (args) {\n        var connectors;\n        var edit = true;\n        if (args.source && args.source.connectors) {\n            connectors = args.source.connectors[0];\n        }\n        if (args.info) {\n            edit = args.info.ctrlKey && args.actualObject.type !== 'Orthogonal';\n        }\n        if (connectors && edit) {\n            this.inAction = true;\n            this.undoElement = cloneObject(args.source);\n            _super.prototype.mouseDown.call(this, args);\n            // Sets the selected segment         \n            for (var i = 0; i < connectors.segments.length; i++) {\n                var segment = connectors.segments[i];\n                if (this.endPoint === 'OrthoThumb') {\n                    for (var j = 0; j < segment.points.length - 1; j++) {\n                        var segPoint = { x: 0, y: 0 };\n                        segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                        segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                        if (contains(this.currentPosition, segPoint, 30)) {\n                            this.selectedSegment = segment;\n                            this.segmentIndex = j;\n                        }\n                    }\n                }\n                else {\n                    if (contains(this.currentPosition, segment.point, 10)) {\n                        this.selectedSegment = segment;\n                    }\n                }\n            }\n        }\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                connector = args.source.connectors[0];\n            }\n            if ((this.inAction && this.selectedSegment !== undefined && this.endPoint !== undefined) && (diffX !== 0 || diffY !== 0)) {\n                if (this.endPoint === 'OrthoThumb') {\n                    this.blocked = !this.dragOrthogonalSegment(connector, this.selectedSegment, this.currentPosition, this.segmentIndex);\n                }\n                else {\n                    var tx = this.currentPosition.x - this.selectedSegment.point.x;\n                    var ty = this.currentPosition.y - this.selectedSegment.point.y;\n                    var index = connector.segments.indexOf(this.selectedSegment);\n                    this.blocked = !this.commandHandler.dragControlPoint(connector, tx, ty, false, index);\n                }\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseUp = function (args) {\n        var connector;\n        var oldValues;\n        if (args.source && args.source.connectors) {\n            connector = args.source.connectors[0];\n            oldValues = { segments: connector.segments };\n        }\n        if (args && args.source && args.info && args.info.ctrlKey && args.info.shiftKey && connector.type === 'Straight') {\n            this.addOrRemoveSegment(connector, this.currentPosition);\n        }\n        else {\n            if (this.endPoint === 'OrthoThumb' && this.selectedSegment) {\n                var index = connector.segments.indexOf(this.selectedSegment);\n                var prev = connector.segments[index - 1];\n                var next = connector.segments[index + 1];\n                if (index === connector.segments.length - 2\n                    && this.updateLastSegment(connector, this.selectedSegment)) {\n                    connector.segments.splice(connector.segments.length - 2, 1);\n                }\n                else {\n                    if (prev && Math.abs(prev.length) < 5) {\n                        if (index !== 1) {\n                            this.removePrevSegment(connector, index);\n                        }\n                    }\n                    else if (next) {\n                        var len = Point.distancePoints(next.points[0], next.points[1]);\n                        var length_1 = ((next.length || next.length === 0) ? next.length : len);\n                        if ((Math.abs(length_1) <= 5)) {\n                            this.removeNextSegment(connector, index);\n                        }\n                    }\n                }\n                this.commandHandler.updateEndPoint(connector, oldValues);\n            }\n        }\n        if (this.undoElement) {\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectorEditing.prototype.removePrevSegment = function (connector, index) {\n        var first = connector.segments[index - 2];\n        var next = connector.segments[index + 1];\n        var length = (next.length || next.length === 0) ? next.length : Point.distancePoints(next.points[0], next.points[1]);\n        if (!(length <= 5)) {\n            var removeSegments = connector.segments.slice(index - 1, index + 1);\n            var args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            if (isBlazor()) {\n                args = {\n                    element: cloneBlazorObject(connector), removeSegments: cloneBlazorObject(removeSegments),\n                    type: 'Removal', cancel: args.cancel\n                };\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                var last = connector.segments[index + 1];\n                connector.segments.splice(index - 1, 2);\n                var segment = this.selectedSegment;\n                if (segment.direction === 'Left' || segment.direction === 'Right') {\n                    first.points[first.points.length - 1].x = last.points[0].x;\n                    last.points[0].y = first.points[first.points.length - 1].y;\n                }\n                else {\n                    first.points[first.points.length - 1].y = last.points[0].y;\n                    last.points[0].x = first.points[first.points.length - 1].x;\n                }\n                if (segment.length || segment.length === 0) {\n                    this.findSegmentDirection(first);\n                }\n                this.findSegmentDirection(last);\n            }\n        }\n    };\n    ConnectorEditing.prototype.findSegmentDirection = function (segment) {\n        if (segment.direction && (segment.length || segment.length === 0)) {\n            segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n            segment.direction = Point.direction(segment.points[0], segment.points[segment.points.length - 1]);\n        }\n    };\n    ConnectorEditing.prototype.removeNextSegment = function (connector, index) {\n        var segment = this.selectedSegment;\n        var first = connector.segments[index - 1];\n        var last = connector.segments[index + 2];\n        var next = connector.segments[index + 1];\n        var removeSegments;\n        var args;\n        if (next.length || next.length === 0) {\n            removeSegments = connector.segments.slice(index, 2);\n            args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            args = {\n                element: cloneBlazorObject(connector), removeSegments: cloneBlazorObject(removeSegments),\n                type: 'Removal', cancel: false\n            };\n            if (isBlazor()) {\n                args = {\n                    element: cloneBlazorObject(connector), removeSegments: cloneBlazorObject(removeSegments),\n                    type: 'Removal', cancel: false\n                };\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                connector.segments.splice(index, 2);\n                if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                    last.points[0].y = segment.points[0].y;\n                    first.points[first.points.length - 1].x = last.points[0].x;\n                }\n                else {\n                    last.points[0].x = segment.points[0].x;\n                    first.points[first.points.length - 1].y = last.points[0].y;\n                }\n            }\n        }\n        else {\n            removeSegments = connector.segments.slice(index + 1, 1);\n            args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            if (isBlazor()) {\n                args = {\n                    element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n                };\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                connector.segments.splice(index + 1, 1);\n                if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                    first.points[first.points.length - 1].x = next.points[next.points.length - 1].x;\n                }\n                else {\n                    first.points[first.points.length - 1].y = next.points[next.points.length - 1].y;\n                }\n                this.findSegmentDirection(first);\n                segment.length = segment.direction = null;\n            }\n        }\n        if (first && last && !args.cancel) {\n            first.length = Point.distancePoints(first.points[0], last.points[0]);\n            first.direction = Point.direction(first.points[0], last.points[0]);\n            if (last.length || last.length === 0) {\n                last.length = Point.distancePoints(first.points[first.points.length - 1], last.points[last.points.length - 1]);\n                var point1 = first.points;\n                var point2 = last.points;\n                last.direction = Point.direction(point1[point1.length - 1], point2[point2.length - 1]);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addOrRemoveSegment = function (connector, point) {\n        var updateSeg;\n        var segmentIndex;\n        var oldValues = { segments: connector.segments };\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = (connector.segments)[i];\n            if (contains(point, segment.point, connector.hitPadding)) {\n                segmentIndex = i;\n                updateSeg = true;\n            }\n        }\n        if (updateSeg && segmentIndex !== undefined) {\n            if (connector.segments && connector.segments[segmentIndex] && connector.segments[segmentIndex].type === 'Straight') {\n                var segment = connector.segments[segmentIndex];\n                var previous = connector.segments[segmentIndex + 1];\n                if (previous) {\n                    connector.segments.splice(segmentIndex, 1);\n                    previous.points[0] = segment.points[0];\n                }\n            }\n        }\n        else {\n            this.commandHandler.enableServerDataBinding(false);\n            var index = this.findIndex(connector, point);\n            if (connector.segments && connector.segments[index] && connector.segments[index].type === 'Straight') {\n                var segment = connector.segments[index];\n                var newseg = new StraightSegment(connector, 'segments', { type: 'Straight', point: point }, true);\n                newseg.points[0] = segment.points[0];\n                newseg.points[1] = point;\n                segment.points[0] = point;\n                connector.segments.splice(index, 0, newseg);\n                updateSeg = true;\n            }\n            this.commandHandler.enableServerDataBinding(true);\n        }\n        if (updateSeg) {\n            this.commandHandler.updateEndPoint(connector, oldValues);\n        }\n    };\n    ConnectorEditing.prototype.findIndex = function (connector, point) {\n        var intersectingSegs = [];\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = connector.segments[i];\n            var rect = Rect.toBounds([segment.points[0], segment.points[1]]);\n            rect.Inflate(connector.hitPadding);\n            if (rect.containsPoint(point)) {\n                intersectingSegs.push(segment);\n            }\n        }\n        if (intersectingSegs.length === 1) {\n            return connector.segments.indexOf(intersectingSegs[0]);\n        }\n        else {\n            var ratio = void 0;\n            var min = void 0;\n            var index = void 0;\n            var seg = void 0;\n            var v = void 0;\n            var h = void 0;\n            for (var i = 0; i < intersectingSegs.length; i++) {\n                seg = intersectingSegs[i];\n                v = (point.y - seg.points[0].y) / (seg.points[1].y - point.y);\n                h = (point.x - seg.points[0].x) / (seg.points[1].x - point.x);\n                ratio = Math.abs(v - h);\n                if (i === 0) {\n                    min = ratio;\n                    index = 0;\n                }\n                if (ratio < min) {\n                    min = ratio;\n                    index = i;\n                }\n            }\n            return connector.segments.indexOf(intersectingSegs[index]);\n        }\n    };\n    ConnectorEditing.prototype.dragOrthogonalSegment = function (obj, segment, point, segmentIndex) {\n        var segmentPoint = { x: 0, y: 0 };\n        var oldValues = { segments: obj.segments };\n        segmentPoint.x = ((segment.points[segmentIndex].x + segment.points[segmentIndex + 1].x) / 2);\n        segmentPoint.y = ((segment.points[segmentIndex].y + segment.points[segmentIndex + 1].y) / 2);\n        var ty = point.y - segmentPoint.y;\n        var tx = point.x - segmentPoint.x;\n        var index = obj.segments.indexOf(segment);\n        var update = false;\n        var orientation = (segment.points[0].y.toFixed(2) === segment.points[1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n        var prevSegment;\n        var nextSegment;\n        if (index !== -1) {\n            if (index === 0 && obj.segments.length === 1 && segment.points.length === 2) {\n                index = this.addSegments(obj, segment, tx, ty, index);\n                update = true;\n            }\n            else if (index === obj.segments.length - 1 && (segment.direction === null || segment.length === null)) {\n                index = this.addTerminalSegment(obj, segment, tx, ty, segmentIndex);\n                update = true;\n            }\n            else if (index === 0) {\n                index = this.insertFirstSegment(obj, segment, tx, ty, index);\n                update = true;\n            }\n            if (index) {\n                if (update) {\n                    this.selectedSegment = segment = obj.segments[index];\n                    this.segmentIndex = 0;\n                }\n                this.updateAdjacentSegments(obj, index, tx, ty);\n                this.commandHandler.updateEndPoint(obj, oldValues);\n            }\n        }\n        return true;\n    };\n    ConnectorEditing.prototype.addSegments = function (obj, segment, tx, ty, coll) {\n        var index;\n        var direction;\n        var segments = [];\n        var len;\n        var length = Point.distancePoints(segment.points[0], segment.points[1]);\n        var segmentDirection = Point.direction(segment.points[0], segment.points[1]);\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 4 }, true));\n        direction = (segment.points[0].y === segment.points[1].y) ? ((ty > 0) ? 'Bottom' : 'Top') : ((tx > 0) ? 'Right' : 'Left');\n        len = (segment.points[0].x === segment.points[1].x) ? ty : tx;\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: len }, true));\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 2 }, true));\n        var args = {\n            element: obj, addSegments: segments, type: 'Addition', cancel: false\n        };\n        if (isBlazor()) {\n            args = {\n                addSegments: cloneBlazorObject(segments), type: 'Addition',\n                cancel: args.cancel, element: cloneBlazorObject(obj),\n            };\n        }\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n        if (!args.cancel) {\n            obj.segments = segments.concat(obj.segments);\n            index = coll + 2;\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.insertFirstSegment = function (obj, segment, tx, ty, coll) {\n        var direction;\n        var length;\n        var segments = [];\n        var segValues;\n        var index;\n        var insertseg;\n        if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n            var prev = void 0;\n            for (var i = 0; i < segment.points.length - 1; i++) {\n                var len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n                var dir = Point.direction(segment.points[i], segment.points[i + 1]);\n                insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: dir, length: len }, true);\n                if (insertseg.length === 0) {\n                    if (prev && (prev.direction === 'Top' || prev.direction === 'Bottom')) {\n                        insertseg.direction = tx > 0 ? 'Right' : 'Left';\n                    }\n                    else {\n                        insertseg.direction = ty > 0 ? 'Bottom' : 'Top';\n                    }\n                }\n                prev = insertseg;\n                segments.push(insertseg);\n            }\n        }\n        else {\n            segValues = { type: 'Orthogonal', direction: segment.direction, length: segment.length / 3 };\n            segments.push(new OrthogonalSegment(obj, 'segments', segValues, true));\n            if (segment.direction === 'Bottom' || segment.direction === 'Top') {\n                length = Math.abs(tx);\n                direction = tx > 0 ? 'Right' : 'Left';\n            }\n            else {\n                length = Math.abs(ty);\n                direction = ty > 0 ? 'Bottom' : 'Top';\n            }\n            insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: length }, true);\n            segments.push(insertseg);\n        }\n        var args = {\n            element: obj, addSegments: segments, type: 'Addition', cancel: false\n        };\n        if (isBlazor()) {\n            args = {\n                element: cloneBlazorObject(obj), addSegments: cloneBlazorObject(segments), type: 'Addition',\n                cancel: args.cancel\n            };\n        }\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n        if (!args.cancel) {\n            if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n                obj.segments.splice(0, 1);\n                index = 1;\n            }\n            else {\n                var nextseg = obj.segments[1];\n                if (nextseg && nextseg.length) {\n                    nextseg.length = (direction !== nextseg.direction) ? nextseg.length + length : nextseg.length - length;\n                }\n                index = 2;\n                segment.length = 2 * segment.length / 3;\n            }\n            obj.segments = segments.concat(obj.segments);\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.updateAdjacentSegments = function (obj, index, tx, ty) {\n        var current = obj.segments[index];\n        var endPoint = current.points[current.points.length - 1];\n        var startPoint = current.points[0];\n        var isNextUpdate = true;\n        if (current.type === 'Orthogonal') {\n            current.points[0] = startPoint;\n            current.points[current.points.length - 1] = endPoint;\n            var prev = obj.segments[index - 1];\n            if (prev) {\n                isNextUpdate = this.updatePreviousSegment(tx, ty, obj, index);\n            }\n            if (obj.segments.length - 1 > index && isNextUpdate) {\n                var nextSegment = obj.segments[index + 1];\n                this.updateNextSegment(obj, current, nextSegment, tx, ty);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addTerminalSegment = function (connector, segment, tx, ty, segmentIndex) {\n        var oldValues = { segments: connector.segments };\n        var index = connector.segments.indexOf(segment);\n        var first;\n        var insertseg;\n        var len;\n        var dir;\n        var segments = [];\n        var removeSegment = connector.segments.pop();\n        var last = connector.segments[connector.segments.length - 1];\n        first = (last && last.type === 'Orthogonal') ? last : null;\n        for (var i = 0; i < segment.points.length - 2; i++) {\n            len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n            dir = Point.direction(segment.points[i], segment.points[i + 1]);\n            insertseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir }, true);\n            segments.push(insertseg);\n            first = insertseg;\n        }\n        var sec = segmentIndex;\n        if (segment.points.length === 2 || sec === segment.points.length - 2) {\n            if (first) {\n                first.length += 5;\n            }\n            if (sec !== undefined) {\n                var newseg = void 0;\n                len = 2 * Point.distancePoints(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]) / 3;\n                dir = Point.direction(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]);\n                newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir });\n                segments.push(newseg);\n            }\n        }\n        var lastseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n        segments.push(lastseg);\n        var args = {\n            element: connector, addSegments: segments, type: 'Addition', cancel: false\n        };\n        var args1;\n        args1 = {\n            element: cloneBlazorObject(connector), addSegments: cloneBlazorObject(segments),\n            type: 'Addition', cancel: args.cancel\n        };\n        if (isBlazor()) {\n            args1 = {\n                element: cloneBlazorObject(connector), addSegments: cloneBlazorObject(segments),\n                type: 'Addition', cancel: args.cancel\n            };\n        }\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args1);\n        if (!args1.cancel) {\n            connector.segments = connector.segments.concat(segments);\n            index = index + segmentIndex;\n        }\n        else {\n            connector.segments.push(removeSegment);\n        }\n        this.commandHandler.updateEndPoint(connector);\n        return index;\n    };\n    ConnectorEditing.prototype.updatePortSegment = function (prev, connector, index, tx, ty) {\n        if (index === 1 && prev.points.length === 2 && prev.length < 0) {\n            var source = connector.sourceWrapper.corners;\n            var current = connector.segments[index];\n            var next = connector.segments[index + 1];\n            var newseg = void 0;\n            var segment = [];\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: 13, direction: prev.direction });\n            segment.push(newseg);\n            var len = void 0;\n            if (current.direction === 'Left') {\n                len = (current.points[0].x - (source.middleLeft.x - 20));\n            }\n            else if (current.direction === 'Right') {\n                len = ((source.middleRight.x + 20) - current.points[0].x);\n            }\n            else if (current.direction === 'Bottom') {\n                len = ((source.bottomCenter.y + 20) - current.points[0].y);\n            }\n            else {\n                len = (current.points[0].y - (source.topCenter.y - 20));\n            }\n            var dir = current.direction;\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: current.direction });\n            segment.push(newseg);\n            current.length = current.length - len;\n            if (next && next.length && next.direction) {\n                if (next.direction === prev.direction) {\n                    next.length -= 13;\n                }\n                else if (next.direction === getOppositeDirection(prev.direction)) {\n                    next.length += 13;\n                }\n            }\n            connector.segments = segment.concat(connector.segments);\n            this.selectedSegment = connector.segments[3];\n        }\n    };\n    ConnectorEditing.prototype.updatePreviousSegment = function (tx, ty, connector, index) {\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var firstSegment = (index === 1) ? true : false;\n        prev.points[prev.points.length - 1] = current.points[0];\n        var isSourceNode = (connector.sourceID && connector.sourcePortID === '') ? false : true;\n        var isNextUpdate = true;\n        if (prev.type === 'Orthogonal') {\n            if (prev.direction === 'Bottom') {\n                prev.length += ty;\n            }\n            else if (prev.direction === 'Top') {\n                prev.length -= ty;\n            }\n            else if (prev.direction === 'Right') {\n                prev.length += tx;\n            }\n            else {\n                prev.length -= tx;\n            }\n            if (connector.sourcePortID !== '' && prev.length < 0) {\n                this.updatePortSegment(prev, connector, index, tx, ty);\n            }\n            else if (connector.sourceID && connector.sourcePortID === '' && prev.length < 0 && index === 1) {\n                isNextUpdate = false;\n                this.updateFirstSegment(connector, current);\n            }\n            if (isSourceNode) {\n                this.changeSegmentDirection(prev);\n            }\n        }\n        return isNextUpdate;\n    };\n    ConnectorEditing.prototype.changeSegmentDirection = function (segment) {\n        if (segment.length < 0) {\n            segment.direction = getOppositeDirection(segment.direction);\n            segment.length *= -1;\n        }\n    };\n    ConnectorEditing.prototype.updateNextSegment = function (obj, current, next, tx, ty) {\n        var pt = current.points[current.points.length - 1];\n        next.points[0] = current.points[current.points.length - 1];\n        if (next && next.type === 'Orthogonal') {\n            if (next.length || next.length === 0) {\n                if (next.direction === 'Left' || next.direction === 'Right') {\n                    if (tx !== 0) {\n                        next.length = (next.direction === 'Right') ? next.length - tx : next.length + tx;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n                else {\n                    if (ty !== 0) {\n                        next.length = (next.direction === 'Bottom') ? next.length - ty : next.length + ty;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ConnectorEditing.prototype.updateFirstSegment = function (connector, selectedSegment) {\n        var index = connector.segments.indexOf(selectedSegment);\n        var insertfirst = false;\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var con = connector;\n        var sourcePoint;\n        var oldValues = { segments: connector.segments };\n        if (prev.length < 0 && connector.sourceID) {\n            var sourceNode = connector.sourceWrapper.corners;\n            var segments = [];\n            var segValues = void 0;\n            var removeCurrentPrev = false;\n            this.changeSegmentDirection(current);\n            var next = connector.segments[index + 1];\n            var nextNext = connector.segments[index + 2];\n            if (next) {\n                this.changeSegmentDirection(next);\n            }\n            if (nextNext) {\n                this.changeSegmentDirection(nextNext);\n            }\n            switch (prev.direction) {\n                case 'Top':\n                case 'Bottom':\n                    sourcePoint = (current.length > 0 && current.direction === 'Left') ? sourceNode.middleLeft : sourceNode.middleRight;\n                    if (current.length > sourceNode.width / 2) {\n                        if (Math.abs(prev.length) < sourceNode.height / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].x = sourcePoint.x;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].y = sourcePoint.y;\n                            next.points[0].x = next.points[next.points.length - 1].x = (current.direction === 'Right') ?\n                                sourcePoint.x + 20 : sourcePoint.x - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n                case 'Left':\n                case 'Right':\n                    sourcePoint = (current.length > 0 && current.direction === 'Top') ? sourceNode.topCenter : sourceNode.bottomCenter;\n                    if (current.length > sourceNode.height / 2) {\n                        if (Math.abs(prev.length) < sourceNode.width / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].y = sourcePoint.y;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].x = sourcePoint.x;\n                            next.points[0].y = next.points[next.points.length - 1].y = (current.direction === 'Bottom') ?\n                                sourcePoint.y + 20 : sourcePoint.y - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n            }\n            this.changeSegmentDirection(prev);\n            this.changeSegmentDirection(current);\n            if (insertfirst) {\n                segValues = { type: 'Orthogonal', direction: current.direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                if (removeCurrentPrev) {\n                    if (next && next.direction && next.length) {\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                    }\n                    if (nextNext && nextNext.direction && nextNext.length) {\n                        nextNext.length = Point.distancePoints(next.points[next.points.length - 1], nextNext.points[nextNext.points.length - 1]);\n                    }\n                    connector.segments.splice(index - 1, 2);\n                }\n                connector.segments = segments.concat(connector.segments);\n            }\n            this.selectedSegment = ((removeCurrentPrev) ? connector.segments[index - 1] :\n                connector.segments[index + 1]);\n            this.commandHandler.updateEndPoint(connector, oldValues);\n        }\n    };\n    ConnectorEditing.prototype.updateLastSegment = function (connector, selectedSegment) {\n        if (connector.targetID && connector.targetPortID === '') {\n            var line1Start = void 0;\n            var line1End = void 0;\n            var line2Start = void 0;\n            var line2End = void 0;\n            var corners = connector.targetWrapper.corners;\n            var firstSegPoint = selectedSegment.points[0];\n            var lastSegPoint = selectedSegment.points[selectedSegment.points.length - 1];\n            if (selectedSegment.direction === 'Right' || selectedSegment.direction === 'Left') {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: (selectedSegment.direction === 'Left') ? lastSegPoint.x - corners.width / 2 : lastSegPoint.x + corners.width / 2,\n                    y: lastSegPoint.y\n                };\n                line2Start = { x: corners.center.x, y: corners.center.y - corners.height };\n                line2End = { x: corners.center.x, y: corners.center.y + corners.height };\n            }\n            else {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: lastSegPoint.x,\n                    y: (selectedSegment.direction === 'Bottom') ? lastSegPoint.y + corners.height / 2 : lastSegPoint.y - corners.height / 2\n                };\n                line2Start = { x: corners.center.x - corners.width, y: corners.center.y };\n                line2End = { x: corners.center.x + corners.width, y: corners.center.y };\n            }\n            var line1 = { x1: line1Start.x, y1: line1Start.y, x2: line1End.x, y2: line1End.y };\n            var line2 = { x1: line2Start.x, y1: line2Start.y, x2: line2End.x, y2: line2End.y };\n            return (intersect3(line1, line2).enabled);\n        }\n        return false;\n    };\n    /**\n     * To destroy the connector editing module\n     * @return {void}\n     * @private\n     */\n    ConnectorEditing.prototype.destroy = function () {\n        /**\n         * Destroys the connector editing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorEditing.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'ConnectorEditingTool';\n    };\n    return ConnectorEditing;\n}(ToolBase));\nexport { ConnectorEditing };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { Point } from '../primitives/point';\nimport { Container } from '../core/containers/container';\nimport { Connector } from '../objects/connector';\nimport { NodeDrawingTool, ConnectorDrawingTool, TextDrawingTool, PolygonDrawingTool, PolyLineDrawingTool } from './tool';\nimport { Node } from '../objects/node';\nimport { SelectTool, MoveTool, ResizeTool, RotateTool, ConnectTool, ExpandTool, LabelTool, ZoomPanTool } from './tool';\nimport { LabelDragTool, LabelResizeTool, LabelRotateTool } from './tool';\nimport { ConnectorEditing } from './connector-editing';\nimport { Selector } from '../objects/node';\nimport { findToolToActivate, isSelected, getCursor, contains } from './actions';\nimport { DiagramAction, KeyModifiers, Keys, DiagramEvent, DiagramTools, RendererAction, DiagramConstraints } from '../enum/enum';\nimport { BlazorAction } from '../enum/enum';\nimport { isPointOverConnector, findObjectType, insertObject, getObjectFromCollection, getTooltipOffset } from '../utility/diagram-util';\nimport { getObjectType, getInOutConnectPorts, removeChildNodes, cloneBlazorObject, checkPort } from '../utility/diagram-util';\nimport { canZoomPan, canDraw, canDrag, canZoomTextEdit, canVitualize, canPreventClearSelection } from './../utility/constraints-util';\nimport { canMove, canEnablePointerEvents, canSelect, canEnableToolTip } from './../utility/constraints-util';\nimport { canOutConnect, canInConnect, canPortInConnect, canPortOutConnect, canAllowDrop, canUserInteract, defaultTool } from './../utility/constraints-util';\nimport { updateTooltip } from '../objects/tooltip';\nimport { PortVisibility, NodeConstraints, ConnectorConstraints, RealAction } from '../enum/enum';\nimport { addTouchPointer, measureHtmlText, getAdornerLayerSvg } from '../utility/dom-util';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { cloneObject as clone, cloneObject } from './../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix } from './../primitives/matrix';\nimport { removeRulerMarkers, drawRulerMarkers, getRulerSize, updateRuler } from '../ruler/ruler';\nimport { canContinuousDraw, canDrawOnce } from '../utility/constraints-util';\nimport { getFunction, cornersPointsBeforeRotation } from '../utility/base-util';\nimport { updateCanvasBounds, checkChildNodeInContainer, checkParentAsContainer, removeChildInContainer } from './container-interaction';\nimport { moveChildInStack, renderStackHighlighter, } from './container-interaction';\nimport { updateSwimLaneObject } from '../utility/swim-lane-util';\nimport { getConnectors, updateHeaderMaxWidth, laneInterChanged, updateConnectorsProperties } from '../utility/swim-lane-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { randomId } from '../index';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * This module handles the mouse and touch events\n */\nvar DiagramEventHandler = /** @class */ (function () {\n    /** @private */\n    function DiagramEventHandler(diagram, commandHandler) {\n        this.currentAction = 'None';\n        this.previousAction = 'None';\n        /**   @private  */\n        this.focus = false;\n        this.isBlocked = false;\n        this.isMouseDown = false;\n        this.inAction = false;\n        this.doingAutoScroll = false;\n        this.diagram = null;\n        this.objectFinder = null;\n        this.tool = null;\n        this.eventArgs = null;\n        this.keyArgs = {};\n        this.diagram = diagram;\n        this.objectFinder = new ObjectFinder();\n        this.commandHandler = commandHandler;\n    }\n    Object.defineProperty(DiagramEventHandler.prototype, \"action\", {\n        get: function () {\n            return this.currentAction;\n        },\n        set: function (action) {\n            if (action !== this.currentAction) {\n                if (this.currentAction === 'PortDraw') {\n                    this.diagram.tool &= ~DiagramTools.DrawOnce;\n                    if (this.tool) {\n                        this.tool.mouseUp({ position: this.currentPosition });\n                    }\n                    this.tool = null;\n                }\n                if (action === 'Rotate' || action === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.add('e-diagram-rotate');\n                }\n                else if (this.currentAction === 'Rotate' || this.currentAction === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n                }\n                this.currentAction = action;\n                if (this.currentAction !== 'None' && this.currentAction !== 'Select' &&\n                    !(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                    this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.ToolAction;\n                }\n                else {\n                    this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n                }\n                this.diagram.setCursor(this.diagram.getCursor(action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramEventHandler.prototype, \"blocked\", {\n        get: function () {\n            return this.isBlocked;\n        },\n        set: function (blocked) {\n            this.isBlocked = blocked;\n            if (this.blocked) {\n                this.diagram.setCursor('not-allowed');\n            }\n            else {\n                this.diagram.setCursor(this.diagram.getCursor(this.action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramEventHandler.prototype.getMousePosition = function (e) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            offsetX = touchArg.changedTouches[0].clientX;\n            offsetY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            offsetX = e.clientX;\n            offsetY = e.clientY;\n        }\n        var position = new Size();\n        position = getRulerSize(this.diagram);\n        var boundingRect = this.diagram.element.getBoundingClientRect();\n        offsetX = offsetX + this.diagram.diagramCanvas.scrollLeft - boundingRect.left - position.width;\n        offsetY = offsetY + this.diagram.diagramCanvas.scrollTop - boundingRect.top - position.height;\n        offsetX /= this.diagram.scroller.transform.scale;\n        offsetY /= this.diagram.scroller.transform.scale;\n        offsetX -= this.diagram.scroller.transform.tx;\n        offsetY -= this.diagram.scroller.transform.ty;\n        return { x: offsetX, y: offsetY };\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            _this.updateViewPortSize(_this.diagram.element);\n        }, 300);\n        return false;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.updateViewPortSize = function (element) {\n        var container = document.getElementById(element.id);\n        if (container) {\n            var bounds = container.getBoundingClientRect();\n            this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n            var position = new Size();\n            position = getRulerSize(this.diagram);\n            var width = this.diagram.getSizeValue(this.diagram.width, position.width);\n            var height = this.diagram.getSizeValue(this.diagram.height, position.height);\n            this.diagram.diagramCanvas.style.width = width;\n            this.diagram.diagramCanvas.style.height = height;\n            this.diagram.scroller.setSize();\n            this.diagram.transformLayers();\n            if (this.diagram.rulerSettings.showRulers) {\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.canHideResizers = function () {\n        return ((this.tool instanceof MoveTool || this.tool instanceof RotateTool) && this.isMouseDown);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.updateCursor = function () {\n        if ((this.diagram.selectedItems.nodes.length === 1 || this.diagram.selectedItems.connectors.length === 1)) {\n            var list = [];\n            list = list.concat(this.diagram.selectedItems.nodes, this.diagram.selectedItems.connectors);\n            this.blocked = (this.isMouseDown && list.length === 1 && this.tool instanceof SelectTool && !canMove(list[0]));\n        }\n    };\n    DiagramEventHandler.prototype.isForeignObject = function (target, isTextBox) {\n        var foreignobject = target;\n        if (foreignobject) {\n            while (foreignobject.parentNode !== null) {\n                if (typeof foreignobject.className === 'string' &&\n                    ((!isTextBox && foreignobject.className.indexOf('foreign-object') !== -1) ||\n                        (isTextBox && foreignobject.className.indexOf('e-diagram-text-edit') !== -1))) {\n                    return foreignobject;\n                }\n                else {\n                    foreignobject = foreignobject.parentNode;\n                }\n            }\n        }\n        return null;\n    };\n    DiagramEventHandler.prototype.isMetaKey = function (evt) {\n        return navigator.platform.match('Mac') ? evt.metaKey : evt.ctrlKey;\n    };\n    DiagramEventHandler.prototype.renderUmlHighLighter = function (args) {\n        this.diagram.commandHandler.removeStackHighlighter();\n        var node = this.diagram.selectedItems.nodes[0];\n        if (node && node.container && node.container.type === 'Stack' && node.shape.type === 'UmlClassifier') {\n            var bound = node.wrapper.bounds;\n            if (!bound.containsPoint(this.currentPosition)) {\n                var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n                var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                if (target && target.parentId && (target.parentId === node.id)) {\n                    var isVertical = this.diagram.nameTable[target.parentId].container.orientation === 'Vertical';\n                    renderStackHighlighter(target.wrapper, isVertical, args.position, this.diagram, true);\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.isDeleteKey = function (key, value) {\n        return (navigator.platform.match('Mac') && key === 'Backspace' && value === 'delete');\n    };\n    DiagramEventHandler.prototype.isMouseOnScrollBar = function (evt) {\n        var x = evt.offsetX;\n        var y = evt.offsetY;\n        var diagramCanvas = this.diagram.diagramCanvas;\n        var height = diagramCanvas.offsetHeight;\n        var width = diagramCanvas.offsetWidth;\n        var topLeft;\n        var topRight;\n        var bottomLeft;\n        var bottomRight;\n        var bounds;\n        if (height < diagramCanvas.scrollHeight) {\n            //default scrollbar width in browser is '17pixels'.\n            topLeft = { x: (width - 17), y: 0 };\n            topRight = { x: width, y: 0 };\n            bottomLeft = { x: (width - 17), y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x + diagramCanvas.scrollLeft, y: y + diagramCanvas.scrollTop })) {\n                return true;\n            }\n        }\n        if (width < diagramCanvas.scrollWidth) {\n            topLeft = { x: 0, y: (height - 17) };\n            topRight = { x: width, y: (height - 17) };\n            bottomLeft = { x: 0, y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x + diagramCanvas.scrollLeft, y: y + diagramCanvas.scrollTop })) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.updateVirtualization = function () {\n        var _this = this;\n        var delay = 50;\n        var removeObjectInterval;\n        removeObjectInterval = setInterval(function (args) {\n            _this.diagram.removeVirtualObjects(removeObjectInterval);\n        }, delay);\n        setTimeout(function () {\n            _this.diagram.deleteVirtualObject = true;\n        }, delay);\n    };\n    DiagramEventHandler.prototype.checkPreviousAction = function () {\n        if (this.action !== this.previousAction && this.diagram.selectedItems.userHandles.length) {\n            for (var i = 0; i < this.diagram.selectedItems.userHandles.length; i++) {\n                if (this.previousAction && this.diagram.selectedItems.userHandles[i]) {\n                    this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseLeave);\n                    this.previousAction = 'None';\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.checkUserHandleEvent = function (eventName) {\n        if (this.diagram.selectedItems && this.diagram.selectedItems.userHandles.length > 0) {\n            var currentAction = (eventName === DiagramEvent.onUserHandleMouseLeave) ? this.previousAction : this.action;\n            var arg = { element: undefined };\n            for (var i = 0; i < this.diagram.selectedItems.userHandles.length; i++) {\n                if ((currentAction === this.diagram.selectedItems.userHandles[i].name) ||\n                    (eventName === DiagramEvent.onUserHandleMouseUp && currentAction === 'Select')) {\n                    arg.element = this.diagram.selectedItems.userHandles[i];\n                    if (eventName === DiagramEvent.onUserHandleMouseEnter) {\n                        this.previousAction = this.action;\n                    }\n                    if (eventName === DiagramEvent.onUserHandleMouseDown) {\n                        this.userHandleObject = this.diagram.selectedItems.userHandles[i].name;\n                    }\n                    var element = document.getElementById(this.diagram.selectedItems.userHandles[i].name + '_userhandle');\n                    if (eventName === DiagramEvent.onUserHandleMouseUp) {\n                        if (this.commandHandler.isUserHandle(this.currentPosition)\n                            && element && element.id === this.userHandleObject + '_userhandle') {\n                            this.diagram.triggerEvent(eventName, arg);\n                        }\n                    }\n                    else {\n                        this.diagram.triggerEvent(eventName, arg);\n                    }\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.mouseDown = function (evt) {\n        this.focus = true;\n        var touches;\n        touches = evt.touches;\n        if (this.isMouseOnScrollBar(evt)) {\n            this.isScrolling = true;\n            evt.preventDefault();\n            return;\n        }\n        if (isBlazor()) {\n            this.commandHandler.oldSelectedObjects = cloneObject(this.diagram.selectedItems);\n        }\n        this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseDown);\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram)) ||\n            (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.action === 'Select' || this.action === 'Drag') {\n                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n            }\n            if (((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                && (evt.button === 2 || evt.buttons === 2))) {\n                var arg = {\n                    element: cloneBlazorObject(this.diagram), position: cloneBlazorObject(this.currentPosition),\n                    count: evt.buttons, actualObject: cloneBlazorObject(this.eventArgs.actualObject)\n                };\n                this.inAction = false;\n                this.tool.mouseUp(this.eventArgs);\n            }\n            else if (((this.inAction === true) && this.isMouseDown === true &&\n                (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool))) {\n                this.isMouseDown = true;\n                this.eventArgs = {};\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n            }\n            else {\n                this.isMouseDown = true;\n                this.currentPosition = this.prevPosition = this.getMousePosition(evt);\n                this.eventArgs = {};\n                if (this.diagram.textEditing && !this.isMouseOnScrollBar(evt)) {\n                    this.diagram.endEdit();\n                    this.diagram.textEditing = false;\n                }\n                var target = void 0;\n                var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n                var obj = this.objectFinder.findObjectUnderMouse(this.diagram, objects, this.action, this.inAction, this.eventArgs, this.currentPosition);\n                var sourceElement = null;\n                if (obj !== null) {\n                    sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                    if (sourceElement) {\n                        target = this.commandHandler.findTarget(sourceElement, obj);\n                    }\n                }\n                this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                //work around - correct it\n                var ctrlKey = this.isMetaKey(evt);\n                if (ctrlKey && evt.shiftKey && this.diagram.connectorEditingToolModule) {\n                    this.action = 'SegmentEnd';\n                }\n                else if ((ctrlKey || evt.shiftKey) && (!canZoomPan(this.diagram))) {\n                    this.action = 'Select';\n                }\n                this.tool = this.diagram.getTool(this.action);\n                if (!this.tool) {\n                    this.action = 'Select';\n                    this.tool = this.diagram.getTool(this.action);\n                }\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                if (ctrlKey || evt.shiftKey) {\n                    var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } : { ctrlKey: true };\n                    this.eventArgs.info = info;\n                }\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n                this.initialEventArgs = { source: this.eventArgs.source, sourceWrapper: this.eventArgs.sourceWrapper };\n                this.initialEventArgs.position = this.currentPosition;\n                this.initialEventArgs.info = this.eventArgs.info;\n                this.inAction = false;\n                if (evt.type === 'touchstart') {\n                    if (touches && touches.length >= 2) {\n                        this.touchStartList = addTouchPointer(this.touchStartList, evt, touches);\n                    }\n                    if (!touches) {\n                        evt.preventDefault();\n                    }\n                }\n            }\n        }\n        if (!this.isForeignObject(evt.target) && !this.isForeignObject(evt.target, true) && (!touches)) {\n            evt.preventDefault();\n        }\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.mouseMoveExtend = function (e, obj) {\n        if (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) {\n            this.tool.mouseMove(this.eventArgs);\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            this.checkAutoScroll(e);\n        }\n        else {\n            if (!this.blocked) {\n                (this.tool.mouseMove(this.eventArgs));\n            }\n        }\n        if (this.eventArgs.target) {\n            this.hoverElement = this.eventArgs.target;\n        }\n        var isNode = this.eventArgs.target instanceof Node && obj instanceof Node ? false : true;\n        if (this.tool instanceof ConnectTool) {\n            this.diagram.updatePortVisibility(this.hoverElement instanceof Node ? this.hoverElement : this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, isNode);\n        }\n        if (this.hoverElement instanceof Node\n            && this.hoverNode instanceof Node && this.hoverNode && this.hoverNode.id !== this.hoverElement.id) {\n            this.diagram.updatePortVisibility(this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, true);\n        }\n        this.hoverElement = isNode ? null : obj;\n        this.hoverNode = isNode ? null : obj;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.checkAction = function (obj) {\n        if (this.action === 'LabelSelect' && this.eventArgs.sourceWrapper &&\n            (this.eventArgs.sourceWrapper instanceof TextElement || this.eventArgs.sourceWrapper instanceof DiagramHtmlElement)) {\n            var annotation = this.commandHandler.findTarget(this.eventArgs.sourceWrapper, this.eventArgs.source);\n            if (!isSelected(this.diagram, annotation, false, this.eventArgs.sourceWrapper) && canMove(annotation)) {\n                this.action = 'LabelDrag';\n                this.tool = this.getTool(this.action);\n                this.tool.mouseDown(this.initialEventArgs);\n            }\n        }\n        else if (canMove(obj) && canSelect(obj) && this.initialEventArgs &&\n            this.initialEventArgs.source && this.action === 'Select') {\n            if (!isSelected(this.diagram, this.eventArgs.source, false) &&\n                this.eventArgs.source instanceof Selector) {\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n            }\n            if (!(obj instanceof Connector) || (obj instanceof Connector &&\n                !(contains(this.currentPosition, obj.sourcePoint, obj.hitPadding) ||\n                    contains(this.currentPosition, obj.targetPoint, obj.hitPadding)))) {\n                this.action = 'Drag';\n            }\n            this.tool = this.getTool(this.action);\n            this.tool.mouseDown(this.initialEventArgs);\n        }\n    };\n    DiagramEventHandler.prototype.isSwimlaneElements = function (obj) {\n        if (obj && (obj.isLane || obj.isPhase || obj.isHeader)) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /* tslint:disable */\n    /** @private */\n    DiagramEventHandler.prototype.mouseMove = function (e, touches) {\n        this.focus = true;\n        if (this.isScrolling) {\n            e.preventDefault();\n            return;\n        }\n        if (canUserInteract(this.diagram) || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            this.currentPosition = this.getMousePosition(e);\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            drawRulerMarkers(this.diagram, this.currentPosition);\n            var force = false;\n            var target = void 0;\n            if (e.type === 'touchmove') {\n                touches = e.touches;\n                if (touches && touches.length > 1) {\n                    this.touchMoveList = addTouchPointer(this.touchMoveList, e, touches);\n                    if (this.action !== 'PinchZoom') {\n                        force = true;\n                    }\n                }\n            }\n            if (Point.equals(this.currentPosition, this.prevPosition) === false || this.inAction) {\n                if (this.isMouseDown === false || force) {\n                    this.eventArgs = {};\n                    var sourceElement = null;\n                    if (obj !== null) {\n                        sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                        if (obj !== this.hoverElement) {\n                            var content_1 = this.getContent();\n                            if (this.hoverElement && this.hoverElement.tooltip.openOn === 'Auto' && content_1 !== '') {\n                                this.elementLeave();\n                            }\n                            this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n                            if (obj instanceof Node) {\n                                this.hoverNode = obj;\n                            }\n                            var canResetElement = true;\n                            if (!this.isSwimlaneElements(obj)\n                                && (this.hoverElement && this.isSwimlaneElements(this.hoverElement))) {\n                                canResetElement = false;\n                            }\n                            this.hoverElement = canResetElement ? obj : this.hoverElement;\n                            if (canResetElement) {\n                                this.elementEnter(this.currentPosition, false);\n                            }\n                            else {\n                                this.hoverElement = obj;\n                            }\n                        }\n                        else if (!this.hoverElement && this.hoverElement === obj) {\n                            this.elementEnter(this.currentPosition, true);\n                        }\n                        if (sourceElement) {\n                            target = this.commandHandler.findTarget(sourceElement, obj);\n                        }\n                    }\n                    this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                    this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseEnter);\n                    this.checkPreviousAction();\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    this.tool = this.getTool(this.action);\n                    this.mouseEvents();\n                    if (this.tool instanceof ConnectorDrawingTool ||\n                        this.tool instanceof PolyLineDrawingTool ||\n                        this.tool instanceof PolygonDrawingTool) {\n                        this.tool.mouseMove(this.eventArgs);\n                    }\n                    else if (touches && this.tool instanceof ZoomPanTool) {\n                        this.tool.mouseDown(this.eventArgs);\n                    }\n                    this.updateCursor();\n                    this.renderUmlHighLighter(this.eventArgs);\n                    var isNode = false;\n                    if (!(this.hoverElement && (!(this.tool instanceof ZoomPanTool))\n                        && (obj instanceof Node && this.isSwimlaneElements(obj)) &&\n                        (this.diagram.selectedItems.nodes.length === 0 || !isSelected(this.diagram, this.hoverElement)))) {\n                        isNode = true;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, isNode);\n                    var content = this.getContent();\n                    if (obj === null && this.hoverElement && this.hoverElement.tooltip.openOn === 'Auto' && content) {\n                        this.hoverElement = null;\n                        this.elementLeave();\n                    }\n                    force = false;\n                }\n                else {\n                    this.eventArgs.position = this.currentPosition;\n                    if (this.action === 'Drag' && !isSelected(this.diagram, this.eventArgs.source, false) &&\n                        this.eventArgs.source instanceof Selector) {\n                        this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    }\n                    this.mouseEvents();\n                    if (e.ctrlKey || e.shiftKey) {\n                        var info = (e.ctrlKey && e.shiftKey) ? { ctrlKey: e.ctrlKey, shiftKey: e.shiftKey } : { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    this.checkAction(obj);\n                    var padding = this.getConnectorPadding(this.eventArgs);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source, padding);\n                    this.updateCursor();\n                    this.inAction = true;\n                    this.initialEventArgs = null;\n                    if (this.action === 'Drag' || this.action === 'Rotate') {\n                        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Interactions;\n                    }\n                    this.mouseMoveExtend(e, obj);\n                }\n                this.prevPosition = this.currentPosition;\n                if (!this.isForeignObject(e.target, true)) {\n                    e.preventDefault();\n                }\n            }\n        }\n    };\n    /* tslint:enable */\n    DiagramEventHandler.prototype.getContent = function () {\n        var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n            this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n            ((this.hoverElement instanceof Connector) &&\n                this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n        var content = isPrivateTooltip ? this.hoverElement.tooltip.content :\n            this.diagram.tooltip.content;\n        return content;\n    };\n    DiagramEventHandler.prototype.checkAutoScroll = function (e) {\n        var autoScrollPosition = this.startAutoScroll(e);\n        if (!autoScrollPosition && this.doingAutoScroll) {\n            this.doingAutoScroll = false;\n            clearInterval(this.timeOutValue);\n        }\n        else if (autoScrollPosition) {\n            if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n                || this.tool instanceof SelectTool) && this.inAction) {\n                var diagram_1 = this;\n                var delay_1 = 100;\n                if (this.diagram.scrollSettings.canAutoScroll && autoScrollPosition && !this.doingAutoScroll) {\n                    this.doingAutoScroll = true;\n                    this.timeOutValue = setInterval(function (args) {\n                        diagram_1.doAutoScroll(autoScrollPosition, e, delay_1);\n                    }, delay_1);\n                }\n            }\n        }\n        else {\n            this.blocked = !(this.tool.mouseMove(this.eventArgs));\n        }\n    };\n    /* tslint:disable */\n    /** @private */\n    DiagramEventHandler.prototype.mouseUp = function (evt) {\n        var touches;\n        this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseUp);\n        if (this.diagram.mode === 'SVG' && canVitualize(this.diagram)) {\n            this.updateVirtualization();\n        }\n        this.diagram.previousSelectedObject = null;\n        this.diagram.diagramRenderer.rendererActions =\n            this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n        touches = evt.touches;\n        if (this.isScrolling) {\n            this.isScrolling = false;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram))\n            || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.tool && (!(this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) ||\n                ((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                    && evt.detail === 2))) {\n                if (!this.isForeignObject(evt.target) && this.isMouseDown) {\n                    document.getElementById(this.diagram.element.id + 'content').focus();\n                }\n                if (!this.inAction && evt.which !== 3) {\n                    if (this.action === 'Drag') {\n                        this.action = 'Select';\n                        var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                        var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                        var isMultipleSelect = true;\n                        if ((!evt.ctrlKey && this.isMouseDown\n                            && (this.diagram.selectedItems.nodes.length + this.diagram.selectedItems.connectors.length) > 1)\n                            && evt.which === 1 && !canPreventClearSelection(this.diagram.diagramActions)) {\n                            isMultipleSelect = false;\n                            this.commandHandler.clearSelection();\n                        }\n                        if (!isSelected(this.diagram, obj) || (!isMultipleSelect)) {\n                            this.commandHandler.selectObjects([obj]);\n                        }\n                    }\n                }\n                var history_1 = this.updateContainerProperties();\n                var isGroupAction = void 0;\n                this.addUmlNode();\n                this.inAction = false;\n                this.isMouseDown = false;\n                this.currentPosition = this.getMousePosition(evt);\n                if (this.diagram.selectedObject.helperObject) {\n                    isGroupAction = this.updateContainerBounds();\n                }\n                if (this.tool && (this.tool.prevPosition || this.tool instanceof LabelTool)) {\n                    this.eventArgs.position = this.currentPosition;\n                    var padding = this.getConnectorPadding(this.eventArgs);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source, padding);\n                    var ctrlKey = this.isMetaKey(evt);\n                    if (ctrlKey || evt.shiftKey) {\n                        var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } :\n                            { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    if (this.diagram.diagramActions & DiagramAction.Interactions) {\n                        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Interactions;\n                    }\n                    this.eventArgs.clickCount = evt.detail;\n                    if (this.diagram.selectedObject.helperObject && (this.tool instanceof MoveTool || this.tool instanceof ResizeTool)) {\n                        if (this.diagram.selectedObject.actualObject &&\n                            this.diagram.selectedObject.actualObject.parentId !== '') {\n                            var parentNode = this.diagram.getObject(this.diagram.selectedObject.actualObject.parentId);\n                            if (parentNode && parentNode.isLane) {\n                                this.commandHandler.isContainer = true;\n                            }\n                        }\n                        this.tool.mouseUp(this.eventArgs, history_1.isPreventHistory);\n                    }\n                    else {\n                        this.tool.mouseUp(this.eventArgs);\n                        if (this.diagram.checkMenu && (window.navigator.userAgent.indexOf('Linux') !== -1 || window.navigator.userAgent.indexOf('X11') !== -1)) {\n                            this.diagram.contextMenuModule.contextMenu.open(evt.pageY, evt.pageX, this.diagram.element);\n                            this.diagram.checkMenu = false;\n                        }\n                    }\n                    if (history_1.hasStack) {\n                        this.diagram.endGroupAction();\n                    }\n                }\n                if (isGroupAction) {\n                    this.diagram.endGroupAction();\n                }\n                this.updateContainerBounds(true);\n                if (this.eventArgs.clickCount !== 2) {\n                    this.commandHandler.updateSelectedNodeProperties(this.eventArgs.source);\n                }\n                if (this.diagram.selectedObject && this.diagram.selectedObject.helperObject) {\n                    this.diagram.remove(this.diagram.selectedObject.helperObject);\n                    this.diagram.selectedObject = { helperObject: undefined, actualObject: undefined };\n                }\n                this.blocked = false;\n                if (this.hoverElement) {\n                    var portVisibility = PortVisibility.Connect;\n                    if (isSelected(this.diagram, this.hoverElement)) {\n                        portVisibility |= PortVisibility.Hover;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, portVisibility, true);\n                    this.hoverElement = null;\n                }\n                this.touchStartList = null;\n                this.touchMoveList = null;\n                if (!(this.tool instanceof TextDrawingTool)) {\n                    this.tool = null;\n                }\n            }\n            if (!touches) {\n                evt.preventDefault();\n            }\n            this.diagram.currentDrawingObject = undefined;\n            var selector = this.diagram.selectedItems;\n            if (!this.inAction && selector.wrapper && selector.userHandles.length > 0) {\n                this.diagram.renderSelector(true);\n            }\n            if (!this.inAction && !this.diagram.currentSymbol && this.eventArgs) {\n                var arg = {\n                    element: cloneBlazorObject(this.eventArgs.source) || cloneBlazorObject(this.diagram),\n                    position: cloneBlazorObject(this.eventArgs.position), count: evt.detail,\n                    actualObject: cloneBlazorObject(this.eventArgs.actualObject)\n                };\n                if (isBlazor() && this.diagram.click) {\n                    arg = this.getBlazorClickEventArgs(arg);\n                }\n                this.diagram.triggerEvent(DiagramEvent.click, arg);\n            }\n            this.eventArgs = {};\n        }\n        this.eventArgs = {};\n        this.diagram.commandHandler.removeStackHighlighter(); // end the corresponding tool\n    };\n    /* tslint:enable */\n    DiagramEventHandler.prototype.getConnectorPadding = function (eventArgs) {\n        var padding;\n        var targetObject = eventArgs.source;\n        if (targetObject && (targetObject instanceof Selector) && targetObject.connectors.length) {\n            var selectedConnector = targetObject.connectors[0];\n            padding = (selectedConnector.constraints & ConnectorConstraints.ConnectToNearByPort) ? selectedConnector.connectionPadding : 0;\n        }\n        return padding || 0;\n    };\n    DiagramEventHandler.prototype.getBlazorClickEventArgs = function (arg) {\n        arg = {\n            element: this.eventArgs.source ? { selector: cloneBlazorObject(this.eventArgs.source) } :\n                { diagram: cloneBlazorObject(this.diagram) },\n            position: cloneBlazorObject(this.eventArgs.position), count: arg.count,\n            actualObject: this.eventArgs.actualObject ? { selector: cloneBlazorObject(this.eventArgs.actualObject) } :\n                { diagram: cloneBlazorObject(this.diagram) },\n        };\n        if (this.eventArgs.source instanceof Node) {\n            arg.element.selector.nodes = [];\n            arg.element.selector.nodes.push(cloneBlazorObject(this.eventArgs.source));\n        }\n        else if (this.eventArgs.source instanceof Connector) {\n            arg.element.selector.connectors = [];\n            arg.element.selector.connectors.push(cloneBlazorObject(this.eventArgs.source));\n        }\n        return arg;\n    };\n    DiagramEventHandler.prototype.addSwimLaneObject = function (selectedNode) {\n        var swimlaneNode;\n        var targetNode;\n        var shape;\n        var value;\n        var canInsert;\n        var index = 0;\n        var offset;\n        var actualShape = selectedNode.shape;\n        var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n        if (!targetNode) {\n            targetNode = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        this.diagram.clearSelectorLayer();\n        if (targetNode && !(targetNode.isLane || targetNode.isPhase || targetNode.isHeader)) {\n            for (var i = 0; i < objects.length; i++) {\n                var laneNode = this.diagram.nameTable[objects[i].id];\n                if (laneNode.isLane || laneNode.isPhase || laneNode.isHeader) {\n                    targetNode = laneNode;\n                }\n            }\n        }\n        if (targetNode && (actualShape.isPhase || (actualShape.isLane && targetNode.isLane))) {\n            var id = targetNode.parentId;\n            swimlaneNode = this.diagram.nameTable[id];\n        }\n        if (swimlaneNode) {\n            shape = swimlaneNode.shape;\n            canInsert = (actualShape.isLane) ? actualShape.orientation === shape.orientation :\n                actualShape.orientation !== shape.orientation;\n        }\n        if (canInsert && targetNode) {\n            if (shape.header && shape.hasHeader && shape.orientation === 'Horizontal') {\n                index = 1;\n            }\n            if (shape.phases.length > 0) {\n                index += 1;\n            }\n            if (actualShape.isPhase) {\n                if (shape.orientation === 'Horizontal') {\n                    offset = this.currentPosition.x - swimlaneNode.wrapper.bounds.x;\n                }\n                else {\n                    offset = this.currentPosition.y - (swimlaneNode.wrapper.bounds.y + shape.header.height);\n                }\n                var phases = { id: randomId(), offset: offset, header: { annotation: { content: 'Phase' } } };\n                this.diagram.addPhases(swimlaneNode, [phases]);\n            }\n            else {\n                var laneHeight = actualShape.lanes[0].header.height;\n                var lane = {\n                    id: randomId(), style: actualShape.lanes[0].style, header: {\n                        annotation: {\n                            content: actualShape.lanes[0].header.annotation.content,\n                            style: actualShape.lanes[0].header.annotation.style\n                        },\n                        style: actualShape.lanes[0].header.style\n                    },\n                };\n                var orientation_1 = (actualShape.orientation === 'Horizontal') ? true : false;\n                orientation_1 ? lane.height = actualShape.lanes[0].height : lane.width = actualShape.lanes[0].width;\n                if (shape.orientation === 'Horizontal') {\n                    value = targetNode.rowIndex ? targetNode.rowIndex :\n                        this.diagram.nameTable[targetNode.parentId].rowIndex;\n                    if (targetNode.wrapper.offsetY < this.currentPosition.y) {\n                        value += 1;\n                    }\n                }\n                else {\n                    value = targetNode.columnIndex ? targetNode.columnIndex :\n                        this.diagram.nameTable[targetNode.parentId].columnIndex;\n                    if (this.currentPosition.x < targetNode.wrapper.bounds.center.x) {\n                        value -= 1;\n                    }\n                }\n                if (shape.lanes.length > (value - index)) {\n                    lane.header.width = shape.lanes[value - index].header.width;\n                    lane.header.height = shape.lanes[value - index].header.height;\n                }\n                else {\n                    lane.header.width = shape.lanes[value - index - 1].header.width;\n                    lane.header.height = shape.lanes[value - index - 1].header.height;\n                }\n                this.diagram.addLanes(swimlaneNode, [lane], value - index);\n            }\n            this.commandHandler.select(swimlaneNode);\n        }\n        else if (actualShape.isLane) {\n            var swimLaneobj = {\n                id: randomId(), width: selectedNode.width, height: selectedNode.height, addInfo: selectedNode.addInfo,\n                shape: {\n                    type: 'SwimLane', header: {\n                        annotation: { content: 'Header' }, height: 50, style: actualShape.lanes[0].header.style\n                    },\n                    phases: [{ id: randomId(), header: { annotation: { content: 'Phase' } } }],\n                    lanes: [{\n                            id: randomId(), height: selectedNode.height, width: selectedNode.width, style: actualShape.lanes[0].style,\n                            header: {\n                                annotation: {\n                                    content: actualShape.lanes[0].header.annotation.content,\n                                    style: actualShape.lanes[0].header.annotation.style\n                                },\n                                style: actualShape.lanes[0].header.style\n                            },\n                        }], orientation: actualShape.orientation,\n                }\n            };\n            if (actualShape.orientation === 'Vertical') {\n                swimLaneobj.width += 20;\n            }\n            swimLaneobj.offsetX = this.currentPosition.x + (swimLaneobj.width / 2);\n            swimLaneobj.offsetY = this.currentPosition.y + (swimLaneobj.height / 2);\n            this.diagram.add(swimLaneobj);\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseLeave = function (evt) {\n        //Define what has to happen on mouse leave\n        if (this.tool && this.inAction) {\n            this.tool.mouseLeave(this.eventArgs);\n        }\n        if (this.diagram.selectedObject.helperObject) {\n            this.updateContainerProperties();\n            var isGroupAction = this.updateContainerBounds();\n            if (isGroupAction) {\n                this.diagram.endGroupAction();\n            }\n        }\n        if (this.eventArgs && this.eventArgs.source) {\n            this.diagram.updatePortVisibility(this.eventArgs.source, PortVisibility.Hover, true);\n            this.hoverElement = null;\n        }\n        if (this.tool instanceof ConnectTool && this.eventArgs && this.eventArgs.target && this.eventArgs.target instanceof Node) {\n            this.diagram.updatePortVisibility(this.eventArgs.target, PortVisibility.Hover | PortVisibility.Connect, true);\n            this.hoverElement = null;\n        }\n        var selector = this.diagram.selectedItems;\n        if (selector && selector.wrapper) {\n            this.diagram.renderSelector(true);\n        }\n        if (this.diagram.diagramActions & DiagramAction.Interactions || this.diagram.diagramActions & DiagramAction.ToolAction) {\n            this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n        }\n        this.isMouseDown = false;\n        this.focus = false;\n        this.touchStartList = null;\n        this.touchMoveList = null;\n        this.elementLeave();\n        this.commandHandler.removeSnap();\n        this.inAction = false;\n        this.eventArgs = {};\n        if (this.diagram.selectedObject && this.diagram.selectedObject.helperObject) {\n            this.diagram.remove(this.diagram.selectedObject.helperObject);\n            this.diagram.selectedObject = { helperObject: undefined, actualObject: undefined };\n        }\n        this.tool = null;\n        removeRulerMarkers();\n        if (this.action === 'Rotate') {\n            this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n        }\n        evt.preventDefault();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseWheel = function (evt) {\n        this.diagram.blazorActions = BlazorAction.interaction;\n        var up = (evt.wheelDelta > 0 || -40 * evt.detail > 0) ? true : false;\n        var mousePosition = this.getMousePosition(evt);\n        this.diagram.tooltipObject.close();\n        var ctrlKey = this.isMetaKey(evt);\n        if (ctrlKey) {\n            this.diagram.zoom(up ? (1.2) : 1 / (1.2), mousePosition);\n            evt.preventDefault();\n        }\n        else {\n            var horizontalOffset = this.diagram.scroller.horizontalOffset;\n            var verticalOffset = this.diagram.scroller.verticalOffset;\n            var change = up ? 20 : -20;\n            if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                this.eventArgs = {};\n                this.getMouseEventArgs(mousePosition, this.eventArgs);\n                this.eventArgs.position = mousePosition;\n                this.tool.mouseWheel(this.eventArgs);\n            }\n            if (evt.shiftKey) {\n                this.diagram.scroller.zoom(1, change, 0, mousePosition);\n            }\n            else {\n                this.diagram.scroller.zoom(1, 0, change, mousePosition);\n            }\n            if (horizontalOffset !== this.diagram.scroller.horizontalOffset\n                || verticalOffset !== this.diagram.scroller.verticalOffset) {\n                evt.preventDefault();\n            }\n        }\n        if (this.diagram.textEditing) {\n            this.diagram.isTriggerEvent = true;\n            if (this.diagram.activeLabel.parentId) {\n                var node = this.diagram.getObject(this.diagram.activeLabel.parentId);\n                this.diagram.startTextEdit(node, this.diagram.activeLabel.id);\n            }\n            this.diagram.isTriggerEvent = false;\n        }\n        this.diagram.blazorActions = this.diagram.blazorActions & ~BlazorAction.interaction;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.keyDown = function (evt) {\n        if (!(this.diagram.diagramActions & DiagramAction.TextEdit) &&\n            !(this.checkEditBoxAsTarget(evt)) || (evt.key === 'Escape' || evt.keyCode === 27)) {\n            var i = void 0;\n            var inAction = 'inAction';\n            var command = void 0;\n            var keycode = evt.keyCode ? evt.keyCode : evt.which;\n            var key = evt.key;\n            var ctrlKey = this.isMetaKey(evt);\n            if (this.diagram.commandManager && this.diagram.commands) {\n                var commands = this.diagram.commands;\n                for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n                    var i_1 = _a[_i];\n                    command = this.diagram.commands[i_1];\n                    if (command && (command.gesture.keyModifiers || command.gesture.key)) {\n                        if ((keycode === command.gesture.key || (key === Keys[command.gesture.key])\n                            || this.isDeleteKey(key, i_1))\n                            && (((!command.gesture.keyModifiers) && (!evt.altKey) && (!evt.shiftKey) && (!ctrlKey)) ||\n                                (command.gesture.keyModifiers && (ctrlKey || evt.altKey || evt.shiftKey) &&\n                                    (this.altKeyPressed(command.gesture.keyModifiers) && evt.altKey) ||\n                                    (this.shiftKeyPressed(command.gesture.keyModifiers) && evt.shiftKey) ||\n                                    (this.ctrlKeyPressed(command.gesture.keyModifiers) && ctrlKey)))) {\n                            var canExecute = getFunction(command.canExecute);\n                            if (isBlazor() || (canExecute &&\n                                canExecute({\n                                    'keyDownEventArgs': KeyboardEvent,\n                                    parameter: command.parameter\n                                }))) {\n                                evt.preventDefault();\n                                if (evt.key === 'Escape') {\n                                    if (this.checkEditBoxAsTarget(evt)) {\n                                        document.getElementById(this.diagram.diagramCanvas.id).focus();\n                                    }\n                                    else if (this.diagram.currentSymbol) {\n                                        var selectedSymbols = 'selectedSymbols';\n                                        var source = 'sourceElement';\n                                        var intDestroy = 'intDestroy';\n                                        this.diagram.removeFromAQuad(this.diagram.currentSymbol);\n                                        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[this.diagram.currentSymbol.id]);\n                                        this.diagram.removeElements(this.diagram.currentSymbol);\n                                        removeChildNodes(this.diagram.currentSymbol, this.diagram);\n                                        delete this.diagram.nameTable[this.diagram.currentSymbol.id];\n                                        var sourceElement = this.diagram.droppable[source];\n                                        sourceElement.draggable[intDestroy]();\n                                        var element = this.diagram.droppable[selectedSymbols];\n                                        element.parentNode.removeChild(element);\n                                        var diagramActions = this.diagram.diagramActions;\n                                        this.diagram.diagramActions =\n                                            this.diagram.addConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.tool.mouseUp(this.eventArgs);\n                                        this.diagram.diagramRenderer.rendererActions = this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                                        if (this.diagram.previousSelectedObject) {\n                                            this.diagram.select(this.diagram.previousSelectedObject);\n                                        }\n                                        this.action = 'Select';\n                                        this.diagram.previousSelectedObject = null;\n                                        this.diagram.currentSymbol = null;\n                                        this.diagram.diagramActions =\n                                            this.diagram.removeConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.isMouseDown = false;\n                                    }\n                                    else if (this.inAction && this.diagram.drawingObject && this.tool && this.tool[inAction]) {\n                                        this.tool.mouseUp(this.eventArgs);\n                                        this.tool = null;\n                                        this.isMouseDown = false;\n                                    }\n                                }\n                                if (command.execute) {\n                                    if (this.diagram.tool !== DiagramTools.ZoomPan) {\n                                        // if (i === 'nudgeUp' || i === 'nudgeRight' || i === 'nudgeDown' || i === 'nudgeLeft') {\n                                        //     command.execute()\n                                        // } else {\n                                        var execute = getFunction(command.execute);\n                                        execute({ 'keyDownEventArgs': KeyboardEvent, parameter: command.parameter });\n                                    }\n                                    // }\n                                }\n                                if (isBlazor()) {\n                                    var arg = { gesture: command.gesture };\n                                    this.diagram.triggerEvent(DiagramEvent.commandExecute, arg);\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        var selectedObject = (this.diagram.selectedItems.nodes.length) ?\n            this.diagram.selectedItems.nodes : this.diagram.selectedItems.connectors;\n        this.keyArgs = {\n            element: cloneBlazorObject(this.diagram.selectedItems),\n            key: evt.key, keyCode: evt.keyCode ? evt.keyCode : evt.which,\n        };\n        this.getKeyModifier(this.keyArgs, evt);\n        if ((this.diagram.diagramActions & DiagramAction.TextEdit)) {\n            this.getlabel(this.keyArgs, evt);\n        }\n        this.diagram.triggerEvent(DiagramEvent.keyDown, this.keyArgs);\n    };\n    DiagramEventHandler.prototype.getlabel = function (args, evt) {\n        var label = this.diagram.activeLabel;\n        args.target = this.diagram.element.id + '_editBox';\n        var node = this.diagram.nameTable[label.parentId];\n        args.text = document.getElementById(this.diagram.element.id + '_editBox').value;\n        for (var i = 0; i < node.annotations.length; i++) {\n            if (node.annotations[i].id === label.id) {\n                args.label = node.annotations[i];\n                break;\n            }\n        }\n    };\n    DiagramEventHandler.prototype.getKeyModifier = function (args, evt) {\n        args.keyModifiers = KeyModifiers.None;\n        if (evt.ctrlKey) {\n            args.keyModifiers |= KeyModifiers.Control;\n        }\n        if (evt.shiftKey) {\n            args.keyModifiers |= KeyModifiers.Shift;\n        }\n        if (evt.altKey) {\n            args.keyModifiers |= KeyModifiers.Alt;\n        }\n        if (this.isMetaKey(evt)) {\n            args.keyModifiers |= KeyModifiers.Meta;\n        }\n    };\n    DiagramEventHandler.prototype.keyUp = function (evt) {\n        this.keyArgs = {\n            element: cloneBlazorObject(this.diagram.selectedItems), key: evt.key, keyCode: evt.keyCode ? evt.keyCode : evt.which,\n        };\n        var selectedObject = (this.diagram.selectedItems.nodes.length) ?\n            this.diagram.selectedItems.nodes : this.diagram.selectedItems.connectors;\n        this.getKeyModifier(this.keyArgs, evt);\n        if ((this.diagram.diagramActions & DiagramAction.TextEdit)) {\n            this.getlabel(this.keyArgs, evt);\n        }\n        this.diagram.triggerEvent(DiagramEvent.keyUp, this.keyArgs);\n    };\n    DiagramEventHandler.prototype.startAutoScroll = function (e) {\n        var position = this.getMousePosition(e);\n        position.x *= this.diagram.scroller.currentZoom;\n        position.y *= this.diagram.scroller.currentZoom;\n        var rulerSize = getRulerSize(this.diagram);\n        var movingPosition;\n        var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n        if (Browser.info.name === 'mozilla') {\n            if (this.diagram.scroller.viewPortWidth === 0) {\n                var bounds = document.getElementById(this.diagram.element.id).getBoundingClientRect();\n                if (bounds.width !== this.diagram.scroller.viewPortWidth) {\n                    this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n                }\n            }\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            if (position.x + this.diagram.scroller.horizontalOffset + autoScrollBorder.right + rulerSize.width >=\n                this.diagram.scroller.viewPortWidth - 18) {\n                movingPosition = 'right';\n            }\n            else if (position.x + this.diagram.scroller.horizontalOffset < autoScrollBorder.left) {\n                movingPosition = 'left';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset + autoScrollBorder.bottom + rulerSize.height >\n                this.diagram.scroller.viewPortHeight - 18) {\n                movingPosition = 'bottom';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset < autoScrollBorder.top) {\n                movingPosition = 'top';\n            }\n        }\n        return movingPosition;\n    };\n    DiagramEventHandler.prototype.doAutoScroll = function (option, e, delay, autoScroll) {\n        var position = option;\n        if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n            || this.tool instanceof SelectTool) && this.inAction) {\n            var diagram = this;\n            var pos = this.getMousePosition(e);\n            var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n            var newDelay = delay ? delay : 100;\n            var left = 0;\n            var top_1 = 0;\n            var point = { x: pos.x, y: pos.y };\n            switch (position) {\n                case 'right':\n                    point.x = pos.x + 10;\n                    left = 10;\n                    break;\n                case 'left':\n                    point.x = pos.x - 10;\n                    left = -10;\n                    break;\n                case 'bottom':\n                    point.y = pos.y + 10;\n                    top_1 = 10;\n                    break;\n                case 'top':\n                    point.y = pos.y - 10;\n                    top_1 = -10;\n                    break;\n            }\n            this.eventArgs.position = { x: point.x, y: point.y };\n            this.currentPosition = this.eventArgs.position;\n            var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n            this.eventArgs.target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            this.tool.mouseMove(this.eventArgs);\n            this.diagram.scroller.zoom(1, -left, -top_1, pos);\n        }\n    };\n    DiagramEventHandler.prototype.mouseEvents = function () {\n        var target = this.diagram.findObjectsUnderMouse(this.currentPosition);\n        for (var i = 0; i < target.length; i++) {\n            if (this.eventArgs.actualObject === target[i]) {\n                target.splice(i, 1);\n            }\n        }\n        var arg = {\n            targets: {}\n        };\n        if (!isBlazor()) {\n            arg = {\n                targets: cloneBlazorObject(target),\n                element: cloneBlazorObject((this.eventArgs.source === this.eventArgs.actualObject) ? undefined : this.eventArgs.source),\n                actualObject: cloneBlazorObject(this.eventArgs.actualObject)\n            };\n        }\n        if (isBlazor() && (this.diagram.mouseEnter || this.diagram.mouseOver)) {\n            arg.actualObject = getObjectType(this.eventArgs.actualObject) === Connector ? {\n                connector: cloneBlazorObject(this.eventArgs.actualObject)\n            }\n                : {\n                    node: cloneBlazorObject(this.eventArgs.actualObject)\n                };\n            arg.targets.connector = [];\n            arg.targets.node = [];\n            this.getBlazorCollectionObject(target, arg);\n        }\n        if (this.lastObjectUnderMouse && this.diagram.mouseLeave\n            && (!this.eventArgs.actualObject || (this.lastObjectUnderMouse !== this.eventArgs.actualObject))) {\n            var arg_1 = {\n                targets: undefined, element: cloneBlazorObject(this.lastObjectUnderMouse), actualObject: undefined\n            };\n            if (isBlazor()) {\n                arg_1 = {\n                    targets: undefined,\n                    element: getObjectType(this.lastObjectUnderMouse) === Connector ? { connector: cloneBlazorObject(target) }\n                        : {\n                            node: cloneBlazorObject(this.lastObjectUnderMouse)\n                        },\n                    actualObject: undefined\n                };\n            }\n            this.diagram.triggerEvent(DiagramEvent.mouseLeave, arg_1);\n            this.lastObjectUnderMouse = null;\n        }\n        if (!this.lastObjectUnderMouse && this.eventArgs.source || (this.lastObjectUnderMouse !== this.eventArgs.actualObject)) {\n            this.lastObjectUnderMouse = this.eventArgs.actualObject;\n            if (this.eventArgs.actualObject !== undefined) {\n                this.diagram.triggerEvent(DiagramEvent.mouseEnter, arg);\n            }\n        }\n        if (this.eventArgs.actualObject) {\n            this.diagram.triggerEvent(DiagramEvent.mouseOver, arg);\n        }\n    };\n    DiagramEventHandler.prototype.getBlazorCollectionObject = function (obj, arg1) {\n        if (obj) {\n            for (var i = 0; i < obj.length; i++) {\n                if (getObjectType(obj[i]) === Connector) {\n                    arg1.targets.connector.push(cloneBlazorObject(obj[i]));\n                }\n                else {\n                    arg1.targets.node.push(cloneBlazorObject(obj[i]));\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementEnter = function (mousePosition, elementOver) {\n        if (!elementOver) {\n            var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n                this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n                ((this.hoverElement instanceof Connector) && this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n            var content = this.getContent();\n            if (this.hoverElement.tooltip.openOn === 'Auto' && content !== '') {\n                updateTooltip(this.diagram, isPrivateTooltip ? this.hoverElement : undefined);\n            }\n            var offset = getTooltipOffset(this.diagram, mousePosition, this.hoverElement);\n            if (this.hoverElement.tooltip.openOn === 'Auto' && content !== '') {\n                this.diagram.tooltipObject.close();\n                this.diagram.tooltipObject.offsetX = offset.x;\n                this.diagram.tooltipObject.offsetY = offset.y;\n                this.diagram.tooltipObject.dataBind();\n            }\n            if (canEnableToolTip(this.hoverElement, this.diagram) && this.hoverElement.tooltip.openOn === 'Auto') {\n                this.diagram.tooltipObject.open(this.diagram.element);\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementLeave = function () {\n        this.diagram.tooltipObject.close();\n    };\n    DiagramEventHandler.prototype.altKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Alt) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.ctrlKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Control) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.shiftKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Shift) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.scrolled = function (evt) {\n        this.diagram.updateScrollOffset();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.doubleClick = function (evt) {\n        if (canUserInteract(this.diagram)) {\n            var annotation = void 0;\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            if (obj !== null && canUserInteract(this.diagram)) {\n                var node = obj;\n                annotation = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                    var arg_2 = {\n                        source: cloneBlazorObject(obj) || cloneBlazorObject(this.diagram),\n                        position: this.currentPosition, count: evt.detail\n                    };\n                    this.tool.mouseUp(this.eventArgs);\n                    this.isMouseDown = false;\n                    this.eventArgs = {};\n                    this.tool = null;\n                    evt.preventDefault();\n                }\n                else {\n                    var layer = this.diagram.commandHandler.getObjectLayer(obj.id);\n                    if (layer && !layer.lock && layer.visible) {\n                        if (!(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                            var id = '';\n                            if (obj.shape.shape === 'TextAnnotation') {\n                                id = obj.wrapper.children[1].id.split('_')[1];\n                            }\n                            this.diagram.startTextEdit(obj, id || (annotation instanceof TextElement ?\n                                (annotation.id).split(obj.id + '_')[1] : undefined));\n                        }\n                    }\n                }\n            }\n            var arg = {\n                source: cloneBlazorObject(obj) || cloneBlazorObject(this.diagram),\n                position: this.currentPosition, count: evt.detail\n            };\n            if (isBlazor()) {\n                var selector = void 0;\n                if (obj instanceof Node) {\n                    selector = { nodes: [cloneBlazorObject(obj)] };\n                }\n                else if (obj instanceof Connector) {\n                    selector = { connectors: [cloneBlazorObject(obj)] };\n                }\n                else {\n                    selector = cloneBlazorObject(obj);\n                }\n                arg = {\n                    source: obj ? { selector: selector } : { diagram: cloneBlazorObject(this.diagram) },\n                    position: this.currentPosition, count: evt.detail\n                };\n            }\n            this.diagram.triggerEvent(DiagramEvent.doubleClick, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.itemClick = function (actualTarget, diagram) {\n        var obj = actualTarget;\n        if (checkParentAsContainer(this.diagram, obj, true)) {\n            return obj;\n        }\n        return null;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.inputChange = function (evt) {\n        var minWidth = 90;\n        var maxWidth;\n        var minHeight = 12;\n        var fontsize;\n        var textWrapper;\n        var node;\n        var height;\n        var width;\n        var textBounds;\n        var textBoxWidth;\n        var transforms;\n        var scale;\n        var editTextBox = document.getElementById(this.diagram.element.id + '_editBox');\n        var editTextBoxDiv = document.getElementById(this.diagram.element.id + '_editTextBoxDiv');\n        var text = (editTextBox.value);\n        var line = text.split('\\n');\n        node = (this.diagram.selectedItems.nodes[0]) ? this.diagram.selectedItems.nodes[0] : this.diagram.selectedItems.connectors[0];\n        if ((!node && this.tool instanceof TextDrawingTool) || (node && node.shape.type === 'SwimLane')) {\n            node = this.diagram.nameTable[this.diagram.activeLabel.parentId];\n        }\n        if (node && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n            textWrapper = this.diagram.getWrapper(node.wrapper, this.diagram.activeLabel.id);\n            maxWidth = node.wrapper.bounds.width < textWrapper.bounds.width ? node.wrapper.bounds.width : textWrapper.bounds.width;\n            maxWidth = maxWidth > minWidth ? maxWidth : minWidth;\n            textBounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n            fontsize = Number((editTextBox.style.fontSize).split('px')[0]);\n            if (line.length > 1 && line[line.length - 1] === '') {\n                textBounds.height = textBounds.height + fontsize;\n            }\n            transforms = this.diagram.scroller.transform;\n            scale = canZoomTextEdit(this.diagram) ? transforms.scale : 1;\n            width = textBounds.width;\n            width = ((minWidth > width) ? minWidth : width) * scale;\n            height = ((minHeight > textBounds.height) ? minHeight : textBounds.height) * scale;\n            editTextBoxDiv.style.left = ((((textWrapper.bounds.center.x + transforms.tx) * transforms.scale) - width / 2) - 2.5) + 'px';\n            editTextBoxDiv.style.top = ((((textWrapper.bounds.center.y + transforms.ty) * transforms.scale) - height / 2) - 3) + 'px';\n            editTextBoxDiv.style.width = width + 'px';\n            editTextBoxDiv.style.height = height + 'px';\n            editTextBox.style.minHeight = minHeight + 'px';\n            editTextBox.style.minWidth = minWidth + 'px';\n            editTextBox.style.width = width + 'px';\n            editTextBox.style.height = height + 'px';\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.isAddTextNode = function (node, focusOut) {\n        if (this.tool instanceof TextDrawingTool || focusOut) {\n            this.tool = null;\n            if (node && (!(canContinuousDraw(this.diagram)))) {\n                this.diagram.drawingObject = undefined;\n                this.diagram.currentDrawingObject = undefined;\n            }\n            if (getObjectFromCollection(this.diagram.nodes, node.id) ||\n                getObjectFromCollection(this.diagram.connectors, node.id) ||\n                (this.diagram.bpmnModule && this.diagram.bpmnModule.textAnnotationConnectors.indexOf(node) > -1)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.checkEditBoxAsTarget = function (evt) {\n        if ((evt.target && evt.target.id === this.diagram.element.id + '_editBox')) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.getMouseEventArgs = function (position, args, source, padding) {\n        args.position = position;\n        var obj;\n        var objects;\n        if (!source) {\n            if (this.action === 'Drag' || this.action === 'ConnectorSourceEnd' || this.action === 'SegmentEnd' ||\n                this.action === 'OrthoThumb' || this.action === 'BezierSourceThumb' || this.action === 'BezierTargetThumb' ||\n                this.action === 'ConnectorTargetEnd' || this.action.indexOf('Rotate') !== -1 || this.action.indexOf('Resize') !== -1) {\n                obj = this.diagram.selectedItems;\n                if (!this.diagram.currentSymbol && this.action === 'Drag' && obj && this.diagram.selectedItems.nodes.length > 0 &&\n                    this.diagram.selectedItems.nodes[0].shape.type === 'SwimLane') {\n                    objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                    obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                }\n            }\n            else {\n                objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            }\n        }\n        else {\n            objects = this.diagram.findObjectsUnderMouse(this.currentPosition, source);\n            obj = this.diagram.findTargetObjectUnderMouse(objects, this.action, this.inAction, args.position, source);\n        }\n        if (obj && obj.isHeader) {\n            obj = this.diagram.nameTable[obj.parentId];\n            this.eventArgs.actualObject = obj;\n        }\n        var wrapper;\n        if (obj) {\n            wrapper = this.diagram.findElementUnderMouse(obj, this.currentPosition, padding);\n            if (wrapper && obj.ports && obj.ports.length &&\n                !checkPort(obj, wrapper) && (source instanceof Selector) && source.connectors.length) {\n                var currentConnector = source.connectors[0];\n                if ((currentConnector.constraints & ConnectorConstraints.ConnectToNearByPort) &&\n                    !(currentConnector.constraints & ConnectorConstraints.ConnectToNearByNode)) {\n                    wrapper = this.diagram.findElementUnderMouse(obj, this.currentPosition, 0);\n                    if (!wrapper) {\n                        obj = null;\n                    }\n                }\n            }\n        }\n        if (!source) {\n            args.source = obj;\n            args.sourceWrapper = wrapper;\n        }\n        else {\n            args.target = obj;\n            args.targetWrapper = wrapper;\n        }\n        args.actualObject = this.eventArgs.actualObject;\n        args.startTouches = this.touchStartList;\n        args.moveTouches = this.touchMoveList;\n        return args;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.resetTool = function () {\n        this.action = 'Select';\n        this.hoverElement = null;\n        this.hoverNode = null;\n        this.tool = this.diagram.getTool(this.action);\n        this.updateCursor();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getTool = function (action) {\n        switch (action) {\n            case 'Select':\n                return new SelectTool(this.commandHandler, true);\n            case 'Drag':\n                return new MoveTool(this.commandHandler);\n            case 'Rotate':\n                return new RotateTool(this.commandHandler);\n            case 'LayoutAnimation':\n                return new ExpandTool(this.commandHandler);\n            case 'Hyperlink':\n                return new LabelTool(this.commandHandler);\n            case 'ResizeSouthEast':\n            case 'ResizeSouthWest':\n            case 'ResizeNorthEast':\n            case 'ResizeNorthWest':\n            case 'ResizeSouth':\n            case 'ResizeNorth':\n            case 'ResizeWest':\n            case 'ResizeEast':\n                return new ResizeTool(this.commandHandler, action);\n            case 'ConnectorSourceEnd':\n            case 'ConnectorTargetEnd':\n            case 'BezierSourceThumb':\n            case 'BezierTargetThumb':\n                return new ConnectTool(this.commandHandler, action);\n            case 'SegmentEnd':\n            case 'OrthoThumb':\n                return new ConnectorEditing(this.commandHandler, action);\n            case 'Draw':\n                var shape = 'shape';\n                var basicShape = 'basicShape';\n                var type = findObjectType(this.diagram.drawingObject);\n                if (type === 'Node' && this.diagram.drawingObject.shape.type === 'Text') {\n                    return new TextDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' && (this.diagram.drawingObject.shape[shape] === 'Polygon' ||\n                    (isBlazor() && this.diagram.drawingObject.shape[basicShape] === 'Polygon')) &&\n                    !(this.diagram.drawingObject.shape.points)) {\n                    return new PolygonDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' ||\n                    (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                        (this.diagram.drawingObject.shape.points))) {\n                    return new NodeDrawingTool(this.commandHandler, this.diagram.drawingObject);\n                }\n                else if (type === 'Connector' && this.diagram.drawingObject.type === 'Polyline') {\n                    return new PolyLineDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Connector') {\n                    return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n                }\n                break;\n            case 'Pan':\n                return new ZoomPanTool(this.commandHandler, false);\n            case 'PinchZoom':\n                return new ZoomPanTool(this.commandHandler, true);\n            case 'PortDrag':\n                return new MoveTool(this.commandHandler, 'Port');\n            case 'PortDraw':\n                return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n            case 'LabelSelect':\n                return new SelectTool(this.commandHandler, true, 'LabelSelect');\n            case 'LabelDrag':\n                return new LabelDragTool(this.commandHandler);\n            case 'LabelResizeSouthEast':\n            case 'LabelResizeSouthWest':\n            case 'LabelResizeNorthEast':\n            case 'LabelResizeNorthWest':\n            case 'LabelResizeSouth':\n            case 'LabelResizeNorth':\n            case 'LabelResizeWest':\n            case 'LabelResizeEast':\n                return new LabelResizeTool(this.commandHandler, action);\n            case 'LabelRotate':\n                return new LabelRotateTool(this.commandHandler);\n            //for coverage\n            // case 'Custom':\n            //     return this.diagram.getTool(action);\n        }\n        return null;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getCursor = function (action) {\n        var object = (this.diagram.selectedItems.annotation) ?\n            this.diagram.selectedItems.wrapper.children[0] : this.diagram.selectedItems;\n        var rotateAngle = (this.diagram.selectedItems.annotation) ?\n            (object.rotateAngle + object.parentTransform) : object.rotateAngle;\n        return getCursor(action, rotateAngle);\n    };\n    //start region - interface betweend diagram and interaction\n    /** @private */\n    DiagramEventHandler.prototype.findElementUnderMouse = function (obj, position, padding) {\n        return this.objectFinder.findElementUnderSelectedItem(obj, position, padding);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.objectFinder.findObjectsUnderMouse(position, this.diagram, this.eventArgs, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, this.currentPosition);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findTargetUnderMouse = function (objects, action, inAction, position, source) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, position, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return findToolToActivate(obj, wrapper, this.currentPosition, this.diagram, this.touchStartList, this.touchMoveList, target);\n    };\n    DiagramEventHandler.prototype.updateContainerBounds = function (isAfterMouseUp) {\n        var isGroupAction = false;\n        if (this.diagram.selectedObject.helperObject && this.diagram.selectedObject.actualObject instanceof Node) {\n            var boundsUpdate = (this.tool instanceof ResizeTool) ? true : false;\n            var obj = this.diagram.selectedObject.actualObject;\n            var parentNode = this.diagram.nameTable[obj.parentId];\n            if (isAfterMouseUp) {\n                removeChildInContainer(this.diagram, obj, this.currentPosition, boundsUpdate);\n            }\n            else {\n                if (!parentNode || (parentNode && parentNode.shape.type !== 'SwimLane')) {\n                    this.diagram.updateDiagramObject(obj);\n                }\n                isGroupAction = updateCanvasBounds(this.diagram, obj, this.currentPosition, boundsUpdate);\n                this.diagram.updateSelector();\n                if (obj.isLane || obj.isPhase) {\n                    this.diagram.clearSelection();\n                    this.commandHandler.selectObjects([obj]);\n                }\n            }\n        }\n        return isGroupAction;\n    };\n    // tslint:disable-next-line:max-func-body-length\n    DiagramEventHandler.prototype.updateContainerProperties = function () {\n        var helperObject;\n        var isChangeProperties = false;\n        var hasStack;\n        var connectors;\n        var hasGroup = false;\n        var obj;\n        var history = { hasStack: false, isPreventHistory: false };\n        if (this.diagram.selectedObject.helperObject) {\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            helperObject = this.diagram.selectedObject.helperObject;\n            obj = this.diagram.selectedObject.actualObject;\n            if (obj instanceof Node) {\n                if (obj.shape.type === 'SwimLane') {\n                    connectors = getConnectors(this.diagram, obj.wrapper.children[0], 0, true);\n                }\n                if (obj.shape.type !== 'SwimLane' && obj.parentId &&\n                    this.diagram.getObject(obj.parentId).shape.type === 'SwimLane') {\n                    if (target instanceof Node && this.diagram.getObject(target.parentId) &&\n                        this.diagram.getObject(target.parentId).shape.type !== 'SwimLane') {\n                        target = this.diagram.getObject(target.parentId);\n                    }\n                }\n                if (this.currentAction === 'Drag' && obj.container && obj.container.type === 'Canvas' && obj.parentId &&\n                    this.diagram.getObject(obj.parentId).shape.type === 'SwimLane' && target && target !== obj &&\n                    target.container && target.container.type === 'Canvas' && target.isLane &&\n                    obj.isLane && target.parentId === obj.parentId) {\n                    laneInterChanged(this.diagram, obj, target, this.currentPosition);\n                    history.isPreventHistory = true;\n                }\n                else {\n                    var parentNode = this.diagram.nameTable[obj.parentId];\n                    if (!parentNode || (parentNode && parentNode.shape.type !== 'SwimLane')) {\n                        if (parentNode && parentNode.isLane && (obj.constraints & NodeConstraints.AllowMovingOutsideLane)) {\n                            var swimlane = this.diagram.getObject(parentNode.parentId);\n                            var laneId = swimlane.id + swimlane.shape.lanes[0].id + '0';\n                            var firstlane = this.diagram.getObject(laneId);\n                            var x = firstlane.wrapper.bounds.x;\n                            var y = firstlane.wrapper.bounds.y;\n                            var width = swimlane.wrapper.bounds.bottomRight.x - x;\n                            var height = swimlane.wrapper.bounds.bottomRight.y - y;\n                            var swimlaneBounds = new Rect(x, y, width, height);\n                            if (swimlaneBounds.containsPoint(this.currentPosition)) {\n                                obj.offsetX = helperObject.offsetX;\n                                obj.offsetY = helperObject.offsetY;\n                                obj.width = helperObject.width;\n                                obj.height = helperObject.height;\n                                obj.rotateAngle = helperObject.rotateAngle;\n                            }\n                        }\n                        else {\n                            obj.offsetX = helperObject.offsetX;\n                            obj.offsetY = helperObject.offsetY;\n                            if (obj && obj.shape && obj.shape.type !== 'UmlClassifier') {\n                                if (obj.shape.type !== 'Bpmn' ||\n                                    (obj.shape.type === 'Bpmn' && obj.shape.shape !== 'TextAnnotation')) {\n                                    obj.width = helperObject.width;\n                                    obj.height = helperObject.height;\n                                }\n                            }\n                            obj.rotateAngle = helperObject.rotateAngle;\n                        }\n                    }\n                    var undoElement = void 0;\n                    if (parentNode && parentNode.container && parentNode.container.type === 'Stack') {\n                        this.diagram.startGroupAction();\n                        hasGroup = true;\n                    }\n                    if (!target && parentNode && parentNode.container && parentNode.container.type === 'Stack' && this.action === 'Drag') {\n                        var index = parentNode.wrapper.children.indexOf(obj.wrapper);\n                        undoElement = { targetIndex: undefined, target: undefined, sourceIndex: index, source: clone(obj) };\n                        if (index > -1) {\n                            var children = parentNode.children;\n                            children.splice(children.indexOf(obj.id), 1);\n                            this.diagram.nameTable[obj.id].parentId = '';\n                            hasStack = true;\n                            parentNode.wrapper.children.splice(index, 1);\n                        }\n                    }\n                    moveChildInStack(obj, target, this.diagram, this.action);\n                    parentNode = checkParentAsContainer(this.diagram, obj) ? this.diagram.nameTable[obj.parentId] :\n                        (this.diagram.nameTable[obj.parentId] || obj);\n                    if (parentNode && parentNode.container && parentNode.container.type === 'Canvas') {\n                        parentNode.wrapper.maxWidth = parentNode.maxWidth = parentNode.wrapper.actualSize.width;\n                        parentNode.wrapper.maxHeight = parentNode.maxHeight = parentNode.wrapper.actualSize.height;\n                        isChangeProperties = true;\n                    }\n                    if (checkParentAsContainer(this.diagram, obj, true) && parentNode && parentNode.container.type === 'Canvas') {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        history = this.updateContainerPropertiesExtend(parentNode, obj, connectors, helperObject, history);\n                    }\n                    if ((this.diagram.lineRoutingModule && (this.diagram.constraints & DiagramConstraints.LineRouting))\n                        && (!checkParentAsContainer(this.diagram, obj, true))) {\n                        if (obj.children) {\n                            this.diagram.realActions |= RealAction.EnableGroupAction;\n                        }\n                        this.diagram.nodePropertyChange(obj, {}, {\n                            width: obj.width, height: obj.height,\n                            offsetX: obj.offsetX, offsetY: obj.offsetY\n                        });\n                        if (obj.children) {\n                            this.diagram.realActions &= ~RealAction.EnableGroupAction;\n                        }\n                    }\n                    if (obj.shape.lanes) {\n                        this.updateLaneChildNode(obj);\n                    }\n                    if (isChangeProperties) {\n                        parentNode.maxWidth = parentNode.wrapper.maxWidth = undefined;\n                        parentNode.maxHeight = parentNode.wrapper.maxHeight = undefined;\n                    }\n                    if (hasStack) {\n                        this.diagram.nodePropertyChange(parentNode, {}, {\n                            offsetX: parentNode.offsetX, offsetY: parentNode.offsetY, width: parentNode.width, height: parentNode.height,\n                            rotateAngle: parentNode.rotateAngle\n                        });\n                        var entry = {\n                            redoObject: { sourceIndex: undefined, source: undoElement.source },\n                            type: 'StackChildPositionChanged', undoObject: undoElement, category: 'Internal'\n                        };\n                        if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                            this.diagram.addHistoryEntry(entry);\n                        }\n                    }\n                    if (obj && obj.container && (obj.container.type === 'Stack' ||\n                        (obj.container.type === 'Canvas' && obj.parentId === ''))) {\n                        if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                            obj.wrapper.measureChildren = true;\n                        }\n                        this.diagram.nodePropertyChange(obj, {}, {\n                            offsetX: obj.offsetX, offsetY: obj.offsetY, width: obj.width, height: obj.height, rotateAngle: obj.rotateAngle\n                        });\n                        if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                            obj.wrapper.measureChildren = false;\n                        }\n                    }\n                }\n                updateConnectorsProperties(connectors, this.diagram);\n                history.hasStack = hasGroup;\n            }\n        }\n        if (obj && (obj.isPhase || obj.isLane ||\n            (obj.shape && obj.shape.type === 'SwimLane'))) {\n            this.diagram.updateDiagramElementQuad();\n        }\n        return history;\n    };\n    DiagramEventHandler.prototype.updateLaneChildNode = function (obj) {\n        for (var i = 0; i < (obj.shape.lanes.length); i++) {\n            if (obj.shape.lanes[i].children && obj.shape.lanes[i].children.length > 0) {\n                for (var j = 0; j < obj.shape.lanes[i].children.length; j++) {\n                    var id = obj.shape.lanes[i].children[j].id;\n                    var childNode = this.diagram.nameTable[id];\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.updateContainerPropertiesExtend = function (parentNode, obj, connectors, helperObject, history) {\n        if (this.currentAction === 'ResizeEast' || this.currentAction === 'ResizeSouth' || obj.shape.type === 'SwimLane') {\n            var undoObj = cloneObject(obj);\n            var isUpdateRow = false;\n            if (parentNode && parentNode.container && parentNode.container.type === 'Grid') {\n                var shape = parentNode.shape.type === 'SwimLane' ? true : false;\n                var container = (shape ? parentNode.wrapper.children[0] : parentNode.wrapper);\n                var padding = shape ? parentNode.shape.padding : undefined;\n                var x = parentNode.wrapper.bounds.x;\n                var y = parentNode.wrapper.bounds.y;\n                if (obj.columnIndex !== undefined && (parentNode.container.orientation === 'Horizontal' &&\n                    ((shape && obj.isPhase) || (!shape && obj.rowIndex === 1))) ||\n                    (parentNode.container.orientation === 'Vertical' &&\n                        ((!shape && obj.rowIndex > 0 && obj.columnIndex > 0) || (shape && obj.isLane)))) {\n                    if (parentNode.container.orientation === 'Horizontal' && obj.isPhase && obj.wrapper.width > obj.maxWidth) {\n                        obj.maxWidth = obj.wrapper.width;\n                        obj.wrapper.maxWidth = obj.wrapper.width;\n                    }\n                    updateSwimLaneObject(this.diagram, obj, parentNode, helperObject);\n                    container.updateColumnWidth(obj.columnIndex, helperObject.width, true, padding);\n                    if (obj.isPhase) {\n                        var id = parentNode.shape.phases[obj.columnIndex].header.id;\n                        var node = this.diagram.nameTable[id];\n                        if (node.maxWidth < helperObject.width) {\n                            node.maxWidth = helperObject.width;\n                            node.wrapper.maxWidth = helperObject.width;\n                        }\n                    }\n                    if (parentNode.shape.type === 'SwimLane') {\n                        parentNode.width = (parentNode.width) ? container.width : parentNode.width;\n                        updateHeaderMaxWidth(this.diagram, parentNode);\n                        parentNode.wrapper.width = parentNode.width;\n                        connectors = getConnectors(this.diagram, container, obj.rowIndex, false);\n                    }\n                }\n                else if (obj.rowIndex !== undefined) {\n                    isUpdateRow = true;\n                    updateSwimLaneObject(this.diagram, obj, parentNode, helperObject);\n                    container.updateRowHeight(obj.rowIndex, helperObject.height, true, padding);\n                    if (parentNode.shape.type === 'SwimLane') {\n                        parentNode.height = (parentNode.height) ? container.height : parentNode.height;\n                        parentNode.wrapper.height = parentNode.height;\n                        connectors = getConnectors(this.diagram, container, obj.rowIndex, true);\n                    }\n                }\n                if (parentNode.shape.type === 'SwimLane') {\n                    history.isPreventHistory = true;\n                }\n                this.diagram.nodePropertyChange(parentNode, {}, {\n                    offsetX: parentNode.offsetX, offsetY: parentNode.offsetY,\n                    rotateAngle: parentNode.rotateAngle\n                });\n                this.diagram.drag(parentNode, x - parentNode.wrapper.bounds.x, y - parentNode.wrapper.bounds.y);\n            }\n            else {\n                if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                    obj.wrapper.measureChildren = true;\n                }\n                this.diagram.nodePropertyChange(obj, {}, {\n                    offsetX: obj.offsetX, offsetY: obj.offsetY, width: obj.width, height: obj.height, rotateAngle: obj.rotateAngle\n                });\n                obj.wrapper.measureChildren = false;\n            }\n            obj.wrapper.measure(new Size(obj.wrapper.width, obj.wrapper.height));\n            obj.wrapper.arrange(obj.wrapper.desiredSize);\n            if (this.currentAction === 'ResizeEast' || this.currentAction === 'ResizeSouth') {\n                var redoObject = cloneObject(obj);\n                var entry = {\n                    category: 'Internal',\n                    type: (isUpdateRow) ? 'RowHeightChanged' : 'ColumnWidthChanged',\n                    undoObject: undoObj, redoObject: redoObject\n                };\n                this.diagram.addHistoryEntry(entry);\n            }\n        }\n        updateConnectorsProperties(connectors, this.diagram);\n        return history;\n    };\n    DiagramEventHandler.prototype.addUmlNode = function () {\n        var node = this.diagram.selectedItems.nodes[0];\n        var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x + 20, y: this.currentPosition.y });\n        var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        if (!target) {\n            objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n            target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        if (node && node.container && node.container.type === 'Stack' && target && target.parentId\n            && target.parentId === node.id) {\n            var innerNode = target;\n            var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n            var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n            if (highlighter) {\n                var index = node.wrapper.children.indexOf(target.wrapper) + 1;\n                var temp = new Node(this.diagram, 'nodes', {\n                    style: { fill: node.style.fill,\n                        strokeColor: (node.style.strokeColor === 'black') ? '#ffffff00' : node.style.strokeColor },\n                    annotations: target.annotations, verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                    minHeight: 25\n                }, true);\n                temp.annotations[0].content = ' + Name : Type';\n                var id = innerNode.id.split('_');\n                temp.id = randomId() + temp.id;\n                temp.parentId = node.id;\n                temp.zIndex = -1;\n                temp.umlIndex = index;\n                this.diagram.startGroupAction();\n                var redoElement = {\n                    sourceIndex: node.wrapper.children.indexOf(temp.wrapper), source: temp,\n                    target: undefined, targetIndex: undefined\n                };\n                this.diagram.add(temp);\n                this.diagram.updateConnectorEdges(node);\n                this.diagram.clearSelection();\n                this.diagram.select([this.diagram.nameTable[temp.id]]);\n                this.diagram.endGroupAction();\n                this.diagram.startTextEdit();\n            }\n        }\n    };\n    return DiagramEventHandler;\n}());\nexport { DiagramEventHandler };\n/** @private */\nvar ObjectFinder = /** @class */ (function () {\n    function ObjectFinder() {\n    }\n    /** @private */\n    ObjectFinder.prototype.findObjectsUnderMouse = function (pt, diagram, eventArgs, source, actions) {\n        // finds the collection of the object that is under the mouse;\n        var actualTarget = [];\n        if (source && source instanceof Selector) {\n            if (source.nodes.length + source.connectors.length === 1) {\n                source = (source.nodes[0] || source.connectors[0]);\n                if (source.children && source.children.length === 0) {\n                    eventArgs.actualObject = source;\n                }\n            }\n        }\n        var container;\n        var bounds;\n        var child;\n        var matrix;\n        var endPadding = (source && (source instanceof Connector) &&\n            ((source.constraints & ConnectorConstraints.ConnectToNearByNode) ||\n                (source.constraints & ConnectorConstraints.ConnectToNearByPort)) && source.connectionPadding) || 0;\n        var objArray = diagram.spatialSearch.findObjects(new Rect(pt.x - 50 - endPadding, pt.y - 50 - endPadding, 100 + endPadding, 100 + endPadding));\n        var layerObjTable = {};\n        var layerTarger;\n        for (var _i = 0, objArray_1 = objArray; _i < objArray_1.length; _i++) {\n            var obj = objArray_1[_i];\n            var point = pt;\n            bounds = obj.wrapper.outerBounds;\n            var pointInBounds = (obj.rotateAngle) ? false : bounds.containsPoint(point, endPadding);\n            if ((obj !== source || diagram.currentDrawingObject instanceof Connector) &&\n                (obj instanceof Connector) ? obj !== diagram.currentDrawingObject : true && obj.wrapper.visible) {\n                var layer = diagram.commandHandler.getObjectLayer(obj.id);\n                if (layer && !layer.lock && layer.visible) {\n                    layerTarger = layerObjTable[layer.zIndex] = layerObjTable[layer.zIndex] || [];\n                    if (obj.rotateAngle) {\n                        container = obj.wrapper;\n                        bounds = cornersPointsBeforeRotation(container);\n                        for (var _a = 0, _b = container.children; _a < _b.length; _a++) {\n                            child = _b[_a];\n                            matrix = identityMatrix();\n                            rotateMatrix(matrix, -(child.rotateAngle + child.parentTransform), child.offsetX, child.offsetY);\n                            point = transformPointByMatrix(matrix, pt);\n                            if (cornersPointsBeforeRotation(child).containsPoint(point, endPadding)) {\n                                pointInBounds = true;\n                            }\n                        }\n                    }\n                    if (!source || (isSelected(diagram, obj) === false)) {\n                        if (canEnablePointerEvents(obj, diagram)) {\n                            if ((obj instanceof Connector) ? isPointOverConnector(obj, pt) : pointInBounds) {\n                                var padding = (obj instanceof Connector) ? obj.hitPadding || 0 : 0;\n                                var element = void 0;\n                                element = this.findElementUnderMouse(obj, pt, endPadding || padding);\n                                if (element && obj.id !== 'helper') {\n                                    insertObject(obj, 'zIndex', layerTarger);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        for (var _c = 0, _d = diagram.layers; _c < _d.length; _c++) {\n            var layer = _d[_c];\n            actualTarget = actualTarget.concat(layerObjTable[layer.zIndex] || []);\n            for (var _e = 0, actualTarget_1 = actualTarget; _e < actualTarget_1.length; _e++) {\n                var obj = actualTarget_1[_e];\n                var eventHandler = 'eventHandler';\n                if (obj.shape.type === 'Bpmn' && obj.processId && (!(diagram[eventHandler].tool instanceof MoveTool) ||\n                    (diagram[eventHandler].tool instanceof MoveTool) && canAllowDrop(obj))) {\n                    var index = actualTarget.indexOf(diagram.nameTable[obj.processId]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n                if (obj.shape.type === 'UmlClassifier' && obj.container && obj.container.type === 'Stack') {\n                    var index = actualTarget.indexOf(diagram.nameTable[diagram.nameTable[obj.id].wrapper.children[0].id]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < actualTarget.length; i++) {\n            var parentObj = diagram.nameTable[actualTarget[i].parentId];\n            if (parentObj) {\n                var portElement = this.findElementUnderMouse(parentObj, pt);\n                for (var j = 0; j < parentObj.ports.length; j++) {\n                    if (portElement.id.match('_' + parentObj.ports[j].id + '$')) {\n                        var port = parentObj.ports[j];\n                        if (canDrag(port, diagram) || canDraw(port, diagram)) {\n                            return actualTarget;\n                        }\n                    }\n                }\n            }\n            while (parentObj) {\n                var index = actualTarget.indexOf(parentObj);\n                if (index !== -1) {\n                    actualTarget.splice(index, 1);\n                }\n                else {\n                    break;\n                }\n                parentObj = diagram.nameTable[parentObj.parentId];\n            }\n        }\n        if (eventArgs && !eventArgs.source) {\n            for (var i = 0; i < actualTarget.length; i++) {\n                var parentNode = diagram.nameTable[actualTarget[i].parentId];\n                if (parentNode && parentNode.shape.type === 'SwimLane') {\n                    for (var j = 0; j < actualTarget.length; j++) {\n                        var connector = actualTarget[j];\n                        if (connector instanceof Connector) {\n                            actualTarget.splice(i, 1);\n                        }\n                    }\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /** @private */\n    ObjectFinder.prototype.isTarget = function (actualTarget, diagram, action) {\n        var connector = diagram.selectedItems.connectors[0];\n        var node;\n        node = action === 'ConnectorSourceEnd' ? diagram.nameTable[connector.targetID] :\n            node = diagram.nameTable[connector.sourceID];\n        if (node && (!node.processId && !actualTarget.processId || node.processId !== actualTarget.processId)) {\n            if (node.processId !== actualTarget.processId) {\n                actualTarget = null;\n            }\n            if (actualTarget && actualTarget.parentId &&\n                diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                actualTarget = diagram.nameTable[actualTarget.parentId];\n            }\n        }\n        if (action === 'ConnectorSourceEnd' && connector.targetID) {\n            var targetNode = diagram.nameTable[connector.targetID];\n            if (targetNode && targetNode.shape && (targetNode.shape.shape === 'TextAnnotation')) {\n                var id = connector.id.split('_');\n                if (((targetNode.shape.type === 'Bpmn') && actualTarget.shape.type !== 'Bpmn') || (id[0] === actualTarget.id) ||\n                    actualTarget.shape.shape === 'TextAnnotation') {\n                    actualTarget = null;\n                }\n                if (actualTarget.parentId &&\n                    diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                    actualTarget = diagram.nameTable[actualTarget.parentId];\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:disable */\n    /** @private */\n    ObjectFinder.prototype.findObjectUnderMouse = function (diagram, objects, action, inAction, eventArg, position, source) {\n        //we will get the wrapper object here\n        //we have to choose the object to be interacted with from the given wrapper\n        //Find the object that is under mouse\n        var eventHandler = 'eventHandler';\n        var endPoint = 'endPoint';\n        var inPort;\n        var outPort;\n        var actualTarget = null;\n        if (objects.length !== 0) {\n            if (source && source instanceof Selector) {\n                if (source.nodes.length + source.connectors.length === 1) {\n                    source = (source.nodes[0] || source.connectors[0]);\n                }\n            }\n            if ((action === 'ConnectorSourceEnd' && source || action === 'PortDraw') ||\n                ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && getObjectType(diagram.drawingObject) === Connector)) {\n                var connector = diagram.selectedItems.connectors[0];\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    outPort = getInOutConnectPorts(objects[i], false);\n                    inPort = getInOutConnectPorts(objects[i], true);\n                    var tool = diagram[eventHandler].tool;\n                    var portElement = this.findTargetElement(objects[i].wrapper, position, undefined);\n                    if (action === 'Draw' && portElement && (objects[i] instanceof Node) && !checkPort(objects[i], portElement)) {\n                        if (((tool && tool[endPoint] === 'ConnectorSourceEnd') && !canOutConnect(objects[i])) ||\n                            ((tool && tool[endPoint] === 'ConnectorTargetEnd') && !canInConnect(objects[i]))) {\n                            return actualTarget;\n                        }\n                    }\n                    if (objects[i] instanceof Node && ((canOutConnect(objects[i]) || (canPortOutConnect(outPort)) || canInConnect(objects[i]) || (canPortInConnect(inPort))) ||\n                        (action === 'PortDraw' && (tool instanceof ConnectTool) && tool[endPoint] == 'ConnectorTargetEnd' &&\n                            (canInConnect(objects[i]) || (canPortInConnect(inPort)))))) {\n                        actualTarget = objects[i];\n                        if (connector) {\n                            actualTarget = this.isTarget(actualTarget, diagram, action);\n                        }\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (action === 'ConnectorTargetEnd' && source) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    inPort = getInOutConnectPorts(objects[i], true);\n                    if (objects[i] instanceof Node && (canInConnect(objects[i]) || (canPortInConnect(inPort)))) {\n                        actualTarget = objects[i];\n                        actualTarget = this.isTarget(actualTarget, diagram, action);\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (source && (action === 'Drag' || (diagram[eventHandler].tool instanceof MoveTool))) {\n                var index = 0;\n                for (var i = 0; i < objects.length; i++) {\n                    var temp = objects[i];\n                    if (source !== temp && (temp instanceof Connector ||\n                        !position || temp.wrapper.bounds.containsPoint(position))) {\n                        if (canAllowDrop(temp)) {\n                            if (!actualTarget) {\n                                actualTarget = temp;\n                                index = actualTarget.zIndex;\n                            }\n                            else {\n                                actualTarget = index >= temp.zIndex ? actualTarget : temp;\n                                index = Math.max(index, temp.zIndex);\n                            }\n                        }\n                    }\n                }\n                if (actualTarget && actualTarget.shape.type === 'Bpmn') {\n                    if (diagram.selectedItems.nodes.length > 0 && diagram.selectedItems.nodes[0].shape.type === 'Bpmn') {\n                        actualTarget = actualTarget;\n                    }\n                    else {\n                        actualTarget = null;\n                    }\n                }\n                if (actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n                return actualTarget;\n            }\n            else if ((action === 'Select' || action === 'Pan') && diagram[eventHandler].tool) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Connector) {\n                        var objj1 = objects[i - 1];\n                        if (objects[i - 1] instanceof Node && objj1.ports) {\n                            var portElement_1 = this.findTargetElement(objj1.wrapper, position, undefined);\n                            if ((portElement_1 && (portElement_1.id.match('_icon_content_shape$') || portElement_1.id.match('_icon_content_rect$')))) {\n                                return objj1;\n                            }\n                            for (var j = 0; j < objj1.ports.length; j++) {\n                                if (portElement_1 && portElement_1.id.match('_' + objj1.ports[j].id + '$')) {\n                                    if (canDraw(objj1.ports[j], diagram)) {\n                                        return objj1;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                actualTarget = objects[objects.length - 1];\n                eventArg.actualObject = actualTarget;\n                if (!diagram[eventHandler].itemClick(actualTarget, true)) {\n                    if (actualTarget.parentId) {\n                        var obj = actualTarget;\n                        var selected = isSelected(diagram, obj);\n                        while (obj) {\n                            if (isSelected(diagram, obj) && !selected) {\n                                break;\n                            }\n                            actualTarget = obj;\n                            obj = diagram.nameTable[obj.parentId];\n                        }\n                    }\n                }\n            }\n            else if (action === 'Pan' || action === 'LayoutAnimation') {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node || objects[i] instanceof Connector) {\n                        var portElement_2 = this.findTargetElement(objects[i].wrapper, position, undefined);\n                        if ((action === 'Pan') || ((portElement_2 && (portElement_2.id.match('_icon_content_shape$') || portElement_2.id.match('_icon_content_rect$'))))) {\n                            return objects[i];\n                        }\n                    }\n                }\n            }\n            else {\n                actualTarget = objects[objects.length - 1];\n                if (eventArg && actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:enable */\n    /** @private */\n    ObjectFinder.prototype.findElementUnderSelectedItem = function (obj, position, padding) {\n        //rewrite this for multiple selection\n        if (obj instanceof Selector) {\n            if (obj.nodes.length === 1 && (!obj.connectors || !obj.connectors.length)) {\n                return this.findElementUnderMouse(obj.nodes[0], position);\n            }\n            else if ((!obj.nodes || obj.nodes.length) && obj.connectors.length === 1) {\n                return this.findElementUnderMouse(obj.connectors[0], position);\n            }\n        }\n        else {\n            return this.findElementUnderMouse(obj, position, padding);\n        }\n        return null;\n    };\n    ObjectFinder.prototype.findElementUnderMouse = function (obj, position, padding) {\n        return this.findTargetElement(obj.wrapper, position, padding);\n    };\n    /** @private */\n    ObjectFinder.prototype.findTargetElement = function (container, position, padding) {\n        for (var i = container.children.length - 1; i >= 0; i--) {\n            var element = container.children[i];\n            if (element && element.outerBounds.containsPoint(position, padding || 0)) {\n                if (element instanceof Container) {\n                    var target = this.findTargetElement(element, position);\n                    if (target) {\n                        return target;\n                    }\n                }\n                if (element.bounds.containsPoint(position, padding || 0)) {\n                    return element;\n                }\n            }\n        }\n        if (container.bounds.containsPoint(position, padding) && container.style.fill !== 'none') {\n            return container;\n        }\n        return null;\n    };\n    return ObjectFinder;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    // tslint:disable-next-line:no-any\n    function Layer(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /**  @private   */\n        _this.objectZIndex = -1;\n        /**   @private  */\n        _this.zIndexTable = {};\n        _this.objects = [];\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Layer.prototype, \"id\", void 0);\n    __decorate([\n        Property(true)\n    ], Layer.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], Layer.prototype, \"lock\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"objects\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property(-1)\n    ], Layer.prototype, \"zIndex\", void 0);\n    return Layer;\n}(ChildProperty));\nexport { Layer };\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { Connector, getBezierPoints, isEmptyVector } from '../objects/connector';\nimport { Node, BpmnSubEvent, BpmnAnnotation } from '../objects/node';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { Rect } from '../primitives/rect';\nimport { Diagram } from '../../diagram/diagram';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { cloneObject as clone, cloneObject, getBounds, getFunction, getIndex } from './../utility/base-util';\nimport { completeRegion, getTooltipOffset, sort, findObjectIndex, intersect3, getAnnotationPosition } from './../utility/diagram-util';\nimport { updatePathElement, cloneBlazorObject, getUserHandlePosition, cloneSelectedObjects } from './../utility/diagram-util';\nimport { updateDefaultValues } from './../utility/diagram-util';\nimport { randomId, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { Selector } from '../objects/node';\nimport { hasSelection, isSelected, hasSingleConnection, contains } from './actions';\nimport { DiagramEvent } from '../enum/enum';\nimport { BlazorAction } from '../enum/enum';\nimport { canSelect, canMove, canRotate, canDragSourceEnd, canDragTargetEnd, canSingleSelect, canDrag } from './../utility/constraints-util';\nimport { canMultiSelect, canContinuousDraw } from './../utility/constraints-util';\nimport { canPanX, canPanY, canPageEditable } from './../utility/constraints-util';\nimport { SnapConstraints, DiagramTools, DiagramAction, RealAction } from '../enum/enum';\nimport { getDiagramElement, getAdornerLayerSvg, getHTMLLayer, getAdornerLayer } from '../utility/dom-util';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { getObjectType, getPoint, intersect2, getOffsetOfConnector, canShowCorner } from './../utility/diagram-util';\nimport { Layer } from '../diagram/layer';\nimport { SelectorConstraints, DiagramConstraints } from '../enum/enum';\nimport { remove, isBlazor } from '@syncfusion/ej2-base';\nimport { getOppositeDirection, getPortDirection, findAngle } from './../utility/connector';\nimport { swapBounds, findPoint, orthoConnection2Segment, getIntersection } from './../utility/connector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { renderContainerHelper } from './container-interaction';\nimport { checkChildNodeInContainer, checkParentAsContainer, addChildToContainer } from './container-interaction';\nimport { renderStackHighlighter } from './container-interaction';\nimport { getConnectors, updateConnectorsProperties, canLaneInterchange, findLane } from './../utility/swim-lane-util';\nimport { swimLaneSelection, pasteSwimLane, gridSelection } from '../utility/swim-lane-util';\nimport { DeepDiffMapper } from '../utility/diff-map';\n/**\n * Defines the behavior of commands\n */\nvar CommandHandler = /** @class */ (function () {\n    function CommandHandler(diagram) {\n        /**   @private  */\n        this.clipboardData = {};\n        // private newNodeObject: Object[] = [];\n        // private newConnectorObject: Object[] = [];\n        /**   @private  */\n        this.diagramObject = {};\n        /**   @private  */\n        this.newSelectedObjects = {};\n        /**   @private  */\n        this.oldSelectedObjects = {};\n        /**   @private  */\n        this.connectorsTable = [];\n        /**   @private  */\n        this.processTable = {};\n        /**   @private  */\n        this.deepDiffer = new DeepDiffMapper();\n        /** @private */\n        this.isContainer = false;\n        this.childTable = {};\n        this.parentTable = {};\n        this.diagram = diagram;\n    }\n    Object.defineProperty(CommandHandler.prototype, \"snappingModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.snappingModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CommandHandler.prototype, \"layoutAnimateModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.layoutAnimateModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    CommandHandler.prototype.startTransaction = function (protectChange) {\n        this.state = { element: this.diagram.selectedItems, backup: null };\n        if (protectChange) {\n            this.diagram.protectPropertyChange(true);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'none';\n    };\n    /** @private */\n    CommandHandler.prototype.endTransaction = function (protectChange) {\n        this.state = null;\n        if (protectChange) {\n            this.diagram.protectPropertyChange(false);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'all';\n    };\n    /** @private */\n    CommandHandler.prototype.setFocus = function () {\n        document.getElementById(this.diagram.element.id).focus();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.showTooltip = function (node, position, content, toolName, isTooltipVisible) {\n        var _this = this;\n        if (isTooltipVisible) {\n            this.diagram.tooltipObject.position = 'BottomCenter';\n            this.diagram.tooltipObject.animation = { open: { delay: 0, duration: 0 } };\n            this.diagram.tooltip.relativeMode = toolName === 'ConnectTool' ? 'Mouse' : 'Object';\n            this.diagram.tooltipObject.openDelay = 0;\n            this.diagram.tooltipObject.closeDelay = 0;\n        }\n        if (this.diagram.selectedItems.setTooltipTemplate) {\n            var template = void 0;\n            var setTooltipTemplate = getFunction(this.diagram.selectedItems.setTooltipTemplate);\n            if (setTooltipTemplate) {\n                template = setTooltipTemplate(node, this.diagram);\n            }\n            if (template instanceof HTMLElement) {\n                content = template.cloneNode(true);\n            }\n            else {\n                content = template ? template : content;\n            }\n        }\n        this.diagram.tooltipObject.content = content;\n        var tooltipOffset = getTooltipOffset(this.diagram, { x: position.x, y: position.y }, node);\n        this.diagram.tooltipObject.offsetX = tooltipOffset.x + (toolName === 'ConnectTool' ? 10 : 0);\n        this.diagram.tooltipObject.offsetY = tooltipOffset.y + 10;\n        this.diagram.tooltipObject.dataBind();\n        if (isTooltipVisible) {\n            setTimeout(function () {\n                _this.diagram.tooltipObject.open(_this.diagram.element);\n            }, 1);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.closeTooltip = function () {\n        this.diagram.tooltipObject.close();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canEnableDefaultTooltip = function () {\n        if (this.diagram.selectedItems.constraints & SelectorConstraints.ToolTip) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelector = function () {\n        this.diagram.updateSelector();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateConnectorValue = function (args) {\n        if (args.cancel) {\n            var newChanges = {};\n            var oldChanges = {};\n            var connector = this.diagram.nameTable[args.connector.id];\n            var nodeEndId = args.connectorEnd === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n            var portEndId = args.connectorEnd === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n            var connectionEnd = args.connectorEnd === 'ConnectorTargetEnd';\n            var newValue = connectionEnd ? args.newValue.connectorTargetValue : args.newValue.connectorSourceValue;\n            var oldValue = connectionEnd ? args.oldValue.connectorTargetValue : args.oldValue.connectorSourceValue;\n            oldChanges[nodeEndId] = newValue.nodeId;\n            oldChanges[portEndId] = newValue.portId;\n            newChanges[nodeEndId] = oldValue.nodeId;\n            newChanges[portEndId] = oldValue.portId;\n            if (args.cancel && args.connectorEnd !== 'ConnectorTargetEnd') {\n                connector.sourceID = oldValue.nodeId;\n                if (args.connector.sourcePortID) {\n                    connector.sourcePortID = oldValue.portId;\n                }\n                this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            }\n            if (args.cancel && args.connectorEnd === 'ConnectorTargetEnd') {\n                if (args.connector.targetPortID) {\n                    connector.targetPortID = oldValue.portId;\n                }\n                connector.targetID = oldValue.nodeId;\n                this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.triggerEvent = function (event, args) {\n        return __awaiter(this, void 0, void 0, function () {\n            var temparg;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (event === DiagramEvent.drop || event === DiagramEvent.positionChange ||\n                            event === DiagramEvent.connectionChange) {\n                            if (this.diagram.currentSymbol) {\n                                return [2 /*return*/];\n                            }\n                            if (event === DiagramEvent.drop) {\n                                args.source = cloneBlazorObject(this.diagram);\n                            }\n                            if (this.diagram.currentDrawingObject && event !== DiagramEvent.positionChange) {\n                                return [2 /*return*/];\n                            }\n                        }\n                        return [4 /*yield*/, this.diagram.triggerEvent(event, args)];\n                    case 1:\n                        temparg = _a.sent();\n                        return [2 /*return*/, temparg];\n                }\n            });\n        });\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dragOverElement = function (args, currentPosition) {\n        if (this.diagram.currentSymbol) {\n            var dragOverArg = {\n                element: cloneBlazorObject(args.source), target: cloneBlazorObject(args.target),\n                mousePosition: cloneBlazorObject(currentPosition), diagram: cloneBlazorObject(this.diagram)\n            };\n            this.triggerEvent(DiagramEvent.dragOver, dragOverArg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.disConnect = function (obj, endPoint, canCancel) {\n        var checkBlazor = isBlazor();\n        var oldChanges = {};\n        var newChanges = {};\n        var returnargs;\n        var selectorModel;\n        var connector;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (obj && connector && (hasSingleConnection(this.diagram) || this.diagram.currentDrawingObject)) {\n            if (isBlazor()) {\n                this.diagram.insertValue(cloneObject(connector), false);\n            }\n            if (endPoint && (endPoint === 'ConnectorSourceEnd' || endPoint === 'ConnectorTargetEnd')) {\n                var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                if (connector[nodeEndId]) { //connector.sourceID || connector.targetID\n                    oldChanges[nodeEndId] = connector[nodeEndId];\n                    connector[nodeEndId] = '';\n                    newChanges[nodeEndId] = connector[nodeEndId];\n                    if (connector.sourcePortID || connector.targetPortID) {\n                        oldChanges[portEndId] = connector[portEndId];\n                        connector[portEndId] = '';\n                        newChanges[portEndId] = connector[portEndId];\n                    }\n                    returnargs = this.connectionEventChange(connector, oldChanges, newChanges, endPoint, canCancel);\n                }\n            }\n            else if ((endPoint !== 'OrthoThumb' && endPoint !== 'SegmentEnd') && (connector.sourceID || connector.targetID)) {\n                oldChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                connector.sourceID = '';\n                connector.sourcePortID = '';\n                connector.targetID = '';\n                connector.targetPortID = '';\n                newChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                var arg = {\n                    connector: cloneBlazorObject(connector), oldValue: oldChanges,\n                    newValue: newChanges, cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                if (isBlazor()) {\n                    arg = {\n                        connector: cloneBlazorObject(connector),\n                        oldValue: { connector: cloneBlazorObject(oldChanges) },\n                        newValue: { connector: cloneBlazorObject(newChanges) },\n                        cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                    returnargs = arg;\n                }\n                if (!checkBlazor) {\n                    this.triggerEvent(DiagramEvent.connectionChange, arg);\n                }\n                if (arg.cancel) {\n                    connector.sourceID = oldChanges.sourceID;\n                    connector.sourcePortID = oldChanges.sourcePortID;\n                    connector.targetID = oldChanges.targetID;\n                    connector.targetPortID = oldChanges.targetPortID;\n                }\n                else {\n                    this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                    this.diagram.updateDiagramObject(connector);\n                    arg = {\n                        connector: connector, oldValue: oldChanges,\n                        newValue: newChanges, cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                    if (isBlazor()) {\n                        arg = {\n                            connector: cloneBlazorObject(connector), oldValue: { connector: oldChanges },\n                            newValue: { connector: newChanges }, cancel: false, state: 'Changed', connectorEnd: endPoint\n                        };\n                        returnargs = arg;\n                    }\n                    if (!checkBlazor) {\n                        this.triggerEvent(DiagramEvent.connectionChange, arg);\n                    }\n                }\n            }\n        }\n        return returnargs;\n    };\n    CommandHandler.prototype.connectionEventChange = function (connector, oldChanges, newChanges, endPoint, canCancel) {\n        var checkBlazor = isBlazor();\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        var connectedNode;\n        if (this.enableCloneObject) {\n            connectedNode = this.diagram.nameTable[newChanges[nodeEndId]];\n            var nodeObject = cloneObject(connectedNode);\n            this.diagram.insertValue(nodeObject, true);\n        }\n        var returnargs;\n        var arg = {\n            cancel: false, state: 'Changing', connectorEnd: endPoint,\n            connector: cloneBlazorObject(connector), oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n            newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }\n        };\n        if (isBlazor()) {\n            arg = {\n                connector: cloneBlazorObject(connector),\n                cancel: false, state: 'Changing', connectorEnd: endPoint,\n                oldValue: undefined, newValue: undefined\n            };\n            if (endPoint === 'ConnectorSourceEnd') {\n                arg.oldValue = {\n                    connectorSourceValue: {\n                        portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId]\n                    }\n                };\n                arg.newValue = {\n                    connectorSourceValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId], }\n                };\n            }\n            else {\n                arg.oldValue = {\n                    connectorTargetValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] }\n                };\n                arg.newValue = {\n                    connectorTargetValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }\n                };\n            }\n            returnargs = arg;\n        }\n        if (!checkBlazor) {\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n        }\n        if (arg.cancel || (isBlazor() && canCancel)) {\n            connector[nodeEndId] = oldChanges[nodeEndId];\n            connector[portEndId] = oldChanges[portEndId];\n            newChanges = oldChanges;\n        }\n        else {\n            this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            this.diagram.updateDiagramObject(connector);\n            arg = {\n                connector: cloneBlazorObject(connector), oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n                newValue: {\n                    nodeId: newChanges[nodeEndId],\n                    portId: newChanges[portEndId]\n                },\n                cancel: false, state: 'Changing', connectorEnd: endPoint\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector),\n                    oldValue: undefined,\n                    newValue: undefined,\n                    cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                if (endPoint === 'ConnectorSourceEnd') {\n                    arg.newValue = {\n                        connectorSourceValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] }\n                    };\n                    arg.oldValue = {\n                        connectorSourceValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] }\n                    };\n                }\n                else {\n                    arg.oldValue = {\n                        connectorTargetValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId], }\n                    };\n                    arg.newValue = {\n                        connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] }\n                    };\n                }\n                returnargs = arg;\n            }\n        }\n        if (this.enableCloneObject) {\n            if (connectedNode === undefined) {\n                connectedNode = this.diagram.nameTable[oldChanges[nodeEndId]];\n                var nodeObject = cloneObject(connectedNode);\n                this.diagram.insertValue(nodeObject, true);\n            }\n        }\n        return returnargs;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findTarget = function (element, argsTarget, source, connection) {\n        var target;\n        if (argsTarget instanceof Node) {\n            if (element && element.id === argsTarget.id + '_content') {\n                return argsTarget;\n            }\n            if (source && argsTarget.shape.type === 'Bpmn' && ((!isBlazor() && argsTarget.shape.shape === 'Activity') ||\n                (isBlazor() && argsTarget.shape.bpmnShape === 'Activity'))) {\n                if (argsTarget.shape.activity.subProcess.type === 'Transaction') {\n                    var transaction = argsTarget.shape.activity.subProcess.transaction;\n                    if (transaction.success.visible && element.id.indexOf(argsTarget.id + '_success') === 0) {\n                        return transaction.success;\n                    }\n                    if (transaction.cancel.visible && element.id.indexOf(argsTarget.id + '_cancel') === 0) {\n                        return transaction.cancel;\n                    }\n                    if (transaction.failure.visible && element.id.indexOf(argsTarget.id + '_failure') === 0) {\n                        return transaction.failure;\n                    }\n                }\n            }\n            if (element instanceof PathElement) {\n                for (var i = 0; i < argsTarget.ports.length; i++) {\n                    var port = argsTarget.ports[i];\n                    if (element.id === argsTarget.id + '_' + port.id) {\n                        return port;\n                    }\n                }\n            }\n        }\n        if (!connection) {\n            var annotation = void 0;\n            for (var i = 0; i < argsTarget.annotations.length; i++) {\n                annotation = argsTarget.annotations[i];\n                if (element.id === argsTarget.id + '_' + annotation.id) {\n                    return annotation;\n                }\n            }\n        }\n        return argsTarget;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canDisconnect = function (endPoint, args, targetPortId, targetNodeId) {\n        var selector;\n        var connect;\n        if (args.source instanceof Selector) {\n            selector = args.source;\n            connect = selector.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connect = this.diagram.currentDrawingObject;\n        }\n        var targetObject = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEnd = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEnd = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (connect[nodeEnd] !== targetNodeId || connect[portEnd] !== targetPortId) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.changeAnnotationDrag = function (args) {\n        var selectorModel;\n        var connector;\n        if (args.source && args.source.connectors &&\n            args.source.connectors.length && this.diagram.bpmnModule &&\n            this.diagram.bpmnModule.textAnnotationConnectors.indexOf(args.source.connectors[0]) > -1) {\n            if (args.source instanceof Selector) {\n                selectorModel = args.source;\n                connector = selectorModel.connectors[0];\n            }\n            var id = connector.id.split('_');\n            var annotationId = id[id.length - 1];\n            var nodeId = id[id.length - 3] || id[0];\n            if (args.target && args.target.id !== nodeId &&\n                ((!isBlazor() && args.target.shape.shape !== 'TextAnnotation') ||\n                    (isBlazor() && args.target.shape.bpmnShape !== 'TextAnnotation'))) {\n                this.diagram.startGroupAction();\n                var parentNode = this.diagram.nameTable[id[0]];\n                var clonedNode = this.getAnnotation(parentNode, id[1]);\n                var annotationNode = {\n                    id: id[1] + randomId(),\n                    angle: Point.findAngle(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    text: clonedNode.text,\n                    length: Point.distancePoints(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                    nodeId: clonedNode.nodeId\n                };\n                var annotationObj = new BpmnAnnotation(args.target.shape, 'annotations', annotationNode, true);\n                this.diagram.bpmnModule.checkAndRemoveAnnotations(this.diagram.nameTable[connector.targetID], this.diagram);\n                this.diagram.refreshCanvasLayers();\n                annotationObj.id = id[1];\n                this.diagram.addTextAnnotation(annotationObj, args.target);\n                this.diagram.endGroupAction();\n            }\n            else if (connector) {\n                connector.sourceID = nodeId;\n                this.diagram.connectorPropertyChange(connector, {}, { sourceID: nodeId });\n                this.diagram.updateDiagramObject(connector);\n            }\n        }\n    };\n    /* tslint:disable */\n    /**\n     * @private\n     */\n    CommandHandler.prototype.connect = function (endPoint, args, canCancel) {\n        var checkBlazor;\n        var newChanges = {};\n        var oldChanges = {};\n        var oldNodeId;\n        var oldPortId;\n        var selectorModel;\n        var connector;\n        var returnargs;\n        if (args.source instanceof Selector) {\n            selectorModel = args.source;\n            connector = selectorModel.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        var target = this.findTarget((args.targetWrapper || args.sourceWrapper), (args.target || args.actualObject), endPoint === 'ConnectorSourceEnd', true);\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (target instanceof Node) {\n            oldChanges[nodeEndId] = connector[nodeEndId];\n            connector[nodeEndId] = target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            oldChanges[portEndId] = connector[portEndId];\n            returnargs = this.connectionEventChange(connector, oldChanges, newChanges, endPoint, canCancel);\n        }\n        else {\n            oldNodeId = connector[nodeEndId];\n            oldPortId = connector[portEndId];\n            connector[portEndId] = target.id;\n            connector[nodeEndId] = (args.target && args.target.id || args.actualObject.id);\n            newChanges[nodeEndId] = connector[nodeEndId];\n            newChanges[portEndId] = connector[portEndId];\n            var arg = {\n                connector: cloneBlazorObject(connector), oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changing', connectorEnd: endPoint\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector),\n                    oldValue: undefined,\n                    newValue: undefined,\n                    cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                if (endPoint === 'ConnectorSourceEnd') {\n                    arg.oldValue = {\n                        connectorSourceValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] }\n                    };\n                    arg.newValue = {\n                        connectorSourceValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] }\n                    };\n                }\n                else {\n                    arg.newValue = {\n                        connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] }\n                    };\n                    arg.oldValue = {\n                        connectorTargetValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] }\n                    };\n                }\n                returnargs = arg;\n            }\n            if (!checkBlazor) {\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n            }\n            if (arg.cancel || (isBlazor() && canCancel)) {\n                connector[nodeEndId] = oldNodeId;\n                connector[portEndId] = oldPortId;\n                newChanges[nodeEndId] = oldNodeId;\n                newChanges[portEndId] = oldPortId;\n            }\n            else {\n                this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                this.diagram.updateDiagramObject(connector);\n                arg = {\n                    connector: cloneBlazorObject(connector), oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                    newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }, cancel: false,\n                    state: 'Changing', connectorEnd: endPoint\n                };\n                if (isBlazor()) {\n                    arg = {\n                        newValue: undefined,\n                        connector: cloneBlazorObject(connector),\n                        oldValue: undefined,\n                        cancel: false, state: 'Changing', connectorEnd: endPoint,\n                    };\n                    if (endPoint === 'ConnectorSourceEnd') {\n                        arg.oldValue = {\n                            connectorSourceValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] }\n                        };\n                        arg.newValue = {\n                            connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] }\n                        };\n                    }\n                    else {\n                        arg.oldValue = {\n                            connectorTargetValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] }\n                        };\n                        arg.newValue = {\n                            connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] }\n                        };\n                    }\n                }\n            }\n        }\n        this.renderHighlighter(args, undefined, endPoint === 'ConnectorSourceEnd');\n        return returnargs;\n    };\n    /* tslint:enable */\n    /** @private */\n    CommandHandler.prototype.cut = function () {\n        var index;\n        this.clipboardData.pasteIndex = 0;\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.startGroupAction();\n        }\n        this.clipboardData.clipObject = this.copyObjects();\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.endGroupAction();\n        }\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    CommandHandler.prototype.UpdateBlazorDiagramModelLayers = function (layer) {\n        var blazorInterop = 'sfBlazor';\n        var updatedModel = cloneBlazorObject(layer);\n        var blazor = 'Blazor';\n        if (window && window[blazor]) {\n            var obj = { 'methodName': 'UpdateBlazorDiagramModelLayers', 'diagramobj': JSON.stringify(updatedModel) };\n            window[blazorInterop].updateBlazorProperties(obj, this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addLayer = function (layer, objects, isClone) {\n        if (isClone === void 0) { isClone = false; }\n        layer.id = layer.id || randomId();\n        layer.zIndex = this.diagram.layers.length;\n        this.diagram.enableServerDataBinding(false);\n        layer = new Layer(this.diagram, 'layers', layer, true);\n        this.diagram.enableServerDataBinding(true);\n        layer.objectZIndex = -1;\n        layer.zIndexTable = {};\n        this.diagram.layers.push(layer);\n        if (isClone) {\n            this.UpdateBlazorDiagramModelLayers(layer);\n        }\n        this.diagram.layerZIndexTable[layer.zIndex] = layer.id;\n        this.diagram.activeLayer = layer;\n        var layers = layer.objects;\n        if (objects) {\n            for (var i = 0; i < objects.length; i++) {\n                this.diagram.add(objects[i]);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getObjectLayer = function (objectName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            var objIndex = layers[i].objects.indexOf(objectName);\n            if (objIndex > -1) {\n                return layers[i];\n            }\n        }\n        return this.diagram.activeLayer;\n    };\n    /** @private */\n    CommandHandler.prototype.getLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            if (layers[i].id === layerName) {\n                return layers[i];\n            }\n        }\n        return undefined;\n    };\n    /** @private */\n    CommandHandler.prototype.removeLayer = function (layerId) {\n        var layers = this.getLayer(layerId);\n        if (layers) {\n            var index = this.diagram.layers.indexOf(layers);\n            var layerObject = layers.objects;\n            for (var i = layerObject.length - 1; i >= 0; i--) {\n                this.diagram.unSelect(this.diagram.nameTable[layerObject[i]]);\n                this.diagram.remove(this.diagram.nameTable[layerObject[i]]);\n                if (layers.id !== 'default_layer') {\n                    if (this.diagram.activeLayer.id === layerId) {\n                        this.diagram.activeLayer = this.diagram.layers[this.diagram.layers.length - 1];\n                    }\n                }\n            }\n            delete this.diagram.layerZIndexTable[layers.zIndex];\n            this.diagram.layers.splice(index, 1);\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.moveObjects = function (objects, targetLayer) {\n        var layer = this.getLayer(targetLayer) || this.diagram.activeLayer;\n        this.diagram.setActiveLayer(layer.id);\n        var targerNodes;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var i = objects_1[_i];\n            var layer_1 = this.getObjectLayer(i);\n            var index = layer_1.objects.indexOf(i);\n            if (index > -1) {\n                targerNodes = this.diagram.nameTable[i];\n                this.diagram.unSelect(targerNodes);\n                this.diagram.remove(this.diagram.nameTable[i]);\n                this.diagram.add(targerNodes);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.cloneLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        var layer = this.getLayer(layerName);\n        if (layer) {\n            var cloneObject_1 = [];\n            var newlayer = {\n                id: layerName + '_' + randomId(), objects: [], visible: true, lock: false\n            };\n            this.addLayer(newlayer, null, true);\n            newlayer.zIndex = this.diagram.layers.length - 1;\n            var multiSelect = cloneObject_1.length !== 1;\n            for (var _i = 0, _a = layer.objects; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                cloneObject_1.push(this.diagram.nameTable[obj]);\n            }\n            this.paste(cloneObject_1);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.copy = function () {\n        this.clipboardData.pasteIndex = 1;\n        this.clipboardData.clipObject = this.copyObjects();\n        return this.clipboardData.clipObject;\n    };\n    /** @private */\n    CommandHandler.prototype.copyObjects = function () {\n        var selectedItems = [];\n        var obj = [];\n        this.clipboardData.childTable = {};\n        if (this.diagram.selectedItems.connectors.length > 0) {\n            selectedItems = this.diagram.selectedItems.connectors;\n            for (var j = 0; j < selectedItems.length; j++) {\n                var element = void 0;\n                if (this.diagram.bpmnModule &&\n                    this.diagram.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[j]) > -1) {\n                    element = cloneObject((this.diagram.nameTable[selectedItems[j].targetID]));\n                }\n                else {\n                    element = cloneObject((selectedItems[j]));\n                }\n                obj.push(element);\n            }\n        }\n        if (this.diagram.selectedItems.nodes.length > 0) {\n            selectedItems = selectedItems.concat(this.diagram.selectedItems.nodes);\n            for (var j = 0; j < this.diagram.selectedItems.nodes.length; j++) {\n                if (!selectedItems[j].isPhase) {\n                    var node = clone(this.diagram.selectedItems.nodes[j]);\n                    if (node.wrapper && (node.offsetX !== node.wrapper.offsetX)) {\n                        node.offsetX = node.wrapper.offsetX;\n                    }\n                    if (node.wrapper && (node.offsetY !== node.wrapper.offsetY)) {\n                        node.offsetY = node.wrapper.offsetY;\n                    }\n                    var processTable = {};\n                    this.copyProcesses(node);\n                    obj.push(clone(node));\n                    var matrix = identityMatrix();\n                    rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n                    if (node.children) {\n                        var childTable = this.clipboardData.childTable;\n                        var tempNode = void 0;\n                        var elements = [];\n                        var nodes = this.getAllDescendants(node, elements, true);\n                        for (var i = 0; i < nodes.length; i++) {\n                            tempNode = this.diagram.nameTable[nodes[i].id];\n                            var clonedObject = childTable[tempNode.id] = clone(tempNode);\n                            var newOffset = transformPointByMatrix(matrix, { x: clonedObject.wrapper.offsetX, y: clonedObject.wrapper.offsetY });\n                            if (tempNode instanceof Node) {\n                                clonedObject.offsetX = newOffset.x;\n                                clonedObject.offsetY = newOffset.y;\n                                clonedObject.rotateAngle -= node.rotateAngle;\n                            }\n                        }\n                        this.clipboardData.childTable = childTable;\n                    }\n                    if (node.shape.type === 'SwimLane') {\n                        var swimlane = this.diagram.getObject(this.diagram.selectedItems.nodes[j].id);\n                        var childTable = this.clipboardData.childTable;\n                        var connectorsList = getConnectors(this.diagram, swimlane.wrapper.children[0], 0, true);\n                        for (var i = 0; i < connectorsList.length; i++) {\n                            var connector = this.diagram.getObject(connectorsList[i]);\n                            childTable[connector.id] = clone(connector);\n                        }\n                    }\n                    if (node && node.isLane) {\n                        var childTable = this.clipboardData.childTable;\n                        var swimlane = this.diagram.getObject(node.parentId);\n                        var lane = findLane(node, this.diagram);\n                        childTable[node.id] = cloneObject(lane);\n                        childTable[node.id].width = swimlane.wrapper.actualSize.width;\n                    }\n                }\n            }\n        }\n        if (this.clipboardData.pasteIndex === 0) {\n            this.startGroupAction();\n            for (var _i = 0, selectedItems_1 = selectedItems; _i < selectedItems_1.length; _i++) {\n                var item = selectedItems_1[_i];\n                if (this.diagram.nameTable[item.id]) {\n                    if (this.diagram.bpmnModule &&\n                        this.diagram.bpmnModule.textAnnotationConnectors.indexOf(item) > -1) {\n                        this.diagram.remove(this.diagram.nameTable[item.targetID]);\n                    }\n                    else {\n                        this.diagram.remove(item);\n                    }\n                }\n            }\n            this.endGroupAction();\n        }\n        this.sortByZIndex(obj, 'zIndex');\n        return obj;\n    };\n    CommandHandler.prototype.copyProcesses = function (node) {\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                this.processTable[i] = (clone(this.diagram.nameTable[i]));\n                if (this.processTable[i].shape.activity.subProcess.processes &&\n                    this.processTable[i].shape.activity.subProcess.processes.length > 0) {\n                    this.copyProcesses(this.processTable[i]);\n                }\n            }\n            this.clipboardData.processTable = this.processTable;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.group = function () {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        var obj = {};\n        var group;\n        obj.id = 'group' + randomId();\n        obj = new Node(this.diagram, 'nodes', obj, true);\n        obj.children = [];\n        selectedItems = this.diagram.selectedItems.nodes;\n        selectedItems = selectedItems.concat(this.diagram.selectedItems.connectors);\n        for (var i = 0; i < selectedItems.length; i++) {\n            if (!selectedItems[i].parentId) {\n                obj.children.push(selectedItems[i].id);\n            }\n        }\n        group = this.diagram.add(obj);\n        if (group) {\n            this.select(group);\n        }\n        var entry = { type: 'Group', undoObject: obj, redoObject: obj, category: 'Internal' };\n        this.addHistoryEntry(entry);\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.unGroup = function (obj) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        if (obj) {\n            selectedItems.push(obj);\n        }\n        else {\n            selectedItems = this.diagram.selectedItems.nodes;\n        }\n        for (var i = 0; i < selectedItems.length; i++) {\n            var node = selectedItems[i];\n            var entry = {\n                type: 'UnGroup', undoObject: cloneObject(node),\n                redoObject: cloneObject(node), category: 'Internal'\n            };\n            if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n            if (node.children) {\n                if (node.ports && node.ports.length > 0) {\n                    this.diagram.removePorts(node, node.ports);\n                }\n                if (node.annotations && node.annotations.length > 0\n                    && (!isBlazor() || isBlazor() && node.annotations[0].content !== '')) {\n                    this.diagram.removeLabels(node, node.annotations);\n                }\n                var parentNode = this.diagram.nameTable[node.parentId];\n                for (var j = node.children.length - 1; j >= 0; j--) {\n                    (this.diagram.nameTable[node.children[j]]).parentId = '';\n                    this.diagram.deleteChild(this.diagram.nameTable[node.children[j]], node);\n                    if (node.parentId && node.children[j]) {\n                        this.diagram.addChild(parentNode, node.children[j]);\n                    }\n                }\n                if (node.parentId) {\n                    this.diagram.deleteChild(node, parentNode);\n                }\n            }\n            this.diagram.removeNode(node);\n            this.clearSelection();\n        }\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.paste = function (obj) {\n        if (obj || this.clipboardData.clipObject) {\n            this.diagram.protectPropertyChange(true);\n            var copiedItems = obj ? this.getNewObject(obj) :\n                this.clipboardData.clipObject;\n            if (copiedItems) {\n                var multiSelect = copiedItems.length !== 1;\n                var groupAction = false;\n                var objectTable = {};\n                var keyTable = {};\n                if (this.clipboardData.pasteIndex !== 0) {\n                    this.clearSelection();\n                }\n                if (this.diagram.undoRedoModule) {\n                    groupAction = true;\n                    this.diagram.historyManager.startGroupAction();\n                }\n                for (var _i = 0, copiedItems_1 = copiedItems; _i < copiedItems_1.length; _i++) {\n                    var copy = copiedItems_1[_i];\n                    objectTable[copy.id] = copy;\n                }\n                var copiedObject = [];\n                if (multiSelect) {\n                    this.diagram.isServerUpdate = true;\n                }\n                for (var j = 0; j < copiedItems.length; j++) {\n                    var copy = copiedItems[j];\n                    if (getObjectType(copy) === Connector) {\n                        var clonedObj = clone(copy);\n                        var nodeId = clonedObj.sourceID;\n                        clonedObj.sourceID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.sourceID = keyTable[nodeId];\n                        }\n                        nodeId = clonedObj.targetID;\n                        clonedObj.targetID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.targetID = keyTable[nodeId];\n                        }\n                        var newObj = this.cloneConnector(clonedObj, multiSelect);\n                        copiedObject.push(newObj);\n                        keyTable[copy.id] = newObj.id;\n                    }\n                    else {\n                        var newNode = this.cloneNode(copy, multiSelect);\n                        copiedObject.push(newNode);\n                        //bpmn text annotations will not be pasted\n                        if (newNode) {\n                            keyTable[copy.id] = newNode.id;\n                            var edges = copy.inEdges;\n                            if (edges) {\n                                for (var _a = 0, edges_1 = edges; _a < edges_1.length; _a++) {\n                                    var edge = edges_1[_a];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.targetID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { targetID: '', targetPortID: '' }, { targetID: newConnector.targetID, targetPortID: newConnector.targetPortID });\n                                    }\n                                }\n                            }\n                            edges = copy.outEdges;\n                            if (edges) {\n                                for (var _b = 0, edges_2 = edges; _b < edges_2.length; _b++) {\n                                    var edge = edges_2[_b];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.sourceID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { sourceID: '', sourcePortID: '' }, { sourceID: newConnector.sourceID, sourcePortID: newConnector.sourcePortID });\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (multiSelect) {\n                    this.diagram.isServerUpdate = false;\n                    this.diagram.UpdateBlazorDiagramModelCollection(copiedItems[0], copiedObject);\n                }\n                if (groupAction === true) {\n                    this.diagram.historyManager.endGroupAction();\n                    groupAction = false;\n                }\n                if (this.diagram.mode !== 'SVG') {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.clipboardData.pasteIndex++;\n                this.diagram.protectPropertyChange(false);\n            }\n        }\n    };\n    CommandHandler.prototype.getNewObject = function (obj) {\n        var newObj;\n        var newobjs = [];\n        this.clipboardData.pasteIndex = 1;\n        for (var i = 0; i < obj.length; i++) {\n            newObj = cloneObject(obj[i]);\n            newobjs.push(newObj);\n        }\n        return newobjs;\n    };\n    CommandHandler.prototype.cloneConnector = function (connector, multiSelect) {\n        var newConnector;\n        var cloneObject = clone(connector);\n        this.translateObject(cloneObject);\n        cloneObject.zIndex = -1;\n        newConnector = this.diagram.add(cloneObject);\n        this.selectObjects([newConnector], multiSelect);\n        return newConnector;\n    };\n    CommandHandler.prototype.cloneNode = function (node, multiSelect, children, groupnodeID) {\n        var newNode;\n        var connectorsTable = {};\n        var cloneObject = clone(node);\n        var process;\n        var temp = this.diagram.nameTable[node.parentId];\n        if (node.shape && node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            process = cloneObject.shape.activity.subProcess.processes;\n            cloneObject.zIndex = -1;\n            cloneObject.shape.activity.subProcess.processes = undefined;\n        }\n        if (node.shape && node.shape.type === 'SwimLane') {\n            pasteSwimLane(node, this.diagram, this.clipboardData);\n        }\n        else if (temp && temp.shape.type === 'SwimLane') {\n            pasteSwimLane(clone(temp), this.diagram, this.clipboardData, node, true);\n        }\n        else if (node.children && node.children.length && (!children || !children.length)) {\n            newNode = this.cloneGroup(node, multiSelect);\n        }\n        else if (node.shape && ((!isBlazor() && node.shape.shape === 'TextAnnotation') ||\n            (isBlazor() && node.shape.bpmnShape === 'TextAnnotation')) && node.id.indexOf('_textannotation_') !== -1 &&\n            this.diagram.nameTable[node.id]) {\n            var checkAnnotation = node.id.split('_textannotation_');\n            var parentNode = void 0;\n            var annotation = this.diagram.nameTable[node.id];\n            for (var j = 0; j < annotation.inEdges.length; j++) {\n                var connector = this.diagram.nameTable[annotation.inEdges[j]];\n                if (connector) {\n                    parentNode = this.diagram.nameTable[connector.sourceID];\n                    var clonedNode = this.getAnnotation(parentNode, checkAnnotation[1]);\n                    var annotationNode = {\n                        id: checkAnnotation[1] + randomId(),\n                        angle: clonedNode.angle,\n                        text: clonedNode.text,\n                        length: clonedNode.length,\n                        shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                        nodeId: clonedNode.nodeId\n                    };\n                    this.diagram.addTextAnnotation(annotationNode, parentNode);\n                }\n            }\n        }\n        else {\n            this.translateObject(cloneObject, groupnodeID);\n            cloneObject.zIndex = -1;\n            if (children) {\n                cloneObject.children = children;\n            }\n            newNode = this.diagram.add(cloneObject);\n        }\n        for (var _i = 0, _a = Object.keys(connectorsTable); _i < _a.length; _i++) {\n            var i = _a[_i];\n            this.diagram.add(connectorsTable[i]);\n        }\n        if (process && process.length) {\n            newNode.shape.activity.subProcess.processes = process;\n            this.cloneSubProcesses(newNode);\n        }\n        if (newNode) {\n            this.selectObjects([newNode], multiSelect);\n        }\n        return newNode;\n    };\n    CommandHandler.prototype.getAnnotation = function (parent, annotationId) {\n        var currentAnnotation = parent.shape.annotations;\n        if (currentAnnotation && currentAnnotation.length) {\n            for (var g = 0; g <= currentAnnotation.length; g++) {\n                if (currentAnnotation[g].id === annotationId) {\n                    return currentAnnotation[g];\n                }\n            }\n        }\n        return undefined;\n    };\n    CommandHandler.prototype.cloneSubProcesses = function (node) {\n        var connector = [];\n        var temp = {};\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            var process = node.shape.activity.subProcess.processes;\n            for (var g = 0; g < process.length; g++) {\n                var child = this.diagram.nameTable[process[g]] || this.clipboardData.processTable[process[g]];\n                for (var _i = 0, _a = child.outEdges; _i < _a.length; _i++) {\n                    var j = _a[_i];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                for (var _b = 0, _c = child.inEdges; _b < _c.length; _b++) {\n                    var j = _c[_b];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                var innerChild = cloneObject(this.clipboardData.processTable[process[g]]);\n                innerChild.processId = node.id;\n                var newNode = this.cloneNode(innerChild, false);\n                temp[process[g]] = newNode.id;\n                process[g] = newNode.id;\n                this.diagram.addProcess(newNode, node.id);\n                for (var _d = 0, connector_1 = connector; _d < connector_1.length; _d++) {\n                    var i = connector_1[_d];\n                    var node_1 = this.diagram.nameTable[i] || this.diagram.connectorTable[i];\n                    var clonedNode = cloneObject(node_1);\n                    if (temp[clonedNode.sourceID] && temp[clonedNode.targetID]) {\n                        clonedNode.zIndex = -1;\n                        clonedNode.id += randomId();\n                        clonedNode.sourceID = temp[clonedNode.sourceID];\n                        clonedNode.targetID = temp[clonedNode.targetID];\n                        connector.splice(connector.indexOf(i), 1);\n                        this.diagram.add(clonedNode);\n                    }\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.cloneGroup = function (obj, multiSelect) {\n        var value;\n        var newChildren = [];\n        var children = [];\n        var connectorObj = [];\n        var newObj;\n        var oldID = [];\n        children = children.concat(obj.children);\n        var id = randomId();\n        if (this.clipboardData.childTable || obj.children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                var childObj = void 0;\n                if (this.clipboardData.childTable) {\n                    childObj = this.clipboardData.childTable[children[i]];\n                }\n                else {\n                    childObj = this.diagram.nameTable[children[i]];\n                }\n                childObj.parentId = '';\n                if (childObj) {\n                    if (getObjectType(childObj) === Connector) {\n                        connectorObj.push(childObj);\n                    }\n                    else {\n                        newObj = this.cloneNode(childObj, multiSelect, undefined, id);\n                        oldID.push(childObj.id);\n                        newChildren.push(newObj.id);\n                    }\n                }\n            }\n        }\n        for (var k = 0; k < connectorObj.length; k++) {\n            if (connectorObj[k].sourceID || connectorObj[k].targetID) {\n                for (var j = 0; j < oldID.length; j++) {\n                    if (connectorObj[k].sourceID === (oldID[j])) {\n                        connectorObj[k].sourceID += id;\n                    }\n                    if (connectorObj[k].targetID === (oldID[j])) {\n                        connectorObj[k].targetID += id;\n                    }\n                }\n            }\n            newObj = this.cloneConnector(connectorObj[k], multiSelect);\n            newChildren.push(newObj.id);\n        }\n        var parentObj = this.cloneNode(obj, multiSelect, newChildren);\n        if (parentObj && parentObj.container && parentObj.shape && parentObj.shape.type === 'UmlClassifier') {\n            this.diagram.updateDiagramObject(parentObj);\n            parentObj.wrapper.measure(new Size());\n        }\n        return parentObj;\n    };\n    /** @private */\n    CommandHandler.prototype.translateObject = function (obj, groupnodeID) {\n        obj.id += groupnodeID || randomId();\n        var diff = this.clipboardData.pasteIndex * 10;\n        if (getObjectType(obj) === Connector) {\n            obj.sourcePoint = {\n                x: obj.sourcePoint.x + diff, y: obj.sourcePoint.y + diff\n            };\n            obj.targetPoint = {\n                x: obj.targetPoint.x + diff, y: obj.targetPoint.y + diff\n            };\n            if (obj.type === 'Bezier') {\n                var segments = obj.segments;\n                for (var i = 0; i < segments.length; i++) {\n                    if (!Point.isEmptyPoint(segments[i].point1)) {\n                        segments[i].point1 = {\n                            x: segments[i].point1.x + diff, y: segments[i].point1.y + diff\n                        };\n                    }\n                    if (!Point.isEmptyPoint(segments[i].point2)) {\n                        segments[i].point2 = {\n                            x: segments[i].point2.x + diff, y: segments[i].point2.y + diff\n                        };\n                    }\n                }\n            }\n            if (obj.type === 'Straight' || obj.type === 'Bezier') {\n                if (obj.segments && obj.segments.length > 0) {\n                    var segments = obj.segments;\n                    for (var i = 0; i < segments.length - 1; i++) {\n                        segments[i].point.x += diff;\n                        segments[i].point.y += diff;\n                    }\n                }\n            }\n        }\n        else {\n            obj.offsetX += diff;\n            obj.offsetY += diff;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawObject = function (obj) {\n        var oldProtectPropertyChangeValue;\n        if (isBlazor()) {\n            oldProtectPropertyChangeValue = this.diagram.getProtectPropertyChangeValue();\n            this.diagram.protectPropertyChange(true);\n        }\n        var newObj;\n        var cloneObject;\n        if (obj && obj.shape) {\n            if (obj.shape.type === 'Text') {\n                obj.width = this.diagram.drawingObject.width ? this.diagram.drawingObject.width : 50;\n                obj.height = this.diagram.drawingObject.height ? this.diagram.drawingObject.height : 20;\n            }\n        }\n        cloneObject = clone(this.diagram.drawingObject);\n        for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            cloneObject[prop] = obj[prop];\n        }\n        if (getObjectType(this.diagram.drawingObject) === Node) {\n            newObj = new Node(this.diagram, 'nodes', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'node') + randomId();\n        }\n        else {\n            newObj = new Connector(this.diagram, 'connectors', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'connector') + randomId();\n        }\n        if (isBlazor()) {\n            updateDefaultValues(newObj, cloneObject, (getObjectType(this.diagram.drawingObject) === Node) ? this.diagram.nodeDefaults : this.diagram.connectorDefaults);\n        }\n        this.diagram.initObject(newObj);\n        this.diagram.updateDiagramObject(newObj);\n        this.diagram.currentDrawingObject = newObj;\n        if (isBlazor()) {\n            this.diagram.protectPropertyChange(oldProtectPropertyChangeValue);\n        }\n        return newObj;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addObjectToDiagram = function (obj) {\n        var newObj;\n        this.diagram.removeFromAQuad(obj);\n        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[obj.id]);\n        delete this.diagram.nameTable[obj.id];\n        newObj = this.diagram.add(obj);\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n        this.selectObjects([newObj]);\n        if (obj && (!(canContinuousDraw(this.diagram)))) {\n            this.diagram.tool &= ~DiagramTools.DrawOnce;\n            this.diagram.currentDrawingObject = undefined;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.enableServerDataBinding = function (enable) {\n        this.diagram.enableServerDataBinding(enable);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addText = function (obj, currentPosition) {\n        var annotation = this.diagram.findElementUnderMouse(obj, currentPosition);\n        this.diagram.startTextEdit(obj, annotation instanceof TextElement ? (annotation.id).split('_')[1] : undefined);\n    };\n    CommandHandler.prototype.updateArgsObject = function (obj, arg1, argValue) {\n        if (obj) {\n            var connector = void 0;\n            for (var i = 0; i < obj.length; i++) {\n                connector = (getObjectType(obj[i]) === Connector);\n                connector ? argValue.connectors.push(cloneBlazorObject(obj[i])) : argValue.nodes.push(cloneBlazorObject(obj[i]));\n            }\n        }\n    };\n    CommandHandler.prototype.updateSelectionChangeEventArgs = function (arg, obj, oldValue) {\n        if (isBlazor()) {\n            arg = {\n                cause: this.diagram.diagramActions, newValue: {}, oldValue: {},\n                state: arg.state, type: arg.type, cancel: false\n            };\n            var argOldValue = arg.oldValue;\n            var argNewValue = arg.newValue;\n            argOldValue.connectors = [];\n            argOldValue.nodes = [];\n            argNewValue.connectors = [];\n            argNewValue.nodes = [];\n            this.updateArgsObject(this.getSelectedObject(), arg, argNewValue);\n            this.updateArgsObject(oldValue, arg, argOldValue);\n            return arg;\n        }\n        return arg;\n    };\n    /** @private */\n    CommandHandler.prototype.isUserHandle = function (position) {\n        var handle = this.diagram.selectedItems;\n        if (handle.wrapper && canShowCorner(handle.constraints, 'UserHandle')) {\n            for (var _i = 0, _a = handle.userHandles; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                if (obj.visible) {\n                    var paddedBounds = getUserHandlePosition(handle, obj, this.diagram.scroller.transform);\n                    if (contains(position, paddedBounds, obj.size / (2 * this.diagram.scroller.transform.scale))) {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.selectObjects = function (obj, multipleSelection, oldValue) {\n        return __awaiter(this, void 0, void 0, function () {\n            var arg, select, canDoMultipleSelection, canDoSingleSelection, i, newObj, i_1, parentNode, blazorArgs, selectedObjects;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        arg = {\n                            oldValue: oldValue ? oldValue : this.getSelectedObject(),\n                            newValue: obj, cause: this.diagram.diagramActions,\n                            state: 'Changing', type: 'Addition', cancel: false\n                        };\n                        this.diagram.enableServerDataBinding(false);\n                        select = true;\n                        if (!isBlazor()) {\n                            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                        }\n                        canDoMultipleSelection = canMultiSelect(this.diagram);\n                        canDoSingleSelection = canSingleSelect(this.diagram);\n                        if (canDoSingleSelection || canDoMultipleSelection) {\n                            if (!canDoMultipleSelection && ((obj.length > 1) || (multipleSelection && obj.length === 1))) {\n                                if (obj.length === 1) {\n                                    this.clearSelection();\n                                }\n                                else {\n                                    return [2 /*return*/];\n                                }\n                            }\n                            if (!canDoSingleSelection && obj.length === 1 && (!multipleSelection || !hasSelection(this.diagram))) {\n                                this.clearSelection();\n                                return [2 /*return*/];\n                            }\n                        }\n                        if (!!arg.cancel) return [3 /*break*/, 4];\n                        for (i = 0; i < obj.length; i++) {\n                            newObj = obj[i];\n                            if (newObj) {\n                                select = true;\n                                if (!hasSelection(this.diagram)) {\n                                    this.select(newObj, i > 0 || multipleSelection, true);\n                                }\n                                else {\n                                    if ((i > 0 || multipleSelection) && newObj.children && !newObj.parentId) {\n                                        for (i_1 = 0; i_1 < this.diagram.selectedItems.nodes.length; i_1++) {\n                                            parentNode = this.diagram.nameTable[this.diagram.selectedItems.nodes[i_1].parentId];\n                                            if (parentNode) {\n                                                parentNode = this.findParent(parentNode);\n                                                if (parentNode) {\n                                                    if (newObj.id === parentNode.id) {\n                                                        this.selectGroup(newObj);\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    this.selectProcesses(newObj);\n                                    select = this.selectBpmnSubProcesses(newObj);\n                                    if (select) {\n                                        this.select(newObj, i > 0 || multipleSelection, true);\n                                    }\n                                }\n                            }\n                        }\n                        arg = {\n                            oldValue: oldValue ? oldValue : [],\n                            newValue: this.getSelectedObject(),\n                            cause: this.diagram.diagramActions, state: 'Changed', type: 'Addition', cancel: false,\n                        };\n                        this.diagram.renderSelector(multipleSelection || (obj && obj.length > 1));\n                        this.updateBlazorSelectorModel(oldValue);\n                        if (isBlazor() && this.diagram.selectionChange) {\n                            arg = this.updateSelectionChangeEventArgs(arg, obj, oldValue ? oldValue : []);\n                        }\n                        if (!!isBlazor()) return [3 /*break*/, 1];\n                        this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.diagram.triggerEvent(DiagramEvent.selectionChange, arg)];\n                    case 2:\n                        blazorArgs = _a.sent();\n                        if (blazorArgs && blazorArgs.cancel) {\n                            selectedObjects = [];\n                            if (blazorArgs.oldValue.nodes.length > 0) {\n                                selectedObjects = blazorArgs.oldValue.nodes;\n                            }\n                            if (blazorArgs.oldValue.connectors.length > 0) {\n                                selectedObjects = selectedObjects.concat(blazorArgs.oldValue.connectors);\n                            }\n                            if (selectedObjects) {\n                                if (selectedObjects.length > 0) {\n                                    this.diagram.select(selectedObjects);\n                                }\n                                else {\n                                    this.clearSelection(true, true);\n                                }\n                            }\n                        }\n                        _a.label = 3;\n                    case 3:\n                        this.diagram.enableServerDataBinding(true);\n                        _a.label = 4;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /** @private */\n    CommandHandler.prototype.updateBlazorSelector = function () {\n        if (isBlazor()) {\n            this.newSelectedObjects = cloneSelectedObjects(this.diagram);\n            var result = this.deepDiffer.map(cloneObject(this.newSelectedObjects), this.oldSelectedObjects);\n            var diffValue = this.deepDiffer.frameObject({}, result);\n            var diff = this.deepDiffer.removeEmptyValues(diffValue);\n            diff.nodes = [];\n            for (var i = 0; i < this.diagram.selectedItems.nodes.length; i++) {\n                diff.nodes.push(this.diagram.selectedItems.nodes[i].id);\n            }\n            diff.connectors = [];\n            for (var i = 0; i < this.diagram.selectedItems.connectors.length; i++) {\n                diff.connectors.push(this.diagram.selectedItems.connectors[i].id);\n            }\n            var blazorInterop = 'sfBlazor';\n            var blazor = 'Blazor';\n            if (window && window[blazor]) {\n                var obj = { 'methodName': 'UpdateBlazorProperties', 'diagramobj': { selectedItems: diff } };\n                window[blazorInterop].updateBlazorProperties(obj, this.diagram);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findParent = function (node) {\n        if (node.parentId) {\n            node = this.diagram.nameTable[node.parentId];\n            this.findParent(node);\n        }\n        return node;\n    };\n    CommandHandler.prototype.selectProcesses = function (newObj) {\n        if (this.hasProcesses(newObj)) {\n            var processes = (newObj).shape.activity.subProcess.processes;\n            for (var i = 0; i < processes.length; i++) {\n                var innerChild = this.diagram.nameTable[processes[i]];\n                if (this.hasProcesses(innerChild)) {\n                    this.selectObjects([innerChild], true);\n                }\n                this.unSelect(innerChild);\n            }\n        }\n    };\n    CommandHandler.prototype.selectGroup = function (newObj) {\n        for (var j = 0; j < newObj.children.length; j++) {\n            var innerChild = this.diagram.nameTable[newObj.children[j]];\n            if (innerChild.children) {\n                this.selectGroup(innerChild);\n            }\n            this.unSelect(this.diagram.nameTable[newObj.children[j]]);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.selectBpmnSubProcesses = function (node) {\n        var select = true;\n        var parent;\n        if (node.processId) {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.processId])) {\n                select = false;\n            }\n            else {\n                select = this.selectBpmnSubProcesses(this.diagram.nameTable[node.processId]);\n            }\n        }\n        else if (node instanceof Connector) {\n            if (node.sourceID && this.diagram.nameTable[node.sourceID] &&\n                this.diagram.nameTable[node.sourceID].processId) {\n                parent = this.diagram.nameTable[node.sourceID].processId;\n            }\n            if (node.targetID && this.diagram.nameTable[node.targetID] &&\n                this.diagram.nameTable[node.targetID].processId) {\n                parent = this.diagram.nameTable[node.targetID].processId;\n            }\n            if (parent) {\n                if (isSelected(this.diagram, this.diagram.nameTable[parent])) {\n                    return false;\n                }\n                else {\n                    select = this.selectBpmnSubProcesses(this.diagram.nameTable[parent]);\n                }\n            }\n        }\n        else if (node.parentId && this.diagram.nameTable[node.parentId] &&\n            this.diagram.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.parentId])) {\n                select = false;\n            }\n        }\n        return select;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.hasProcesses = function (node) {\n        if (node) {\n            if ((node.shape.type === 'Bpmn') && node.shape.activity &&\n                node.shape.activity.subProcess.processes &&\n                node.shape.activity.subProcess.processes.length > 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.select = function (obj, multipleSelection, preventUpdate) {\n        var hasLayer = this.getObjectLayer(obj.id);\n        if ((canSelect(obj) && !(obj instanceof Selector) && !isSelected(this.diagram, obj))\n            && (hasLayer && !hasLayer.lock && hasLayer.visible) && obj.wrapper.visible) {\n            multipleSelection = hasSelection(this.diagram) ? multipleSelection : false;\n            if (!multipleSelection) {\n                this.clearSelection();\n            }\n            this.diagram.enableServerDataBinding(false);\n            var selectorModel = this.diagram.selectedItems;\n            var convert = obj;\n            if (convert instanceof Node) {\n                if (obj.isHeader) {\n                    var node = this.diagram.nameTable[obj.parentId];\n                    selectorModel.nodes.push(node);\n                }\n                else {\n                    selectorModel.nodes.push(obj);\n                }\n            }\n            else {\n                selectorModel.connectors.push(obj);\n            }\n            if (!multipleSelection) {\n                selectorModel.init(this.diagram);\n                if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                    var wrapper = gridSelection(this.diagram, selectorModel);\n                    if (wrapper) {\n                        selectorModel.wrapper.children[0] = wrapper;\n                    }\n                    selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n                }\n            }\n            else {\n                selectorModel.wrapper.rotateAngle = selectorModel.rotateAngle = 0;\n                selectorModel.wrapper.children.push(obj.wrapper);\n            }\n            if (!preventUpdate) {\n                this.diagram.renderSelector(multipleSelection);\n            }\n            this.diagram.enableServerDataBinding(true);\n        }\n    };\n    CommandHandler.prototype.getObjectCollectionId = function (isNode, clearSelection) {\n        var id = [];\n        var i = 0;\n        var selectedObject = isNode ? this.diagram.selectedItems.nodes\n            : this.diagram.selectedItems.connectors;\n        while (!clearSelection && i < selectedObject.length) {\n            id[i] = selectedObject[i].id;\n            i++;\n        }\n        return id;\n    };\n    CommandHandler.prototype.updateBlazorSelectorModel = function (oldItemsCollection, clearSelection) {\n        var blazorInterop = 'sfBlazor';\n        if (window && window[blazorInterop]) {\n            var i = 0;\n            var nodes = [];\n            var connectors = [];\n            var oldItems = [];\n            while (oldItemsCollection && i < oldItemsCollection.length) {\n                oldItems[i] = oldItemsCollection[i].id;\n                i++;\n            }\n            i = 0;\n            nodes = this.getObjectCollectionId(true, clearSelection);\n            connectors = this.getObjectCollectionId(false, clearSelection);\n            var items = { nodes: nodes, connectors: connectors };\n            var newItems = cloneBlazorObject(items);\n            if (window[blazorInterop].updateDiagramCollection) {\n                window[blazorInterop].updateDiagramCollection.call(this.diagram, 'selectedItems', newItems, oldItems, false, true);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelSelect = function (obj, textWrapper) {\n        var selectorModel = (this.diagram.selectedItems);\n        selectorModel.nodes = selectorModel.connectors = [];\n        if (obj instanceof Node) {\n            selectorModel.nodes[0] = obj;\n        }\n        else {\n            selectorModel.connectors[0] = obj;\n        }\n        selectorModel.annotation = (this.findTarget(textWrapper, obj));\n        selectorModel.init(this.diagram);\n        this.diagram.renderSelector(false);\n    };\n    /** @private */\n    CommandHandler.prototype.unSelect = function (obj) {\n        var objArray = [];\n        objArray.push(obj);\n        var arg = {\n            oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Removal', cancel: false\n        };\n        if (!this.diagram.currentSymbol) {\n            if (!isBlazor()) {\n                this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            }\n        }\n        if (isSelected(this.diagram, obj)) {\n            var selectormodel = this.diagram.selectedItems;\n            var index = void 0;\n            if (obj instanceof Node) {\n                index = selectormodel.nodes.indexOf(obj, 0);\n                selectormodel.nodes.splice(index, 1);\n            }\n            else {\n                index = selectormodel.connectors.indexOf(obj, 0);\n                selectormodel.connectors.splice(index, 1);\n            }\n            arg = {\n                oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: false\n            };\n            this.updateBlazorSelectorModel(objArray);\n            arg = {\n                oldValue: cloneBlazorObject(objArray), newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: arg.cancel\n            };\n            if (!arg.cancel) {\n                index = selectormodel.wrapper.children.indexOf(obj.wrapper, 0);\n                selectormodel.wrapper.children.splice(index, 1);\n                this.diagram.updateSelector();\n                if (!this.diagram.currentSymbol) {\n                    if (isBlazor()) {\n                        arg = this.updateSelectionChangeEventArgs(arg, [], objArray);\n                    }\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getChildElements = function (child) {\n        var children = [];\n        for (var i = 0; i < child.length; i++) {\n            var childNode = child[i];\n            if (childNode.children && childNode.children.length > 0) {\n                children.concat(this.getChildElements(childNode.children));\n            }\n            else {\n                children.push(childNode.id);\n                if (childNode instanceof TextElement) {\n                    children.push(childNode.id + '_text');\n                }\n            }\n        }\n        return children;\n    };\n    /** @private */\n    CommandHandler.prototype.moveSvgNode = function (nodeId, targetID) {\n        var diagramDiv = getDiagramElement(targetID + '_groupElement', this.diagram.element.id);\n        var backNode = getDiagramElement(nodeId + '_groupElement', this.diagram.element.id);\n        diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n    };\n    /** @private */\n    CommandHandler.prototype.sendLayerBackward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex !== 0) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects;\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index - 1]).objects[0];\n                if (targetObject) {\n                    for (var _i = 0, currentLayerObject_1 = currentLayerObject; _i < currentLayerObject_1.length; _i++) {\n                        var obj = currentLayerObject_1[_i];\n                        this.moveSvgNode(obj, targetObject);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index - 1]);\n            targetLayer.zIndex = targetLayer.zIndex + 1;\n            layer.zIndex = layer.zIndex - 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index - 1];\n            this.diagram.layerZIndexTable[index - 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringLayerForward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex < this.diagram.layers.length - 1) {\n            var index = layer.zIndex;\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index + 1]);\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects[0];\n                var targetLayerObjects = targetLayer.objects;\n                for (var _i = 0, targetLayerObjects_1 = targetLayerObjects; _i < targetLayerObjects_1.length; _i++) {\n                    var obj = targetLayerObjects_1[_i];\n                    if (obj) {\n                        this.moveSvgNode(obj, currentLayerObject);\n                    }\n                }\n            }\n            targetLayer.zIndex = targetLayer.zIndex - 1;\n            layer.zIndex = layer.zIndex + 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index + 1];\n            this.diagram.layerZIndexTable[index + 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendToBack = function (object) {\n        this.diagram.protectPropertyChange(true);\n        if (hasSelection(this.diagram) || object) {\n            var objectId = (object && object.id);\n            objectId = objectId || (this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id);\n            var index = this.diagram.nameTable[objectId].zIndex;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            var undoObject = cloneObject(this.diagram.selectedItems);\n            for (var i = index; i > 0; i--) {\n                if (zIndexTable[i]) {\n                    //When there are empty records in the zindex table\n                    if (!zIndexTable[i - 1]) {\n                        zIndexTable[i - 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i - 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects forward\n                        zIndexTable[i] = zIndexTable[i - 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[0] = this.diagram.nameTable[objectId].id;\n            this.diagram.nameTable[objectId].zIndex = 0;\n            if (this.diagram.mode === 'SVG') {\n                var i = 1;\n                var target = zIndexTable[i];\n                while (!target && i < index) {\n                    target = zIndexTable[++i];\n                }\n                this.moveSvgNode(objectId, target);\n                this.updateNativeNodeIndex(objectId);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n            var redoObject = cloneObject(this.diagram.selectedItems);\n            var entry = { type: 'SendToBack', category: 'Internal', undoObject: undoObject, redoObject: redoObject };\n            if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n        }\n        this.diagram.protectPropertyChange(false);\n    };\n    /** @private */\n    CommandHandler.prototype.bringToFront = function (obj) {\n        this.diagram.protectPropertyChange(true);\n        if (hasSelection(this.diagram) || obj) {\n            var objectName = (obj && obj.id);\n            objectName = objectName || (this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id);\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectName));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            var undoObject = cloneObject(this.diagram.selectedItems);\n            //find the maximum zIndex of the tabel\n            var tabelLength = Number(Object.keys(zIndexTable).sort(function (a, b) { return Number(a) - Number(b); }).reverse()[0]);\n            var index = this.diagram.nameTable[objectName].zIndex;\n            for (var i = index; i < tabelLength; i++) {\n                //When there are empty records in the zindex table\n                if (zIndexTable[i]) {\n                    if (!zIndexTable[i + 1]) {\n                        zIndexTable[i + 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i + 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects backward\n                        zIndexTable[i] = zIndexTable[i + 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[tabelLength] = this.diagram.nameTable[objectName].id;\n            this.diagram.nameTable[objectName].zIndex = tabelLength;\n            if (this.diagram.mode === 'SVG') {\n                var diagramLayer = this.diagram.diagramLayer;\n                var child = this.getChildElements(this.diagram.nameTable[objectName].wrapper.children);\n                var targerNodes = [];\n                var element = getDiagramElement(objectName + '_groupElement', this.diagram.element.id);\n                var nodes = this.diagram.selectedItems.nodes;\n                if (nodes.length > 0 && (nodes[0].shape.type === 'Native' || nodes[0].shape.type === 'HTML')) {\n                    element.parentNode.removeChild(element);\n                    for (var j = 0; j < this.diagram.views.length; j++) {\n                        element = getDiagramElement(objectName + (nodes[0].shape.type === 'HTML' ? '_html_element' : '_content_groupElement'), this.diagram.views[j]);\n                        var lastChildNode = element.parentNode.lastChild;\n                        lastChildNode.parentNode.insertBefore(element, lastChildNode.nextSibling);\n                    }\n                    var htmlLayer = getHTMLLayer(this.diagram.element.id);\n                    this.diagram.diagramRenderer.renderElement(this.diagram.nameTable[objectName].wrapper, diagramLayer, htmlLayer);\n                }\n                else {\n                    var target = void 0;\n                    var layer = this.getObjectLayer(objectName);\n                    for (var i = 0; i < layer.objects.length; i++) {\n                        if (layer.objects[i] !== objectName) {\n                            this.moveSvgNode(layer.objects[i], objectName);\n                            this.updateNativeNodeIndex(objectName);\n                        }\n                    }\n                }\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n            var redoObject = cloneObject(this.diagram.selectedItems);\n            var entry = { type: 'BringToFront', category: 'Internal', undoObject: undoObject, redoObject: redoObject };\n            if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n        }\n        this.diagram.protectPropertyChange(false);\n    };\n    /** @private */\n    CommandHandler.prototype.sortByZIndex = function (nodeArray, sortID) {\n        var id = sortID ? sortID : 'zIndex';\n        nodeArray = nodeArray.sort(function (a, b) {\n            return a[id] - b[id];\n        });\n        return nodeArray;\n    };\n    /** @private */\n    CommandHandler.prototype.orderCommands = function (isRedo, selector, action) {\n        var selectedObject = selector.nodes;\n        selectedObject = selectedObject.concat(selector.connectors);\n        if (isRedo) {\n            if (action === 'SendBackward') {\n                this.sendBackward(selectedObject[0]);\n            }\n            else if (action === 'SendForward') {\n                this.sendForward(selectedObject[0]);\n            }\n            else if (action === 'BringToFront') {\n                this.bringToFront(selectedObject[0]);\n            }\n            else if (action === 'SendToBack') {\n                this.sendToBack(selectedObject[0]);\n            }\n        }\n        else {\n            var startZIndex = selectedObject[0].zIndex;\n            var endZIndex = this.diagram.nameTable[selectedObject[0].id].zIndex;\n            var undoObject = selectedObject[0];\n            var layer = this.getObjectLayer(undoObject.id);\n            var layerIndex = layer.zIndex;\n            var zIndexTable = layer.zIndexTable;\n            if (action === 'SendBackward' || action === 'SendForward') {\n                for (var i = 0; i < selectedObject.length; i++) {\n                    var undoObject_1 = selectedObject[i];\n                    var layer_2 = this.diagram.layers.indexOf(this.getObjectLayer(undoObject_1.id));\n                    var node = this.diagram.nameTable[selectedObject[i].id];\n                    node.zIndex = undoObject_1.zIndex;\n                    this.diagram.layers[layer_2].zIndexTable[undoObject_1.zIndex] = undoObject_1.id;\n                }\n            }\n            else if (action === 'BringToFront') {\n                var k = 1;\n                for (var j = endZIndex; j > startZIndex; j--) {\n                    if (zIndexTable[j]) {\n                        if (!zIndexTable[j - k]) {\n                            zIndexTable[j - k] = zIndexTable[j];\n                            this.diagram.nameTable[zIndexTable[j - k]].zIndex = j;\n                            delete zIndexTable[j];\n                        }\n                        else {\n                            zIndexTable[j] = zIndexTable[j - k];\n                            this.diagram.nameTable[zIndexTable[j]].zIndex = j;\n                        }\n                    }\n                }\n            }\n            else if (action === 'SendToBack') {\n                for (var j = endZIndex; j < startZIndex; j++) {\n                    if (zIndexTable[j]) {\n                        if (!zIndexTable[j + 1]) {\n                            zIndexTable[j + 1] = zIndexTable[j];\n                            this.diagram.nameTable[zIndexTable[j + 1]].zIndex = j;\n                            delete zIndexTable[j];\n                        }\n                        else {\n                            zIndexTable[j] = zIndexTable[j + 1];\n                            this.diagram.nameTable[zIndexTable[j]].zIndex = j;\n                        }\n                    }\n                }\n            }\n            if (action === 'BringToFront' || action === 'SendToBack') {\n                var node = this.diagram.nameTable[selectedObject[0].id];\n                node.zIndex = undoObject.zIndex;\n                this.diagram.layers[layerIndex].zIndexTable[undoObject.zIndex] = undoObject.id;\n            }\n            if (this.diagram.mode === 'SVG') {\n                if (action === 'SendBackward') {\n                    this.moveObject(selectedObject[1].id, selectedObject[0].id);\n                }\n                else if (action === 'SendForward') {\n                    this.moveObject(selectedObject[0].id, selectedObject[1].id);\n                }\n                else if (action === 'BringToFront') {\n                    this.moveObject(selectedObject[0].id, zIndexTable[selectedObject[0].zIndex + 1]);\n                }\n                else if (action === 'SendToBack') {\n                    var layer_3 = this.getObjectLayer(selectedObject[0].id);\n                    for (var i = 0; i <= selectedObject[0].zIndex; i++) {\n                        if (layer_3.objects[i] !== selectedObject[0].id) {\n                            this.moveSvgNode(layer_3.objects[i], selectedObject[0].id);\n                            this.updateNativeNodeIndex(selectedObject[0].id);\n                        }\n                    }\n                }\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    CommandHandler.prototype.moveObject = function (sourceId, targetId) {\n        if (targetId) {\n            this.moveSvgNode(sourceId, targetId);\n            this.updateNativeNodeIndex(sourceId, targetId);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendForward = function (obj) {\n        this.diagram.protectPropertyChange(true);\n        if (hasSelection(this.diagram) || obj) {\n            var nodeId = (obj && obj.id);\n            nodeId = nodeId || (this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id);\n            var layerIndex = this.diagram.layers.indexOf(this.getObjectLayer(nodeId));\n            var zIndexTable = this.diagram.layers[layerIndex].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var index = this.diagram.nameTable[nodeId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(index.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_1 = temp; _i < temp_1.length; _i++) {\n                var i = temp_1[_i];\n                if (index.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerIndex === currentLayer && (Number(this.diagram.nameTable[nodeId].zIndex) < Number(i.zIndex)) &&\n                        index.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                        break;\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[0].zIndex;\n                var currentObject = index.zIndex;\n                var temp_2 = zIndexTable[overlapObject];\n                //swap the nodes\n                var undoObject = cloneObject(this.diagram.selectedItems);\n                (this.diagram.nameTable[temp_2] instanceof Node) ? undoObject.nodes.push(cloneObject(this.diagram.nameTable[temp_2])) :\n                    undoObject.connectors.push(cloneObject(this.diagram.nameTable[temp_2]));\n                this.diagram.layers[0].zIndexTable[overlapObject] = index.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                this.diagram.layers[0].zIndexTable[currentObject] = intersectArray[0].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                    this.updateNativeNodeIndex(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n                var redo = cloneObject(this.diagram.selectedItems);\n                (this.diagram.nameTable[temp_2] instanceof Node) ? redo.nodes.push(cloneObject(this.diagram.nameTable[temp_2])) :\n                    redo.connectors.push(cloneObject(this.diagram.nameTable[temp_2]));\n                var historyEntry = {\n                    type: 'SendForward', category: 'Internal',\n                    undoObject: undoObject, redoObject: redo\n                };\n                if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                    this.addHistoryEntry(historyEntry);\n                }\n            }\n        }\n        this.diagram.protectPropertyChange(false);\n    };\n    /** @private */\n    CommandHandler.prototype.sendBackward = function (obj) {\n        this.diagram.protectPropertyChange(true);\n        if (hasSelection(this.diagram) || obj) {\n            var objectId = (obj && obj.id);\n            objectId = objectId || (this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id);\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var node = this.diagram.nameTable[objectId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(node.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_3 = temp; _i < temp_3.length; _i++) {\n                var i = temp_3[_i];\n                if (node.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerNum === currentLayer && (Number(this.diagram.nameTable[objectId].zIndex) > Number(i.zIndex)) &&\n                        node.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[intersectArray.length - 1].zIndex;\n                var currentObject = node.zIndex;\n                var temp_4 = zIndexTable[overlapObject];\n                var undoObject = cloneObject(this.diagram.selectedItems);\n                (this.diagram.nameTable[temp_4] instanceof Node) ? undoObject.nodes.push(cloneObject(this.diagram.nameTable[temp_4])) :\n                    undoObject.connectors.push(cloneObject(this.diagram.nameTable[temp_4]));\n                //swap the nodes\n                zIndexTable[overlapObject] = node.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                zIndexTable[currentObject] = intersectArray[intersectArray.length - 1].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    if (!(node.children && node.children.length > 0)) {\n                        this.moveSvgNode(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                        this.updateNativeNodeIndex(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                    }\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n                var redoObject = cloneObject(this.diagram.selectedItems);\n                (this.diagram.nameTable[temp_4] instanceof Node) ? redoObject.nodes.push(cloneObject(this.diagram.nameTable[temp_4])) :\n                    redoObject.connectors.push(cloneObject(this.diagram.nameTable[temp_4]));\n                var entry = { type: 'SendBackward', category: 'Internal', undoObject: undoObject, redoObject: redoObject };\n                if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                    this.addHistoryEntry(entry);\n                }\n                //swap the nodes\n            }\n        }\n        this.diagram.protectPropertyChange(false);\n    };\n    /**   @private  */\n    CommandHandler.prototype.updateNativeNodeIndex = function (nodeId, targetID) {\n        var node = this.diagram.selectedItems.nodes[0] || this.diagram.getObject(targetID);\n        for (var i = 0; i < this.diagram.views.length; i++) {\n            if (node && (node.shape.type === 'HTML'\n                || node.shape.type === 'Native')) {\n                var id = node.shape.type === 'HTML' ? '_html_element' : '_content_groupElement';\n                var backNode = getDiagramElement(nodeId + id, this.diagram.views[i]);\n                var diagramDiv = targetID ? getDiagramElement(targetID + id, this.diagram.views[i])\n                    : backNode.parentElement.firstChild;\n                if (backNode.parentNode.id === diagramDiv.parentNode.id) {\n                    diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.initSelectorWrapper = function () {\n        var selectorModel = this.diagram.selectedItems;\n        selectorModel.init(this.diagram);\n        if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n            selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.doRubberBandSelection = function (region) {\n        this.clearSelectionRectangle();\n        var selArray = [];\n        var rubberArray = [];\n        selArray = this.diagram.getNodesConnectors(selArray);\n        if (this.diagram.selectedItems.rubberBandSelectionMode === 'CompleteIntersect') {\n            rubberArray = completeRegion(region, selArray);\n        }\n        else {\n            rubberArray = this.diagram.spatialSearch.findObjects(region);\n        }\n        if (rubberArray.length) {\n            this.selectObjects(rubberArray, true);\n        }\n    };\n    CommandHandler.prototype.clearSelectionRectangle = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var element = adornerSvg.getElementById(this.diagram.element.id + '_diagramAdorner_selected_region');\n        if (element) {\n            remove(element);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragConnectorEnds = function (endPoint, obj, point, segment, target, targetPortId) {\n        var selectorModel;\n        var connector;\n        var node;\n        var tx;\n        var segmentPoint;\n        var ty;\n        var index;\n        var checkBezierThumb = false;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            this.clearSelection();\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (endPoint === 'BezierSourceThumb' || endPoint === 'BezierTargetThumb') {\n            checkBezierThumb = true;\n        }\n        if (endPoint === 'ConnectorSourceEnd' || endPoint === 'BezierSourceThumb') {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint1.x : connector.sourcePoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint1.y : connector.sourcePoint.y);\n            return this.dragSourceEnd(connector, tx, ty, null, point, endPoint, undefined, target, targetPortId, undefined, segment);\n        }\n        else {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint2.x : connector.targetPoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint2.y : connector.targetPoint.y);\n            return this.dragTargetEnd(connector, tx, ty, null, point, endPoint, undefined, segment);\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.getSelectedObject = function () {\n        var selectormodel = this.diagram.selectedItems;\n        return (selectormodel.nodes).concat(selectormodel.connectors);\n    };\n    /**   @private  */\n    CommandHandler.prototype.updateBlazorProperties = function (isObjectInteraction) {\n        var blazorInterop = 'sfBlazor';\n        var blazor = 'Blazor';\n        if (!isObjectInteraction) {\n            if (window && window[blazor]) {\n                var obj = { 'methodName': 'UpdateBlazorProperties', 'diagramobj': this.diagramObject };\n                window[blazorInterop].updateBlazorProperties(obj, this.diagram);\n            }\n        }\n        else {\n            if (window && window[blazor]) {\n                var obj = { 'methodName': 'UpdateBlazorProperties', 'diagramobj': this.deepDiffer.diagramObject };\n                window[blazorInterop].updateBlazorProperties(obj, this.diagram);\n            }\n        }\n        this.diagram.enableServerDataBinding(true);\n        this.deepDiffer.newNodeObject = [];\n        this.deepDiffer.newConnectorObject = [];\n        this.diagramObject = [];\n        this.diagram.oldNodeObjects = [];\n        this.diagram.oldConnectorObjects = [];\n    };\n    /**   @private  */\n    CommandHandler.prototype.enableCloneObject = function (value) {\n        this.diagram.canEnableBlazorObject = value;\n    };\n    /**   @private  */\n    CommandHandler.prototype.ismouseEvents = function (value) {\n        if (value) {\n            this.diagram.blazorActions = BlazorAction.interaction;\n        }\n        else {\n            this.diagram.blazorActions = ~BlazorAction.interaction;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.updateLayerObject = function (oldDiagram, temp) {\n        if (isBlazor()) {\n            var diffLayers = {};\n            diffLayers = this.deepDiffer.getLayerObject(oldDiagram, temp, this.diagram);\n            this.diagramObject = diffLayers;\n            this.updateBlazorProperties();\n        }\n    };\n    /* tslint:enable:no-string-literal */\n    /** @private */\n    CommandHandler.prototype.getDiagramOldValues = function (oldDiagram, attribute) {\n        var newDiagram = {};\n        for (var i = 0; i < attribute.length; i++) {\n            newDiagram[attribute[i]] = cloneObject(this.diagram[attribute[i]]);\n        }\n        var newObject = cloneObject(newDiagram);\n        var result = this.deepDiffer.map(newObject, oldDiagram);\n        var diffValue = this.deepDiffer.frameObject({}, result);\n        var diff = this.deepDiffer.removeEmptyValues(diffValue);\n        diff = this.deepDiffer.changeSegments(diff, newObject);\n        this.diagramObject = diff;\n        this.updateBlazorProperties();\n    };\n    /* tslint:disable */\n    /** @private */\n    CommandHandler.prototype.getBlazorOldValues = function (args, labelDrag) {\n        if (isBlazor()) {\n            var oldNodeObject = this.diagram.oldNodeObjects;\n            for (var i = 0; i < oldNodeObject.length; i++) {\n                if (oldNodeObject[i].id) {\n                    if (this.diagram.oldNodeObjects[i] instanceof Node) {\n                        this.diagram.oldNodeObjects[i] = cloneBlazorObject(this.diagram.oldNodeObjects[i]);\n                    }\n                    this.deepDiffer.getDifferenceValues(this.diagram.nameTable[oldNodeObject[i].id], args, labelDrag, this.diagram);\n                }\n            }\n            var oldConnectorObject = this.diagram.oldConnectorObjects;\n            for (var i = 0; i < oldConnectorObject.length; i++) {\n                if (oldConnectorObject[i].id) {\n                    if (this.diagram.oldConnectorObjects[i] instanceof Connector) {\n                        this.diagram.oldConnectorObjects[i] = cloneBlazorObject(this.diagram.oldConnectorObjects[i]);\n                    }\n                    this.deepDiffer.getDifferenceValues(this.diagram.nameTable[oldConnectorObject[i].id], args, labelDrag, this.diagram);\n                }\n            }\n            if (oldNodeObject.length > 0 || oldConnectorObject.length > 0) {\n                this.updateBlazorProperties(true);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getObjectChanges = function (previousObject, currentObject, changedNodes) {\n        for (var i = 0; i < previousObject.length; i++) {\n            var value = this.deepDiffer.map(currentObject[i], previousObject[i]);\n            var result = this.deepDiffer.frameObject({}, value);\n            var change = this.deepDiffer.removeEmptyValues(result);\n            if (change.children) {\n                change.children = cloneObject(currentObject[i]).children;\n            }\n            change = this.deepDiffer.changeSegments(change, currentObject[i]);\n            change.sfIndex = getIndex(this.diagram, currentObject[i].id);\n            changedNodes.push(change);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelection = function (triggerAction, isTriggered) {\n        return __awaiter(this, void 0, void 0, function () {\n            var selectormodel, arrayNodes, arg, blazarArgs, selectNodes;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.diagram.enableServerDataBinding(false);\n                        if (!hasSelection(this.diagram)) return [3 /*break*/, 4];\n                        selectormodel = this.diagram.selectedItems;\n                        arrayNodes = this.getSelectedObject();\n                        if (this.diagram.currentSymbol) {\n                            this.diagram.previousSelectedObject = arrayNodes;\n                        }\n                        arg = {\n                            oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                            state: 'Changing', type: 'Removal', cancel: false\n                        };\n                        this.updateBlazorSelectorModel(arrayNodes, true);\n                        if (triggerAction) {\n                            if (!isBlazor()) {\n                                this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                            }\n                            else {\n                                this.oldSelectedObjects = cloneObject(selectormodel);\n                            }\n                        }\n                        if (!!arg.cancel) return [3 /*break*/, 3];\n                        selectormodel.offsetX = 0;\n                        selectormodel.offsetY = 0;\n                        selectormodel.width = 0;\n                        selectormodel.height = 0;\n                        selectormodel.rotateAngle = 0;\n                        selectormodel.nodes = [];\n                        selectormodel.connectors = [];\n                        selectormodel.wrapper = null;\n                        selectormodel.annotation = undefined;\n                        this.diagram.clearSelectorLayer();\n                        if (!triggerAction) return [3 /*break*/, 3];\n                        arg = {\n                            oldValue: cloneBlazorObject(arrayNodes), newValue: [], cause: this.diagram.diagramActions,\n                            state: 'Changed', type: 'Removal', cancel: false\n                        };\n                        if (isBlazor()) {\n                            arg = this.updateSelectionChangeEventArgs(arg, [], arrayNodes);\n                        }\n                        if (!!isBlazor()) return [3 /*break*/, 1];\n                        this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.diagram.triggerEvent(DiagramEvent.selectionChange, arg)];\n                    case 2:\n                        blazarArgs = _a.sent();\n                        if (blazarArgs && blazarArgs.cancel && !isTriggered) {\n                            selectNodes = [];\n                            if (blazarArgs.oldValue.nodes.length > 0) {\n                                selectNodes = blazarArgs.oldValue.nodes;\n                            }\n                            if (blazarArgs.oldValue.connectors.length > 0) {\n                                selectNodes = selectNodes.concat(blazarArgs.oldValue.connectors);\n                            }\n                            if (selectNodes) {\n                                this.diagram.select(selectNodes);\n                            }\n                        }\n                        _a.label = 3;\n                    case 3:\n                        this.updateBlazorSelector();\n                        this.diagram.enableServerDataBinding(true);\n                        _a.label = 4;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelectedItems = function () {\n        var selectedNodes = this.diagram.selectedItems.nodes ? this.diagram.selectedItems.nodes.length : 0;\n        var selectedConnectors = this.diagram.selectedItems.connectors ? this.diagram.selectedItems.connectors.length : 0;\n        this.clearSelection((selectedNodes + selectedConnectors) > 0 ? true : false);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeStackHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderStackHighlighter = function (args, target) {\n        var source = this.diagram.selectedItems.nodes[0];\n        var symbolDrag;\n        var node;\n        var selectorModel;\n        if (!target) {\n            var objects = this.diagram.findObjectsUnderMouse(args.position);\n            target = this.diagram.findObjectUnderMouse(objects, 'Drag', true);\n            if (target && !(target.isLane || target.isPhase || target.isHeader)) {\n                for (var i = 0; i < objects.length; i++) {\n                    var laneNode = this.diagram.nameTable[objects[i].id];\n                    if (laneNode.isLane || laneNode.isPhase || laneNode.isHeader) {\n                        target = laneNode;\n                        this.diagram.parentObject = target;\n                    }\n                }\n            }\n        }\n        if (source && target && target.isLane && source.shape && !source.shape.isPhase) {\n            node = this.diagram.nameTable[target.parentId];\n            if (this.diagram.currentSymbol && node.shape.type === 'SwimLane') {\n                symbolDrag = true;\n            }\n            if ((source && !source.parentId && source.shape.type !== 'SwimLane') ||\n                (source && source.parentId && this.diagram.nameTable[source.parentId] && this.diagram.nameTable[source.parentId].isLane &&\n                    (source.parentId !== target.parentId && source.parentId !== target.id))) {\n                selectorModel = this.diagram.selectedItems;\n                var canvas = gridSelection(this.diagram, selectorModel, target.id, true);\n                if (canvas) {\n                    selectorModel.wrapper.children[0] = canvas;\n                }\n                this.diagram.renderSelector(false, true);\n                selectorModel.wrapper.children[0] = selectorModel.nodes[0].wrapper;\n            }\n        }\n        if (source && target && target.parentId && source.shape && source.shape.isPhase) {\n            var node_2 = this.diagram.nameTable[target.parentId];\n            if (node_2.shape.type === 'SwimLane') {\n                this.diagram.selectedItems.wrapper.children[0] = this.diagram.nameTable[target.parentId].wrapper;\n                this.diagram.renderSelector(false, true);\n            }\n        }\n        if ((symbolDrag && this.diagram.currentSymbol.shape.isLane) || (source && target &&\n            source.parentId && target.parentId && !source.isPhase && (source.parentId === target.parentId)\n            && (source.id !== target.id) && node &&\n            (node.container && (node.container.type === 'Stack' || node.container.type === 'Grid')))) {\n            var canvas = void 0;\n            var value = node.container.orientation === 'Vertical';\n            var isVertical = node.container === 'Stack' ? value : !value;\n            if (node.container.type === 'Grid' && target.isLane &&\n                ((!this.diagram.currentSymbol &&\n                    (node.shape.orientation === 'Horizontal' && target.rowIndex !== source.rowIndex) ||\n                    (node.shape.orientation === 'Vertical' && target.columnIndex !== source.columnIndex))\n                    || (this.diagram.currentSymbol &&\n                        this.diagram.currentSymbol.shape.orientation === node.container.orientation))) {\n                selectorModel = this.diagram.selectedItems;\n                if ((source.isLane && canLaneInterchange(source, this.diagram)) || !source.isLane) {\n                    canvas = gridSelection(this.diagram, selectorModel, target.id, symbolDrag);\n                }\n            }\n            var wrapper = node.container.type === 'Stack' ? target.wrapper : canvas;\n            if (wrapper) {\n                renderStackHighlighter(wrapper, isVertical, args.position, this.diagram, false, true);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drag = function (obj, tx, ty) {\n        var tempNode;\n        var elements = [];\n        if (canMove(obj) && this.checkBoundaryConstraints(tx, ty, obj.wrapper.bounds) && canPageEditable(this.diagram)) {\n            if (obj instanceof Node) {\n                var oldValues = { offsetX: obj.offsetX, offsetY: obj.offsetY };\n                obj.offsetX += tx;\n                obj.offsetY += ty;\n                if (obj.children && !(obj.container)) {\n                    if (!(checkParentAsContainer(this.diagram, obj, true))) {\n                        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.isGroupDragging;\n                    }\n                    var nodes = this.getAllDescendants(obj, elements);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = (this.diagram.nameTable[nodes[i].id]);\n                        this.drag(tempNode, tx, ty);\n                    }\n                    this.updateInnerParentProperties(obj);\n                    this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.isGroupDragging;\n                }\n                if (checkParentAsContainer(this.diagram, obj, true)) {\n                    checkChildNodeInContainer(this.diagram, obj);\n                }\n                else {\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = true;\n                    }\n                    this.diagram.nodePropertyChange(obj, oldValues, { offsetX: obj.offsetX, offsetY: obj.offsetY }, undefined, undefined, false);\n                    obj.wrapper.measureChildren = false;\n                }\n                if (obj.shape.type === 'SwimLane' && !this.diagram.currentSymbol) {\n                    var grid = obj.wrapper.children[0];\n                    var connectors = getConnectors(this.diagram, grid, 0, true);\n                    updateConnectorsProperties(connectors, this.diagram);\n                }\n            }\n            else {\n                var connector = obj;\n                var oldValues = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                var update = connector.type === 'Bezier' ? true : false;\n                var hasEnds = false;\n                if (!connector.sourceWrapper) {\n                    this.dragSourceEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!connector.targetWrapper) {\n                    this.dragTargetEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!hasEnds) {\n                    this.dragControlPoint(connector, tx, ty, true);\n                    var conn = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, oldValues, conn);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.connectorSegmentChange = function (actualObject, existingInnerBounds, isRotate) {\n        var tx;\n        var ty;\n        var segmentChange = true;\n        if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n            if (actualObject.outEdges.length > 0) {\n                for (var k = 0; k < actualObject.outEdges.length; k++) {\n                    var connector = this.diagram.nameTable[actualObject.outEdges[k]];\n                    if (connector.targetID !== '') {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.targetID]) ? false : true;\n                    }\n                    else {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.id]) ? false : true;\n                    }\n                    if (connector.type === 'Orthogonal' && connector.segments && connector.segments.length > 1) {\n                        if (!isRotate) {\n                            if (segmentChange) {\n                                switch (connector.segments[0].direction) {\n                                    case 'Bottom':\n                                        tx = actualObject.wrapper.bounds.bottomCenter.x - existingInnerBounds.bottomCenter.x;\n                                        ty = actualObject.wrapper.bounds.bottomCenter.y - existingInnerBounds.bottomCenter.y;\n                                        break;\n                                    case 'Top':\n                                        tx = actualObject.wrapper.bounds.topCenter.x - existingInnerBounds.topCenter.x;\n                                        ty = actualObject.wrapper.bounds.topCenter.y - existingInnerBounds.topCenter.y;\n                                        break;\n                                    case 'Left':\n                                        tx = actualObject.wrapper.bounds.middleLeft.x - existingInnerBounds.middleLeft.x;\n                                        ty = actualObject.wrapper.bounds.middleLeft.y - existingInnerBounds.middleLeft.y;\n                                        break;\n                                    case 'Right':\n                                        tx = actualObject.wrapper.bounds.middleRight.x - existingInnerBounds.middleRight.x;\n                                        ty = actualObject.wrapper.bounds.middleRight.y - existingInnerBounds.middleRight.y;\n                                        break;\n                                }\n                                this.dragSourceEnd(connector, tx, ty, true, null, 'ConnectorSourceEnd', undefined, undefined, undefined, (actualObject.parentId &&\n                                    (this.diagram.diagramActions & DiagramAction.isGroupDragging)) ? false : true);\n                            }\n                        }\n                        else {\n                            var firstSegment = connector.segments[0];\n                            var secondSegment = connector.segments[1];\n                            var cornerPoints = swapBounds(actualObject.wrapper, actualObject.wrapper.corners, actualObject.wrapper.bounds);\n                            var sourcePoint = findPoint(cornerPoints, firstSegment.direction);\n                            sourcePoint = getIntersection(connector, connector.sourceWrapper, sourcePoint, { x: connector.sourceWrapper.offsetX, y: connector.sourceWrapper.offsetY }, false);\n                            var source = {\n                                corners: undefined, point: sourcePoint, margin: undefined, direction: firstSegment.direction\n                            };\n                            var target = {\n                                corners: undefined, point: secondSegment.points[1], margin: undefined, direction: undefined\n                            };\n                            var intermediatePoints = orthoConnection2Segment(source, target);\n                            firstSegment.length = Point.distancePoints(intermediatePoints[0], intermediatePoints[1]);\n                            if (secondSegment.direction && secondSegment.length) {\n                                secondSegment.length = Point.distancePoints(intermediatePoints[1], intermediatePoints[2]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.updateEndPoint = function (connector, oldChanges) {\n        var conn = {\n            sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint,\n            sourceID: connector.sourceID ? connector.sourceID : undefined,\n            targetID: connector.targetID ? connector.targetID : undefined,\n            sourcePortID: connector.sourcePortID ? connector.sourcePortID : undefined,\n            targetPortID: connector.targetPortID ? connector.targetPortID : undefined,\n            segments: connector.segments ? connector.segments : undefined\n        };\n        var newValue = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n        if (connector.sourceID) {\n            newValue.sourceID = connector.sourceID;\n        }\n        if (connector.targetID) {\n            newValue.targetID = connector.targetID;\n        }\n        if (connector.sourcePortID) {\n            newValue.sourcePortID = connector.sourcePortID;\n        }\n        if (connector.targetPortID) {\n            newValue.targetPortID = connector.targetPortID;\n        }\n        if (connector.segments) {\n            newValue.segments = connector.segments;\n        }\n        this.diagram.connectorPropertyChange(connector, oldChanges ? oldChanges : {}, newValue);\n        // this.diagram.refreshDiagramLayer();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.dragSourceEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, target, targetPortId, isDragSource, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var oldChanges = {};\n        var checkBoundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragSourceEnd(connector) && checkBoundaryConstraints\n            && (endPoint !== 'BezierSourceThumb') && canPageEditable(this.diagram)) {\n            oldChanges = { sourcePoint: connector.sourcePoint };\n            connector.sourcePoint.x += tx;\n            connector.sourcePoint.y += ty;\n            if (endPoint === 'ConnectorSourceEnd' && connector.type === 'Orthogonal') {\n                this.changeSegmentLength(connector, target, targetPortId, isDragSource);\n            }\n            if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                this.updatePathElementOffset(connector);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            oldChanges = { sourcePoint: connector.sourcePoint };\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector, oldChanges);\n        }\n        if (!(this.diagram.realActions & RealAction.AnimationClick)) {\n            this.diagram.refreshCanvasLayers();\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Update Path Element offset\n     */\n    CommandHandler.prototype.updatePathElementOffset = function (connector) {\n        connector.wrapper.children.splice(3, 1);\n        var pathElement = new PathElement();\n        var anglePoints = connector.intermediatePoints;\n        pathElement = updatePathElement(anglePoints, connector);\n        connector.wrapper.children.splice(3, 0, pathElement);\n    };\n    /**\n     * Upadte the connector segments when change the source node\n     */\n    CommandHandler.prototype.changeSegmentLength = function (connector, target, targetPortId, isDragSource) {\n        if (connector.segments && connector.segments[0].direction !== null\n            && ((!target && connector.sourceID === '') || isDragSource)) {\n            var first = connector.segments[0];\n            var second = connector.segments[1];\n            var node = this.diagram.nameTable[connector.sourceID];\n            var secPoint = void 0;\n            first.points[0] = connector.sourcePoint;\n            if (first.direction === 'Top' || first.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = connector.sourcePoint.x;\n                second.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = connector.sourcePoint.y;\n                second.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (first.direction && (first.length || first.length === 0)) {\n                first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n            }\n            if (second.direction && (second.length || second.length === 0)) {\n                second.length = Point.distancePoints(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n                second.direction = Point.direction(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n            }\n            if (connector.sourcePortID !== '' && first.length < 10) {\n                if (connector.segments.length > 2) {\n                    var next = connector.segments[2];\n                    var nextDirection = Point.direction(next.points[0], next.points[1]);\n                    if (first.direction === getOppositeDirection(nextDirection)) {\n                        if (first.direction === 'Right') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleRight.x + 20;\n                        }\n                        else if (first.direction === 'Left') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleLeft.x - 20;\n                        }\n                        else if (first.direction === 'Top') {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.topCenter.y - 20;\n                        }\n                        else {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.bottomCenter.y + 20;\n                        }\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        }\n                        first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n                    }\n                    else if (first.direction === nextDirection && next.direction && next.length) {\n                        if (first.direction === 'Top' || first.direction === 'Bottom') {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].x = next.points[0].x;\n                        }\n                        else {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].y = next.points[0].y;\n                        }\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        connector.segments.splice(0, 2);\n                    }\n                    else {\n                        first.length = 20;\n                    }\n                }\n                else {\n                    first.length = 20;\n                }\n            }\n            else if (first.length < 1) {\n                if (connector.sourceID !== '') {\n                    if (second.direction === 'Right') {\n                        secPoint = node.wrapper.corners.middleRight;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Left') {\n                        secPoint = node.wrapper.corners.middleLeft;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Top') {\n                        secPoint = node.wrapper.corners.topCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    else {\n                        secPoint = node.wrapper.corners.bottomCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    second.length = Point.distancePoints(secPoint, second.points[second.points.length - 1]);\n                    if (connector.segments.length > 2) {\n                        var next = connector.segments[2];\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(second.points[second.points.length - 1], next.points[next.points.length - 1]);\n                        }\n                    }\n                    connector.segments.splice(0, 1);\n                }\n                else {\n                    connector.segments.splice(0, 1);\n                }\n            }\n        }\n        else {\n            if (target && !targetPortId && connector.sourceID !== target.id &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToNode(connector, target);\n            }\n            if (target && targetPortId && connector.sourcePortID !== targetPortId &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToPort(connector, target, targetPortId);\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint to port\n     */\n    CommandHandler.prototype.changeSourceEndToPort = function (connector, target, targetPortId) {\n        var port = this.diagram.getWrapper(target.wrapper, targetPortId);\n        var point = { x: port.offsetX, y: port.offsetY };\n        var direction = getPortDirection(point, cornersPointsBeforeRotation(target.wrapper), target.wrapper.bounds, false);\n        var firstSegment = connector.segments[0];\n        var secondSegment = connector.segments[1];\n        if (firstSegment.direction !== direction) {\n            var segments = [];\n            var segValues = {};\n            if (firstSegment.direction === getOppositeDirection(direction)) {\n                segValues = {};\n                var segValues1 = void 0;\n                if (direction === 'Top' || direction === 'Bottom') {\n                    segValues1 = (direction === 'Top') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].y - point.y)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.y - firstSegment.points[0].y)\n                        };\n                    segValues = (firstSegment.points[0].x > point.x) ?\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Right', length: (firstSegment.points[0].x - point.x) } :\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Left', length: (point.x - firstSegment.points[0].x) };\n                }\n                else {\n                    segValues1 = (direction === 'Right') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].x - point.x)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.x - firstSegment.points[0].x)\n                        };\n                    segValues = (firstSegment.points[0].y > point.y) ?\n                        { type: 'Orthogonal', direction: 'Top', isTerminal: true, length: (firstSegment.points[0].y - point.y) } :\n                        { type: 'Orthogonal', direction: 'Bottom', isTerminal: true, length: (point.y - firstSegment.points[0].y) };\n                }\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues1, true));\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            else {\n                segValues = { type: 'Orthogonal', direction: direction, length: 20, isTerminal: true };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            if (firstSegment.direction !== getOppositeDirection(direction)) {\n                if (direction === 'Top' || direction === 'Bottom') {\n                    firstSegment.points[0].x = point.x;\n                    firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = (direction === 'Top') ?\n                        point.y - 20 : point.y + 20;\n                }\n                else {\n                    firstSegment.points[0].y = point.y;\n                    firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = (direction === 'Right') ?\n                        point.x + 20 : point.x - 20;\n                }\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n            }\n            connector.segments = segments.concat(connector.segments);\n        }\n        else {\n            firstSegment.points[0] = point;\n            if (direction === 'Top' || direction === 'Bottom') {\n                firstSegment.points[firstSegment.points.length - 1].x = point.x;\n            }\n            else {\n                firstSegment.points[firstSegment.points.length - 1].y = point.y;\n            }\n            firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n            secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n        }\n    };\n    /**\n     * @private\n     * Remove terinal segment in initial\n     */\n    CommandHandler.prototype.removeTerminalSegment = function (connector, changeTerminal) {\n        for (var i = 0; i < connector.segments.length - 2; i++) {\n            var segment = connector.segments[0];\n            if (segment.isTerminal) {\n                if (changeTerminal) {\n                    segment.isTerminal = false;\n                }\n                else {\n                    connector.segments.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint from point to node\n     */\n    CommandHandler.prototype.changeSourceEndToNode = function (connector, target) {\n        this.removeTerminalSegment(connector);\n        var sourceWrapper = target.wrapper.children[0].corners;\n        var sourcePoint;\n        var sourcePoint2;\n        var firstSegment = connector.segments[0];\n        var nextSegment = connector.segments[1];\n        var segments = [];\n        if (firstSegment.direction === 'Right' || firstSegment.direction === 'Left') {\n            sourcePoint = (firstSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n            if (firstSegment.length > sourceWrapper.width || ((firstSegment.direction === 'Left' &&\n                sourcePoint.x >= firstSegment.points[0].x) || (firstSegment.direction === 'Right' &&\n                sourcePoint.x <= firstSegment.points[0].x))) {\n                firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = sourcePoint.y;\n                firstSegment.points[0].x = sourcePoint.x;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                sourcePoint2 = (direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Top') ? firstSegment.points[firstSegment.points.length - 1].y - (sourcePoint2.y + 20) :\n                            (sourcePoint2.y + 20) - firstSegment.points[firstSegment.points.length - 1].y;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].x - sourcePoint2.x;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Right' : 'Left';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n        else {\n            sourcePoint = (firstSegment.direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n            if (firstSegment.length > sourceWrapper.height || ((firstSegment.direction === 'Top' &&\n                sourcePoint.y >= firstSegment.points[0].y) ||\n                (firstSegment.direction === 'Bottom' && sourcePoint.y <= firstSegment.points[0].y))) {\n                firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = sourcePoint.x;\n                firstSegment.points[0].y = sourcePoint.y;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                sourcePoint2 = (nextSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Left') ? firstSegment.points[firstSegment.points.length - 1].x - (sourcePoint2.x + 20) :\n                            (sourcePoint2.x + 20) - firstSegment.points[firstSegment.points.length - 1].x;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].y - sourcePoint2.y;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Bottom' : 'Top';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n    };\n    /**\n     * Translate the bezier points during the interaction\n     */\n    CommandHandler.prototype.translateBezierPoints = function (connector, value, tx, ty, seg, point, update) {\n        var index = (connector.segments.indexOf(seg));\n        var segment = connector.segments[index];\n        if (segment) {\n            if (value === 'BezierSourceThumb' && (segment.vector1.angle || segment.vector1.distance)) {\n                segment.vector1 = {\n                    distance: connector.distance(connector.sourcePoint, point),\n                    angle: Point.findAngle(connector.sourcePoint, point),\n                };\n            }\n            else if (value === 'BezierTargetThumb' && (segment.vector2.angle || segment.vector2.distance)) {\n                segment.vector2 = {\n                    distance: connector.distance(connector.targetPoint, point),\n                    angle: Point.findAngle(connector.targetPoint, point),\n                };\n            }\n            else if ((value === 'ConnectorSourceEnd' && !connector.sourceID || value === 'ConnectorTargetEnd' && !connector.targetID)\n                && update && isEmptyVector(segment.vector1) && isEmptyVector(segment.vector2)) {\n                if (Point.isEmptyPoint(segment.point1)) {\n                    segment.bezierPoint1 = getBezierPoints(connector.sourcePoint, connector.targetPoint);\n                }\n                if (Point.isEmptyPoint(segment.point2)) {\n                    segment.bezierPoint2 = getBezierPoints(connector.targetPoint, connector.sourcePoint);\n                }\n            }\n            else if (value === 'BezierSourceThumb' || (value === 'ConnectorSourceEnd' && !update && isEmptyVector(segment.vector1))) {\n                segment.bezierPoint1.x += tx;\n                segment.bezierPoint1.y += ty;\n                if ((!Point.isEmptyPoint(segment.point1)) || (update)) {\n                    segment.point1 = { x: segment.bezierPoint1.x, y: segment.bezierPoint1.y };\n                }\n            }\n            else if (value === 'BezierTargetThumb' || (value === 'ConnectorTargetEnd' && !update && isEmptyVector(segment.vector2))) {\n                segment.bezierPoint2.x += tx;\n                segment.bezierPoint2.y += ty;\n                if ((!Point.isEmptyPoint(segment.point2)) || (update)) {\n                    segment.point2 = { x: segment.bezierPoint2.x, y: segment.bezierPoint2.y };\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragTargetEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var oldChanges;\n        var boundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragTargetEnd(connector) && endPoint !== 'BezierTargetThumb'\n            && boundaryConstraints && canPageEditable(this.diagram)) {\n            oldChanges = { targetPoint: connector.targetPoint };\n            connector.targetPoint.x += tx;\n            connector.targetPoint.y += ty;\n            if (endPoint === 'ConnectorTargetEnd' && connector.type === 'Orthogonal' &&\n                connector.segments && connector.segments.length > 0) {\n                var prev = connector.segments[connector.segments.length - 2];\n                if (prev && connector.segments[connector.segments.length - 1].points.length === 2) {\n                    if (prev.direction === 'Left' || prev.direction === 'Right') {\n                        prev.points[prev.points.length - 1].x = connector.targetPoint.x;\n                    }\n                    else {\n                        prev.points[prev.points.length - 1].y = connector.targetPoint.y;\n                    }\n                    prev.length = Point.distancePoints(prev.points[0], prev.points[prev.points.length - 1]);\n                    prev.direction = Point.direction(prev.points[0], prev.points[prev.points.length - 1]);\n                }\n            }\n            if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                this.updatePathElementOffset(connector);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            oldChanges = { targetPoint: connector.targetPoint };\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector, oldChanges);\n        }\n        if (!(this.diagram.realActions & RealAction.AnimationClick)) {\n            this.diagram.refreshCanvasLayers();\n        }\n        return boundaryConstraints;\n    };\n    /** @private */\n    CommandHandler.prototype.dragControlPoint = function (obj, tx, ty, preventUpdate, segmentNumber) {\n        var connector = this.diagram.nameTable[obj.id];\n        if ((connector.type === 'Straight' || connector.type === 'Bezier') && connector.segments.length > 0) {\n            if (segmentNumber !== undefined && connector.segments[segmentNumber]) {\n                connector.segments[segmentNumber].point.x += tx;\n                connector.segments[segmentNumber].point.y += ty;\n            }\n            else {\n                for (var i = 0; i < connector.segments.length - 1; i++) {\n                    connector.segments[i].point.x += tx;\n                    connector.segments[i].point.y += ty;\n                }\n            }\n            if (!preventUpdate) {\n                this.updateEndPoint(connector);\n            }\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.rotatePropertyChnage = function (angle) {\n        var selectedItems = this.diagram.selectedItems;\n        var objects = [];\n        objects = objects.concat(selectedItems.nodes);\n        objects = objects.concat(selectedItems.connectors);\n        var pivotValue = { x: selectedItems.offsetX, y: selectedItems.offsetY };\n        this.rotateObjects(selectedItems, objects, angle - selectedItems.rotateAngle, pivotValue);\n        selectedItems.wrapper.rotateAngle = selectedItems.rotateAngle = angle;\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.rotateObjects = function (parent, objects, angle, pivot, includeParent) {\n        pivot = pivot || {};\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivot.x, pivot.y);\n        var oldValues;\n        for (var _i = 0, objects_2 = objects; _i < objects_2.length; _i++) {\n            var obj = objects_2[_i];\n            if (obj instanceof Node) {\n                if (canRotate(obj) && canPageEditable(this.diagram)) {\n                    if (includeParent !== false || parent !== obj) {\n                        oldValues = { rotateAngle: obj.rotateAngle };\n                        obj.rotateAngle += angle;\n                        obj.rotateAngle = (obj.rotateAngle + 360) % 360;\n                        var newOffset = transformPointByMatrix(matrix, { x: obj.offsetX, y: obj.offsetY });\n                        obj.offsetX = newOffset.x;\n                        obj.offsetY = newOffset.y;\n                        this.diagram.nodePropertyChange(obj, {}, { offsetX: obj.offsetX, offsetY: obj.offsetY, rotateAngle: obj.rotateAngle });\n                    }\n                    if (obj.processId) {\n                        var parent_1 = this.diagram.nameTable[obj.processId];\n                        var bound = this.diagram.bpmnModule.getChildrenBound(parent_1, obj.id, this.diagram);\n                        this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n                    }\n                    if (obj.children && obj.children.length && !obj.container) {\n                        this.getChildren(obj, objects);\n                    }\n                }\n            }\n            else {\n                this.rotatePoints(obj, angle, pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY });\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        this.diagram.refreshCanvasLayers();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.snapConnectorEnd = function (currentPosition) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            this.diagram.snappingModule.snapConnectorEnd(currentPosition);\n        }\n        return currentPosition;\n    };\n    /**   @private  */\n    CommandHandler.prototype.snapAngle = function (angle) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            return this.snappingModule.snapAngle(this.diagram, angle);\n        }\n        else {\n            return 0;\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.rotatePoints = function (conn, angle, pivot) {\n        if (!conn.sourceWrapper || !conn.targetWrapper) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, angle, pivot.x, pivot.y);\n            conn.sourcePoint = transformPointByMatrix(matrix, conn.sourcePoint);\n            conn.targetPoint = transformPointByMatrix(matrix, conn.targetPoint);\n            if (conn.shape.type === 'Bpmn' && conn.shape.sequence === 'Default') {\n                this.updatePathElementOffset(conn);\n            }\n            var newProp = { sourcePoint: conn.sourcePoint, targetPoint: conn.targetPoint };\n            this.diagram.connectorPropertyChange(conn, {}, newProp);\n        }\n    };\n    CommandHandler.prototype.updateInnerParentProperties = function (tempNode) {\n        var elements = [];\n        var protect = 'isProtectedOnChange';\n        var protectChange = this.diagram[protect];\n        this.diagram.protectPropertyChange(true);\n        var innerParents = this.getAllDescendants(tempNode, elements, false, true);\n        for (var i = 0; i < innerParents.length; i++) {\n            var obj = this.diagram.nameTable[innerParents[i].id];\n            obj.offsetX = obj.wrapper.offsetX;\n            obj.offsetY = obj.wrapper.offsetY;\n            obj.width = obj.wrapper.width;\n            obj.height = obj.wrapper.height;\n        }\n        this.diagram.protectPropertyChange(protectChange);\n    };\n    /** @private */\n    CommandHandler.prototype.scale = function (obj, sw, sh, pivot, refObject, isOutsideBoundary) {\n        var node = this.diagram.nameTable[obj.id];\n        var tempNode = node;\n        var elements = [];\n        var element = node.wrapper;\n        if (!refObject) {\n            refObject = obj;\n        }\n        var refWrapper = refObject.wrapper;\n        var x = refWrapper.offsetX - refWrapper.actualSize.width * refWrapper.pivot.x;\n        var y = refWrapper.offsetY - refWrapper.actualSize.height * refWrapper.pivot.y;\n        var refPoint = getPoint(x, y, refWrapper.actualSize.width, refWrapper.actualSize.height, refWrapper.rotateAngle, refWrapper.offsetX, refWrapper.offsetY, pivot);\n        if (element.actualSize.width !== undefined && element.actualSize.height !== undefined && canPageEditable(this.diagram)) {\n            if (tempNode.children && !(tempNode.container)) {\n                var nodes = this.getAllDescendants(tempNode, elements);\n                for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                    var temp = nodes_1[_i];\n                    this.scaleObject(sw, sh, refPoint, temp, element, refObject);\n                }\n                obj.wrapper.measure(new Size());\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                this.diagram.updateGroupOffset(node);\n                this.updateInnerParentProperties(tempNode);\n            }\n            else {\n                this.scaleObject(sw, sh, refPoint, node, element, refObject);\n            }\n            var bounds = getBounds(obj.wrapper);\n            var checkBoundaryConstraints = this.checkBoundaryConstraints(undefined, undefined, bounds);\n            if (!checkBoundaryConstraints && isOutsideBoundary) {\n                this.scale(obj, 1 / sw, 1 / sh, pivot, undefined, true);\n                return false;\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.getAllDescendants = function (node, nodes, includeParent, innerParent) {\n        var temp = node;\n        var parentNodes = [];\n        for (var i = 0; i < temp.children.length; i++) {\n            node = (this.diagram.nameTable[temp.children[i]]);\n            if (node) {\n                if (!node.children) {\n                    nodes.push(node);\n                }\n                else {\n                    if (includeParent) {\n                        nodes.push(node);\n                    }\n                    if (innerParent) {\n                        parentNodes.push(node);\n                    }\n                    nodes = this.getAllDescendants(node, nodes);\n                }\n            }\n        }\n        return (innerParent) ? parentNodes : nodes;\n    };\n    /**   @private  */\n    CommandHandler.prototype.getChildren = function (node, nodes) {\n        var temp = node;\n        if (node.children) {\n            for (var i = 0; i < temp.children.length; i++) {\n                node = (this.diagram.nameTable[temp.children[i]]);\n                nodes.push(node);\n            }\n        }\n        return nodes;\n    };\n    /** @private */\n    CommandHandler.prototype.cloneChild = function (id) {\n        var node = this.diagram.nameTable[id];\n        return node;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleObject = function (sw, sh, pivot, obj, element, refObject) {\n        sw = sw < 0 ? 1 : sw;\n        sh = sh < 0 ? 1 : sh;\n        var process;\n        var oldValues = {};\n        if (sw !== 1 || sh !== 1) {\n            var width = void 0;\n            var height = void 0;\n            if (obj instanceof Node) {\n                var node = obj;\n                var isResize = void 0;\n                var bound = void 0;\n                oldValues = {\n                    width: obj.wrapper.actualSize.width, height: obj.wrapper.actualSize.height,\n                    offsetX: obj.wrapper.offsetX, offsetY: obj.wrapper.offsetY,\n                    margin: { top: node.margin.top, left: node.margin.left }\n                };\n                if (node.shape.type === 'Bpmn' && node.shape.activity.subProcess.processes\n                    && node.shape.activity.subProcess.processes.length > 0) {\n                    bound = this.diagram.bpmnModule.getChildrenBound(node, node.id, this.diagram);\n                    isResize = node.wrapper.bounds.containsRect(bound);\n                }\n                width = node.wrapper.actualSize.width * sw;\n                height = node.wrapper.actualSize.height * sh;\n                if (node.maxWidth !== undefined && node.maxWidth !== 0) {\n                    width = Math.min(node.maxWidth, width);\n                }\n                if (node.minWidth !== undefined && node.minWidth !== 0) {\n                    width = Math.max(node.minWidth, width);\n                }\n                if (node.maxHeight !== undefined && node.maxHeight !== 0) {\n                    height = Math.min(node.maxHeight, height);\n                }\n                if (node.minHeight !== undefined && node.minHeight !== 0) {\n                    height = Math.max(node.minHeight, height);\n                }\n                if (isResize) {\n                    width = Math.max(width, (bound.right - node.wrapper.bounds.x));\n                    height = Math.max(height, (bound.bottom - node.wrapper.bounds.y));\n                }\n                sw = width / node.actualSize.width;\n                sh = height / node.actualSize.height;\n            }\n            var matrix = identityMatrix();\n            var refWrapper = void 0;\n            if (!refObject) {\n                refObject = obj;\n            }\n            refWrapper = refObject.wrapper;\n            rotateMatrix(matrix, -refWrapper.rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, sw, sh, pivot.x, pivot.y);\n            rotateMatrix(matrix, refWrapper.rotateAngle, pivot.x, pivot.y);\n            if (obj instanceof Node) {\n                var node = obj;\n                var left = void 0;\n                var top_1;\n                var newPosition = transformPointByMatrix(matrix, { x: node.wrapper.offsetX, y: node.wrapper.offsetY });\n                var oldleft = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                var oldtop = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                if (width > 0) {\n                    if (node.processId) {\n                        var parent_2 = this.diagram.nameTable[node.processId];\n                        if (!parent_2.maxWidth || ((node.margin.left + width) < parent_2.maxWidth)) {\n                            node.width = width;\n                            node.offsetX = newPosition.x;\n                        }\n                    }\n                    else {\n                        node.width = width;\n                        node.offsetX = newPosition.x;\n                    }\n                }\n                if (height > 0) {\n                    if (node.processId) {\n                        var parent_3 = this.diagram.nameTable[node.processId];\n                        if (!parent_3.maxHeight || ((node.margin.top + height) < parent_3.maxHeight)) {\n                            node.height = height;\n                            node.offsetY = newPosition.y;\n                        }\n                    }\n                    else {\n                        node.height = height;\n                        node.offsetY = newPosition.y;\n                    }\n                }\n                left = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                top_1 = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                var parent_4 = this.diagram.nameTable[node.processId];\n                if (parent_4 && ((node.margin.top + (top_1 - oldtop)) <= 0 ||\n                    (node.margin.left + (left - oldleft) <= 0))) {\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        margin: { top: node.margin.top, left: node.margin.left }\n                    });\n                }\n                else {\n                    if (checkParentAsContainer(this.diagram, obj, true)) {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        this.diagram.nodePropertyChange(obj, oldValues, {\n                            width: node.width, height: node.height, offsetX: node.offsetX, offsetY: node.offsetY,\n                            margin: { top: node.margin.top + (top_1 - oldtop), left: node.margin.left + (left - oldleft) }\n                        });\n                    }\n                }\n            }\n            else {\n                var connector = obj;\n                var oldValues_1 = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                if (!connector.sourceWrapper || !connector.targetWrapper) {\n                    this.scaleConnector(connector, matrix, oldValues_1);\n                }\n            }\n            var parentNode = this.diagram.nameTable[obj.processId];\n            if (parentNode) {\n                var parent_5 = parentNode.wrapper.bounds;\n                var child = obj.wrapper.bounds;\n                var bound = this.diagram.bpmnModule.getChildrenBound(parentNode, obj.id, this.diagram);\n                this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n            }\n        }\n    };\n    CommandHandler.prototype.scaleConnector = function (connector, matrix, oldValues) {\n        connector.sourcePoint = transformPointByMatrix(matrix, connector.sourcePoint);\n        connector.targetPoint = transformPointByMatrix(matrix, connector.targetPoint);\n        if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n            this.updatePathElementOffset(connector);\n        }\n        var newProp = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n        this.diagram.connectorPropertyChange(connector, oldValues, newProp);\n    };\n    /** @private */\n    CommandHandler.prototype.portDrag = function (obj, portElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var port = this.findTarget(portElement, obj);\n        var bounds = getBounds(obj.wrapper);\n        if (port && canDrag(port, this.diagram)) {\n            oldValues = this.getPortChanges(obj, port);\n            port.offset.x += (tx / bounds.width);\n            port.offset.y += (ty / bounds.height);\n            changedvalues = this.getPortChanges(obj, port);\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelDrag = function (obj, textElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var label;\n        label = this.findTarget(textElement, obj);\n        var bounds = cornersPointsBeforeRotation(obj.wrapper);\n        oldValues = this.getAnnotationChanges(obj, label);\n        if (label instanceof ShapeAnnotation) {\n            label.offset.x += (tx / bounds.width);\n            label.offset.y += (ty / bounds.height);\n        }\n        else {\n            this.updatePathAnnotationOffset(obj, label, tx, ty);\n            if (label instanceof PathAnnotation) {\n                label.alignment = 'Center';\n            }\n        }\n        changedvalues = this.getAnnotationChanges(obj, label);\n        if (obj instanceof Node) {\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(obj, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(obj);\n        if (!isSelected(this.diagram, label, false, textElement)) {\n            this.labelSelect(obj, textElement);\n        }\n    };\n    CommandHandler.prototype.updatePathAnnotationOffset = function (object, label, tx, ty, newPosition, size) {\n        var textWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var offsetX = textWrapper.offsetX;\n        var offsetY = textWrapper.offsetY;\n        var offset;\n        var intermediatePoints = object.intermediatePoints;\n        var prev;\n        var pointLength = 0;\n        var totalLength = 0;\n        var intersectingOffset;\n        var currentPosition = (newPosition) ? newPosition : { x: offsetX + tx, y: offsetY + ty };\n        var intersetingPts = this.getInterceptWithSegment(currentPosition, intermediatePoints);\n        var newOffset = intermediatePoints[intermediatePoints.length - 1];\n        totalLength = Point.getLengthFromListOfPoints(intermediatePoints);\n        if (intersetingPts.length > 0) {\n            if (label.dragLimit.top || label.dragLimit.bottom || label.dragLimit.left || label.dragLimit.right) {\n                var minDistance = { minDistance: null };\n                newOffset = this.getRelativeOffset(currentPosition, intermediatePoints, minDistance);\n                var distance = { minDistance: null };\n                intersectingOffset = this.getRelativeOffset(currentPosition, intersetingPts, distance);\n                if (minDistance != null && distance.minDistance < minDistance.minDistance) {\n                    newOffset = intersectingOffset;\n                }\n                else {\n                    var connectorOffset = getOffsetOfConnector(object.intermediatePoints, label, object.wrapper.bounds);\n                    newOffset = connectorOffset.point;\n                }\n            }\n            else {\n                intersectingOffset = intersetingPts[intersetingPts.length - 1];\n                newOffset = intersectingOffset;\n            }\n            if (newOffset) {\n                var p = void 0;\n                var bounds = void 0;\n                for (p = 0; p < intermediatePoints.length; p++) {\n                    if (prev != null) {\n                        bounds = Rect.toBounds([prev, intermediatePoints[p]]);\n                        if (bounds.containsPoint(newOffset)) {\n                            pointLength += Point.findLength(prev, newOffset);\n                            break;\n                        }\n                        else {\n                            pointLength += Point.findLength(prev, intermediatePoints[p]);\n                        }\n                    }\n                    prev = intermediatePoints[p];\n                }\n                offset = { x: pointLength / totalLength, y: 0 };\n            }\n            this.updateLabelMargin(object, label, offset, currentPosition, size, tx, ty);\n        }\n        else {\n            this.updateLabelMargin(object, label, null, currentPosition, size, tx, ty);\n        }\n    };\n    CommandHandler.prototype.getRelativeOffset = function (currentPosition, points, minDistance) {\n        var newOffset;\n        var distance;\n        var pt;\n        var i;\n        for (i = 0; i < points.length; i++) {\n            pt = points[i];\n            distance = Math.round(Math.sqrt(Math.pow((currentPosition.x - pt.x), 2) +\n                Math.pow((currentPosition.y - pt.y), 2)));\n            if (minDistance.minDistance === null ||\n                Math.min(Math.abs(minDistance.minDistance), Math.abs(distance)) === Math.abs(distance)) {\n                newOffset = pt;\n                minDistance.minDistance = distance;\n            }\n        }\n        return newOffset;\n    };\n    ;\n    CommandHandler.prototype.dragLimitValue = function (label, point, tempPt, contentDimension) {\n        var x = false;\n        var y = false;\n        if ((tempPt.x >= (point.x - label.dragLimit.left - (contentDimension.width / 2))) &&\n            (tempPt.x <= point.x + label.dragLimit.right + (contentDimension.width / 2))) {\n            x = true;\n        }\n        if ((tempPt.y >= (point.y - label.dragLimit.top - (contentDimension.height / 2))) &&\n            (tempPt.y <= point.y + label.dragLimit.bottom + (contentDimension.height / 2))) {\n            y = true;\n        }\n        return { x: x, y: y };\n    };\n    ;\n    CommandHandler.prototype.updateLabelMargin = function (node, label, offset, tempPt, size, tx, ty) {\n        offset = offset ? offset : { x: label.offset, y: 0 };\n        if (label && offset && offset.x > 0 && offset.x < 1) {\n            var point = void 0;\n            var length_1 = Point.getLengthFromListOfPoints(node.intermediatePoints);\n            point = this.getPointAtLength(length_1 * offset.x, node.intermediatePoints, 0);\n            var curZoomfactor = this.diagram.scrollSettings.currentZoom;\n            var dragLimit = label.dragLimit;\n            if (dragLimit.top || dragLimit.bottom || dragLimit.left || dragLimit.right) {\n                var labelBounds = this.diagram.getWrapper(node.wrapper, label.id);\n                var contentDimension = new Rect(0, 0, 0, 0);\n                var annotationWrtapper = this.diagram.getWrapper(node.wrapper, label.id);\n                contentDimension.x = ((annotationWrtapper).offsetX / curZoomfactor) + tx;\n                contentDimension.y = (annotationWrtapper.offsetY / curZoomfactor) + ty;\n                contentDimension.width = annotationWrtapper.bounds.width / curZoomfactor;\n                contentDimension.height = annotationWrtapper.bounds.height / curZoomfactor;\n                var draggableBounds = new Rect(point.x - (dragLimit.left || 0) - contentDimension.width / 2, point.y - (dragLimit.top || 0) - contentDimension.height / 2, (dragLimit.left || 0) + (dragLimit.right || 0) + contentDimension.width, (dragLimit.top || 0) + (dragLimit.bottom || 0) + contentDimension.height);\n                if (draggableBounds.containsPoint(tempPt)) {\n                    tempPt = tempPt;\n                }\n                else {\n                    var lineIntersects = void 0;\n                    var line1 = [point, tempPt];\n                    lineIntersects = this.boundsInterSects(line1, draggableBounds, false);\n                    for (var _i = 0, lineIntersects_1 = lineIntersects; _i < lineIntersects_1.length; _i++) {\n                        var i = lineIntersects_1[_i];\n                        var ptt = i;\n                        tempPt = ptt;\n                    }\n                }\n                var cursorLimit = this.dragLimitValue(label, point, tempPt, contentDimension);\n                label.margin = {\n                    left: cursorLimit.x ? tempPt.x - point.x : label.margin.left,\n                    top: cursorLimit.y ? tempPt.y - point.y : label.margin.top, right: 0, bottom: 0\n                };\n            }\n            else {\n                label.margin = { left: tempPt.x - point.x, top: tempPt.y - point.y, right: 0, bottom: 0 };\n            }\n            label.offset = offset.x;\n            if (size) {\n                label.width = size.width;\n                label.height = size.height;\n            }\n        }\n    };\n    CommandHandler.prototype.boundsInterSects = function (polyLine, bounds, self) {\n        var intersects;\n        if (bounds) {\n            var polyLine2 = [\n                { x: bounds.x, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y }\n            ];\n            intersects = this.intersect(polyLine, polyLine2, self);\n        }\n        return intersects;\n    };\n    ;\n    CommandHandler.prototype.intersect = function (polyLine1, polyLine2, self) {\n        var intersect = [];\n        for (var i = 0; i < polyLine1.length - 1; i++) {\n            for (var j = 0; j < polyLine2.length - 1; j++) {\n                var p = intersect2(polyLine1[i], polyLine1[i + 1], polyLine2[j], polyLine2[j + 1]);\n                if (p.x !== 0 && p.y !== 0) {\n                    intersect.push(p);\n                }\n            }\n        }\n        return intersect;\n    };\n    ;\n    CommandHandler.prototype.getPointAtLength = function (length, points, angle) {\n        angle = 0;\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        var pt;\n        for (var i = 0; i < points.length; i++) {\n            pt = points[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = Point.findLength(pre, pt);\n                var r = void 0;\n                var deg = void 0;\n                var x = void 0;\n                var y = void 0;\n                if (run + l >= length) {\n                    r = length - run;\n                    deg = Point.findAngle(pre, pt);\n                    x = r * Math.cos(deg * Math.PI / 180);\n                    y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    angle = deg;\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    CommandHandler.prototype.getInterceptWithSegment = function (currentPosition, conPoints) {\n        var intercepts = [];\n        var imgLine = [];\n        var segemnt = [];\n        var tarAngle;\n        var srcAngle;\n        var maxLength;\n        maxLength = Point.findLength({ x: 0, y: 0 }, { x: this.diagram.scroller.viewPortWidth, y: this.diagram.scroller.viewPortHeight });\n        for (var i = 1; i < conPoints.length; i++) {\n            segemnt = [conPoints[i - 1], conPoints[i]];\n            imgLine = [];\n            srcAngle = Math.round(Point.findAngle(segemnt[0], segemnt[1]) % 360);\n            tarAngle = Math.round(Point.findAngle(segemnt[1], segemnt[0]) % 360);\n            var angleAdd = (srcAngle > 0 && srcAngle <= 90) || (srcAngle > 180 && srcAngle <= 270) ? 90 : -90;\n            imgLine.push(Point.transform(currentPosition, srcAngle + angleAdd, maxLength));\n            imgLine.push(Point.transform(currentPosition, tarAngle + angleAdd, maxLength));\n            var lineUtil1 = { x1: segemnt[0].x, y1: segemnt[0].y, x2: segemnt[1].x, y2: segemnt[1].y };\n            var lineUtil2 = { x1: imgLine[0].x, y1: imgLine[0].y, x2: imgLine[1].x, y2: imgLine[1].y };\n            var line3 = intersect3(lineUtil1, lineUtil2);\n            if (line3.enabled) {\n                intercepts.push(line3.intersectPt);\n            }\n        }\n        return intercepts;\n    };\n    /** @private */\n    CommandHandler.prototype.getAnnotationChanges = function (object, label) {\n        var index = findObjectIndex(object, label.id, true);\n        var annotations = {};\n        annotations[index] = {\n            width: label.width, height: label.height, offset: (object instanceof Node) ? ({\n                x: label.offset.x,\n                y: label.offset.y\n            }) : label.offset,\n            rotateAngle: label.rotateAngle,\n            margin: { left: label.margin.left, right: label.margin.right, top: label.margin.top, bottom: label.margin.bottom },\n            horizontalAlignment: label.horizontalAlignment, verticalAlignment: label.verticalAlignment,\n            alignment: ((object instanceof Connector) ? label.alignment : undefined)\n        };\n        return { annotations: annotations };\n    };\n    /** @private */\n    CommandHandler.prototype.getPortChanges = function (object, port) {\n        var index = findObjectIndex(object, port.id, false);\n        var ports = {};\n        ports[index] = { offset: port.offset };\n        return { ports: ports };\n    };\n    /** @private */\n    CommandHandler.prototype.labelRotate = function (object, label, currentPosition, selector) {\n        var oldValues;\n        var changedvalues;\n        oldValues = this.getAnnotationChanges(object, label);\n        var matrix = identityMatrix();\n        var rotateAngle = label.rotateAngle;\n        var labelWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var angle = findAngle({ x: labelWrapper.offsetX, y: labelWrapper.offsetY }, currentPosition) + 90;\n        var snapAngle = this.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        if (label instanceof PathAnnotation && label.segmentAngle) {\n            var getPointloop = getAnnotationPosition(object.intermediatePoints, label, object.wrapper.bounds);\n            angle -= getPointloop.angle;\n        }\n        angle = (angle + 360) % 360;\n        label.rotateAngle += angle - (label.rotateAngle + labelWrapper.parentTransform);\n        label.margin.bottom += (labelWrapper.verticalAlignment === 'Top') ? (-label.height / 2) : ((labelWrapper.verticalAlignment === 'Bottom') ? (label.height / 2) : 0);\n        label.margin.right += (labelWrapper.horizontalAlignment === 'Left') ? (-label.width / 2) : ((labelWrapper.horizontalAlignment === 'Right') ? (label.width / 2) : 0);\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        else {\n            label.horizontalAlignment = label.verticalAlignment = 'Center';\n        }\n        selector.wrapper.rotateAngle = selector.rotateAngle = label.rotateAngle;\n        changedvalues = this.getAnnotationChanges(object, label);\n        if (object instanceof Node) {\n            this.diagram.nodePropertyChange(object, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(object, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(object);\n    };\n    /** @private */\n    CommandHandler.prototype.labelResize = function (node, label, deltaWidth, deltaHeight, pivot, selector) {\n        var oldValues;\n        var changedvalues;\n        var rotateAngle;\n        oldValues = this.getAnnotationChanges(node, label);\n        var textElement = selector.wrapper.children[0];\n        if ((deltaWidth && deltaWidth !== 1) || (deltaHeight && deltaHeight !== 1)) {\n            var newMat = identityMatrix();\n            var matrix = identityMatrix();\n            rotateMatrix(newMat, -node.rotateAngle, node.offsetX, node.offsetY);\n            rotateAngle = ((textElement.rotateAngle + ((node instanceof Node) ? node.rotateAngle : 0)) + 360) % 360;\n            rotateMatrix(matrix, -rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, deltaWidth, deltaHeight, pivot.x, pivot.y);\n            rotateMatrix(matrix, rotateAngle, pivot.x, pivot.y);\n            var newPosition = transformPointByMatrix(matrix, { x: textElement.offsetX, y: textElement.offsetY });\n            var height = textElement.actualSize.height * deltaHeight;\n            var width = textElement.actualSize.width * deltaWidth;\n            var shape = this.findTarget(textElement, node);\n            if (shape instanceof PathAnnotation) {\n                this.updatePathAnnotationOffset(node, label, 0, 0, newPosition, new Size(width, height));\n            }\n            else {\n                var bounds = cornersPointsBeforeRotation(node.wrapper);\n                newPosition = transformPointByMatrix(newMat, newPosition);\n                newPosition.x = newPosition.x - textElement.margin.left + textElement.margin.right;\n                newPosition.y = newPosition.y - textElement.margin.top + textElement.margin.bottom;\n                newPosition.y += (shape.verticalAlignment === 'Top') ? (-height / 2) : ((shape.verticalAlignment === 'Bottom') ? (height / 2) : 0);\n                newPosition.x += (shape.horizontalAlignment === 'Left') ? (-width / 2) : ((shape.horizontalAlignment === 'Right') ? (width / 2) : 0);\n                var offsetx = bounds.width / (newPosition.x - bounds.x);\n                var offsety = bounds.height / (newPosition.y - bounds.y);\n                if (width > 1) {\n                    shape.width = width;\n                    shape.offset.x = 1 / offsetx;\n                }\n                if (height > 1) {\n                    shape.height = height;\n                    shape.offset.y = 1 / offsety;\n                }\n            }\n        }\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        changedvalues = this.getAnnotationChanges(node, label);\n        if (node instanceof Node) {\n            this.diagram.nodePropertyChange(node, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(node, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(node);\n    };\n    /** @private */\n    CommandHandler.prototype.getSubProcess = function (source) {\n        var selector = { nodes: [], connectors: [] };\n        var process;\n        if (source instanceof Node) {\n            process = source.processId;\n        }\n        else if (source && source.nodes && (source.nodes.length)\n            && source.nodes[0].processId) {\n            process = source.nodes[0].processId;\n        }\n        if (process) {\n            selector.nodes.push(clone(this.diagram.nameTable[process]));\n            return selector;\n        }\n        return selector;\n    };\n    /**   @private  */\n    CommandHandler.prototype.checkBoundaryConstraints = function (tx, ty, nodeBounds) {\n        var pageSettings = this.diagram.pageSettings;\n        var boundaryConstraints = this.diagram.pageSettings.boundaryConstraints;\n        var scroller = this.diagram.scroller;\n        if (boundaryConstraints === 'Page' || boundaryConstraints === 'Diagram') {\n            var selectorBounds = !nodeBounds ? this.diagram.selectedItems.wrapper.bounds : undefined;\n            var width = boundaryConstraints === 'Page' ? pageSettings.width : scroller.viewPortWidth;\n            var height = boundaryConstraints === 'Page' ? pageSettings.height : scroller.viewPortHeight;\n            var bounds = nodeBounds;\n            var right = (nodeBounds ? bounds.right : selectorBounds.right) + (tx || 0);\n            var left = (nodeBounds ? bounds.left : selectorBounds.left) + (tx || 0);\n            var top_2 = (nodeBounds ? bounds.top : selectorBounds.top) + (ty || 0);\n            var bottom = (nodeBounds ? bounds.bottom : selectorBounds.bottom) + (ty || 0);\n            if (right <= width && left >= 0\n                && bottom <= height && top_2 >= 0) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    };\n    //interfaces\n    /** @private */\n    CommandHandler.prototype.dragSelectedObjects = function (tx, ty) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        if (this.checkBoundaryConstraints(tx, ty)) {\n            this.diagram.diagramActions = this.diagram.diagramActions | (DiagramAction.PreventZIndexOnDragging | DiagramAction.DragUsingMouse);\n            var actualObject = this.diagram.selectedObject.actualObject;\n            if ((actualObject && actualObject instanceof Node && actualObject.isLane &&\n                canLaneInterchange(actualObject, this.diagram)) || (!actualObject || !actualObject.isLane)) {\n                this.diagram.drag(obj, tx, ty);\n            }\n            this.diagram.diagramActions = this.diagram.diagramActions & ~(DiagramAction.PreventZIndexOnDragging | DiagramAction.DragUsingMouse);\n            this.diagram.refreshCanvasLayers();\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleSelectedItems = function (sx, sy, pivot) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n            this.state.backup.width = obj.width;\n            this.state.backup.height = obj.height;\n            this.state.backup.pivot = pivot;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.scale(obj, sx, sy, pivot);\n    };\n    /** @private */\n    CommandHandler.prototype.rotateSelectedItems = function (angle) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.angle = obj.rotateAngle;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.rotate(obj, angle);\n    };\n    /** @private */\n    CommandHandler.prototype.hasSelection = function () {\n        return hasSelection(this.diagram);\n    };\n    /** @private */\n    CommandHandler.prototype.isSelected = function (element) {\n        return isSelected(this.diagram, element);\n    };\n    /**\n     * initExpand is used for layout expand and collapse interaction\n     */\n    CommandHandler.prototype.initExpand = function (args) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        var node = (args.target || args.source);\n        var oldValues = { isExpanded: node.isExpanded };\n        node.isExpanded = !node.isExpanded;\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.diagramActions |= DiagramAction.PreventIconsUpdate;\n        this.diagram.nodePropertyChange(node, oldValues, { isExpanded: node.isExpanded });\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.PreventIconsUpdate;\n        this.diagram.preventNodesUpdate = false;\n        for (var _i = 0, _a = this.diagram.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            var view = this.diagram.views[temp];\n            if (!(view instanceof Diagram)) {\n                this.diagram.refreshCanvasDiagramLayer(view);\n            }\n        }\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.expandNode = function (node, diagram) {\n        var animation;\n        var objects;\n        var preventNodesUpdate = this.diagram.preventNodesUpdate;\n        var expand = node.isExpanded;\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.preventConnectorsUpdate = true;\n        this.expandCollapse(node, expand, this.diagram);\n        node.isExpanded = expand;\n        this.diagram.layout.fixedNode = node.id;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation && this.diagram.organizationalChartModule) {\n            this.diagram.organizationalChartModule.isAnimation = true;\n        }\n        this.diagram.blazorActions = BlazorAction.expandNode;\n        objects = this.diagram.doLayout();\n        this.diagram.blazorActions = BlazorAction.Default;\n        this.diagram.preventNodesUpdate = preventNodesUpdate;\n        this.diagram.preventConnectorsUpdate = false;\n        if (this.diagram.layoutAnimateModule && this.diagram.organizationalChartModule) {\n            this.diagram.allowServerDataBinding = false;\n            this.layoutAnimateModule.expand(this.diagram.layout.enableAnimation, objects, node, this.diagram);\n            this.diagram.allowServerDataBinding = true;\n        }\n        else {\n            var arg = {\n                element: cloneBlazorObject(clone(node)), state: (node.isExpanded) ? true : false\n            };\n            this.triggerEvent(DiagramEvent.expandStateChange, arg);\n            if (this.diagram.lineRoutingModule && this.diagram.constraints & DiagramConstraints.LineRouting) {\n                this.diagram.resetSegments();\n            }\n        }\n        return objects;\n    };\n    CommandHandler.prototype.getparentexpand = function (target, diagram, visibility, connector) {\n        var boolean;\n        for (var i = 0; i < target.inEdges.length; i++) {\n            var newConnector = diagram.nameTable[target.inEdges[i]];\n            var previousNode = diagram.nameTable[newConnector.sourceID];\n            if (previousNode.isExpanded && !visibility && previousNode.id !== connector.sourceID && newConnector.visible) {\n                return false;\n            }\n            else {\n                boolean = true;\n            }\n        }\n        return boolean;\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    CommandHandler.prototype.expandCollapse = function (source, visibility, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            var value = this.getparentexpand(target, diagram, visibility, connector);\n            connector.visible = visibility;\n            var oldValues = {\n                visible: target.visible,\n                style: { opacity: target.wrapper.style.opacity }\n            };\n            var newValues = {\n                visible: target.visible,\n                style: { opacity: target.wrapper.style.opacity }\n            };\n            if (value) {\n                if (target.isExpanded) {\n                    this.expandCollapse(target, visibility, diagram);\n                }\n                target.visible = visibility;\n                target.style.opacity = (this.diagram.layoutAnimateModule &&\n                    this.diagram.layout.enableAnimation && visibility) ? 0.1 : target.style.opacity;\n                diagram.nodePropertyChange(target, oldValues, newValues);\n            }\n            diagram.connectorPropertyChange(connector, oldValues, newValues);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateNodeDimension = function (obj, rect) {\n        if (obj instanceof Node) {\n            obj.offsetX = rect.x + rect.width / 2;\n            obj.offsetY = rect.y + rect.height / 2;\n            obj.width = rect.width;\n            obj.height = rect.height;\n            obj.wrapper.children[0].canMeasurePath = true;\n            this.diagram.nodePropertyChange(obj, {}, {\n                width: rect.width, height: rect.height, offsetX: obj.offsetX,\n                offsetY: obj.offsetY\n            });\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateConnectorPoints = function (obj, rect) {\n        if (obj instanceof Connector) {\n            this.diagram.connectorPropertyChange(obj, {}, {\n                targetPoint: obj.targetPoint\n            });\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelectedNodeProperties = function (object) {\n        if (this.diagram.lineRoutingModule && (this.diagram.constraints & DiagramConstraints.LineRouting)) {\n            var previousNodeObject = [];\n            var previousConnectorObject = [];\n            var updateNodeObject = [];\n            var updateConnectorObject = [];\n            var changeNodes = [];\n            var changeConnectors = [];\n            this.diagram.protectPropertyChange(true);\n            var objects = [];\n            var connectors = [];\n            var actualObject = this.diagram.selectedObject.actualObject;\n            var helperObject = this.diagram.selectedObject.helperObject;\n            if (helperObject && actualObject) {\n                var offsetX = (helperObject.offsetX - actualObject.offsetX);\n                var offsetY = (helperObject.offsetY - actualObject.offsetY);\n                var width = (helperObject.width - actualObject.width);\n                var height = (helperObject.height - actualObject.height);\n                var rotateAngle = (helperObject.rotateAngle - actualObject.rotateAngle);\n                if (this.diagram.selectedItems.nodes.length + this.diagram.selectedItems.connectors.length > 0) {\n                    this.diagram.selectedItems.wrapper.rotateAngle = this.diagram.selectedItems.rotateAngle = helperObject.rotateAngle;\n                }\n                if (actualObject instanceof Node &&\n                    actualObject.shape.type !== 'SwimLane' && !actualObject.isLane && !actualObject.isPhase && !actualObject.isHeader) {\n                    if (actualObject.offsetX !== actualObject.wrapper.offsetX || actualObject.offsetY !== actualObject.wrapper.offsetY ||\n                        actualObject.width !== actualObject.wrapper.width || actualObject.height !== actualObject.wrapper.height ||\n                        actualObject.rotateAngle !== actualObject.wrapper.rotateAngle) {\n                        if (isBlazor()) {\n                            previousNodeObject.push(cloneObject(actualObject, undefined, undefined, true));\n                        }\n                        actualObject.offsetX += offsetX;\n                        actualObject.offsetY += offsetY;\n                        actualObject.width += width;\n                        actualObject.height += height;\n                        actualObject.rotateAngle += rotateAngle;\n                        this.diagram.nodePropertyChange(actualObject, {}, {\n                            offsetX: actualObject.offsetX, offsetY: actualObject.offsetY,\n                            width: actualObject.width, height: actualObject.height, rotateAngle: actualObject.rotateAngle\n                        });\n                        if (isBlazor()) {\n                            updateNodeObject.push(cloneObject(actualObject, undefined, undefined, true));\n                        }\n                    }\n                    objects = this.diagram.spatialSearch.findObjects(actualObject.wrapper.outerBounds);\n                }\n                else if (actualObject instanceof Selector) {\n                    for (var i = 0; i < actualObject.nodes.length; i++) {\n                        var node = actualObject.nodes[i];\n                        if (node instanceof Node && node.shape.type !== 'SwimLane' && !node.isLane\n                            && !node.isPhase && !node.isHeader) {\n                            node.offsetX += offsetX;\n                            node.offsetY += offsetY;\n                            node.width += width;\n                            node.height += height;\n                            node.rotateAngle += rotateAngle;\n                            this.diagram.nodePropertyChange(node, {}, {\n                                offsetX: node.offsetX, offsetY: node.offsetY,\n                                width: node.width, height: node.height, rotateAngle: node.rotateAngle\n                            });\n                            objects = objects.concat(this.diagram.spatialSearch.findObjects(actualObject.wrapper.outerBounds));\n                        }\n                    }\n                }\n            }\n            else {\n                if (object instanceof Connector) {\n                    objects.push(object);\n                }\n                else if (object instanceof Selector && object.connectors.length) {\n                    objects = objects.concat(object.connectors);\n                }\n            }\n            for (var i = 0; i < objects.length; i++) {\n                if (objects[i] instanceof Connector && connectors.indexOf(objects[i].id) === -1) {\n                    connectors.push(objects[i].id);\n                }\n            }\n            this.diagram.lineRoutingModule.renderVirtualRegion(this.diagram, true);\n            for (var i = 0; i < connectors.length; i++) {\n                var connector = this.diagram.nameTable[connectors[i]];\n                if (connector instanceof Connector && connector.type === 'Orthogonal') {\n                    if (isBlazor()) {\n                        previousConnectorObject.push(cloneObject(connector, undefined, undefined, true));\n                    }\n                    this.diagram.lineRoutingModule.refreshConnectorSegments(this.diagram, connector, true);\n                    if (isBlazor()) {\n                        updateConnectorObject.push(cloneObject(connector, undefined, undefined, true));\n                    }\n                }\n            }\n            this.updateSelector();\n            if (isBlazor()) {\n                this.getObjectChanges(previousNodeObject, updateNodeObject, changeNodes);\n                this.getObjectChanges(previousConnectorObject, updateConnectorObject, changeConnectors);\n                var blazorInterop = 'sfBlazor';\n                var blazor = 'Blazor';\n                var diagramObject = { nodes: changeNodes, connectors: changeConnectors };\n                if (window && window[blazor] && (changeConnectors.length + changeNodes.length)) {\n                    var obj = { 'methodName': 'UpdateBlazorProperties', 'diagramobj': diagramObject };\n                    window[blazorInterop].updateBlazorProperties(obj, this.diagram);\n                }\n            }\n            this.diagram.protectPropertyChange(false);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.diagram.drawSelectionRectangle(x, y, width, height);\n    };\n    /** @private */\n    CommandHandler.prototype.startGroupAction = function () {\n        this.diagram.startGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.endGroupAction = function () {\n        this.diagram.endGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.removeChildFromBPmn = function (child, newTarget, oldTarget) {\n        var obj = this.diagram.nameTable[child.id] || child.nodes[0];\n        if (oldTarget) {\n            if ((obj) && obj.processId && obj.processId === oldTarget.wrapper.id) {\n                var node = clone(obj);\n                node.processId = obj.processId;\n                this.diagram.startGroupAction();\n                var edges = [];\n                edges = edges.concat(obj.outEdges, obj.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    var connector = this.diagram.nameTable[edges[i]];\n                    if (connector) {\n                        this.diagram.remove(connector);\n                    }\n                }\n                var nodeCollection = void 0;\n                nodeCollection = (this.diagram.nameTable[obj.processId].shape.activity.subProcess.processes) || [];\n                nodeCollection.splice(nodeCollection.indexOf((obj).id), 1);\n                this.diagram.bpmnModule.removeChildFromBPMN(this.diagram.nameTable[obj.processId].wrapper, (obj).id);\n                this.diagram.nameTable[(obj).id].processId = '';\n                obj.offsetX = obj.wrapper.offsetX;\n                obj.offsetY = obj.wrapper.offsetY;\n                var undoElement = clone(obj);\n                var entry = {\n                    type: 'PositionChanged', redoObject: { nodes: [undoElement] }, undoObject: { nodes: [node] }, category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n                this.diagram.endGroupAction();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.isDroppable = function (source, targetNodes) {\n        var node = this.diagram.nameTable[source.id] || source.nodes[0];\n        if (node) {\n            if ((!isBlazor() && node.shape.shape === 'TextAnnotation') ||\n                (isBlazor() && node.shape.bpmnShape === 'TextAnnotation')) {\n                return true;\n            }\n            if (node && node.shape.type === 'Bpmn') {\n                if ((node.processId === targetNodes.id) || (node.id === targetNodes.processId) ||\n                    targetNodes.shape.type === 'Bpmn'\n                        && targetNodes.shape.activity.subProcess.collapsed) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderHighlighter = function (args, connectHighlighter, source) {\n        var bounds = new Rect();\n        if (args.target instanceof Node || (connectHighlighter && args.source instanceof Node)) {\n            var tgt = connectHighlighter ? args.source : args.target;\n            var tgtWrap = connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            var target = this.findTarget(tgtWrap, tgt, source, true);\n            var element = void 0;\n            if (target instanceof BpmnSubEvent) {\n                var portId = target.id;\n                var node = args.target;\n                var parent_6 = node.wrapper.children[0].children[0].children[2];\n                for (var _i = 0, _a = parent_6.children; _i < _a.length; _i++) {\n                    var child = _a[_i];\n                    if (child.id === node.id + '_' + portId) {\n                        element = child.children[0];\n                        break;\n                    }\n                }\n            }\n            else {\n                element = target instanceof Node ?\n                    target.wrapper : connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            }\n            this.diagram.renderHighlighter(element);\n        }\n    };\n    //additional events\n    /** @private */\n    CommandHandler.prototype.mouseOver = function (source, target, position) {\n        //mouse over\n        //returns whether the source can move over the target or not\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.snapPoint = function (startPoint, endPoint, tx, ty) {\n        var obj = this.diagram.selectedItems;\n        var point;\n        var towardsLeft = endPoint.x < startPoint.x;\n        var towardsTop = endPoint.y < startPoint.y;\n        point = { x: tx, y: ty };\n        var snappedPoint = point;\n        if (this.snappingModule) {\n            snappedPoint = this.diagram.snappingModule.snapPoint(this.diagram, obj, towardsLeft, towardsTop, point, startPoint, endPoint);\n        }\n        return snappedPoint;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeSnap = function () {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) && this.snappingModule) {\n            this.snappingModule.removeGuidelines(this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dropAnnotation = function (source, target) {\n        var node = (source instanceof Node) ? source : source.nodes[0];\n        if (this.diagram.bpmnModule && target.shape.type === 'Bpmn'\n            && ((!isBlazor() && node.shape.shape === 'TextAnnotation') ||\n                (isBlazor() && node.shape.bpmnShape === 'TextAnnotation'))) {\n            var hasTarget = 'hasTarget';\n            node[hasTarget] = target.id;\n            node.shape.annotation.nodeId = target.id;\n            if (!this.diagram.currentSymbol) {\n                this.diagram.addTextAnnotation(node.shape.annotation, target);\n                node.shape.annotation.nodeId = '';\n                this.diagram.remove(node);\n            }\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    ;\n    /** @private */\n    CommandHandler.prototype.drop = function (source, target, position) {\n        //drop\n        if (this.diagram.bpmnModule) {\n            this.diagram.bpmnModule.dropBPMNchild(target, (source instanceof Node) ? source : source.nodes[0], this.diagram);\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addHistoryEntry = function (entry) {\n        this.diagram.addHistoryEntry(entry);\n    };\n    /** @private */\n    CommandHandler.prototype.align = function (objects, option, type) {\n        if (objects.length > 0) {\n            var i = 0;\n            objects[0] = this.diagram.nameTable[objects[0].id] || objects[0];\n            var bounds = (type === 'Object') ? getBounds(objects[0].wrapper) : this.diagram.selectedItems.wrapper.bounds;\n            var undoObj = { nodes: [], connectors: [] };\n            var redoObj = { nodes: [], connectors: [] };\n            for (i = ((type === 'Object') ? (i + 1) : i); i < objects.length; i++) {\n                var tx = 0;\n                var ty = 0;\n                objects[i] = this.diagram.nameTable[objects[i].id] || objects[i];\n                var objectBounds = getBounds(objects[i].wrapper);\n                if (option === 'Left') {\n                    tx = bounds.left + objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Right') {\n                    tx = bounds.right - objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Top') {\n                    ty = bounds.top + objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Bottom') {\n                    ty = bounds.bottom - objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Center') {\n                    tx = bounds.center.x - objectBounds.center.x;\n                }\n                else if (option === 'Middle') {\n                    ty = bounds.center.y - objectBounds.center.y;\n                }\n                undoObj = this.storeObject(undoObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoObj = this.storeObject(redoObj, objects[i]);\n            }\n            undoObj = clone(undoObj);\n            redoObj = clone(redoObj);\n            var entry = {\n                type: 'Align', category: 'Internal',\n                undoObject: cloneObject(undoObj), redoObject: cloneObject(redoObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.distribute = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var j = 0;\n            var rect = new Rect();\n            var b = [];\n            var temp = void 0;\n            var right = 0;\n            var left = 0;\n            var top_3 = 0;\n            var bottom = 0;\n            var center = 0;\n            var middle = 0;\n            var btt = 0;\n            var sum = 0;\n            var undoSelectorObj = { nodes: [], connectors: [] };\n            var redoSelectorObj = { nodes: [], connectors: [] };\n            for (i = 0; i < objects.length; i++) {\n                objects[i] = this.diagram.nameTable[objects[i].id] || objects[i];\n            }\n            objects = sort(objects, option);\n            for (i = 1; i < objects.length; i++) {\n                right = right + objects[i].wrapper.bounds.topRight.x - objects[i - 1].wrapper.bounds.topRight.x;\n                left = left + objects[i].wrapper.bounds.topLeft.x - objects[i - 1].wrapper.bounds.topLeft.x;\n                top_3 = top_3 + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.topRight.y;\n                bottom = bottom + objects[i].wrapper.bounds.bottomRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n                center = center + objects[i].wrapper.bounds.center.x - objects[i - 1].wrapper.bounds.center.x;\n                middle = middle + objects[i].wrapper.bounds.center.y - objects[i - 1].wrapper.bounds.center.y;\n                btt = btt + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n            }\n            for (i = 1; i < objects.length - 1; i++) {\n                var tx = 0;\n                var ty = 0;\n                var prev = getBounds(objects[i - 1].wrapper);\n                var current = getBounds(objects[i].wrapper);\n                if (option === 'RightToLeft' || option === 'Center') {\n                    tx = prev.center.x - current.center.x + (center / (objects.length - 1));\n                }\n                else if (option === 'Right') {\n                    tx = prev.topRight.x - current.topRight.x + (right / (objects.length - 1));\n                }\n                else if (option === 'Left') {\n                    tx = prev.topLeft.x - current.topLeft.x + (left / (objects.length - 1));\n                }\n                else if (option === 'Middle') {\n                    ty = prev.center.y - current.center.y + (middle / (objects.length - 1));\n                }\n                else if (option === 'Top') {\n                    ty = prev.topRight.y - current.topRight.y + (top_3 / (objects.length - 1));\n                }\n                else if (option === 'Bottom') {\n                    ty = prev.bottomRight.y - current.bottomRight.y + (bottom / (objects.length - 1));\n                }\n                else if (option === 'BottomToTop') {\n                    ty = prev.bottomRight.y - current.topRight.y + (btt / (objects.length - 1));\n                }\n                undoSelectorObj = this.storeObject(undoSelectorObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoSelectorObj = this.storeObject(redoSelectorObj, objects[i]);\n            }\n            undoSelectorObj = clone(undoSelectorObj);\n            redoSelectorObj = clone(redoSelectorObj);\n            var entry = {\n                type: 'Distribute', category: 'Internal',\n                undoObject: cloneObject(undoSelectorObj), redoObject: cloneObject(redoSelectorObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sameSize = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var pivot = void 0;\n            pivot = { x: 0.5, y: 0.5 };\n            objects[0] = this.diagram.nameTable[objects[0].id] || objects[0];\n            var bounds = getBounds(objects[0].wrapper);\n            var undoObject = { nodes: [], connectors: [] };\n            var redoObject = { nodes: [], connectors: [] };\n            for (i = 1; i < objects.length; i++) {\n                objects[i] = this.diagram.nameTable[objects[i].id] || objects[0];\n                var rect = getBounds(objects[i].wrapper);\n                var sw = 1;\n                var sh = 1;\n                if (option === 'Width') {\n                    sw = bounds.width / rect.width;\n                }\n                else if (option === 'Height') {\n                    sh = bounds.height / rect.height;\n                }\n                else if (option === 'Size') {\n                    sw = bounds.width / rect.width;\n                    sh = bounds.height / rect.height;\n                }\n                undoObject = this.storeObject(undoObject, objects[i]);\n                this.scale(objects[i], sw, sh, pivot);\n                redoObject = this.storeObject(redoObject, objects[i]);\n            }\n            this.diagram.updateSelector();\n            undoObject = clone(undoObject);\n            redoObject = clone(redoObject);\n            var entry = {\n                type: 'Sizing', category: 'Internal',\n                undoObject: cloneObject(undoObject), redoObject: cloneObject(redoObject)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    CommandHandler.prototype.storeObject = function (selectorObject, obj) {\n        if (obj instanceof Node) {\n            selectorObject.nodes.push(clone(obj));\n        }\n        else {\n            selectorObject.connectors.push(clone(obj));\n        }\n        return selectorObject;\n    };\n    /** @private */\n    CommandHandler.prototype.scroll = function (scrollX, scrollY, focusPoint) {\n        var panx = canPanX(this.diagram);\n        var pany = canPanY(this.diagram);\n        this.diagram.pan((scrollX = panx ? scrollX : 0) * this.diagram.scroller.currentZoom, (scrollY = pany ? scrollY : 0) * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawHighlighter = function (element) {\n        this.diagram.renderHighlighter(element.wrapper);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeHighlighter = function () {\n        this.diagram.clearHighlighter();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderContainerHelper = function (node) {\n        return renderContainerHelper(this.diagram, node);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.isParentAsContainer = function (node, isChild) {\n        return checkParentAsContainer(this.diagram, node, isChild);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dropChildToContainer = function (parent, node) {\n        addChildToContainer(this.diagram, parent, node);\n    };\n    /** @private */\n    CommandHandler.prototype.checkSelection = function (selector, corner) {\n        var node;\n        var wrapper;\n        var child;\n        var index;\n        var shape;\n        if (selector.nodes.length === 1 && selector.connectors.length === 0) {\n            if (checkParentAsContainer(this.diagram, selector.nodes[0], true)) {\n                node = (selector.nodes[0].shape === 'SwimLane') ? selector.nodes[0] :\n                    this.diagram.nameTable[selector.nodes[0].parentId];\n                var child_1 = selector.nodes[0];\n                if (node.shape.type === 'SwimLane') {\n                    var orientation_1 = (node.shape.orientation === 'Horizontal') ? true : false;\n                    if ((child_1.isPhase && ((orientation_1 && corner === 'ResizeSouth') || (!orientation_1 && corner === 'ResizeEast'))) ||\n                        (child_1.isLane && ((orientation_1 && corner === 'ResizeEast') || (!orientation_1 && corner === 'ResizeSouth')))) {\n                        swimLaneSelection(this.diagram, node, corner);\n                    }\n                }\n                else if (node.container.type === 'Grid') {\n                    if (((node.container.orientation === 'Horizontal' && child_1.rowIndex === 1) ||\n                        (node.container.orientation === 'Vertical' && child_1.rowIndex > 0 && child_1.columnIndex > 0))) {\n                        if (corner === 'ResizeSouth') {\n                            for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                var obj = this.diagram.nodes[i];\n                                if (obj.rowIndex === node.rows.length - 1 && obj.columnIndex === 0) {\n                                    this.select(obj);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (corner === 'ResizeEast') {\n                            for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                var obj = this.diagram.nodes[i];\n                                if (obj.rowIndex === 1 && obj.columnIndex === node.columns.length - 1) {\n                                    this.select(obj);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                swimLaneSelection(this.diagram, selector.nodes[0], corner);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.zoom = function (scale, scrollX, scrollY, focusPoint) {\n        this.diagram.scroller.zoom(scale, scrollX * this.diagram.scroller.currentZoom, scrollY * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    return CommandHandler;\n}());\nexport { CommandHandler };\n","import { Rect } from '../primitives/rect';\nimport { RealAction } from '../enum/enum';\nimport { identityMatrix, scaleMatrix, translateMatrix, transformPointByMatrix, multiplyMatrix } from '../primitives/matrix';\nimport { updateRuler } from '../ruler/ruler';\nimport { canZoom, canPan, canVitualize } from './../utility/constraints-util';\n/**\n */\nvar DiagramScroller = /** @class */ (function () {\n    function DiagramScroller(diagram) {\n        /** @private */\n        this.transform = { tx: 0, ty: 0, scale: 1 };\n        /**   @private  */\n        this.oldCollectionObjects = [];\n        /**   @private  */\n        this.removeCollection = [];\n        this.vPortWidth = 0;\n        this.vPortHeight = 0;\n        this.currentZoomFActor = 1;\n        this.hOffset = 0;\n        this.vOffset = 0;\n        this.scrolled = false;\n        this.hScrollSize = 0;\n        this.vScrollSize = 0;\n        this.diagram = diagram;\n        this.objects = [];\n        this.transform = diagram.scroller ? diagram.scroller.transform : { tx: 0, ty: 0, scale: 1 };\n        this.vPortWidth = diagram.scrollSettings.viewPortWidth;\n        this.vPortHeight = diagram.scrollSettings.viewPortHeight;\n        this.currentZoomFActor = diagram.scrollSettings.currentZoom;\n        this.hOffset = diagram.scrollSettings.horizontalOffset;\n        this.vOffset = diagram.scrollSettings.verticalOffset;\n    }\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortHeight\", {\n        /** @private */\n        get: function () {\n            return this.vPortHeight;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortHeight = offset;\n            this.diagram.scrollSettings.viewPortHeight = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"currentZoom\", {\n        /** @private */\n        get: function () {\n            return this.currentZoomFActor;\n        },\n        /** @private */\n        set: function (offset) {\n            this.currentZoomFActor = offset;\n            this.diagram.scrollSettings.currentZoom = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortWidth\", {\n        /** @private */\n        get: function () {\n            return this.vPortWidth;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortWidth = offset;\n            this.diagram.scrollSettings.viewPortWidth = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"horizontalOffset\", {\n        /** @private */\n        get: function () {\n            return this.hOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.hOffset = offset;\n            if (Math.abs(this.hOffset - this.diagram.scrollSettings.horizontalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.hScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.horizontalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"verticalOffset\", {\n        /** @private */\n        get: function () {\n            return this.vOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vOffset = offset;\n            if (Math.abs(this.vOffset - this.diagram.scrollSettings.verticalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.vScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.verticalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramScroller.prototype.updateScrollOffsets = function (hOffset, vOffset) {\n        var offsetX = 0;\n        var offsetY = 0;\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        offsetX = Math.max(0, hOffset - pageBounds.left);\n        offsetY = Math.max(0, vOffset - pageBounds.top);\n        if (hOffset !== undefined && vOffset !== undefined) {\n            this.horizontalOffset = offsetX;\n            this.verticalOffset = offsetY;\n            this.diagram.setOffset(offsetX, offsetY);\n        }\n        else {\n            this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n    };\n    /** @private */\n    DiagramScroller.prototype.setScrollOffset = function (hOffset, vOffset) {\n        this.scrolled = false;\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = -pageBounds.left;\n        var y = -pageBounds.top;\n        var set = false;\n        var viewWidth = this.viewPortWidth * this.currentZoom;\n        var viewHeight = this.viewPortHeight * this.currentZoom;\n        var newX = x - hOffset;\n        if (newX !== this.horizontalOffset) {\n            if (x < this.horizontalOffset) {\n                if (this.horizontalOffset > newX) {\n                    this.horizontalOffset -= hOffset;\n                }\n                else {\n                    this.horizontalOffset = newX;\n                }\n                set = true;\n            }\n            var right = Math.max(pageBounds.right + this.vScrollSize, viewWidth);\n            if (!set && right < -newX + this.viewPortWidth) {\n                var actualRight = -newX + viewWidth - this.vScrollSize;\n                var currentRight = -this.horizontalOffset + viewWidth - this.vScrollSize;\n                if (actualRight < currentRight) {\n                    //define\n                    this.horizontalOffset = newX;\n                }\n                else {\n                    if (actualRight - pageBounds.right > actualRight - currentRight) {\n                        this.horizontalOffset = newX;\n                    }\n                    else {\n                        this.horizontalOffset = -(pageBounds.right + this.vScrollSize - viewWidth);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.horizontalOffset = x - hOffset;\n            }\n        }\n        set = false;\n        //vertical offset\n        var newY = y - vOffset;\n        if (newY !== this.verticalOffset) {\n            if (y < this.verticalOffset) {\n                if (this.verticalOffset > newY) {\n                    this.verticalOffset -= vOffset;\n                }\n                else {\n                    this.verticalOffset = newY;\n                }\n                set = true;\n            }\n            var bottom = Math.max(pageBounds.bottom + this.hScrollSize, viewHeight);\n            if (!set && bottom < -newY + viewHeight) {\n                var actualBottom = -newY + viewHeight - this.hScrollSize;\n                var currentBottom = -this.verticalOffset + viewHeight - this.hScrollSize;\n                if (actualBottom < currentBottom) {\n                    //define\n                    this.verticalOffset = newY;\n                }\n                else {\n                    if (actualBottom - pageBounds.bottom > actualBottom - currentBottom) {\n                        this.verticalOffset = newY;\n                    }\n                    else {\n                        this.verticalOffset = -(pageBounds.bottom + this.hScrollSize - viewHeight);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.verticalOffset = y - vOffset;\n            }\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n        this.setSize();\n    };\n    /** @private */\n    DiagramScroller.prototype.getObjects = function (coll1, coll2) {\n        var objects = [];\n        for (var i = 0; i < coll1.length; i++) {\n            var isExist = false;\n            for (var j = 0; j < coll2.length; j++) {\n                if (coll1[i] === coll2[j]) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isExist) {\n                objects.push(coll1[i]);\n            }\n        }\n        return objects;\n    };\n    /**   @private  */\n    DiagramScroller.prototype.virtualizeElements = function () {\n        var viewWidth = this.viewPortWidth / this.currentZoom;\n        var viewHeight = this.viewPortHeight / this.currentZoom;\n        var oObjects = this.diagram.spatialSearch.findObjects(new Rect(-this.horizontalOffset / this.currentZoom, -this.verticalOffset / this.currentZoom, viewWidth, viewHeight));\n        var oObjectsID = [];\n        for (var i = 0; i < oObjects.length; i++) {\n            oObjectsID.push(oObjects[i].id);\n        }\n        var newObjects = this.getObjects(oObjectsID, this.oldCollectionObjects);\n        if (this.oldCollectionObjects.length === 0) {\n            this.oldCollectionObjects = oObjectsID;\n        }\n        var removeObjects = this.getObjects(this.oldCollectionObjects, oObjectsID);\n        this.diagram.updateVirtualObjects(newObjects, false, removeObjects);\n        this.oldCollectionObjects = oObjectsID;\n    };\n    /** @private */\n    DiagramScroller.prototype.setSize = function () {\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = Math.min(pageBounds.x, -this.horizontalOffset);\n        var y = Math.min(pageBounds.y, -this.verticalOffset);\n        var difX = -this.horizontalOffset + this.viewPortWidth - pageBounds.right;\n        var difY = -this.verticalOffset + this.viewPortHeight - pageBounds.bottom;\n        var hScrollSize = this.scrollerWidth;\n        var vScrollSize = this.scrollerWidth;\n        if (-this.verticalOffset <= pageBounds.y && -this.verticalOffset + this.viewPortHeight >= pageBounds.bottom) {\n            vScrollSize = 0;\n        }\n        if (-this.horizontalOffset <= pageBounds.x && -this.horizontalOffset + this.viewPortWidth >= pageBounds.right) {\n            hScrollSize = 0;\n        }\n        this.hScrollSize = hScrollSize;\n        this.vScrollSize = vScrollSize;\n        var oldWidth = this.diagramWidth;\n        var oldHeight = this.diagramHeight;\n        this.diagramWidth = Math.max(pageBounds.right, -this.horizontalOffset + this.viewPortWidth - vScrollSize) - x;\n        this.diagramHeight = Math.max(pageBounds.bottom, -this.verticalOffset + this.viewPortHeight - hScrollSize) - y;\n        if (oldWidth !== this.diagramWidth || oldHeight !== this.diagramHeight) {\n            this.diagram.setSize(this.diagramWidth, this.diagramHeight);\n        }\n        this.diagram.transformLayers();\n        this.diagram.element.style.overflow = 'hidden';\n    };\n    /** @private */\n    DiagramScroller.prototype.setViewPortSize = function (width, height) {\n        this.viewPortWidth = width;\n        this.viewPortHeight = height;\n    };\n    /**\n     * To get page pageBounds\n     * @private\n     */\n    DiagramScroller.prototype.getPageBounds = function (boundingRect, region, hasPadding) {\n        var rect = new Rect();\n        var pageBounds;\n        var temp = 0;\n        if (region !== 'Content' && this.diagram.pageSettings.width !== null && this.diagram.pageSettings.height !== null) {\n            var width = this.diagram.pageSettings.width;\n            var height = this.diagram.pageSettings.height;\n            var negwidth = 0;\n            var negheight = 0;\n            if (this.diagram.pageSettings.multiplePage) {\n                rect = this.diagram.spatialSearch.getPageBounds(0, 0);\n                if (rect.right > width) {\n                    var x = Math.ceil(rect.right / width);\n                    width = width * x;\n                }\n                if (rect.bottom > height) {\n                    var x = Math.ceil(rect.bottom / height);\n                    height = height * x;\n                }\n                if (rect.left < 0 && Math.abs(rect.left) > negwidth) {\n                    var x = Math.ceil(Math.abs(rect.left) / this.diagram.pageSettings.width);\n                    negwidth = this.diagram.pageSettings.width * x;\n                }\n                if (rect.top < 0 && Math.abs(rect.top) > negheight) {\n                    var x = Math.ceil(Math.abs(rect.top) / this.diagram.pageSettings.height);\n                    negheight = this.diagram.pageSettings.height * x;\n                }\n            }\n            pageBounds = new Rect((-negwidth), (-negheight), width + negwidth, height + negheight);\n        }\n        else {\n            var origin = boundingRect ? undefined : 0;\n            pageBounds = this.diagram.spatialSearch.getPageBounds(origin, origin);\n        }\n        if (hasPadding) {\n            var scrollpadding = this.diagram.scrollSettings.padding;\n            pageBounds.x -= scrollpadding.left;\n            pageBounds.y -= scrollpadding.top;\n            pageBounds.width += (scrollpadding.left + scrollpadding.right);\n            pageBounds.height += (scrollpadding.top + scrollpadding.bottom);\n        }\n        return pageBounds;\n    };\n    /**\n     * To get page break when PageBreak is set as true\n     * @private\n     */\n    DiagramScroller.prototype.getPageBreak = function (pageBounds) {\n        var i = 0;\n        var j = 0;\n        var v = -1;\n        var collection = [];\n        var x1 = 0;\n        var x2 = 0;\n        var y1 = 0;\n        var y2 = 0;\n        var left = this.diagram.pageSettings.margin.left;\n        var right = this.diagram.pageSettings.margin.right;\n        var top = this.diagram.pageSettings.margin.top;\n        var bottom = this.diagram.pageSettings.margin.bottom;\n        var widthCount = 1;\n        var heightCount = 1;\n        var segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n        while (pageBounds.width > i) {\n            i = i + (this.diagram.pageSettings.width ? this.diagram.pageSettings.width : pageBounds.width);\n            if (i === this.diagram.pageSettings.width) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.left + left, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n            if (i < pageBounds.width) {\n                x1 = pageBounds.topLeft.x + this.diagram.pageSettings.width * widthCount;\n                y1 = pageBounds.topLeft.y + top;\n                x2 = pageBounds.bottomLeft.x + this.diagram.pageSettings.width * widthCount;\n                y2 = pageBounds.bottomLeft.y - bottom;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                widthCount++;\n            }\n            if (pageBounds.width === i) {\n                segment = {\n                    x1: pageBounds.right - right, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        while (pageBounds.height > j) {\n            j = j + (this.diagram.pageSettings.height ? this.diagram.pageSettings.height : pageBounds.height);\n            if (j === this.diagram.pageSettings.height) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.top + top\n                };\n                collection[++v] = segment;\n            }\n            if (j < pageBounds.height) {\n                x1 = pageBounds.topLeft.x + left;\n                y1 = pageBounds.topLeft.y + this.diagram.pageSettings.height * heightCount;\n                x2 = pageBounds.topRight.x - right;\n                y2 = pageBounds.topRight.y + this.diagram.pageSettings.height * heightCount;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                heightCount++;\n            }\n            if (pageBounds.height === j) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.bottom - bottom,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        return collection;\n    };\n    /** @private */\n    DiagramScroller.prototype.zoom = function (factor, deltaX, deltaY, focusPoint) {\n        if (canZoom(this.diagram) && factor !== 1 || (canPan(this.diagram) && factor === 1)) {\n            var matrix = identityMatrix();\n            scaleMatrix(matrix, this.currentZoom, this.currentZoom);\n            translateMatrix(matrix, this.horizontalOffset, this.verticalOffset);\n            focusPoint = focusPoint || {\n                x: (this.viewPortWidth / 2 - this.horizontalOffset) / this.currentZoom,\n                y: (this.viewPortHeight / 2 - this.verticalOffset) / this.currentZoom\n            };\n            focusPoint = transformPointByMatrix(matrix, focusPoint);\n            if ((this.currentZoom * factor) >= this.diagram.scrollSettings.minZoom &&\n                (this.currentZoom * factor) <= this.diagram.scrollSettings.maxZoom) {\n                this.currentZoom *= factor;\n                var pageBounds = this.getPageBounds(undefined, undefined, true);\n                pageBounds.x *= this.currentZoom;\n                pageBounds.y *= this.currentZoom;\n                //target Matrix\n                var targetMatrix = identityMatrix();\n                scaleMatrix(targetMatrix, factor, factor, focusPoint.x, focusPoint.y);\n                translateMatrix(targetMatrix, deltaX || 0, deltaY || 0);\n                multiplyMatrix(matrix, targetMatrix);\n                var newOffset = transformPointByMatrix(matrix, { x: 0, y: 0 });\n                if (factor === 1) {\n                    newOffset = this.applyScrollLimit(newOffset.x, newOffset.y);\n                }\n                this.transform = {\n                    tx: Math.max(newOffset.x, -pageBounds.left) / this.currentZoom,\n                    ty: Math.max(newOffset.y, -pageBounds.top) / this.currentZoom,\n                    scale: this.currentZoom\n                };\n                this.horizontalOffset = newOffset.x;\n                this.verticalOffset = newOffset.y;\n                this.setSize();\n                if (this.diagram.mode !== 'SVG' && canVitualize(this.diagram)) {\n                    this.diagram.scroller.virtualizeElements();\n                }\n                if (this.diagram.mode !== 'SVG' && !canVitualize(this.diagram)) {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.fitToPage = function (options) {\n        options = options || {};\n        var mode = options.mode;\n        var region = options.region;\n        var margin = options.margin || {};\n        var canZoomIn = options.canZoomIn;\n        var customBounds = options.customBounds;\n        margin.bottom = margin.bottom || 25;\n        margin.top = margin.top || 25;\n        margin.left = margin.left || 25;\n        margin.right = margin.right || 25;\n        var bounds = customBounds;\n        var factor;\n        var deltaX = -this.horizontalOffset;\n        var deltaY = -this.verticalOffset;\n        region = region ? region : 'PageSettings';\n        //fit mode\n        if ((region === 'PageSettings' && this.diagram.pageSettings.width && this.diagram.pageSettings.height)\n            || (this.diagram.nodes.length > 0 || this.diagram.connectors.length > 0)) {\n            mode = mode ? mode : 'Page';\n            if (region !== 'CustomBounds') {\n                bounds = this.getPageBounds(true, region, true);\n            }\n            var scale = { x: 0, y: 0 };\n            scale.x = (this.viewPortWidth - (margin.left + margin.right)) / (bounds.width);\n            scale.y = (this.viewPortHeight - (margin.top + margin.bottom)) / (bounds.height);\n            if (!canZoomIn && (((bounds.width - this.horizontalOffset) < this.viewPortWidth) &&\n                (bounds.height - this.verticalOffset) < this.viewPortHeight)) {\n                scale.x = Math.min(this.currentZoom, scale.x);\n                scale.y = Math.min(this.currentZoom, scale.y);\n            }\n            var zoomFactor = void 0;\n            var centerX = void 0;\n            var centerY = void 0;\n            switch (mode) {\n                case 'Width':\n                    zoomFactor = scale.x;\n                    factor = zoomFactor / this.currentZoom;\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY -= -this.verticalOffset * factor;\n                    deltaY = region !== 'CustomBounds' ? deltaY : deltaY - this.verticalOffset * factor;\n                    break;\n                case 'Height':\n                    zoomFactor = scale.y;\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = ((this.viewPortWidth - (bounds.width) * zoomFactor) / 2) - bounds.x * zoomFactor;\n                    centerY = ((this.viewPortHeight - (bounds.height) * zoomFactor) / 2) - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n                case 'Page':\n                    zoomFactor = Math.min(scale.x, scale.y);\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    centerY = (this.viewPortHeight - (bounds.height) * zoomFactor) / 2 - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n            }\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n        else {\n            factor = 1 / this.currentZoom;\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringIntoView = function (rect) {\n        var x = 0;\n        var y = 0;\n        var scale = this.currentZoom;\n        var bounds = rect;\n        var hoffset = -this.horizontalOffset;\n        var voffset = -this.verticalOffset;\n        bounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var view = new Rect(hoffset, voffset, this.viewPortWidth, this.viewPortHeight);\n        if (!(view.containsRect(bounds))) {\n            if (bounds.right > (-hoffset + this.viewPortWidth)) {\n                x = bounds.right - this.viewPortWidth;\n            }\n            if (bounds.x < -hoffset) {\n                x = bounds.x;\n            }\n            if (bounds.bottom > (-voffset + this.viewPortHeight)) {\n                y = bounds.bottom - this.viewPortHeight;\n            }\n            if (bounds.y < -voffset) {\n                y = bounds.y;\n            }\n            this.zoom(1, -this.horizontalOffset - x, -this.verticalOffset - y, null);\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringToCenter = function (bounds) {\n        var scale = this.currentZoom;\n        var actualbounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var hoffset = actualbounds.x + actualbounds.width / 2 - this.viewPortWidth / 2;\n        var voffset = actualbounds.y + actualbounds.height / 2 - this.viewPortHeight / 2;\n        this.zoom(1, -this.horizontalOffset - hoffset, -this.verticalOffset - voffset, null);\n    };\n    DiagramScroller.prototype.applyScrollLimit = function (hOffset, vOffset) {\n        if (this.diagram.scrollSettings.scrollLimit !== 'Infinity') {\n            var bounds = void 0;\n            if (this.diagram.scrollSettings.scrollLimit === 'Limited') {\n                var scrollableBounds = this.diagram.scrollSettings.scrollableArea;\n                bounds = new Rect(scrollableBounds.x, scrollableBounds.y, scrollableBounds.width, scrollableBounds.height);\n            }\n            bounds = bounds || this.getPageBounds(true);\n            bounds.x *= this.currentZoom;\n            bounds.y *= this.currentZoom;\n            bounds.width *= this.currentZoom;\n            bounds.height *= this.currentZoom;\n            hOffset *= -1;\n            vOffset *= -1;\n            var allowedRight = Math.max(bounds.right, this.viewPortWidth);\n            if (!(hOffset <= bounds.x && (hOffset + this.viewPortWidth >= bounds.right ||\n                hOffset >= bounds.right - this.viewPortWidth)\n                || hOffset >= bounds.x && (hOffset + this.viewPortWidth <= allowedRight))) {\n                //not allowed case\n                if (hOffset >= bounds.x) {\n                    hOffset = Math.max(bounds.x, Math.min(hOffset, hOffset - (hOffset + this.viewPortWidth - this.vScrollSize - allowedRight)));\n                }\n                else {\n                    var allowed = bounds.right - this.viewPortWidth;\n                    hOffset = Math.min(allowed, bounds.x);\n                }\n            }\n            var allowedBottom = Math.max(bounds.bottom, this.viewPortHeight);\n            if (!(vOffset <= bounds.y && vOffset + this.viewPortHeight >= bounds.bottom\n                || vOffset >= bounds.y && vOffset + this.viewPortHeight <= allowedBottom)) {\n                //not allowed case\n                if (vOffset >= bounds.y) {\n                    vOffset = Math.max(bounds.y, Math.min(vOffset, vOffset - (vOffset + this.viewPortHeight - this.hScrollSize - allowedBottom)));\n                }\n                else {\n                    var allowed = bounds.bottom - this.viewPortHeight;\n                    vOffset = Math.min(bounds.y, allowed);\n                }\n            }\n            hOffset *= -1;\n            vOffset *= -1;\n        }\n        return { x: hOffset, y: vOffset };\n    };\n    return DiagramScroller;\n}());\nexport { DiagramScroller };\n","/**\n * Quad helps to maintain a set of objects that are contained within the particular region\n */\n/** @private */\nvar Quad = /** @class */ (function () {\n    /** @private */\n    function Quad(left, top, width, height, spatialSearching) {\n        this.objects = [];\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.spatialSearch = spatialSearching;\n    }\n    /** @private */\n    Quad.prototype.findQuads = function (currentViewPort, quads) {\n        if (this.first != null && this.first.isIntersect(currentViewPort)) {\n            this.first.findQuads(currentViewPort, quads);\n        }\n        if (this.second != null && this.second.isIntersect(currentViewPort)) {\n            this.second.findQuads(currentViewPort, quads);\n        }\n        if (this.third != null && this.third.isIntersect(currentViewPort)) {\n            this.third.findQuads(currentViewPort, quads);\n        }\n        if (this.fourth != null && this.fourth.isIntersect(currentViewPort)) {\n            this.fourth.findQuads(currentViewPort, quads);\n        }\n        if (this.objects.length > 0) {\n            quads.push(this);\n        }\n    };\n    Quad.prototype.isIntersect = function (t) {\n        if (this.left + this.width < t.left || this.top + this.height < t.top || this.left > t.right || this.top > t.bottom) {\n            return false;\n        }\n        return true;\n    };\n    /** @private */\n    Quad.prototype.selectQuad = function () {\n        var target = null;\n        var current = this;\n        var quadSet;\n        while (current != null) {\n            quadSet = current.getQuad(target);\n            current = quadSet.source;\n            target = quadSet.target || target;\n        }\n        return target;\n    };\n    Quad.prototype.getQuad = function (target) {\n        target = null;\n        var halfWidth = this.width / 2;\n        var halfHeight = this.height / 2;\n        if (halfWidth >= 1000 && halfHeight >= 1000) {\n            var xCenter = this.left + halfWidth;\n            var yCenter = this.top + halfHeight;\n            if (this.spatialSearch.childRight <= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.first) {\n                        var newQuad = new Quad(this.left, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.first = newQuad;\n                    }\n                    return { source: this.first };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.third) {\n                        var newQuad = new Quad(this.left, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.third = newQuad;\n                    }\n                    return { source: this.third };\n                }\n            }\n            else if (this.spatialSearch.childLeft >= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.second) {\n                        var newQuad = new Quad(xCenter, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.second = newQuad;\n                    }\n                    return { source: this.second };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.fourth) {\n                        var newQuad = new Quad(xCenter, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.fourth = newQuad;\n                    }\n                    return { source: this.fourth };\n                }\n            }\n        }\n        target = this;\n        this.objects.push(this.spatialSearch.childNode);\n        return { target: this };\n    };\n    /** @private */\n    Quad.prototype.isContained = function () {\n        if (this.spatialSearch.childLeft >= this.left && this.spatialSearch.childRight <= this.left + this.width &&\n            this.spatialSearch.childTop >= this.top && this.spatialSearch.childBottom <= this.top + this.height) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    Quad.prototype.addIntoAQuad = function (node) {\n        var quadAddition = {};\n        this.spatialSearch.setCurrentNode(node);\n        var quad = null;\n        while (!quadAddition.isAdded) {\n            quadAddition = this.spatialSearch.parentQuad.add(quad);\n            quad = quadAddition.quad;\n        }\n        return quad;\n    };\n    Quad.prototype.add = function (quad) {\n        quad = null;\n        if (this.isContained()) {\n            quad = this.selectQuad();\n            return { isAdded: true, quad: quad };\n        }\n        else {\n            var newParent = void 0;\n            var isempty = this.objects.length === 0 && !this.first && !this.second && !this.third &&\n                !this.fourth;\n            var newWidth = this.width * 2;\n            var newHeight = this.height * 2;\n            if (this.spatialSearch.childLeft < this.left) {\n                if (this.spatialSearch.childTop < this.top) {\n                    newParent = new Quad(this.left - this.width, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.fourth = this;\n                    }\n                }\n                else {\n                    newParent = new Quad(this.left - this.width, this.top, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.second = this;\n                    }\n                }\n            }\n            else if (this.spatialSearch.childTop < this.top) {\n                newParent = new Quad(this.left, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.third = this;\n                }\n            }\n            else {\n                newParent = new Quad(this.left, this.top, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.first = this;\n                }\n            }\n            this.parent = newParent;\n            this.spatialSearch.parentQuad = newParent;\n            return { isAdded: false, quad: quad };\n            //newParent.AddIntoaQuad(node);\n        }\n    };\n    return Quad;\n}());\nexport { Quad };\n","import { Rect } from '../../primitives/rect';\nimport { Quad } from './quad';\n/**\n * Spatial search module helps to effectively find the objects over diagram\n */\nvar SpatialSearch = /** @class */ (function () {\n    /** @private */\n    function SpatialSearch(objectTable) {\n        this.quadSize = 500;\n        this.objectTable = objectTable;\n        this.parentQuad = new Quad(0, 0, this.quadSize * 2, this.quadSize * 2, this);\n        this.pageLeft = Number.MAX_VALUE;\n        this.pageRight = -Number.MAX_VALUE;\n        this.pageTop = Number.MAX_VALUE;\n        this.pageBottom = -Number.MAX_VALUE;\n        this.quadTable = {};\n    }\n    /** @private */\n    SpatialSearch.prototype.removeFromAQuad = function (node) {\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            var index = this.objectIndex(quad.objects, node);\n            if (index !== -1) {\n                quad.objects.splice(index, 1);\n                this.update(quad);\n                delete this.quadTable[node.id];\n            }\n        }\n    };\n    SpatialSearch.prototype.update = function (quad) {\n        if (quad.parent && quad.objects.length === 0 && quad.first && quad.second && quad.third && quad.fourth) {\n            var parent_1 = quad.parent;\n            if (parent_1.first === quad) {\n                parent_1.first = null;\n            }\n            else if (parent_1.second === quad) {\n                parent_1.second = null;\n            }\n            else if (parent_1.third === quad) {\n                parent_1.third = null;\n            }\n            else if (parent_1.fourth === quad) {\n                parent_1.fourth = null;\n            }\n            this.update(quad.parent);\n        }\n        else {\n            if (quad === this.parentQuad && !quad.first && !quad.second && !quad.third && !quad.fourth) {\n                quad.left = 0;\n                quad.width = 1000;\n                quad.top = 0;\n                quad.height = 1000;\n            }\n            return;\n        }\n    };\n    SpatialSearch.prototype.addIntoAQuad = function (node) {\n        var quad = this.parentQuad.addIntoAQuad(node);\n        this.quadTable[node.id] = quad;\n    };\n    /** @private */\n    SpatialSearch.prototype.objectIndex = function (objects, node) {\n        for (var i = 0; i < objects.length; i++) {\n            if ((objects[i]).id === node.id) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateQuad = function (node) {\n        this.setCurrentNode(node);\n        var nodBounds = node.outerBounds;\n        if (!(!isNaN(nodBounds.x) && !isNaN(nodBounds.y) &&\n            !isNaN(nodBounds.width) && !isNaN(nodBounds.height))) {\n            return false;\n        }\n        //nodBounds = new Rect(nodBounds.X.Valid(), nodBounds.Y.Valid(), nodBounds.Width.Valid(), nodBounds.Height.Valid());\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            if (!quad.isContained()) {\n                this.removeFromAQuad(node);\n                this.addIntoAQuad(node);\n            }\n        }\n        else {\n            this.addIntoAQuad(node);\n        }\n        if (this.isWithinPageBounds(nodBounds) &&\n            this.leftElement !== node &&\n            this.topElement !== node &&\n            this.rightElement !== node &&\n            this.bottomElement !== node) {\n            //contained - no change\n        }\n        else {\n            var modified = false;\n            if (this.pageLeft !== this.childLeft || node !== this.leftElement) {\n                if (this.pageLeft >= this.childLeft) {\n                    this.pageLeft = this.childLeft;\n                    this.leftElement = node;\n                    modified = true;\n                }\n                else if (node === this.leftElement) {\n                    this.pageLeft = Number.MAX_VALUE;\n                    this.findLeft(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageTop !== this.childTop || node !== this.topElement) {\n                if (this.pageTop >= this.childTop) {\n                    this.pageTop = this.childTop;\n                    this.topElement = node;\n                    modified = true;\n                }\n                else if (node === this.topElement) {\n                    this.pageTop = Number.MAX_VALUE;\n                    this.findTop(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageBottom !== this.childBottom || node !== this.bottomElement) {\n                if (this.pageBottom <= this.childBottom) {\n                    modified = true;\n                    this.pageBottom = this.childBottom;\n                    this.bottomElement = node;\n                }\n                else if (node === this.bottomElement) {\n                    this.pageBottom = -Number.MAX_VALUE;\n                    this.findBottom(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageRight !== this.childRight || node !== this.rightElement) {\n                if (this.pageRight <= this.childRight) {\n                    this.pageRight = this.childRight;\n                    this.rightElement = node;\n                    modified = true;\n                }\n                else if (node === this.rightElement) {\n                    this.pageRight = -Number.MAX_VALUE;\n                    this.findRight(this.parentQuad);\n                    modified = true;\n                }\n            }\n            return modified;\n        }\n        this.setCurrentNode(null);\n        return false;\n    };\n    SpatialSearch.prototype.isWithinPageBounds = function (node) {\n        if (node.left >= this.pageLeft && node.right <= this.pageRight && node.top >= this.pageTop\n            && node.bottom <= this.pageBottom) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.findQuads = function (region) {\n        var quads = [];\n        this.parentQuad.findQuads(region, quads);\n        return quads;\n    };\n    /** @private */\n    SpatialSearch.prototype.findObjects = function (region) {\n        var quads = this.findQuads(region);\n        var objects = [];\n        for (var _i = 0, quads_1 = quads; _i < quads_1.length; _i++) {\n            var quad = quads_1[_i];\n            for (var _a = 0, _b = quad.objects; _a < _b.length; _a++) {\n                var obj = _b[_a];\n                if (obj.outerBounds.intersects(region)) {\n                    objects.push(this.objectTable[obj.id]);\n                }\n            }\n        }\n        return objects;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateBounds = function (node) {\n        var modified = false;\n        if (node === this.topElement) {\n            this.pageTop = Number.MAX_VALUE;\n            this.topElement = null;\n            this.findTop(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.leftElement) {\n            this.pageLeft = Number.MAX_VALUE;\n            this.leftElement = null;\n            this.findLeft(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.rightElement) {\n            this.pageRight = -Number.MAX_VALUE;\n            this.rightElement = null;\n            this.findRight(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.bottomElement) {\n            this.pageBottom = -Number.MAX_VALUE;\n            this.bottomElement = null;\n            this.findBottom(this.parentQuad);\n            modified = true;\n        }\n        return modified;\n    };\n    SpatialSearch.prototype.findBottom = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.third || quad.fourth) {\n                if (quad.third) {\n                    this.findBottom(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findBottom(quad.fourth);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findBottom(quad.second);\n                }\n                if (quad.first) {\n                    this.findBottom(quad.first);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageBottom <= node.outerBounds.bottom) {\n                this.pageBottom = node.outerBounds.bottom;\n                this.bottomElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findRight = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.second || quad.fourth) {\n                if (quad.second) {\n                    this.findRight(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findRight(quad.fourth);\n                }\n            }\n            else {\n                if (quad.first) {\n                    this.findRight(quad.first);\n                }\n                if (quad.third) {\n                    this.findRight(quad.third);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageRight <= node.outerBounds.right) {\n                this.pageRight = node.outerBounds.right;\n                this.rightElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findLeft = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.third) {\n                if (quad.first) {\n                    this.findLeft(quad.first);\n                }\n                if (quad.third) {\n                    this.findLeft(quad.third);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findLeft(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findLeft(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageLeft >= node.outerBounds.left) {\n                this.pageLeft = node.outerBounds.left;\n                this.leftElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findTop = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.second) {\n                if (quad.first) {\n                    this.findTop(quad.first);\n                }\n                if (quad.second) {\n                    this.findTop(quad.second);\n                }\n            }\n            else {\n                if (quad.third) {\n                    this.findTop(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findTop(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageTop >= node.outerBounds.top) {\n                this.pageTop = node.outerBounds.top;\n                this.topElement = node;\n            }\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.setCurrentNode = function (node) {\n        this.childNode = node;\n        if (node) {\n            var r = node.outerBounds;\n            this.childLeft = Number(r.left);\n            this.childTop = Number(r.top);\n            this.childRight = Number(r.right);\n            this.childBottom = Number(r.bottom);\n        }\n        else {\n            this.childLeft = Number.MAX_VALUE;\n            this.childTop = Number.MAX_VALUE;\n            this.childRight = -Number.MAX_VALUE;\n            this.childBottom = -Number.MAX_VALUE;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.getPageBounds = function (originX, originY) {\n        if (this.pageLeft === Number.MAX_VALUE) {\n            return new Rect(0, 0, 0, 0);\n        }\n        var left = originX !== undefined ? Math.min(this.pageLeft, 0) : this.pageLeft;\n        var top = originY !== undefined ? Math.min(this.pageTop, 0) : this.pageTop;\n        return new Rect(Math.round(left), Math.round(top), Math.round(this.pageRight - left), Math.round(this.pageBottom - top));\n    };\n    /** @private */\n    SpatialSearch.prototype.getQuad = function (node) {\n        return this.quadTable[node.id];\n    };\n    return SpatialSearch;\n}());\nexport { SpatialSearch };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Defines the serialization settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * serializationSettings: { preventDefaults: true },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar SerializationSettings = /** @class */ (function (_super) {\n    __extends(SerializationSettings, _super);\n    function SerializationSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SerializationSettings.prototype, \"preventDefaults\", void 0);\n    return SerializationSettings;\n}(ChildProperty));\nexport { SerializationSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar CustomCursorAction = /** @class */ (function (_super) {\n    __extends(CustomCursorAction, _super);\n    function CustomCursorAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CustomCursorAction.prototype, \"action\", void 0);\n    __decorate([\n        Property('')\n    ], CustomCursorAction.prototype, \"cursor\", void 0);\n    return CustomCursorAction;\n}(ChildProperty));\nexport { CustomCursorAction };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { Component, Property, Complex, Collection, EventHandler, L10n, Droppable, remove, Ajax, isBlazor } from '@syncfusion/ej2-base';\nimport { Browser, Event } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { SvgRenderer } from './rendering/svg-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { PageSettings, ScrollSettings } from './diagram/page-settings';\nimport { ServiceLocator } from './objects/service';\nimport { Container } from './core/containers/container';\nimport { Node, BpmnShape } from './objects/node';\nimport { cloneBlazorObject, cloneSelectedObjects } from './utility/diagram-util';\nimport { updateDefaultValues, getCollectionChangeEventArguements, checkBrowserInfo } from './utility/diagram-util';\nimport { flipConnector, updatePortEdges, alignElement, setConnectorDefaults } from './utility/diagram-util';\nimport { Connector } from './objects/connector';\nimport { SnapSettings } from './diagram/grid-lines';\nimport { RulerSettings } from './diagram/ruler-settings';\nimport { removeRulerElements, updateRuler, getRulerSize } from './ruler/ruler';\nimport { renderRuler, renderOverlapElement } from './ruler/ruler';\nimport { Size } from './primitives/size';\nimport { Keys, KeyModifiers, DiagramTools, AnnotationConstraints, NodeConstraints, RendererAction } from './enum/enum';\nimport { BlazorAction } from './enum/enum';\nimport { DiagramConstraints, SelectorConstraints, PortVisibility, DiagramEvent } from './enum/enum';\nimport { DiagramAction, ThumbsConstraints } from './enum/enum';\nimport { RealAction, ElementAction, PortConstraints } from './enum/enum';\nimport { PathElement } from './core/elements/path-element';\nimport { TextElement } from './core/elements/text-element';\nimport { updateStyle, removeItem, updateConnector, updateShape, setUMLActivityDefaults, findNodeByName } from './utility/diagram-util';\nimport { setSwimLaneDefaults } from './utility/diagram-util';\nimport { checkPortRestriction, serialize, deserialize, updateHyperlink, getObjectType, removeGradient } from './utility/diagram-util';\nimport { Rect } from './primitives/rect';\nimport { getPortShape } from './objects/dictionary/common';\nimport { ShapeAnnotation, PathAnnotation } from './objects/annotation';\nimport { Canvas } from './core/containers/canvas';\nimport { GridPanel, ColumnDefinition } from './core/containers/grid';\nimport { DataSource } from './diagram/data-source';\nimport { Layout } from './layout/layout-base';\nimport { Selector } from './objects/node';\nimport { DiagramEventHandler } from './interaction/event-handlers';\nimport { CommandHandler } from './interaction/command-manager';\nimport { DiagramScroller } from './interaction/scroller';\nimport { isSelected } from './interaction/actions';\nimport { SpatialSearch } from './interaction/spatial-search/spatial-search';\nimport { setAttributeSvg, setAttributeHtml, measureHtmlText, removeElement, createMeasureElements, getDomIndex } from './utility/dom-util';\nimport { getDiagramElement, getScrollerWidth, getHTMLLayer } from './utility/dom-util';\nimport { getBackgroundLayer, createHtmlElement, createSvgElement, getNativeLayerSvg } from './utility/dom-util';\nimport { getPortLayerSvg, getDiagramLayerSvg, applyStyleAgainstCsp } from './utility/dom-util';\nimport { getAdornerLayerSvg, getSelectorElement, getGridLayerSvg, getBackgroundLayerSvg } from './utility/dom-util';\nimport { CommandManager, ContextMenuSettings } from './diagram/keyboard-commands';\nimport { canDelete, canInConnect, canOutConnect, canRotate, canVitualize, canDrawThumbs } from './utility/constraints-util';\nimport { canPortInConnect, canPortOutConnect } from './utility/constraints-util';\nimport { canResize, canSingleSelect, canZoomPan, canZoomTextEdit, canMultiSelect } from './utility/constraints-util';\nimport { canDragSourceEnd, canDragTargetEnd, canDragSegmentThumb, enableReadOnly, canMove } from './utility/constraints-util';\nimport { findAnnotation, arrangeChild, getInOutConnectPorts, removeChildNodes, canMeasureDecoratorPath } from './utility/diagram-util';\nimport { randomId, cloneObject, extendObject, getFunction, getBounds } from './utility/base-util';\nimport { DiagramTooltip, initTooltip } from './objects/tooltip';\nimport { PointPort } from './objects/port';\nimport { canShadow } from './utility/constraints-util';\nimport { Layer } from './diagram/layer';\nimport { DiagramNativeElement } from './core/elements/native-element';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { canAllowDrop } from './utility/constraints-util';\nimport { checkParentAsContainer, addChildToContainer, updateLaneBoundsAfterAddChild } from './interaction/container-interaction';\nimport { getConnectors, updateConnectorsProperties, phaseDefine } from './utility/swim-lane-util';\nimport { swimLaneMeasureAndArrange } from './utility/swim-lane-util';\nimport { arrangeChildNodesInSwimLane, updateHeaderMaxWidth, updatePhaseMaxWidth } from './utility/swim-lane-util';\nimport { addLane, addPhase } from './utility/swim-lane-util';\nimport { SerializationSettings } from './diagram/serialization-settings';\nimport { removeSwimLane, removeLane, removePhase, removeLaneChildNode } from './utility/swim-lane-util';\nimport { RowDefinition } from './core/containers/grid';\nimport { CustomCursorAction } from './diagram/custom-cursor';\n/**\n * Represents the Diagram control\n * ```html\n * <div id='diagram'/>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Diagram = /** @class */ (function (_super) {\n    __extends(Diagram, _super);\n    /**\n     * Constructor for creating the widget\n     */\n    function Diagram(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.version = 17.1;\n        /** @private */\n        _this.checkMenu = false;\n        /** @private */\n        _this.isServerUpdate = false;\n        /** @private */\n        _this.oldNodeObjects = [];\n        /** @private */\n        _this.oldDiagramObject = {};\n        /** @private */\n        _this.oldConnectorObjects = [];\n        /** @private */\n        _this.canEnableBlazorObject = false;\n        /** @private */\n        _this.connectorTable = {};\n        /** @private */\n        _this.groupTable = {};\n        /** @private */\n        _this.activeLabel = { id: '', parentId: '', isGroup: false, text: undefined };\n        /** @private */\n        _this.textEditing = false;\n        /** @private */\n        _this.isTriggerEvent = false;\n        /** @private */\n        _this.preventNodesUpdate = false;\n        /** @private */\n        _this.preventConnectorsUpdate = false;\n        /** @private */\n        _this.callBlazorModel = true;\n        /** @private */\n        _this.selectionConnectorsList = [];\n        /** @private */\n        _this.deleteVirtualObject = false;\n        _this.changedConnectorCollection = [];\n        _this.changedNodesCollection = [];\n        _this.previousNodeCollection = [];\n        _this.previousConnectorCollection = [];\n        _this.crudDeleteNodes = [];\n        _this.diagramid = 88123;\n        /** @private */\n        _this.selectedObject = { helperObject: undefined, actualObject: undefined };\n        _this.renderTimer = null;\n        var child;\n        var node;\n        var blazor = 'Blazor';\n        var canCloneObject = isBlazor() && window && window[blazor] && !_this.dataSourceSettings.dataSource;\n        _this.ignoreCollectionWatch = true;\n        for (var i = 0; options && options.nodes && i < options.nodes.length; i++) {\n            child = options.nodes[i];\n            node = _this.nodes[i];\n            if (child.children && child.children.length > 0) {\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'transparent';\n                }\n                if (!child.style || !child.style.strokeColor) {\n                    node.style.strokeColor = 'transparent';\n                }\n            }\n            if (child.shape && child.shape.type === 'UmlActivity') {\n                setUMLActivityDefaults(child, node);\n            }\n            if (child.shape && child.shape.type === 'SwimLane') {\n                setSwimLaneDefaults(child, node);\n            }\n            if (_this.nodeDefaults) {\n                if (canCloneObject) {\n                    _this.previousNodeCollection.push(cloneObject(node, undefined, undefined, true));\n                }\n                updateDefaultValues(node, child, _this.nodeDefaults);\n            }\n            _this.updateAnnotationText(node.annotations);\n        }\n        if (options && options.connectors && _this.connectorDefaults) {\n            for (var i = 0; options && options.connectors && i < options.connectors.length; i++) {\n                child = options.connectors[i];\n                node = _this.connectors[i];\n                if (canCloneObject) {\n                    _this.previousConnectorCollection.push(cloneObject(node, undefined, undefined, true));\n                }\n                updateDefaultValues(node, child, _this.connectorDefaults);\n                _this.updateAnnotationText(node.annotations);\n            }\n        }\n        for (var i = 0; options && options.connectors && i < options.connectors.length; i++) {\n            var defaultConnector = options.connectors[i];\n            var connector = _this.connectors[i];\n            if (defaultConnector.shape && defaultConnector.shape.type !== 'None') {\n                setConnectorDefaults(defaultConnector, connector);\n            }\n            if (isBlazor()) {\n                var defaultPropChanges = cloneObject(_this.bulkChanges);\n                _this.enableServerDataBinding(true);\n                _this.protectPropertyChange(true);\n                var keys = Object.keys(defaultPropChanges);\n                for (var i_1 = 0; i_1 < keys.length; i_1++) {\n                    var key = keys[i_1];\n                    var split = key.split('-');\n                    if (split && split[0]) {\n                        if (split[0] === 'nodes') {\n                            defaultPropChanges[key].sfIndex = Number(split[1]);\n                            _this.changedNodesCollection.push(defaultPropChanges[key]);\n                        }\n                        if (split[0] === 'connectors') {\n                            defaultPropChanges[key].sfIndex = Number(split[1]);\n                            _this.changedConnectorCollection.push(defaultPropChanges[key]);\n                        }\n                    }\n                }\n            }\n        }\n        return _this;\n    }\n    Diagram.prototype.updateAnnotationText = function (annotations) {\n        if (isBlazor() && annotations.length > 0) {\n            for (var i = 0; annotations && i < annotations.length; i++) {\n                var label = annotations[i];\n                label.content = label.content.split('\\\\n').join('\\n');\n            }\n        }\n    };\n    Diagram.prototype.callFromServer = function (arg) {\n        var methodName = 'methodName';\n        var mId = 'id';\n        if (arg[methodName] === 'getParentID') {\n            var id = arg[mId];\n            return this.nameTable[id].parentId;\n        }\n        else if (arg[methodName] === 'getEdges') {\n            var outEdge = 'outEdge';\n            var isOutEdge = arg[outEdge];\n            var id = arg[mId];\n            if (isOutEdge) {\n                return this.nameTable[id].outEdges;\n            }\n            else {\n                return this.nameTable[id].inEdges;\n            }\n        }\n        else if (arg[methodName] === 'updateDiagramObjects') {\n            var obj = 'obj';\n            var isAdding = 'IsAdding';\n            var args = arg[obj];\n            this.isServerUpdate = true;\n            if (arg[isAdding]) {\n                var add = 'add';\n                this[add].apply(this, args);\n            }\n            else {\n                var remove_1 = 'remove';\n                this[remove_1].apply(this, args);\n            }\n            this.isServerUpdate = false;\n        }\n        else if (arg[methodName] === 'invokeLoadDiagramMethod') {\n            var data = 'data';\n            this.loadDiagram(arg[data]);\n        }\n    };\n    ;\n    Diagram.prototype.clearCollection = function (isConnector) {\n        var collection = [];\n        var obj;\n        for (var _i = 0, _a = Object.keys(this.nameTable); _i < _a.length; _i++) {\n            var key = _a[_i];\n            obj = this.nameTable[key];\n            if (obj && ((isConnector && obj instanceof Connector) || (!isConnector && obj instanceof Node))) {\n                collection.push(obj);\n            }\n        }\n        this.clearObjects(collection);\n    };\n    /**\n     * Updates the diagram control when the objects are changed\n     * @param {DiagramModel} newProp - Lists the new values of the changed properties\n     * @param {DiagramModel} oldProp - Lists the old values of the changed properties\n     */\n    /* tslint:disable */\n    Diagram.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // Model Changed\n        var newValue;\n        var oldValue;\n        var isPropertyChanged = true;\n        var refreshLayout = false;\n        var refereshColelction = false;\n        if (this.diagramActions & DiagramAction.Render) {\n            for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                switch (prop) {\n                    case 'width':\n                    case 'height':\n                        this.element.style.width = this.getSizeValue(this.width);\n                        this.element.style.height = this.getSizeValue(this.height);\n                        this.eventHandler.updateViewPortSize(this.element);\n                        for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                            var view = _c[_b];\n                            var temp = this.views[view];\n                            if (!(temp instanceof Diagram)) {\n                                temp.updateView(temp);\n                            }\n                        }\n                        break;\n                    case 'nodes':\n                        if (newProp.nodes.length > 0 && oldProp.nodes.length === 0) {\n                            this.clearCollection();\n                            refereshColelction = true;\n                        }\n                        else {\n                            for (var _d = 0, _e = Object.keys(newProp.nodes); _d < _e.length; _d++) {\n                                var key = _e[_d];\n                                var index = Number(key);\n                                var actualObject = this.nodes[index];\n                                var changedProp = newProp.nodes[index];\n                                refreshLayout = refreshLayout || changedProp.excludeFromLayout !== undefined;\n                                this.nodePropertyChange(actualObject, oldProp.nodes[index], changedProp, undefined, true, true);\n                                var args = {\n                                    element: cloneBlazorObject(actualObject), cause: this.diagramActions,\n                                    oldValue: cloneBlazorObject(oldProp.nodes[index]),\n                                    newValue: cloneBlazorObject(newProp.nodes[index])\n                                };\n                                if (isBlazor()) {\n                                    args.element = { node: cloneBlazorObject(actualObject) };\n                                    args.oldValue = { node: cloneBlazorObject(oldValue) };\n                                    args.newValue = { node: cloneBlazorObject(newValue) };\n                                }\n                                this.triggerEvent(DiagramEvent.propertyChange, args);\n                                if (isPropertyChanged) {\n                                    isPropertyChanged = false;\n                                }\n                            }\n                            if (this.mode === 'Canvas') {\n                                this.refreshDiagramLayer();\n                            }\n                        }\n                        break;\n                    case 'connectors':\n                        var oldObject = void 0;\n                        if (newProp.connectors.length > 0 && oldProp.connectors.length === 0) {\n                            this.clearCollection(true);\n                            refereshColelction = true;\n                        }\n                        else {\n                            for (var _f = 0, _g = Object.keys(newProp.connectors); _f < _g.length; _f++) {\n                                var key = _g[_f];\n                                var index = Number(key);\n                                var actualObject = this.connectors[index];\n                                var changedProp = newProp.connectors[index];\n                                if (changedProp && (changedProp.sourceDecorator || changedProp.targetDecorator)) {\n                                    this.diagramActions |= DiagramAction.DecoratorPropertyChange;\n                                }\n                                this.connectorPropertyChange(actualObject, oldProp.connectors[index], changedProp, true, true);\n                                if (changedProp && (changedProp.sourceDecorator || changedProp.targetDecorator)) {\n                                    this.diagramActions = this.diagramActions & ~DiagramAction.DecoratorPropertyChange;\n                                }\n                                var args = {\n                                    element: cloneBlazorObject(actualObject), cause: this.diagramActions,\n                                    oldValue: cloneBlazorObject(oldProp.connectors[index]),\n                                    newValue: cloneBlazorObject(newProp.connectors[index])\n                                };\n                                if (isBlazor()) {\n                                    args.element = { connector: cloneBlazorObject(actualObject) };\n                                    args.oldValue = { connector: cloneBlazorObject(oldValue) };\n                                    args.newValue = { connector: cloneBlazorObject(newValue) };\n                                }\n                                this.triggerEvent(DiagramEvent.propertyChange, args);\n                                if (actualObject && actualObject.parentId && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier') {\n                                    this.updateConnectorEdges(this.nameTable[actualObject.parentId] || actualObject);\n                                }\n                                if (isPropertyChanged) {\n                                    isPropertyChanged = false;\n                                }\n                            }\n                            this.updateBridging();\n                            if (this.mode === 'Canvas') {\n                                this.refreshDiagramLayer();\n                            }\n                        }\n                        break;\n                    case 'bridgeDirection':\n                        this.updateBridging();\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                        break;\n                    case 'backgroundColor':\n                        this.intOffPageBackground();\n                        break;\n                    case 'pageSettings':\n                        this.validatePageSize();\n                        this.updatePage();\n                        break;\n                    case 'selectedItems':\n                        if (newProp.selectedItems.userHandles && this.selectedItems.wrapper && this.selectedItems.userHandles) {\n                            if (this.selectedItems.userHandles.length > 0) {\n                                this.renderSelector(true);\n                                break;\n                            }\n                        }\n                        if (newProp.selectedItems.constraints) {\n                            this.renderSelector(true);\n                            break;\n                        }\n                        break;\n                    case 'snapSettings':\n                        this.updateSnapSettings(newProp);\n                        break;\n                    case 'commandManager':\n                        this.initCommands();\n                        break;\n                    case 'layout':\n                        refreshLayout = true;\n                        break;\n                    case 'dataSourceSettings':\n                        this.clear();\n                        this.initObjects();\n                        if (this.layout.type === 'None') {\n                            refereshColelction = true;\n                        }\n                        else {\n                            refreshLayout = true;\n                        }\n                        break;\n                    case 'tooltip':\n                        initTooltip(this);\n                        break;\n                    case 'rulerSettings':\n                        this.updateRulerSettings(newProp);\n                        break;\n                    case 'layers':\n                        this.updateLayer(newProp);\n                        break;\n                    case 'scrollSettings':\n                        this.updateScrollSettings(newProp);\n                        break;\n                    case 'locale':\n                        if (newProp.locale !== oldProp.locale) {\n                            this.realActions |= RealAction.PreventDataInit;\n                            _super.prototype.refresh.call(this);\n                            this.realActions &= ~RealAction.PreventDataInit;\n                        }\n                        break;\n                    case 'contextMenuSettings':\n                        if (newProp.contextMenuSettings.showCustomMenuOnly !== undefined) {\n                            this.contextMenuSettings.showCustomMenuOnly = newProp.contextMenuSettings.showCustomMenuOnly;\n                        }\n                        if (newProp.contextMenuSettings.show !== undefined) {\n                            this.contextMenuSettings.show = newProp.contextMenuSettings.show;\n                        }\n                        if (newProp.contextMenuSettings.items) {\n                            var items = newProp.contextMenuSettings.items;\n                            for (var _h = 0, _j = Object.keys(items); _h < _j.length; _h++) {\n                                var key = _j[_h];\n                                var index = Number(key);\n                                this.contextMenuSettings.items[index] = items[index];\n                            }\n                        }\n                        break;\n                    case 'serializationSettings':\n                        if (newProp.serializationSettings.preventDefaults !== undefined) {\n                            this.serializationSettings.preventDefaults = newProp.serializationSettings.preventDefaults;\n                        }\n                        break;\n                }\n            }\n            if (refreshLayout && !refereshColelction) {\n                this.doLayout();\n            }\n            if (isPropertyChanged && this.propertyChange) {\n                var args = {\n                    element: cloneBlazorObject(this), cause: this.diagramActions,\n                    oldValue: cloneBlazorObject(oldProp), newValue: cloneBlazorObject(newProp)\n                };\n                if (isBlazor()) {\n                    args.element = { diagram: cloneBlazorObject(this) };\n                    args.oldValue = { diagram: cloneBlazorObject(oldValue) };\n                    args.newValue = { diagram: cloneBlazorObject(newValue) };\n                }\n                this.triggerEvent(DiagramEvent.propertyChange, args);\n            }\n            if (!refereshColelction && (this.canLogChange()) && (this.modelChanged(newProp, oldProp))) {\n                var entry = { type: 'PropertyChanged', undoObject: oldProp, redoObject: newProp, category: 'Internal' };\n                this.addHistoryEntry(entry);\n            }\n            this.resetDiagramActions();\n            if (refereshColelction) {\n                this.initObjects(true);\n                this.refreshDiagramLayer();\n                if (refreshLayout) {\n                    this.doLayout();\n                }\n            }\n            var scrollAlone = ((Object.keys(newProp).length === 1) && newProp.scrollSettings !== undefined);\n            if (!refereshColelction) {\n                for (var _k = 0, _l = this.views; _k < _l.length; _k++) {\n                    var temp = _l[_k];\n                    var view = this.views[temp];\n                    if (!(view instanceof Diagram)) {\n                        if (newProp.scrollSettings && newProp.scrollSettings.currentZoom != oldProp.scrollSettings.currentZoom) {\n                            view.updateHtmlLayer(view);\n                        }\n                        if (!scrollAlone) {\n                            this.refreshCanvasDiagramLayer(view);\n                        }\n                    }\n                }\n            }\n            this.resetTemplate();\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateSnapSettings = function (newProp) {\n        if (newProp.snapSettings.constraints !== undefined || newProp.snapSettings.horizontalGridlines ||\n            newProp.snapSettings.verticalGridlines || newProp.snapSettings.gridType) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n    };\n    Diagram.prototype.updateRulerSettings = function (newProp) {\n        if (newProp.rulerSettings.dynamicGrid !== undefined) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n        if (newProp.rulerSettings.showRulers !== undefined) {\n            this.intOffPageBackground();\n            this.scroller.setSize();\n            this.renderRulers();\n        }\n        else if (newProp.rulerSettings.horizontalRuler !== undefined ||\n            newProp.rulerSettings.verticalRuler !== undefined) {\n            if (newProp.rulerSettings.horizontalRuler.thickness !== undefined ||\n                newProp.rulerSettings.verticalRuler.thickness !== undefined) {\n                removeRulerElements(this);\n                this.intOffPageBackground();\n                this.scroller.setSize();\n                this.renderRulers();\n            }\n            else {\n                updateRuler(this);\n            }\n        }\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Diagram.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Diagram.prototype.preRender = function () {\n        this.initializePrivateVariables();\n        this.isProtectedOnChange = true;\n        this.serviceLocator = new ServiceLocator;\n        this.initializeServices();\n        this.setCulture();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        this.initDiagram();\n        this.initViews();\n        this.unWireEvents();\n        this.wireEvents();\n        this.element.classList.add('e-diagram');\n    };\n    Diagram.prototype.initializePrivateVariables = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-diagram').length;\n            this.element.id = 'diagram_' + this.diagramid + '_' + collection;\n        }\n        this.defaultLocale = {\n            Copy: 'Copy',\n            Cut: 'Cut',\n            Paste: 'Paste',\n            Undo: 'Undo',\n            Redo: 'Redo',\n            SelectAll: 'Select All',\n            Grouping: 'Grouping',\n            Group: 'Group',\n            UnGroup: 'Un Group',\n            Order: 'Order',\n            BringToFront: 'Bring To Front',\n            MoveForward: 'Move Forward',\n            SendToBack: 'Send To Back',\n            SendBackward: 'Send Backward'\n        };\n        this.layerZIndex = -1;\n        this.layerZIndexTable = {};\n        this.nameTable = {};\n        this.pathTable = {};\n        this.groupTable = {};\n        this.commands = {};\n        if (!this.isLoading) {\n            this.views = [];\n        }\n        this.commandHandler = new CommandHandler(this);\n        this.eventHandler = new DiagramEventHandler(this, this.commandHandler);\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.scroller = new DiagramScroller(this);\n    };\n    Diagram.prototype.initializeServices = function () {\n        this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n    };\n    /**\n     * Method to set culture for chart\n     */\n    Diagram.prototype.setCulture = function () {\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n    };\n    /* tslint:disable */\n    /**\n     * Renders the diagram control with nodes and connectors\n     */\n    Diagram.prototype.render = function () {\n        this.ignoreCollectionWatch = true;\n        var domTable = 'domTable';\n        window[domTable] = {};\n        var collapsedNode = [];\n        if (isBlazor()) {\n            var changedNodes = [];\n            var changedConnectors = [];\n            for (var i = 0; i < this.changedNodesCollection.length; i++) {\n                changedNodes.push(this.commandHandler.deepDiffer.removeEmptyValues(this.changedNodesCollection[i]));\n            }\n            for (var i = 0; i < this.changedConnectorCollection.length; i++) {\n                changedConnectors.push(this.commandHandler.deepDiffer.removeEmptyValues(this.changedConnectorCollection[i]));\n            }\n            var blazorInterop = 'sfBlazor';\n            var blazor = 'Blazor';\n            var diagramObject = { nodes: changedNodes, connectors: changedConnectors };\n            if (window && window[blazor] && !this.dataSourceSettings.dataSource) {\n                var obj = { 'methodName': 'UpdateBlazorProperties', 'diagramobj': diagramObject };\n                window[blazorInterop].updateBlazorProperties(obj, this);\n            }\n        }\n        if (this.dataSourceSettings.crudAction.read) {\n            this.renderInitialCrud();\n        }\n        this.initHistory();\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), this.mode === 'SVG');\n        this.initLayers();\n        this.initializeDiagramLayers();\n        this.diagramRenderer.setLayers();\n        this.initObjects(true);\n        var isLayout = false;\n        if (isBlazor() && !this.dataSourceSettings.dataSource && this.layout.type !== \"None\") {\n            for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                this.insertValue(cloneObject(obj), true);\n            }\n            for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n                var obj = _c[_b];\n                this.insertValue(cloneObject(obj), false);\n            }\n            isLayout = true;\n        }\n        this.doLayout();\n        if (isLayout) {\n            this.commandHandler.getBlazorOldValues();\n        }\n        if (this.lineRoutingModule) {\n            var previousConnectorObject = [];\n            var updateConnectorObject = [];\n            var changeConnectors = [];\n            if (isBlazor()) {\n                for (var _d = 0, _e = this.connectors; _d < _e.length; _d++) {\n                    var obj = _e[_d];\n                    previousConnectorObject.push(cloneObject(obj, undefined, undefined, true));\n                }\n            }\n            this.lineRoutingModule.lineRouting(this);\n            if (isBlazor()) {\n                for (var _f = 0, _g = this.connectors; _f < _g.length; _f++) {\n                    var obj = _g[_f];\n                    updateConnectorObject.push(cloneObject(obj, undefined, undefined, true));\n                }\n                this.commandHandler.getObjectChanges(previousConnectorObject, updateConnectorObject, changeConnectors);\n                var blazorInterop = 'sfBlazor';\n                var blazor = 'Blazor';\n                var diagramObject = { nodes: [], connectors: changeConnectors };\n                if (window && window[blazor]) {\n                    var obj = { 'methodName': 'UpdateBlazorProperties', 'diagramobj': diagramObject };\n                    window[blazorInterop].updateBlazorProperties(obj, this);\n                }\n            }\n        }\n        this.validatePageSize();\n        this.renderPageBreaks();\n        this.diagramRenderer.renderSvgGridlines(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.commandHandler.initSelectorWrapper();\n        /**\n         * Used to render context menu\n         */\n        this.notify('initial-load', {});\n        /**\n         * Used to load context menu\n         */\n        this.trigger('load');\n        this.scroller.setSize();\n        this.scroller.updateScrollOffsets();\n        this.refreshDiagramLayer();\n        if (this.scrollSettings.verticalOffset > 0 || this.scrollSettings.horizontalOffset > 0) {\n            this.updateScrollOffset();\n        }\n        /**\n         * Used to end the context menu rendering\n         */\n        if (Browser.isDevice) {\n            this.tool = DiagramTools.ZoomPan | DiagramTools.SingleSelect;\n        }\n        this.notify('initial-end', {});\n        this.isProtectedOnChange = false;\n        this.tooltipObject = initTooltip(this);\n        this.diagramActions = DiagramAction.Render;\n        var nodes = this.nodes;\n        for (var i = 0; i < nodes.length; i++) {\n            if (!nodes[i].isExpanded) {\n                collapsedNode.push(nodes[i]);\n            }\n        }\n        if (collapsedNode.length) {\n            for (var i = collapsedNode.length - 1; i >= 0; i--) {\n                this.commandHandler.expandNode(collapsedNode[i], this);\n            }\n        }\n        this.initCommands();\n        this.updateTemplate();\n        this.isLoading = false;\n        this.renderComplete();\n        this.updateFitToPage();\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateFitToPage = function () {\n        if (this.pageSettings && this.pageSettings.fitOptions && this.pageSettings.fitOptions.canFit) {\n            this.fitToPage(this.pageSettings.fitOptions);\n        }\n    };\n    Diagram.prototype.updateTemplate = function () {\n        var node;\n        var annotation;\n        var pathAnnotation;\n        for (var i = 0; i < this.nodes.length; i++) {\n            node = this.nodes[i];\n            annotation = node.annotations[0];\n            if (node.shape.type === 'HTML' || node.shape.type === 'Native') {\n                updateBlazorTemplate('diagramsf_node_template', 'NodeTemplate', this, false);\n            }\n            else if (annotation && annotation.annotationType === 'Template') {\n                updateBlazorTemplate('diagramsf_annotation_template', 'AnnotationTemplate', this, false);\n            }\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            pathAnnotation = this.connectors[i].annotations[0];\n            if (pathAnnotation && pathAnnotation.annotationType === 'Template') {\n                updateBlazorTemplate('diagramsf_annotation_template', 'AnnotationTemplate', this, false);\n            }\n        }\n    };\n    Diagram.prototype.resetTemplate = function () {\n        var htmlNode;\n        var templateAnnotation;\n        var path;\n        for (var i = 0; i < this.nodes.length; i++) {\n            htmlNode = this.nodes[i];\n            templateAnnotation = htmlNode.annotations[0];\n            if (htmlNode.shape.type === 'HTML' && htmlNode.shape.content instanceof HTMLElement) {\n                resetBlazorTemplate('diagramsf_node_template', 'NodeTemplate');\n            }\n            else if (templateAnnotation && templateAnnotation.annotationType === 'Template') {\n                resetBlazorTemplate('diagramsf_annotation_template', 'AnnotationTemplate');\n            }\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            path = this.connectors[i].annotations[0];\n            if (path && path.annotationType === 'Template') {\n                resetBlazorTemplate('diagramsf_annotation_template', 'AnnotationTemplate');\n            }\n        }\n    };\n    //Call back function to the node template\n    // private measureNode(node: NodeModel): void {\n    //     if (node.shape.type === 'Native' && isBlazor()) {\n    //         node.wrapper.measure(new Size(node.width, node.height));\n    //         node.wrapper.arrange(node.wrapper.desiredSize);\n    //     }\n    // }\n    Diagram.prototype.renderInitialCrud = function () {\n        var tempObj = this;\n        if (tempObj.dataSourceSettings.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                if (tempObj.dataSourceSettings.dataManager) {\n                    tempObj.dataSourceSettings.dataManager = JSON.parse(data);\n                }\n                else {\n                    tempObj.dataSourceSettings.dataSource = JSON.parse(data);\n                }\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n        if (tempObj.dataSourceSettings.connectionDataSource.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.connectionDataSource.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                tempObj.dataSourceSettings.connectionDataSource.dataManager = JSON.parse(data);\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n    };\n    /**\n     * Returns the module name of the diagram\n     */\n    Diagram.prototype.getModuleName = function () {\n        return 'diagram';\n    };\n    /**\n     * @private\n     * Returns the name of class Diagram\n     */\n    Diagram.prototype.getClassName = function () {\n        return 'Diagram';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    Diagram.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        modules.push({\n            member: 'Bridging',\n            args: []\n        });\n        modules.push({\n            member: 'ConnectorEditingTool',\n            args: []\n        });\n        if (this.constraints & DiagramConstraints.UndoRedo) {\n            modules.push({\n                member: 'UndoRedo',\n                args: []\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.enableAnimation) {\n            modules.push({\n                member: 'LayoutAnimate',\n                args: []\n            });\n        }\n        if (this.snapSettings.constraints) {\n            modules.push({\n                member: 'Snapping',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'PrintandExport',\n            args: [this]\n        });\n        if (this.contextMenuSettings.show) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree') {\n            modules.push({\n                member: 'OrganizationalChart',\n                args: [this]\n            });\n        }\n        if (this.layout.type === 'ComplexHierarchicalTree') {\n            modules.push({\n                member: 'ComplexHierarchicalTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'MindMap') {\n            modules.push({\n                member: 'MindMapChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'RadialTree') {\n            modules.push({\n                member: 'RadialTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'SymmetricalLayout') {\n            modules.push({\n                member: 'SymmetricalLayout',\n                args: []\n            });\n        }\n        if (this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource ||\n            this.dataSourceSettings.crudAction.read || this.dataSourceSettings.connectionDataSource.crudAction.read) {\n            modules.push({\n                member: 'DataBinding',\n                args: []\n            });\n        }\n        if (this.constraints & DiagramConstraints.LineRouting) {\n            modules.push({\n                member: 'LineRouting',\n                args: []\n            });\n        }\n        return modules;\n    };\n    /**\n     * Destroys the diagram control\n     */\n    Diagram.prototype.destroy = function () {\n        clearInterval(this.renderTimer);\n        this.renderTimer = null;\n        if (this.hRuler && this.vRuler) {\n            this.hRuler.destroy();\n            this.vRuler.destroy();\n        }\n        this.tooltipObject.destroy();\n        this.droppable.destroy();\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-diagram');\n            var tooltipelement = document.getElementsByClassName('e-diagram-tooltip');\n            while (tooltipelement.length > 0) {\n                tooltipelement[0].parentNode.removeChild(tooltipelement[0]);\n            }\n            var content = document.getElementById(this.element.id + 'content');\n            if (content) {\n                this.element.removeChild(content);\n            }\n            var measureElement = 'measureElement';\n            if (window[measureElement]) {\n                window[measureElement].usageCount -= 1;\n                var measureElementCount = 'measureElementCount';\n                window[measureElementCount]--;\n                if (window[measureElementCount] === 0) {\n                    window[measureElement].parentNode.removeChild(window[measureElement]);\n                    window[measureElement] = null;\n                }\n            }\n        }\n        var domTable = 'domTable';\n        window[domTable] = {};\n    };\n    /**\n     * Wires the mouse events with diagram control\n     */\n    Diagram.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.diagramCanvas, startEvent, this.eventHandler.mouseDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'keydown', this.eventHandler.keyDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'keyup', this.eventHandler.keyUp, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'scroll', this.eventHandler.scrolled, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel, this.eventHandler);\n        EventHandler.add(window, 'resize', this.eventHandler.windowResize, this.eventHandler);\n        this.initDroppables();\n    };\n    /**\n     * Unwires the mouse events from diagram control\n     */\n    Diagram.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stopEvent = Browser.touchEndEvent;\n        EventHandler.remove(this.diagramCanvas, startEvent, this.eventHandler.mouseDown);\n        EventHandler.remove(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove);\n        EventHandler.remove(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp);\n        EventHandler.remove(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave);\n        EventHandler.remove(this.diagramCanvas, 'keydown', this.eventHandler.keyDown);\n        EventHandler.remove(this.diagramCanvas, 'keyup', this.eventHandler.keyUp);\n        EventHandler.remove(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick);\n        EventHandler.remove(this.diagramCanvas, 'scroll', this.eventHandler.scrolled);\n        EventHandler.remove(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel);\n        EventHandler.remove(window, 'resize', this.eventHandler.windowResize);\n    };\n    //public methods - start region\n    /**\n     * Selects the given collection of objects\n     * @param {NodeModel | ConnectorModel} objects - Defines the collection of nodes and connectors to be selected\n     * @param {boolean} multipleSelection - Defines whether the existing selection has to be cleared or not\n     */\n    Diagram.prototype.select = function (objects, multipleSelection) {\n        if (isBlazor()) {\n            for (var i = 0; i < objects.length; i++) {\n                objects[i] = this.nameTable[objects[i].id];\n            }\n            objects = this.nameTable[objects.id] || objects;\n        }\n        if (objects != null) {\n            this.commandHandler.selectObjects(objects, multipleSelection);\n        }\n    };\n    /**\n     * Selects the all the objects.\n     */\n    Diagram.prototype.selectAll = function () {\n        var selectedItems = [];\n        selectedItems = this.getObjectsOfLayer(this.activeLayer.objects);\n        this.select(selectedItems);\n    };\n    /**\n     * Removes the given object from selection list\n     * @param {NodeModel | ConnectorModel} obj - Defines the object to be unselected\n     */\n    Diagram.prototype.unSelect = function (obj) {\n        if (isBlazor()) {\n            this.commandHandler.oldSelectedObjects = cloneObject(this.selectedItems);\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (obj && isSelected(this, obj)) {\n            this.commandHandler.unSelect(obj);\n            this.commandHandler.updateBlazorSelector();\n        }\n    };\n    /**\n     * Removes all elements from the selection list\n     */\n    Diagram.prototype.clearSelection = function () {\n        this.commandHandler.clearSelection(true);\n    };\n    /**\n     * Update the diagram clipboard dimension\n     */\n    Diagram.prototype.updateViewPort = function () {\n        var attribute = this.getZoomingAttribute();\n        this.updateBlazorDiagramProperties(attribute);\n        this.eventHandler.updateViewPortSize(this.element);\n        this.updateBlazorDiagramProperties(attribute, true);\n    };\n    Diagram.prototype.cutCommand = function () {\n        this.cut();\n    };\n    /**\n     * Removes the selected nodes and connectors from diagram and moves them to diagram clipboard\n     */\n    Diagram.prototype.cut = function () {\n        this.commandHandler.cut();\n    };\n    /**\n     * Add a process into the sub-process\n     * @blazorArgsType process|DiagramNode\n     */\n    Diagram.prototype.addProcess = function (process, parentId) {\n        if (this.bpmnModule) {\n            this.bpmnModule.addProcess(process, parentId, this);\n        }\n    };\n    /**\n     * Remove a process from the sub-process\n     */\n    Diagram.prototype.removeProcess = function (id) {\n        if (this.bpmnModule) {\n            this.bpmnModule.removeProcess(id, this);\n        }\n    };\n    Diagram.prototype.pasteCommand = function () {\n        this.paste();\n    };\n    /**\n     * Adds the given objects/ the objects in the diagram clipboard to diagram control\n     * @param {NodeModel[] | ConnectorModel[]} obj - Defines the objects to be added to diagram\n     * @deprecated\n     */\n    Diagram.prototype.paste = function (obj) {\n        this.commandHandler.paste(obj);\n    };\n    /**\n     * fit the diagram to the page with respect to mode and region\n     */\n    Diagram.prototype.fitToPage = function (options) {\n        var attribute = this.getZoomingAttribute();\n        this.updateBlazorDiagramProperties(attribute);\n        this.scroller.fitToPage(options);\n        this.updateBlazorDiagramProperties(attribute, true);\n    };\n    /**\n     * bring the specified bounds into the viewport\n     */\n    Diagram.prototype.bringIntoView = function (bound) {\n        var attribute = this.getZoomingAttribute();\n        this.updateBlazorDiagramProperties(attribute);\n        this.scroller.bringIntoView(bound);\n        this.updateBlazorDiagramProperties(attribute, true);\n    };\n    /**\n     * bring the specified bounds to the center of the viewport\n     */\n    Diagram.prototype.bringToCenter = function (bound) {\n        var attribute = this.getZoomingAttribute();\n        this.updateBlazorDiagramProperties(attribute);\n        this.scroller.bringToCenter(bound);\n        this.updateBlazorDiagramProperties(attribute, true);\n    };\n    Diagram.prototype.copyCommand = function () {\n        this.copy();\n    };\n    /**\n     * Copies the selected nodes and connectors to diagram clipboard\n     */\n    Diagram.prototype.copy = function () {\n        var obj = this.commandHandler.copy();\n        return obj;\n    };\n    /**\n     * Group the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.group = function () {\n        this.callBlazorModel = false;\n        this.insertBlazorDiagramObjects(this.selectedItems);\n        this.commandHandler.group();\n        this.callBlazorModel = true;\n        this.commandHandler.getBlazorOldValues();\n    };\n    /**\n     * UnGroup the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.unGroup = function () {\n        this.callBlazorModel = false;\n        this.insertBlazorDiagramObjects(this.selectedItems);\n        this.commandHandler.unGroup();\n        this.callBlazorModel = true;\n        this.commandHandler.getBlazorOldValues();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendToBack = function () {\n        var objectName = this.selectedItems.nodes.length ? this.selectedItems.nodes[0]\n            : this.selectedItems.connectors[0];\n        this.insertBlazorDiagramObjects(objectName);\n        this.commandHandler.sendToBack();\n        this.commandHandler.getBlazorOldValues();\n    };\n    /**\n     * set the active layer\n     *  @param {string} layerName - defines the name of the layer which is to be active layer\n     */\n    Diagram.prototype.setActiveLayer = function (layerName) {\n        var layer = this.commandHandler.getLayer(layerName);\n        this.activeLayer = layer;\n    };\n    /**\n     * add the layer into diagram\n     * @param {LayerModel} layer - defines the layer model which is to be added\n     * @param {Object[]} layerObject - defines the object of the layer\n     * @blazorArgsType layer|DiagramLayer\n     * @deprecated\n     */\n    Diagram.prototype.addLayer = function (layer, layerObject) {\n        this.commandHandler.addLayer(layer, layerObject);\n    };\n    /**\n     * remove the layer from diagram\n     * @param {string} layerId - define the id of the layer\n     * @deprecated\n     */\n    Diagram.prototype.removeLayer = function (layerId) {\n        this.commandHandler.removeLayer(layerId);\n    };\n    /**\n     * move objects from the layer to another layer from diagram\n     * @param {string[]} objects - define the objects id of string array\n     */\n    Diagram.prototype.moveObjects = function (objects, targetLayer) {\n        var oldValues = cloneObject(this.layers);\n        this.enableServerDataBinding(false);\n        this.commandHandler.moveObjects(objects, targetLayer);\n        var result = this.commandHandler.deepDiffer.map(oldValues, cloneObject(this.layers));\n        var diffValue = this.commandHandler.deepDiffer.frameObject({}, result);\n        this.oldDiagramObject = { layers: diffValue };\n        this.commandHandler.updateBlazorProperties();\n    };\n    /* tslint:disable */\n    Diagram.prototype.layerObjectUpdate = function () {\n        if (isBlazor()) {\n            this.enableServerDataBinding(false);\n            this.oldDiagramObject['layers'] = [];\n            for (var i = 0; i < this.layers.length; i++) {\n                var leyerObject = cloneObject(this.layers[i]);\n                leyerObject.sfIndex = this.layers[i].zIndex;\n                this.oldDiagramObject['layers'].push(leyerObject);\n            }\n        }\n    };\n    /* tslint:enable */\n    /**\n     * move the layer backward\n     * @param {string} layerName - define the name of the layer\n     */\n    Diagram.prototype.sendLayerBackward = function (layerName) {\n        this.layerObjectUpdate();\n        this.commandHandler.sendLayerBackward(layerName);\n        this.commandHandler.updateLayerObject(this.oldDiagramObject, true);\n    };\n    /**\n     * move the layer forward\n     * @param {string} layerName - define the name of the layer\n     */\n    Diagram.prototype.bringLayerForward = function (layerName) {\n        this.layerObjectUpdate();\n        this.commandHandler.bringLayerForward(layerName);\n        this.commandHandler.updateLayerObject(this.oldDiagramObject);\n    };\n    /**\n     * clone a layer with its object\n     * @param {string} layerName - define the name of the layer\n     */\n    Diagram.prototype.cloneLayer = function (layerName) {\n        this.commandHandler.cloneLayer(layerName);\n    };\n    /**\n     * bring the selected nodes or connectors to front\n     */\n    Diagram.prototype.bringToFront = function () {\n        var objectName = this.selectedItems.nodes.length ? this.selectedItems.nodes[0]\n            : this.selectedItems.connectors[0];\n        this.insertBlazorDiagramObjects(objectName);\n        this.commandHandler.bringToFront();\n        this.commandHandler.getBlazorOldValues();\n    };\n    /**\n     * send the selected nodes or connectors forward\n     */\n    Diagram.prototype.moveForward = function () {\n        var objectName = this.selectedItems.nodes.length ? this.selectedItems.nodes[0]\n            : this.selectedItems.connectors[0];\n        this.insertBlazorDiagramObjects(objectName);\n        this.commandHandler.sendForward();\n        this.commandHandler.getBlazorOldValues();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendBackward = function () {\n        var objectName = this.selectedItems.nodes.length ? this.selectedItems.nodes[0]\n            : this.selectedItems.connectors[0];\n        this.insertBlazorDiagramObjects(objectName);\n        this.commandHandler.sendBackward();\n        this.commandHandler.getBlazorOldValues();\n    };\n    /**\n     * gets the node or connector having the given name\n     */\n    Diagram.prototype.getObject = function (name) {\n        return this.nameTable[name];\n    };\n    /**\n     * gets the node object for the given node ID\n     */\n    Diagram.prototype.getNodeObject = function (id) {\n        return cloneObject(this.nameTable[id]);\n    };\n    /**\n     * gets the connector object for the given node ID\n     */\n    Diagram.prototype.getConnectorObject = function (id) {\n        return cloneObject(this.nameTable[id]);\n    };\n    /**\n     * gets the active layer back\n     */\n    Diagram.prototype.getActiveLayer = function () {\n        return this.activeLayer;\n    };\n    Diagram.prototype.nudgeCommand = function (direction, x, y) {\n        if (typeof direction !== 'object') {\n            this.nudge(direction);\n        }\n    };\n    /**\n     * Moves the selected objects towards the given direction\n     * @param {NudgeDirection} direction -  Defines the direction by which the objects have to be moved\n     * @param {number} x - Defines the distance by which the selected objects have to be horizontally moved\n     * @param {number} y -  Defines the distance by which the selected objects have to be vertically moved\n     */\n    Diagram.prototype.nudge = function (direction, x, y) {\n        var tx = 0;\n        var ty = 0;\n        var negativeDirection;\n        if (direction === 'Left' || direction === 'Right') {\n            negativeDirection = (direction === 'Left');\n            tx = (negativeDirection ? -1 : 1) * (x ? x : 1);\n        }\n        else {\n            negativeDirection = (direction === 'Up');\n            ty = (negativeDirection ? -1 : 1) * (y ? y : 1);\n        }\n        var obj = this.selectedItems;\n        var annotation = this.selectedItems.wrapper.children[0];\n        if (annotation instanceof TextElement) {\n            this.commandHandler.labelDrag(obj.nodes[0], annotation, tx, ty);\n        }\n        else {\n            var undoObject = cloneObject(this.selectedItems);\n            this.protectPropertyChange(true);\n            this.drag(obj, tx, ty);\n            this.protectPropertyChange(false);\n            var entry = {\n                type: 'PositionChanged',\n                redoObject: cloneObject(this.selectedItems), undoObject: undoObject, category: 'Internal'\n            };\n            this.addHistoryEntry(entry);\n        }\n        this.refreshCanvasLayers();\n    };\n    Diagram.prototype.insertBlazorDiagramObjects = function (actualObject) {\n        if (isBlazor() && !(this.blazorActions & BlazorAction.interaction)) {\n            this.enableServerDataBinding(false);\n            if (actualObject instanceof Selector) {\n                for (var i = 0; i < actualObject.nodes.length; i++) {\n                    this.insertBlazorDiagramObjects(actualObject.nodes[i]);\n                }\n                for (var i = 0; i < actualObject.connectors.length; i++) {\n                    this.insertBlazorDiagramObjects(actualObject.connectors[i]);\n                }\n            }\n            if (!(actualObject instanceof Selector)) {\n                var object = void 0;\n                if (actualObject && actualObject.children && actualObject.children.length > 0) {\n                    for (var i = 0; i < actualObject.children.length; i++) {\n                        this.insertBlazorDiagramObjects(this.nameTable[actualObject.children[i]]);\n                    }\n                }\n                object = cloneObject(this.nameTable[actualObject.id]);\n                this.insertValue(object, !(getObjectType(actualObject) === Connector));\n            }\n        }\n    };\n    /**\n     * Drags the given object by the specified pixels\n     * @param {NodeModel | ConnectorMode | SelectorModel} obj - Defines the nodes/connectors to be dragged\n     * @param {number} tx - Defines the distance by which the given objects have to be horizontally moved\n     * @param {number} ty - Defines the distance by which the given objects have to be vertically moved\n     */\n    Diagram.prototype.drag = function (obj, tx, ty) {\n        this.insertBlazorDiagramObjects(obj);\n        if (isBlazor() && obj.id) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (this.bpmnModule && (obj instanceof Node)) {\n            var updated = this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n            if (updated) {\n                return;\n            }\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = true;\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    this.callBlazorModel = false;\n                    this.drag(node, tx, ty);\n                    if (node.parentId) {\n                        var parent_1 = this.nameTable[node.parentId];\n                        if (parent_1.isLane) {\n                            var swimlane = this.nameTable[parent_1.parentId];\n                            updateLaneBoundsAfterAddChild(parent_1, swimlane, node, this);\n                        }\n                    }\n                }\n                this.callBlazorModel = true;\n            }\n            if (obj.connectors && obj.connectors.length) {\n                this.callBlazorModel = false;\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.drag(conn, tx, ty);\n                    if (this.selectionConnectorsList.indexOf(conn) === -1) {\n                        this.selectionConnectorsList.push(conn);\n                    }\n                }\n                this.callBlazorModel = true;\n            }\n            this.updateSelector();\n            if ((this.diagramActions & DiagramAction.DragUsingMouse)) {\n                this.updatePage();\n            }\n        }\n        else {\n            if (obj instanceof Node) {\n                if (this.bpmnModule) {\n                    this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n                }\n            }\n            this.commandHandler.drag(obj, tx, ty);\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = false;\n            for (var _d = 0, _e = this.selectionConnectorsList; _d < _e.length; _d++) {\n                var connectors = _e[_d];\n                this.updateConnectorProperties(this.nameTable[connectors.id]);\n                if (connectors.shape.type === 'Bpmn' && connectors.shape.sequence === 'Default') {\n                    this.commandHandler.updatePathElementOffset(connectors);\n                }\n            }\n            this.selectionConnectorsList = [];\n        }\n        if (!(this.diagramActions & DiagramAction.ToolAction) && !(this.diagramActions & DiagramAction.DragUsingMouse)) {\n            this.updateSelector();\n        }\n        if (this.callBlazorModel && (!(this.blazorActions & BlazorAction.interaction))) {\n            this.commandHandler.getBlazorOldValues();\n        }\n    };\n    /**\n     * Scales the given objects by the given ratio\n     * @param {NodeModel | ConnectorModel | SelectorModel} obj - Defines the objects to be resized\n     * @param {number} sx - Defines the ratio by which the objects have to be horizontally scaled\n     * @param {number} sy - Defines the ratio by which the objects have to be vertically scaled\n     * @param {PointModel} pivot - Defines the reference point with respect to which the objects will be resized\n     */\n    Diagram.prototype.scale = function (obj, sx, sy, pivot) {\n        this.insertBlazorDiagramObjects(obj);\n        var checkBoundaryConstraints = true;\n        if (obj.id) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (obj instanceof Selector) {\n            if (obj.nodes && obj.nodes.length) {\n                this.callBlazorModel = false;\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    checkBoundaryConstraints = this.commandHandler.scale(node, sx, sy, pivot, obj);\n                    if (!this.commandHandler.checkBoundaryConstraints(undefined, undefined, obj.wrapper.bounds)) {\n                        this.commandHandler.scale(node, 1 / sx, 1 / sy, pivot, obj);\n                    }\n                }\n                this.callBlazorModel = true;\n            }\n            if (obj.connectors && obj.connectors.length) {\n                this.callBlazorModel = false;\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.commandHandler.scale(conn, sx, sy, pivot, obj);\n                    if (!this.commandHandler.checkBoundaryConstraints(undefined, undefined, obj.wrapper.bounds)) {\n                        this.commandHandler.scale(conn, 1 / sx, 1 / sy, pivot, obj);\n                    }\n                }\n                this.callBlazorModel = true;\n            }\n            this.updateSelector();\n            this.refreshCanvasLayers();\n        }\n        else {\n            this.commandHandler.scale(obj, sx, sy, pivot, (obj.children ? obj : undefined));\n        }\n        if (this.callBlazorModel && (!(this.blazorActions & BlazorAction.interaction))) {\n            this.commandHandler.getBlazorOldValues();\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Rotates the given nodes/connectors by the given angle\n     * @param {NodeModel | ConnectorModel | SelectorModel} obj - Defines the objects to be rotated\n     * @param {number} angle - Defines the angle by which the objects have to be rotated\n     * @param {PointModel} pivot - Defines the reference point with reference to which the objects have to be rotated\n     */\n    Diagram.prototype.rotate = function (obj, angle, pivot) {\n        this.insertBlazorDiagramObjects(obj);\n        var checkBoundaryConstraints;\n        if (obj.id) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (obj) {\n            pivot = pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY };\n            if (obj instanceof Selector) {\n                this.callBlazorModel = false;\n                obj.rotateAngle += angle;\n                obj.wrapper.rotateAngle += angle;\n                var bounds = getBounds(obj.wrapper);\n                checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bounds);\n                if (!checkBoundaryConstraints) {\n                    obj.rotateAngle -= angle;\n                    obj.wrapper.rotateAngle -= angle;\n                    return checkBoundaryConstraints;\n                }\n                var objects = [];\n                objects = objects.concat(obj.nodes);\n                objects = objects.concat(obj.connectors);\n                this.commandHandler.rotateObjects(obj, objects, angle, pivot);\n                this.callBlazorModel = true;\n            }\n            else {\n                this.commandHandler.rotateObjects(obj, [obj], angle, pivot);\n            }\n        }\n        if (this.callBlazorModel && (!(this.blazorActions & BlazorAction.interaction))) {\n            this.commandHandler.getBlazorOldValues();\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Moves the source point of the given connector\n     * @param {ConnectorModel} obj - Defines the connector, the end points of which has to be moved\n     * @param {number} tx - Defines the distance by which the end point has to be horizontally moved\n     * @param {number} ty - Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragSourceEnd = function (obj, tx, ty) {\n        this.insertBlazorDiagramObjects(obj);\n        this.commandHandler.dragSourceEnd(obj, tx, ty);\n        if (this.callBlazorModel) {\n            this.commandHandler.getBlazorOldValues();\n        }\n    };\n    /**\n     * Moves the target point of the given connector\n     * @param {ConnectorModel} obj - Defines the connector, the end points of which has to be moved\n     * @param {number} tx - Defines the distance by which the end point has to be horizontally moved\n     * @param {number} ty - Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragTargetEnd = function (obj, tx, ty) {\n        this.insertBlazorDiagramObjects(obj);\n        this.commandHandler.dragTargetEnd(obj, tx, ty);\n        if (this.callBlazorModel) {\n            this.commandHandler.getBlazorOldValues();\n        }\n    };\n    /**\n     * Finds all the objects that is under the given mouse position\n     * @param {PointModel} position - Defines the position, the objects under which has to be found\n     * @param {IElement} source - Defines the object, the objects under which has to be found\n     */\n    Diagram.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.eventHandler.findObjectsUnderMouse(position, source);\n    };\n    /**\n     * Finds the object that is under the given mouse position\n     * @param {NodeModel[] | ConnectorModel[]}objects - Defines the collection of objects, from which the object has to be found.\n     * @param {Actions} action - Defines the action, using which the relevant object has to be found.\n     * @param {boolean} inAction - Defines the active state of the action.\n     */\n    Diagram.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.eventHandler.findObjectUnderMouse(objects, action, inAction);\n    };\n    /**\n     * Finds the object that is under the given active object (Source)\n     * @param {NodeModel[] | ConnectorModel[]} objects - Defines the collection of objects, from which the object has to be found.\n     * @param {Actions} action - Defines the action, using which the relevant object has to be found.\n     * @param {boolean} inAction - Defines the active state of the action.\n     */\n    Diagram.prototype.findTargetObjectUnderMouse = function (objects, action, inAction, position, source) {\n        return this.eventHandler.findTargetUnderMouse(objects, action, inAction, position, source);\n    };\n    /**\n     * Finds the child element of the given object at the given position\n     * @param {IElement} obj - Defines the object, the child element of which has to be found\n     * @param {PointModel} position - Defines the position, the child element under which has to be found\n     * @param {number} padding - Defines the padding, the child element under which has to be found\n     */\n    Diagram.prototype.findElementUnderMouse = function (obj, position, padding) {\n        return this.eventHandler.findElementUnderMouse(obj, position, padding);\n    };\n    /**\n     * Defines the action to be done, when the mouse hovers the given element of the given object\n     * @param {NodeModel | ConnectorModel} obj - Defines the object under mouse\n     * @param {DiagramElement} wrapper - Defines the target element of the object under mouse\n     * @param {PointModel} position - Defines the current mouse position\n     * @private\n     */\n    Diagram.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return this.eventHandler.findActionToBeDone(obj, wrapper, position, target);\n    };\n    /**\n     * Returns the tool that handles the given action\n     * @param {string} action - Defines the action that is going to be performed\n     */\n    Diagram.prototype.getTool = function (action) {\n        var tool;\n        var getCustomTool = getFunction(this.getCustomTool);\n        if (getCustomTool) {\n            tool = getCustomTool(action);\n            if (tool) {\n                return tool;\n            }\n        }\n        return this.eventHandler.getTool(action);\n    };\n    /**\n     * Defines the cursor that corresponds to the given action\n     * @param {string} action - Defines the action that is going to be performed\n     */\n    Diagram.prototype.getCursor = function (action, active) {\n        var cursor;\n        var getCustomCursor = getFunction(this.getCustomCursor);\n        if (getCustomCursor) {\n            cursor = getCustomCursor(action, active);\n            if (cursor) {\n                return cursor;\n            }\n        }\n        if (this.customCursor.length) {\n            for (var i = 0; i < this.customCursor.length; i++) {\n                if (this.customCursor[i].action === action) {\n                    return this.customCursor[i].cursor;\n                }\n            }\n        }\n        return this.eventHandler.getCursor(action);\n    };\n    /**\n     * Initializes the undo redo actions\n     * @private\n     */\n    Diagram.prototype.initHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.initHistory(this);\n        }\n    };\n    /**\n     * Adds the given change in the diagram control to the track\n     * @param {HistoryEntry} entry - Defines the entry/information about a change in diagram\n     */\n    Diagram.prototype.addHistoryEntry = function (entry) {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo) && !this.currentSymbol) {\n            if (entry.undoObject && entry.undoObject.id === 'helper') {\n                return;\n            }\n            this.undoRedoModule.addHistoryEntry(entry, this);\n            if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n                this.historyChangeTrigger(entry, 'CustomAction');\n            }\n        }\n    };\n    /**\n     * Adds the given custom change in the diagram control to the track\n     * @param {HistoryEntry} entry - Defines the entry/information about a change in diagram\n     */\n    Diagram.prototype.addCustomHistoryEntry = function (entry) {\n        if (isBlazor() && this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            entry.type = undefined;\n            entry.category = 'External';\n            this.undoRedoModule.addHistoryEntry(entry, this);\n        }\n    };\n    /** @private */\n    Diagram.prototype.historyChangeTrigger = function (entry, action) {\n        var change = {};\n        var oldValue = 'oldValue';\n        var newValue = 'newValue';\n        var type = 'type';\n        var source = [];\n        if (entry.category === 'Internal') {\n            if (entry && entry.redoObject && ((entry.redoObject.nodes) instanceof Array) &&\n                ((entry.redoObject.connectors) instanceof Array)) {\n                source = entry.redoObject.nodes.concat(entry.redoObject.connectors);\n            }\n            else {\n                if (entry.redoObject) {\n                    source.push(entry.redoObject);\n                }\n            }\n            change[type] = entry.type;\n            switch (entry.type) {\n                case 'PositionChanged':\n                    change[oldValue] = {\n                        offsetX: entry.undoObject.offsetX,\n                        offsetY: entry.undoObject.offsetY\n                    };\n                    change[newValue] = {\n                        offsetX: entry.redoObject.offsetX,\n                        offsetY: entry.redoObject.offsetY\n                    };\n                    break;\n                case 'RotationChanged':\n                    change[oldValue] = { rotateAngle: entry.undoObject.rotateAngle };\n                    change[newValue] = { rotateAngle: entry.redoObject.rotateAngle };\n                    break;\n                case 'SizeChanged':\n                    change[oldValue] = {\n                        offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY,\n                        width: entry.undoObject.width, height: entry.undoObject.height\n                    };\n                    change[newValue] = {\n                        offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY,\n                        width: entry.redoObject.width, height: entry.redoObject.height\n                    };\n                    break;\n                case 'CollectionChanged':\n                    change[entry.changeType] = source;\n                    break;\n                case 'ConnectionChanged':\n                    change[oldValue] = {\n                        offsetX: entry.undoObject.offsetX,\n                        offsetY: entry.undoObject.offsetY\n                    };\n                    change[newValue] = {\n                        offsetX: entry.redoObject.offsetX,\n                        offsetY: entry.redoObject.offsetY\n                    };\n                    break;\n            }\n            var arg = void 0;\n            arg = {\n                cause: entry.category, source: cloneBlazorObject(source), change: cloneBlazorObject(change),\n                action: action\n            };\n            if (isBlazor()) {\n                arg = {\n                    cause: entry.category, change: cloneBlazorObject(change),\n                    source: { connectors: undefined, nodes: undefined }, action: action\n                };\n                var sourceValue = arg.source;\n                sourceValue.connectors = [];\n                sourceValue.nodes = [];\n                var object = void 0;\n                for (var i = 0; i < source.length; i++) {\n                    object = cloneBlazorObject(source[i]);\n                    (getObjectType(source[i]) === Connector) ?\n                        (sourceValue.connectors.push(object)) : (sourceValue.nodes.push(object));\n                }\n                arg.source = sourceValue;\n            }\n            if (source.length) {\n                this.triggerEvent(DiagramEvent.historyChange, arg);\n            }\n        }\n    };\n    /**\n     * Starts grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.startGroupAction = function () {\n        var entry = { type: 'StartGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Closes grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.endGroupAction = function () {\n        var entry = { type: 'EndGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Restores the last action that is performed\n     */\n    Diagram.prototype.undo = function () {\n        this.canEnableBlazorObject = true;\n        this.callBlazorModel = false;\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.undo(this);\n        }\n        this.commandHandler.getBlazorOldValues();\n        this.callBlazorModel = true;\n        this.canEnableBlazorObject = false;\n    };\n    /**\n     * Restores the last undone action\n     */\n    Diagram.prototype.redo = function () {\n        this.canEnableBlazorObject = true;\n        this.callBlazorModel = false;\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.redo(this);\n        }\n        this.commandHandler.getBlazorOldValues();\n        this.callBlazorModel = true;\n        this.canEnableBlazorObject = false;\n    };\n    Diagram.prototype.getBlazorDiagramObjects = function (objects) {\n        if (objects) {\n            for (var j = 0; j < objects.length; j++) {\n                this.insertBlazorDiagramObjects(objects[j]);\n            }\n        }\n        else {\n            this.insertBlazorDiagramObjects(this.selectedItems);\n        }\n        this.callBlazorModel = false;\n        this.canEnableBlazorObject = true;\n    };\n    /**\n     * Aligns the group of objects to with reference to the first object in the group\n     * @param {NodeModel[] | ConnectorModel[]} objects - Defines the objects that have to be aligned\n     * @param {AlignmentOptions}option - Defines the factor, by which the objects have to be aligned\n     */\n    Diagram.prototype.align = function (option, objects, type) {\n        this.getBlazorDiagramObjects(objects);\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.align(objects, option, (type ? type : 'Object'));\n        this.commandHandler.getBlazorOldValues();\n        this.callBlazorModel = true;\n        this.canEnableBlazorObject = false;\n    };\n    /**\n     * Arranges the group of objects with equal intervals, but within the group of objects\n     * @param {DistributeOptions} objects - Defines the objects that have to be equally spaced\n     * @param {NodeModel[] | ConnectorModel[]} option - Defines the factor to distribute the shapes\n     */\n    Diagram.prototype.distribute = function (option, objects) {\n        this.getBlazorDiagramObjects(objects);\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.distribute(objects, option);\n        this.commandHandler.getBlazorOldValues();\n        this.canEnableBlazorObject = false;\n        this.callBlazorModel = true;\n    };\n    /**\n     * Scales the given objects to the size of the first object in the group\n     * @param {NodeModel[] | ConnectorModel[]}objects - Defines the collection of objects that have to be scaled\n     * @param {SizingOptions} option - Defines whether the node has to be horizontally scaled, vertically scaled or both\n     */\n    Diagram.prototype.sameSize = function (option, objects) {\n        this.getBlazorDiagramObjects(objects);\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.sameSize(objects, option);\n        this.commandHandler.getBlazorOldValues();\n        this.canEnableBlazorObject = false;\n        this.callBlazorModel = true;\n    };\n    Diagram.prototype.updateBlazorDiagramProperties = function (attribute, canCall) {\n        if (isBlazor() && !canCall) {\n            this.enableServerDataBinding(false);\n            for (var i = 0; i < attribute.length; i++) {\n                this.oldDiagramObject[attribute[i]] = cloneObject(this[attribute[i]]);\n            }\n        }\n        if (canCall) {\n            this.commandHandler.getDiagramOldValues(this.oldDiagramObject, attribute);\n        }\n    };\n    Diagram.prototype.getZoomingAttribute = function () {\n        var attribute = [];\n        attribute.push('scrollSettings');\n        attribute.push('snapSettings');\n        return attribute;\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param {number} factor - Defines the factor by which the diagram is zoomed\n     * @param {PointModel} focusedPoint - Defines the point with respect to which the diagram has to be zoomed\n     */\n    Diagram.prototype.zoom = function (factor, focusedPoint) {\n        var attribute = this.getZoomingAttribute();\n        this.updateBlazorDiagramProperties(attribute);\n        this.scroller.zoom(factor, 0, 0, focusedPoint);\n        if (!(this.blazorActions & BlazorAction.interaction)) {\n            this.updateBlazorDiagramProperties(attribute, true);\n        }\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param {ZoomOptions} options - used to define the zoom factor, focus point and zoom type.\n     *\n     */\n    Diagram.prototype.zoomTo = function (options) {\n        var attribute = this.getZoomingAttribute();\n        this.updateBlazorDiagramProperties(attribute);\n        var factor = options.zoomFactor ? options.zoomFactor : 0.2;\n        factor = options.type === 'ZoomOut' ? 1 / (1 + factor) : (1 + factor);\n        this.scroller.zoom(factor, 0, 0, options.focusPoint);\n        this.updateBlazorDiagramProperties(attribute, true);\n    };\n    /**\n     * Pans the diagram control to the given horizontal and vertical offsets\n     * @param {number} horizontalOffset - Defines the horizontal distance to which the diagram has to be scrolled\n     * @param {number} verticalOffset - Defines the vertical distance to which the diagram has to be scrolled\n     */\n    Diagram.prototype.pan = function (horizontalOffset, verticalOffset, focusedPoint) {\n        var attribute = this.getZoomingAttribute();\n        this.updateBlazorDiagramProperties(attribute);\n        this.setCursor('grabbing');\n        this.scroller.zoom(1, horizontalOffset, verticalOffset, focusedPoint);\n        this.updateBlazorDiagramProperties(attribute, true);\n    };\n    /**\n     * Resets the zoom and scroller offsets to default values\n     */\n    Diagram.prototype.reset = function () {\n        var attribute = this.getZoomingAttribute();\n        this.updateBlazorDiagramProperties(attribute);\n        this.scroller.zoom(1 / this.scroller.currentZoom, -this.scroller.horizontalOffset, -this.scroller.verticalOffset, { x: 0, y: 0 });\n        this.updateBlazorDiagramProperties(attribute, true);\n    };\n    /**\n     * Resets the segments of the connectors\n     */\n    Diagram.prototype.resetSegments = function () {\n        var previousConnectorObject = [];\n        var updateConnectorObject = [];\n        var changeConnectors = [];\n        if (isBlazor()) {\n            for (var _i = 0, _a = this.connectors; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                previousConnectorObject.push(cloneObject(obj, undefined, undefined, true));\n            }\n        }\n        if (this.constraints & DiagramConstraints.LineRouting && this.lineRoutingModule) {\n            this.lineRoutingModule.lineRouting(this);\n        }\n        else {\n            this.protectPropertyChange(true);\n            var connector = void 0;\n            for (var i = 0; i < this.connectors.length; i++) {\n                connector = this.connectors[i];\n                connector.segments = [];\n                this.connectorPropertyChange(connector, {}, { segments: connector.segments });\n            }\n            this.protectPropertyChange(false);\n        }\n        if (isBlazor()) {\n            for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n                var obj = _c[_b];\n                updateConnectorObject.push(cloneObject(obj, undefined, undefined, true));\n            }\n            this.commandHandler.getObjectChanges(previousConnectorObject, updateConnectorObject, changeConnectors);\n            var blazorInterop = 'sfBlazor';\n            var blazor = 'Blazor';\n            var diagramObject = { nodes: [], connectors: changeConnectors };\n            if (window && window[blazor]) {\n                var obj = { 'methodName': 'UpdateBlazorProperties', 'diagramobj': diagramObject };\n                window[blazorInterop].updateBlazorProperties(obj, this);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.triggerEvent = function (eventName, args) {\n        return __awaiter(this, void 0, void 0, function () {\n            var eventArgs;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (args) {\n                            this.updateEventValue(args);\n                        }\n                        return [4 /*yield*/, this.trigger(DiagramEvent[eventName], args)];\n                    case 1:\n                        eventArgs = _a.sent();\n                        if (isBlazor() && typeof eventArgs === 'string') {\n                            eventArgs = JSON.parse(eventArgs);\n                        }\n                        return [2 /*return*/, eventArgs];\n                }\n            });\n        });\n    };\n    Diagram.prototype.updateEventValue = function (args) {\n        var element = args.element;\n        if (args.element && element instanceof Selector && (element.nodes.length + element.connectors.length === 1)) {\n            args.element = (element.nodes.length === 1) ? element.nodes[0] : element.connectors[0];\n        }\n    };\n    /**\n     * Adds the given node to the lane\n     * @deprecated\n     */\n    Diagram.prototype.addNodeToLane = function (node, swimLane, lane) {\n        if (this.nameTable[swimLane]) {\n            var swimlaneNode = this.nameTable[swimLane];\n            this.protectPropertyChange(true);\n            if (this.undoRedoModule) {\n                this.historyManager.startGroupAction();\n            }\n            if (!this.nameTable[node.id]) {\n                node.offsetX = swimlaneNode.wrapper.bounds.width + swimlaneNode.wrapper.bounds.x;\n                node.offsetY = swimlaneNode.wrapper.bounds.height + swimlaneNode.wrapper.bounds.y;\n                node = this.add(node);\n            }\n            node.parentId = '';\n            if (!swimlaneNode.shape.phases.length) {\n                var laneId = swimLane + lane + '0';\n                if (this.nameTable[laneId]) {\n                    addChildToContainer(this, this.nameTable[laneId], node, undefined, true);\n                    updateLaneBoundsAfterAddChild(this.nameTable[laneId], swimlaneNode, node, this);\n                }\n            }\n            else {\n                for (var i = 0; i < swimlaneNode.shape.phases.length; i++) {\n                    var laneId = swimLane + lane + i;\n                    if (this.nameTable[laneId] && this.nameTable[laneId].isLane) {\n                        var laneNode = this.nameTable[laneId].wrapper.bounds;\n                        var focusPoint = {\n                            x: laneNode.x +\n                                (laneNode.x - swimlaneNode.wrapper.bounds.x + node.margin.left + (node.wrapper.bounds.width / 2)),\n                            y: laneNode.y + swimlaneNode.wrapper.bounds.y - node.margin.top\n                        };\n                        if (swimlaneNode.shape.orientation === 'Horizontal') {\n                            focusPoint.y = laneNode.y;\n                        }\n                        else {\n                            focusPoint.x = laneNode.x;\n                            var laneHeaderId = this.nameTable[laneId].parentId +\n                                swimlaneNode.shape.lanes[0].id + '_0_header';\n                            focusPoint.y = laneNode.y +\n                                (swimlaneNode.wrapper.bounds.y - this.nameTable[laneHeaderId].wrapper.bounds.height +\n                                    node.margin.top + (node.wrapper.bounds.height / 2));\n                        }\n                        if (laneNode.containsPoint(focusPoint) ||\n                            (laneId === swimLane + lane + (swimlaneNode.shape.phases.length - 1))) {\n                            addChildToContainer(this, this.nameTable[laneId], node, undefined, true);\n                            updateLaneBoundsAfterAddChild(this.nameTable[laneId], swimlaneNode, node, this);\n                            break;\n                        }\n                    }\n                }\n            }\n            if (this.undoRedoModule) {\n                this.historyManager.endGroupAction();\n            }\n            this.protectPropertyChange(false);\n        }\n        this.updateDiagramElementQuad();\n    };\n    /**\n     * Shows tooltip for corresponding diagram object\n     * @param {NodeModel | ConnectorModel} obj - Defines the object for that tooltip has to be shown\n     */\n    Diagram.prototype.showTooltip = function (obj) {\n        var bounds = getBounds(obj.wrapper);\n        var position = { x: 0, y: 0 };\n        var content = obj.tooltip.content ?\n            obj.tooltip.content : 'X:' + Math.round(bounds.x) + ' ' + 'Y:' + Math.round(bounds.y);\n        if (obj && obj.tooltip.openOn === 'Custom') {\n            if (obj instanceof Node) {\n                position = { x: obj.offsetX + (obj.width / 2), y: obj.offsetY + (obj.height / 2) };\n            }\n            else {\n                position = { x: obj.targetPoint.x, y: obj.targetPoint.x };\n            }\n            this.commandHandler.showTooltip(obj, position, content, 'SelectTool', true);\n        }\n    };\n    /**\n     * hides tooltip for corresponding diagram object\n     * @param {NodeModel | ConnectorModel} obj - Defines the object for that tooltip has to be hide\n     */\n    Diagram.prototype.hideTooltip = function (obj) {\n        if (obj && obj.tooltip.openOn === 'Custom') {\n            this.tooltipObject.close();\n        }\n    };\n    /**\n     * Adds the given node to diagram control\n     * @param {NodeModel} obj - Defines the node that has to be added to diagram\n     * @blazorArgsType obj|DiagramNode\n     */\n    Diagram.prototype.addNode = function (obj, group) {\n        return this.add(obj, group);\n    };\n    /**\n     * Adds the given diagram object to the group.\n     * @param {NodeModel} Group - defines where the diagram object to be added.\n     * @param {string | NodeModel | ConnectorModel} Child - defines the diagram object to be added to the group\n     * @blazorArgsType obj|DiagramNode\n     */\n    Diagram.prototype.addChildToGroup = function (group, child) {\n        this.addChild(group, child);\n    };\n    /**\n     * Will return the history stack values\n     * @param {boolean} isUndoStack - returns the history stack values\n     */\n    Diagram.prototype.getHistoryStack = function (isUndoStack) {\n        var temp;\n        var historyEntry = [];\n        temp = isUndoStack ? this.historyManager.undoStack : this.historyManager.redoStack;\n        if (this.historyManager.stackLimit !== undefined) {\n            for (var i = temp.length - 1; i >= 0; i--) {\n                historyEntry.push(temp[i]);\n                if (historyEntry.length > this.historyManager.stackLimit) {\n                    return historyEntry;\n                }\n            }\n        }\n        else {\n            historyEntry = temp;\n        }\n        return historyEntry;\n    };\n    /* tslint:disable */\n    /**\n     * Return the edges for the given node\n     * @deprecated\n     * @param {Object} args - return the edge of the given node\n     */\n    Diagram.prototype.getEdges = function (args) {\n        return args['outEdge'] ? this.nameTable[args['id']].outEdges : this.nameTable[args['id']].inEdges;\n    };\n    /* tslint:enable */\n    /**\n     * Returns the parent id for the node\n     * @deprecated\n     * @param {string} id - returns the parent id\n     */\n    Diagram.prototype.getParentId = function (id) {\n        return this.nameTable[id].parentId;\n    };\n    /**\n     * Adds the given connector to diagram control\n     * @param {ConnectorModel} obj - Defines the connector that has to be added to diagram\n     * @blazorArgsType obj|DiagramConnector\n     */\n    Diagram.prototype.addConnector = function (obj) {\n        return this.add(obj);\n    };\n    /** @private */\n    Diagram.prototype.UpdateBlazorDiagramModelCollection = function (obj, copiedObject, multiSelectDelete) {\n        var blazorInterop = 'sfBlazor';\n        var updatedModel = cloneBlazorObject(obj);\n        var blazor = 'Blazor';\n        if (window && window[blazor] && (!this.isServerUpdate || multiSelectDelete)) {\n            this.isServerUpdate = true;\n            var removalIndexCollection = [];\n            var updatedModelCollection = [];\n            var connectorModelCollection = [];\n            var elements = [];\n            var removalIndex = void 0;\n            var tempNode = [];\n            var objectTypeCollection = [];\n            if (!copiedObject) {\n                if (!multiSelectDelete) {\n                    tempNode = this.commandHandler.getChildren(obj, elements);\n                }\n                else {\n                    tempNode = multiSelectDelete;\n                }\n                for (var i = 0; i < tempNode.length; i++) {\n                    updatedModel = cloneBlazorObject(tempNode[i]);\n                    updatedModelCollection.push(updatedModel);\n                    if (getObjectType(tempNode[i]) === Connector) {\n                        removalIndex = this.connectors.indexOf(tempNode[i]);\n                    }\n                    else {\n                        removalIndex = this.nodes.indexOf(tempNode[i]);\n                    }\n                    removalIndexCollection.push(removalIndex);\n                    objectTypeCollection.push(getObjectType(tempNode[i]) === Connector ? 'Connector' : 'Node');\n                }\n                if (!multiSelectDelete) {\n                    updatedModelCollection.push(cloneBlazorObject(obj));\n                    removalIndexCollection.push(this.nodes.indexOf(obj));\n                    objectTypeCollection.push(getObjectType(obj) === Connector ? 'Connector' : 'Node');\n                }\n            }\n            if (copiedObject && copiedObject.length > 0) {\n                for (var i = 0; i < copiedObject.length; i++) {\n                    updatedModel = cloneBlazorObject(copiedObject[i]);\n                    var isNode = (copiedObject[i] instanceof Node) ? true : false;\n                    isNode ? updatedModelCollection.push(updatedModel) : connectorModelCollection.push(updatedModel);\n                    objectTypeCollection.push(getObjectType(copiedObject[i]) === Connector ? 'Connector' : 'Node');\n                }\n            }\n            var dgmObj = {\n                'methodName': 'UpdateBlazorDiagramObjects',\n                'diagramobj': {\n                    'nodeObj': JSON.stringify(updatedModelCollection),\n                    'ObjectType': objectTypeCollection,\n                    'removalIndex': copiedObject ? undefined : removalIndexCollection,\n                    'isMultipleObjects': true, 'annotationIndex': undefined,\n                    'connectorObj': JSON.stringify(connectorModelCollection)\n                }\n            };\n            window[blazorInterop].updateBlazorProperties(dgmObj, this);\n        }\n    };\n    Diagram.prototype.UpdateBlazorDiagramModel = function (obj, objectType, removalIndex, annotationNodeIndex) {\n        var blazorInterop = 'sfBlazor';\n        var updatedModel = cloneBlazorObject(obj);\n        var blazor = 'Blazor';\n        if (window && window[blazor] && !this.isServerUpdate && !(this.diagramActions & DiagramAction.Clear)) {\n            var dgmObj = {\n                'methodName': 'UpdateBlazorDiagramObjects',\n                'diagramobj': {\n                    'nodeObj': JSON.stringify(updatedModel),\n                    'ObjectType': objectType, 'removalIndex': removalIndex,\n                    'isMultipleObjects': false,\n                    'annotationIndex': annotationNodeIndex, 'connectorObj': undefined\n                }\n            };\n            window[blazorInterop].updateBlazorProperties(dgmObj, this);\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.addBlazorDiagramObjects = function () {\n        var nodesCollection = [];\n        var connectorCollection = [];\n        if (this.dataBindingModule && !(this.realActions & RealAction.PreventDataInit)) {\n            for (var i = 0; i < this.nodes.length; i++) {\n                nodesCollection.push(cloneObject(this.nodes[i], undefined, undefined, true));\n            }\n            for (var i = 0; i < this.connectors.length; i++) {\n                connectorCollection.push(cloneObject(this.connectors[i], undefined, undefined, true));\n            }\n        }\n        var blazorInterop = 'sfBlazor';\n        var blazor = 'Blazor';\n        if (window && window[blazor]) {\n            var obj = {\n                'methodName': 'AddBlazorObjects',\n                'diagramobj': { 'nodeObj': JSON.stringify(nodesCollection), 'isConnector': false }\n            };\n            window[blazorInterop].updateBlazorProperties(obj, this);\n            obj = {\n                'methodName': 'AddBlazorObjects',\n                'diagramobj': { 'nodeObj': JSON.stringify(connectorCollection), 'isConnector': true }\n            };\n            window[blazorInterop].updateBlazorProperties(obj, this);\n        }\n    };\n    Diagram.prototype.removeNodeEdges = function (elementId, id, isOutEdges) {\n        var node = this.nameTable[elementId];\n        var edges = isOutEdges ? node.outEdges : node.inEdges;\n        if (edges.length > 0) {\n            for (var i = 0; i < edges.length; i++) {\n                if (edges[i] === id) {\n                    edges.splice(i, 1);\n                }\n            }\n        }\n    };\n    /* tslint:disable */\n    /**\n     * Adds the given object to diagram control\n     * @param {NodeModel | ConnectorModel} obj - Defines the object that has to be added to diagram\n     */\n    Diagram.prototype.add = function (obj, group) {\n        var newObj;\n        var propertyChangeValue = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        if (obj) {\n            obj = cloneObject(obj);\n            var args = void 0;\n            args = {\n                element: obj, cause: this.diagramActions, state: 'Changing', type: 'Addition', cancel: false\n            };\n            if (this.parentObject) {\n                args.parentId = this.parentObject.id;\n            }\n            if (isBlazor()) {\n                args = getCollectionChangeEventArguements(args, obj, 'Changing', 'Addition');\n            }\n            if (obj.id !== 'helper' && !(this.diagramActions & DiagramAction.PreventCollectionChangeOnDragOver)) {\n                this.triggerEvent(DiagramEvent.collectionChange, args);\n            }\n            if (args.cancel && this.drawingObject) {\n                this.removeElements(args.element);\n                this.tooltipObject.close();\n                if (getObjectType(args.element) === Connector) {\n                    if (args.element.sourceID) {\n                        this.removeNodeEdges(args.element.sourceID, args.element.id, true);\n                    }\n                    if (args.element.targetID) {\n                        this.removeNodeEdges(args.element.targetID, args.element.id, false);\n                    }\n                }\n            }\n            this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n            obj.id = obj.id || randomId();\n            var layers = this.activeLayer;\n            if (!args.cancel && !layers.lock) {\n                if (layers.objects.indexOf(obj.id) < 0 && !layers.lock) {\n                    if (!layers.visible) {\n                        layers.visible = true;\n                        this.dataBind();\n                    }\n                    layers.objects.push(obj.id);\n                }\n                if (getObjectType(obj) === Connector) {\n                    newObj = new Connector(this, 'connectors', obj, true);\n                    newObj.status = 'New';\n                    updateDefaultValues(newObj, obj, this.connectorDefaults);\n                    this.connectors.push(newObj);\n                    this.initObject(newObj);\n                    this.UpdateBlazorDiagramModel(newObj, \"Connector\");\n                    if (obj.visible === false) {\n                        this.updateElementVisibility(newObj.wrapper, newObj, obj.visible);\n                    }\n                    this.updateEdges(newObj);\n                }\n                else {\n                    newObj = new Node(this, 'nodes', obj, true);\n                    updateDefaultValues(newObj, obj, this.nodeDefaults);\n                    newObj.parentId = obj.parentId;\n                    newObj.umlIndex = obj.umlIndex;\n                    newObj.status = 'New';\n                    this.nodes.push(newObj);\n                    this.initObject(newObj, layers, undefined, group);\n                    this.UpdateBlazorDiagramModel(newObj, \"Node\");\n                    if (this.bpmnModule) {\n                        if (newObj.shape.annotations && newObj.shape.annotations.length !== 0) {\n                            for (var _i = 0, _a = this.bpmnModule.getTextAnnotationConn(newObj); _i < _a.length; _i++) {\n                                var obj_1 = _a[_i];\n                                this.initConnectors(obj_1, layers, false);\n                            }\n                        }\n                        if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                            newObj.shape.activity.subProcess.processes.length) {\n                            this.bpmnModule.updateDocks(newObj, this);\n                        }\n                    }\n                    if (this.lineRoutingModule && (this.constraints & DiagramConstraints.LineRouting)) {\n                        var objects = this.spatialSearch.findObjects(newObj.wrapper.outerBounds);\n                        for (var i = 0; i < objects.length; i++) {\n                            var object = objects[i];\n                            if (object instanceof Connector) {\n                                this.connectorPropertyChange(object, {}, {\n                                    sourceID: object.sourceID, targetID: object.targetID, sourcePortID: object.sourcePortID,\n                                    targetPortID: object.targetPortID, sourcePoint: object.sourcePoint, targetPoint: object.targetPoint\n                                });\n                            }\n                        }\n                    }\n                    if (newObj.umlIndex > -1 && obj.parentId && this.nameTable[obj.parentId] &&\n                        this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                        var parent_2 = this.nameTable[obj.parentId];\n                        parent_2.children.splice(newObj.umlIndex, 0, newObj.id);\n                        parent_2.wrapper.children.splice(newObj.umlIndex, 0, newObj.wrapper);\n                        parent_2.wrapper.measure(new Size());\n                        parent_2.wrapper.arrange(parent_2.wrapper.desiredSize);\n                        this.updateDiagramObject(parent_2);\n                    }\n                }\n                args = {\n                    element: newObj, cause: this.diagramActions, state: 'Changed', type: 'Addition', cancel: false\n                };\n                if (this.parentObject) {\n                    args.parentId = this.parentObject.id;\n                }\n                this.updateBlazorCollectionChange(newObj, true);\n                if (isBlazor()) {\n                    args = getCollectionChangeEventArguements(args, obj, 'Changed', 'Addition');\n                }\n                if (obj.id !== 'helper' && !(this.diagramActions & DiagramAction.PreventCollectionChangeOnDragOver)) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group) &&\n                    !(this.diagramActions & DiagramAction.PreventHistory)) {\n                    var entry = {\n                        type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(obj),\n                        redoObject: cloneObject(obj), category: 'Internal'\n                    };\n                    this.addHistoryEntry(entry);\n                }\n                this.parentObject = undefined;\n                if (this.mode === 'SVG') {\n                    this.updateSvgNodes(newObj);\n                    this.updateTextElementValue(newObj);\n                    this.updateDiagramObject(newObj);\n                    if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                        newObj.shape.activity.subProcess.processes.length) {\n                        this.updateProcesses(newObj);\n                    }\n                    this.updateBridging();\n                }\n            }\n        }\n        this.protectPropertyChange(propertyChangeValue);\n        this.resetDiagramActions(DiagramAction.PublicMethod);\n        if (newObj && this.layers.length > 1) {\n            this.moveNode(newObj);\n        }\n        for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n            var temp = _c[_b];\n            var view = this.views[temp];\n            if (!(view instanceof Diagram)) {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n        return newObj;\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateBlazorCollectionChange = function (newObject, isAdding) {\n        var blazorInterop = 'sfBlazor';\n        if (window && window[blazorInterop]) {\n            var newNode = {};\n            var object = newObject instanceof Node ? 'nodes' : 'connectors';\n            var index = void 0;\n            index = (object === 'nodes') ? this.nodes.indexOf(newObject).toString()\n                : this.connectors.indexOf(newObject).toString();\n            newNode[index] = cloneObject(newObject);\n            if (window[blazorInterop].updateDiagramCollection) {\n                window[blazorInterop].updateDiagramCollection.call(this, object, newNode, {}, !isAdding, false);\n            }\n        }\n    };\n    Diagram.prototype.updateSvgNodes = function (node) {\n        if (node.children) {\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var j = _a[_i];\n                if (this.nameTable[j] && this.nameTable[j].parentId) {\n                    var child = getDiagramElement(j + '_groupElement', this.element.id);\n                    if (child) {\n                        child.parentNode.removeChild(child);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateProcesses = function (node) {\n        if (this.bpmnModule && node && node.shape && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length) {\n            var processes = node.shape.activity.subProcess.processes;\n            this.moveSvgNode(node.id);\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var j = processes_1[_i];\n                this.moveSvgNode(j);\n                var edges = [];\n                edges = edges.concat(this.nameTable[j].outEdges, this.nameTable[j].inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    this.moveSvgNode(edges[i]);\n                }\n            }\n            for (var _a = 0, processes_2 = processes; _a < processes_2.length; _a++) {\n                var j = processes_2[_a];\n                if (this.nameTable[j].shape.activity.subProcess.processes &&\n                    this.nameTable[j].shape.activity.subProcess.processes.length) {\n                    this.updateProcesses(this.nameTable[j]);\n                }\n            }\n        }\n        else {\n            this.moveSvgNode(node.id);\n        }\n    };\n    /** @private */\n    Diagram.prototype.moveSvgNode = function (nodeId) {\n        var child = getDiagramElement(nodeId + '_groupElement', this.element.id);\n        var parent = child.parentElement;\n        child.parentNode.removeChild(child);\n        parent.appendChild(child);\n    };\n    /**\n     * Adds the given annotation to the given node\n     * @param {BpmnAnnotationModel} annotation - Defines the annotation to be added\n     * @param {NodeModel} node - Defines the node to which the annotation has to be added\n     */\n    Diagram.prototype.addTextAnnotation = function (annotation, node) {\n        if (this.bpmnModule) {\n            var connector = this.bpmnModule.addAnnotation(node, annotation, this);\n            this.initConnectors(connector, this.commandHandler.getObjectLayer(node.id), false);\n            this.updateDiagramObject(node);\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n    };\n    /**\n     * Splice the InEdge and OutEdge of the for the node with respect to corresponding connectors that is deleting\n     */\n    Diagram.prototype.spliceConnectorEdges = function (connector, isSource) {\n        var node;\n        var edges = [];\n        node = isSource ? this.nameTable[connector.sourceID] : this.nameTable[connector.targetID];\n        if (node) {\n            edges = isSource ? node.outEdges : node.inEdges;\n            for (var i = edges.length - 1; i >= 0; i--) {\n                if (edges[i] === connector.id) {\n                    edges.splice(i, 1);\n                }\n            }\n        }\n    };\n    /**\n     * Remove the dependent connectors if the node is deleted\n     * @private\n     */\n    Diagram.prototype.removeDependentConnector = function (node) {\n        var connector;\n        var edges = [];\n        edges = edges.concat(node.outEdges, node.inEdges);\n        for (var i = edges.length - 1; i >= 0; i--) {\n            connector = this.nameTable[edges[i]];\n            if (connector) {\n                this.connectorTable[connector.id] = cloneObject(connector);\n                this.remove(connector);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeObjectsFromLayer = function (obj) {\n        if (obj.children) {\n            for (var i = 0; i < obj.children.length; i++) {\n                var object = this.nameTable[obj.children[i]];\n                if (object) {\n                    this.removeObjectsFromLayer(object);\n                }\n            }\n        }\n        var layer = this.layers.indexOf(this.commandHandler.getObjectLayer(obj.id));\n        var objects = this.layers[layer].objects;\n        var objIndex = objects.indexOf(obj.id);\n        if (objIndex > -1) {\n            if (isSelected(this, obj)) {\n                this.unSelect(obj);\n            }\n            this.layers[layer].objects.splice(objIndex, 1);\n            delete this.layers[layer].zIndexTable[this.nameTable[obj.id].zIndex];\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeElements = function (currentObj) {\n        if (this.mode === 'SVG' || (this.mode === 'Canvas' && currentObj.shape.type === 'Native')) {\n            var removeElement_1 = getDiagramElement(currentObj.id + '_groupElement', this.element.id);\n            if (removeElement_1) {\n                removeElement_1.parentNode.removeChild(removeElement_1);\n            }\n        }\n        this.refreshCanvasLayers();\n        var children = currentObj.wrapper.children;\n        var element;\n        var view;\n        if (children) {\n            for (var i = 0; i < children.length; i++) {\n                if (children[i] instanceof DiagramNativeElement || ((children[i].id) && (children[i].id).indexOf('icon_content') > 0)) {\n                    if ((children[i].id).indexOf('icon_content') > 0 && this.mode === 'SVG') {\n                        element = getDiagramElement(children[i].id + '_shape_groupElement', this.element.id);\n                        if (element) {\n                            element.parentNode.removeChild(element);\n                        }\n                        element = getDiagramElement(children[i].id + '_rect_groupElement', this.element.id);\n                        if (element) {\n                            element.parentNode.removeChild(element);\n                        }\n                    }\n                    for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                        var elementId = _a[_i];\n                        removeElement(children[i].id + '_groupElement', elementId);\n                        var nodeIndex = this.scroller.removeCollection.indexOf(currentObj.id);\n                        this.scroller.removeCollection.splice(nodeIndex, 1);\n                    }\n                }\n                else if (children[i] instanceof DiagramHtmlElement) {\n                    for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                        var elementId = _c[_b];\n                        removeElement(currentObj.id + '_html_element', elementId);\n                        removeElement(children[i].id + '_html_element', elementId);\n                    }\n                }\n                removeGradient(children[i].id);\n            }\n        }\n    };\n    Diagram.prototype.removeCommand = function () {\n        this.remove();\n    };\n    /**\n     * Removes the given object from diagram\n     * @param {NodeModel | ConnectorModel} obj - Defines the object that has to be removed from diagram\n     */\n    /* tslint:disable */\n    Diagram.prototype.remove = function (obj) {\n        var selectedItems = [];\n        selectedItems = selectedItems.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        var args;\n        var groupAction = false;\n        if (obj) {\n            obj = this.nameTable[obj.id];\n            if (obj && obj.shape && obj.shape.type === 'SwimLane') {\n                removeSwimLane(this, obj);\n            }\n            if (obj && (canDelete(obj) || (this.diagramActions & DiagramAction.Clear))) {\n                args = {\n                    element: obj, cause: this.diagramActions,\n                    state: 'Changing', type: 'Removal', cancel: false\n                };\n                if (isBlazor()) {\n                    args = getCollectionChangeEventArguements(args, obj, 'Changing', 'Removal');\n                }\n                if (!(this.diagramActions & DiagramAction.Clear) && (obj.id !== 'helper')) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!args.cancel) {\n                    if (this.bpmnModule) {\n                        if (this.bpmnModule.checkAndRemoveAnnotations(obj, this)) {\n                            this.refreshCanvasLayers();\n                            return;\n                        }\n                    }\n                    if ((!(this.diagramActions & DiagramAction.UndoRedo)) && !(this.diagramActions & DiagramAction.PreventHistory) &&\n                        (obj instanceof Node || obj instanceof Connector)) {\n                        var entry = {\n                            type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj),\n                            redoObject: cloneObject(obj), category: 'Internal'\n                        };\n                        this.updateBlazorCollectionChange(obj, false);\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            if (selectedItems.length > 0 && this.undoRedoModule && !this.layout.type) {\n                                this.historyManager.startGroupAction();\n                                groupAction = true;\n                            }\n                        }\n                        if (obj instanceof Node) {\n                            this.removeDependentConnector(obj);\n                        }\n                        if (!obj.isLane && !obj.isPhase) {\n                            if (!(this.diagramActions & DiagramAction.Clear) && !this.isStackChild(obj)) {\n                                this.addHistoryEntry(entry);\n                            }\n                        }\n                    }\n                    if (obj.children && !obj.isLane && !obj.isPhase) {\n                        this.deleteGroup(obj);\n                    }\n                    if (obj.parentId) {\n                        this.deleteChild(obj);\n                        if (this.nameTable[obj.parentId] && this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                            this.updateDiagramObject(this.nameTable[obj.parentId]);\n                            this.updateConnectorEdges(this.nameTable[obj.parentId]);\n                        }\n                    }\n                    var index = void 0;\n                    this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n                    var currentObj = this.nameTable[obj.id];\n                    if (currentObj instanceof Node) {\n                        if (currentObj.shape.type === 'Bpmn' && this.bpmnModule) {\n                            this.bpmnModule.removeBpmnProcesses(currentObj, this);\n                        }\n                        if (currentObj.isLane || currentObj.isPhase || currentObj.shape.type === 'SwimLane') {\n                            var swimLaneNode = (currentObj.isLane || currentObj.isPhase) ?\n                                this.nameTable[currentObj.parentId] : this.nameTable[currentObj.id];\n                            var grid = swimLaneNode.wrapper.children[0];\n                            if (currentObj.isLane) {\n                                removeLane(this, currentObj, swimLaneNode);\n                            }\n                            else if (currentObj.isPhase) {\n                                removePhase(this, currentObj, swimLaneNode);\n                            }\n                        }\n                        index = this.nodes.indexOf(currentObj);\n                        if (isBlazor() && (obj.id !== 'helper')) {\n                            this.UpdateBlazorDiagramModel(obj, \"Node\", index);\n                        }\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.nodes.splice(index, 1);\n                            this.updateNodeEdges(currentObj);\n                        }\n                    }\n                    else {\n                        index = this.connectors.indexOf(currentObj);\n                        this.UpdateBlazorDiagramModel(obj, \"Connector\", index);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.connectors.splice(index, 1);\n                        }\n                        this.updateEdges(currentObj);\n                        this.spliceConnectorEdges(obj, true);\n                        this.spliceConnectorEdges(obj, false);\n                    }\n                    if (groupAction) {\n                        this.historyManager.endGroupAction();\n                    }\n                    if (isSelected(this, currentObj)) {\n                        this.unSelect(currentObj);\n                    }\n                    if (!currentObj.isPhase) {\n                        this.removeObjectsFromLayer(obj);\n                        if (this.currentDrawingObject) {\n                            this.currentDrawingObject.wrapper = undefined;\n                        }\n                        delete this.nameTable[obj.id];\n                        if (selectedItems.length > 0 && selectedItems[0].id === currentObj.id && currentObj.parentId) {\n                            var parentnode = this.nameTable[currentObj.parentId];\n                            if (parentnode && parentnode.isLane && this.nameTable[parentnode.parentId].shape.type === 'SwimLane') {\n                                var swimLaneNode = this.nameTable[parentnode.parentId];\n                                removeLaneChildNode(this, swimLaneNode, parentnode, currentObj);\n                            }\n                        }\n                        this.removeElements(currentObj);\n                        this.updateBridging();\n                        if (this.mode !== 'SVG') {\n                            this.refreshDiagramLayer();\n                        }\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            this.removeFromAQuad(currentObj);\n                            args = {\n                                element: obj, cause: this.diagramActions,\n                                state: 'Changed', type: 'Removal', cancel: false\n                            };\n                            if (isBlazor()) {\n                                args = getCollectionChangeEventArguements(args, obj, 'Changed', 'Removal');\n                            }\n                            if (obj.id !== 'helper') {\n                                this.triggerEvent(DiagramEvent.collectionChange, args);\n                            }\n                            this.resetTool();\n                        }\n                    }\n                }\n            }\n        }\n        else if (selectedItems.length > 0) {\n            if (this.undoRedoModule) {\n                this.historyManager.startGroupAction();\n                groupAction = true;\n            }\n            for (var i = 0; i < selectedItems.length; i++) {\n                var node = selectedItems[i];\n                if (this.nameTable[selectedItems[i].id]) {\n                    if ((selectedItems[i] instanceof Connector) && this.bpmnModule &&\n                        this.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[i]) > -1) {\n                        this.remove(this.nameTable[selectedItems[i].targetID]);\n                        return;\n                    }\n                    if (isBlazor()) {\n                        if (!this.isServerUpdate && selectedItems && selectedItems.length > 1) {\n                            this.isServerUpdate = true;\n                            this.UpdateBlazorDiagramModelCollection(selectedItems[0], undefined, selectedItems);\n                        }\n                        if (selectedItems[i].parentId) {\n                            this.insertBlazorDiagramObjects(this.nameTable[selectedItems[i].parentId]);\n                        }\n                    }\n                    this.remove(selectedItems[i]);\n                    if (isBlazor() && selectedItems[i].parentId) {\n                        this.commandHandler.getBlazorOldValues();\n                        this.isServerUpdate = false;\n                    }\n                }\n            }\n            if (groupAction) {\n                this.historyManager.endGroupAction();\n            }\n            this.clearSelection();\n        }\n        this.tooltipObject.close();\n        if (isBlazor() && selectedItems && selectedItems.length > 0) {\n            var check = true;\n            for (var k = 0; k < selectedItems.length; k++) {\n                if (this.nameTable[selectedItems[k].id]) {\n                    check = false;\n                }\n            }\n            if (check) {\n                this.isServerUpdate = false;\n            }\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.isStackChild = function (obj) {\n        var isstack;\n        var parent = this.nameTable[obj.parentId];\n        if (obj && obj.parentId && parent.container &&\n            (parent.container.type === 'Stack' &&\n                this.nameTable[obj.parentId].shape.type !== 'UmlClassifier')) {\n            isstack = true;\n            var redoElement = {\n                sourceIndex: parent.wrapper.children.indexOf(obj.wrapper), source: obj,\n                target: undefined, targetIndex: undefined\n            };\n            var entry = {\n                type: 'StackChildPositionChanged', redoObject: {\n                    sourceIndex: undefined, source: obj,\n                    target: undefined, targetIndex: undefined\n                },\n                undoObject: redoElement,\n                category: 'Internal'\n            };\n            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n        }\n        return isstack;\n    };\n    /** @private */\n    Diagram.prototype.deleteChild = function (node, parentNode) {\n        var id;\n        parentNode = parentNode ? this.nameTable[parentNode.id] : this.nameTable[node.parentId];\n        if (typeof node === 'string') {\n            id = node;\n        }\n        else {\n            id = node.id;\n        }\n        if (parentNode && parentNode.children) {\n            for (var i = 0; i < parentNode.children.length; i++) {\n                if (parentNode.children[i] === id) {\n                    parentNode.children.splice(i, 1);\n                    for (var j = 0; j < parentNode.wrapper.children.length; j++) {\n                        if (parentNode.wrapper.children[j].id === id) {\n                            parentNode.wrapper.children.splice(j, 1);\n                        }\n                    }\n                }\n            }\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n        }\n    };\n    /** @private  */\n    Diagram.prototype.addChild = function (node, child, index) {\n        var id;\n        var parentNode = this.nameTable[node.id];\n        if (!parentNode.children) {\n            parentNode.children = [];\n        }\n        if (parentNode.children) {\n            if (typeof child === 'string') {\n                if (this.nameTable[child]) {\n                    id = child;\n                }\n            }\n            else {\n                id = child.id = child.id || randomId();\n                this.add(child);\n            }\n            if (id && (!child.umlIndex || child.umlIndex === -1)) {\n                var childNode = this.nameTable[id];\n                childNode.parentId = parentNode.id;\n                if (parentNode.container && parentNode.container.type === 'Stack') {\n                    this.updateStackProperty(parentNode, childNode);\n                }\n                if (index) {\n                    parentNode.children.splice(index, 0, id);\n                    parentNode.wrapper.children.splice(index, 0, childNode.wrapper);\n                }\n                else {\n                    parentNode.children.push(id);\n                    parentNode.wrapper.children.push(childNode.wrapper);\n                }\n                parentNode.wrapper.measure(new Size());\n                parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                if (parentNode.container !== undefined) {\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n                if (!parentNode.parentId ||\n                    (this.nameTable[parentNode.parentId] &&\n                        this.nameTable[parentNode.parentId].shape.type !== 'SwimLane')) {\n                    this.updateDiagramObject(parentNode);\n                }\n            }\n        }\n    };\n    /**\n     * Clears all nodes and objects in the diagram\n     * @deprecated\n     */\n    Diagram.prototype.clear = function () {\n        this.clearObjects();\n    };\n    Diagram.prototype.clearObjects = function (collection) {\n        var objects = [];\n        if (!collection) {\n            objects = objects.concat(this.nodes);\n            objects = objects.concat(this.connectors);\n        }\n        else {\n            objects = collection;\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.Clear;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var obj = objects_1[_i];\n            if (this.nameTable[obj.id]) {\n                this.remove(obj);\n            }\n        }\n        this.diagramActions = this.diagramActions & ~DiagramAction.Clear;\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.initHistory();\n    };\n    Diagram.prototype.startEditCommad = function () {\n        var laneHeader;\n        var node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : undefined;\n        if (node && node instanceof Node) {\n            if (node.isLane && node.parentId) {\n                var swimlane = this.nameTable[node.parentId];\n                var lanes = swimlane.shape.lanes;\n                var canvasId = (node.id.slice(swimlane.id.length));\n                var currentParentId = canvasId.substring(0, canvasId.length - 1);\n                for (var i = 0; i < lanes.length; i++) {\n                    if (node.isLane && currentParentId === lanes[i].id) {\n                        laneHeader = this.nameTable[lanes[i].header.id];\n                    }\n                }\n            }\n            else if (node.shape.type === 'SwimLane' && node.shape.header && node.shape.hasHeader) {\n                var id = node.wrapper.children[0].rows[0].cells[0].children[0].id;\n                laneHeader = this.nameTable[id];\n            }\n        }\n        this.startTextEdit(laneHeader);\n    };\n    /* tslint:disable */\n    /**\n     * Specified annotation to edit mode\n     * @param {NodeModel | ConnectorModel} node - Defines node/connector that contains the annotation to be edited\n     * @param {string} id - Defines annotation id to be edited in the node\n     */\n    Diagram.prototype.startTextEdit = function (node, id) {\n        if ((!canZoomPan(this) && !canMultiSelect(this)) || canSingleSelect(this)) {\n            this.textEditing = true;\n            var transform = this.scroller.transform;\n            var scale = canZoomTextEdit(this) ? transform.scale : 1;\n            var minWidth = 90;\n            var text = void 0;\n            var bounds = void 0;\n            var attributes = void 0;\n            var x = void 0;\n            var y = void 0;\n            var textWrapper = void 0;\n            if (!node) {\n                node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : this.selectedItems.connectors[0];\n            }\n            if (node) {\n                if (isBlazor()) {\n                    var selectedNode = cloneObject(node);\n                    if (selectedNode.annotations.length > 0) {\n                        this.insertValue(selectedNode, (node instanceof Node) ? true : false);\n                    }\n                    node = this.nameTable[node.id] || node;\n                }\n                if (node.shape && node.shape.type === 'UmlClassifier') {\n                    node = this.nameTable[node.children[0]];\n                }\n                var bpmnAnnotation = false;\n                if (this.bpmnModule) {\n                    textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, id);\n                    if (textWrapper) {\n                        node = this.nameTable[node.id.split('_textannotation_')[0]];\n                    }\n                }\n                if (!textWrapper) {\n                    if (node.shape.type !== 'Text' && node.annotations.length === 0) {\n                        if (!(node.constraints & NodeConstraints.ReadOnly)) {\n                            this.activeLabel.isGroup = true;\n                            this.startGroupAction();\n                            this.addLabels(node, [{ id: randomId(), content: '' }]);\n                        }\n                    }\n                    if (!id && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n                        id = (node.shape.type === 'Text') ? (node.wrapper.children[0].id).split('_')[1] : node.annotations[0].id;\n                    }\n                    if (id) {\n                        textWrapper = this.getWrapper(node.wrapper, id);\n                    }\n                }\n                else {\n                    bpmnAnnotation = true;\n                }\n                if (node && textWrapper && !(textWrapper instanceof DiagramHtmlElement) &&\n                    (!enableReadOnly(textWrapper, node) || bpmnAnnotation)) {\n                    var style = (textWrapper.style);\n                    var maxWidth = void 0;\n                    maxWidth = textWrapper.bounds.width < node.wrapper.bounds.width ? textWrapper.bounds.width : node.wrapper.bounds.width;\n                    maxWidth = minWidth > maxWidth ? minWidth : maxWidth;\n                    var textEditing = document.getElementById(this.element.id + '_editTextBoxDiv');\n                    var textArea = document.getElementById(this.element.id + '_editBox');\n                    text = textArea ? textArea.value : textWrapper.content;\n                    this.activeLabel.text = text;\n                    if (!textEditing && !textArea) {\n                        textEditing = createHtmlElement('div', {});\n                        textArea = createHtmlElement('textarea', {});\n                        this.diagramCanvas.appendChild(textEditing);\n                        textEditing.appendChild(textArea);\n                        textArea.appendChild(document.createTextNode(text));\n                    }\n                    bounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n                    if (bounds.isEmpty()) {\n                        if (node.shape.type !== 'Text') {\n                            bounds = new Size(findAnnotation(node, (textWrapper.id).split(node.id + '_')[1]).width || 50, textWrapper.style.fontSize);\n                        }\n                        else {\n                            bounds = new Size((node.width > 50) ? 50 : node.width, textWrapper.style.fontSize);\n                        }\n                    }\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n                        bounds.width = node.wrapper.bounds.width - 20;\n                        x = ((((node.wrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((node.wrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                        textWrapper.style.textAlign = 'Left';\n                    }\n                    else {\n                        bounds.width = Math.max(bounds.width, 50);\n                        x = ((((textWrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((textWrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                    }\n                    attributes = {\n                        'id': this.element.id + '_editTextBoxDiv', 'style': 'position: absolute' + ';left:' + x + 'px;top:' +\n                            y + 'px;width:' + ((bounds.width + 1) * scale) + 'px;height:' + (bounds.height * scale) +\n                            'px; containerName:' + node.id + ';'\n                    };\n                    setAttributeHtml(textEditing, attributes);\n                    attributes = {\n                        'id': this.element.id + '_editBox', 'style': 'width:' + ((bounds.width + 1) * scale) +\n                            'px;height:' + (bounds.height * scale) + 'px;resize: none;outline: none;overflow: hidden;' +\n                            ';font-family:' + style.fontFamily +\n                            ';font-size:' + (style.fontSize * scale) + 'px;text-align:' +\n                            (textWrapper.style.textAlign.toLocaleLowerCase()) + ';', 'class': 'e-diagram-text-edit'\n                    };\n                    setAttributeHtml(textArea, attributes);\n                    textArea.style.fontWeight = (style.bold) ? 'bold' : '';\n                    textArea.style.fontStyle = (style.italic) ? 'italic' : '';\n                    textArea.style.lineHeight = (style.fontSize * 1.2 + 'px;').toString();\n                    textArea.style.textDecoration = (style.textDecoration) ? style.textDecoration : '';\n                    this.activeLabel.parentId = node.id;\n                    this.activeLabel.id = id;\n                    textWrapper.visible = false;\n                    this.updateDiagramObject(node);\n                    this.diagramActions = this.diagramActions | DiagramAction.TextEdit;\n                    if (!this.isTriggerEvent) {\n                        EventHandler.add(textArea, 'input', this.eventHandler.inputChange, this.eventHandler);\n                        EventHandler.add(textArea, 'focusout', this.focusOutEdit, this);\n                        textArea.select();\n                    }\n                }\n            }\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateNodeExpand = function (node, visibility) {\n        for (var i = 0; i < node.outEdges.length; i++) {\n            var connector = this.nameTable[node.outEdges[i]];\n            var target = this.nameTable[connector.targetID];\n            connector.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(connector.wrapper, connector, false);\n                target.isExpanded = visibility;\n            }\n            this.updateNodeExpand(target, target.isExpanded);\n            target.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(target.wrapper, target, false);\n            }\n        }\n    };\n    Diagram.prototype.updateConnectorAnnotation = function (connector) {\n        if (connector.annotations.length) {\n            var annotationWrapper = void 0;\n            for (var _i = 0, _a = connector.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                annotationWrapper = this.getWrapper(connector.wrapper, annotation.id);\n                connector.updateAnnotation(annotation, connector.intermediatePoints, connector.wrapper.bounds, annotationWrapper, (this.diagramActions & DiagramAction.Interactions));\n            }\n        }\n        connector.wrapper.measure(new Size(connector.wrapper.width, connector.wrapper.height));\n        connector.wrapper.arrange(connector.wrapper.desiredSize);\n    };\n    Diagram.prototype.removeChildrenFromLayout = function (nodes) {\n        var nodesCollection = [];\n        var node;\n        var parentId = 'parentId';\n        var processId = 'processId';\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node[parentId] && !node[processId]) {\n                nodesCollection.push(node);\n            }\n        }\n        return nodesCollection;\n    };\n    /**\n     * Automatically updates the diagram objects based on the type of the layout\n     */\n    Diagram.prototype.doLayout = function () {\n        var update = false;\n        var layout;\n        var propChange = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        var nodes = this.removeChildrenFromLayout(this.nodes);\n        var viewPort = { x: this.scroller.viewPortWidth, y: this.scroller.viewPortHeight };\n        if (this.layout.type !== 'None') {\n            if (this.organizationalChartModule) {\n                layout = this.organizationalChartModule.updateLayout(nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.diagramActions);\n                update = true;\n                if (this.layoutAnimateModule && layout.rootNode && !this.diagramActions) {\n                    this.updateNodeExpand(layout.rootNode, layout.rootNode.isExpanded);\n                }\n            }\n            else if (this.mindMapChartModule) {\n                if (nodes && nodes.length > 0) {\n                    this.mindMapChartModule.updateLayout(nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.dataSourceSettings.root);\n                }\n                update = true;\n            }\n            else if (this.radialTreeModule) {\n                this.radialTreeModule.updateLayout(nodes, this.nameTable, this.layout, viewPort);\n                update = true;\n            }\n            else if (this.symmetricalLayoutModule) {\n                this.symmetricalLayoutModule.maxIteration = this.layout.maxIteration;\n                this.symmetricalLayoutModule.springLength = this.layout.springLength;\n                this.symmetricalLayoutModule.springFactor = this.layout.springFactor;\n                this.symmetricalLayoutModule.updateLayout(nodes, this.connectors, this.symmetricalLayoutModule, this.nameTable, this.layout, viewPort);\n                update = true;\n            }\n            else if (this.complexHierarchicalTreeModule) {\n                var nodes_1 = this.complexHierarchicalTreeModule.getLayoutNodesCollection(this.nodes);\n                if (nodes_1.length > 0) {\n                    this.complexHierarchicalTreeModule.doLayout(nodes_1, this.nameTable, this.layout, viewPort);\n                }\n                update = true;\n            }\n            if (update) {\n                this.preventUpdate = true;\n                var connectors = {};\n                var updatedNodes = nodes;\n                if (isBlazor()) {\n                    this.updateTemplate();\n                }\n                for (var _i = 0, updatedNodes_1 = updatedNodes; _i < updatedNodes_1.length; _i++) {\n                    var obj = updatedNodes_1[_i];\n                    var node = obj;\n                    if (!this.preventNodesUpdate && (!this.diagramActions || !(this.diagramActions & DiagramAction.PreventIconsUpdate))) {\n                        this.updateIcon(node);\n                        this.updateDefaultLayoutIcons(node);\n                    }\n                    this.preventNodesUpdate = true;\n                    this.nodePropertyChange(node, {}, { offsetX: node.offsetX, offsetY: node.offsetY }, true);\n                    this.preventNodesUpdate = false;\n                    node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                    node.wrapper.arrange(node.wrapper.desiredSize);\n                    this.updateDiagramObject(node, true);\n                    if (node.inEdges.length > 0) {\n                        for (var j = 0; j < node.inEdges.length; j++) {\n                            var connector = this.nameTable[node.inEdges[j]];\n                            connectors[connector.id] = connector;\n                        }\n                    }\n                    if (node.outEdges.length > 0) {\n                        for (var k = 0; k < node.outEdges.length; k++) {\n                            var connection = this.nameTable[node.outEdges[k]];\n                            connectors[connection.id] = connection;\n                        }\n                    }\n                }\n                for (var _a = 0, _b = Object.keys(connectors); _a < _b.length; _a++) {\n                    var conn = _b[_a];\n                    var connector = connectors[conn];\n                    var points = this.getPoints(connector);\n                    updateConnector(connector, points);\n                    if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                        this.commandHandler.updatePathElementOffset(connector);\n                    }\n                    connector.wrapper.measure(new Size(undefined, undefined));\n                    connector.wrapper.arrange(connector.wrapper.desiredSize);\n                    this.updateConnectorAnnotation(connector);\n                    this.updateQuad(connector);\n                    this.updateDiagramObject(connector, true);\n                }\n                this.preventUpdate = false;\n                this.updatePage();\n                if ((!(this.diagramActions & DiagramAction.Render)) || this.mode === 'Canvas') {\n                    this.refreshDiagramLayer();\n                }\n            }\n            if (!propChange) {\n                this.protectPropertyChange(propChange);\n            }\n        }\n        if (update) {\n            this.updateDiagramElementQuad();\n        }\n        return ((this.blazorActions & BlazorAction.expandNode) ? layout : true);\n    };\n    /**\n     * Serializes the diagram control as a string\n     */\n    Diagram.prototype.saveDiagram = function () {\n        return serialize(this);\n    };\n    /**\n     * Converts the given string as a Diagram Control\n     * @param {string} data - Defines the behavior of the diagram to be loaded\n     * @deprecated\n     */\n    Diagram.prototype.loadDiagram = function (data) {\n        return deserialize(data, this);\n    };\n    /**\n     * To  get the html diagram content\n     * @param {StyleSheetList} styleSheets - defines the collection of style files to be considered while exporting.\n     */\n    Diagram.prototype.getDiagramContent = function (styleSheets) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.getDiagramContent(styleSheets);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To export diagram native/html image\n     * @param {string} image - defines image content to be exported.\n     * @param {IExportOptions} options - defines the image properties.\n     */\n    Diagram.prototype.exportImage = function (image, options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To print native/html nodes of diagram\n     * @param {string} image - defines image content.\n     * @param {IExportOptions} options - defines the properties of the image\n     */\n    Diagram.prototype.printImage = function (image, options) {\n        if (this.printandExportModule) {\n            options.printOptions = true;\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To limit the history entry of the diagram\n     * @param {number} stackLimit - defines stackLimit of the history manager.\n     */\n    Diagram.prototype.setStackLimit = function (stackLimit) {\n        if (this.undoRedoModule && stackLimit) {\n            this.historyManager.stackLimit = stackLimit;\n            this.undoRedoModule.applyLimit(this.historyManager.currentEntry, stackLimit, this, true);\n        }\n    };\n    /**\n     * To clear history of the diagram\n     */\n    Diagram.prototype.clearHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.clearHistory(this);\n        }\n    };\n    /**\n     * To get the bound of the diagram\n     */\n    Diagram.prototype.getDiagramBounds = function () {\n        if (this.printandExportModule) {\n            var bounds = this.printandExportModule.getDiagramBounds('', {});\n            bounds.width = bounds.width > this.scrollSettings.viewPortWidth ?\n                bounds.width + (bounds.x > 0 ? bounds.x : 0) : this.scrollSettings.viewPortWidth;\n            bounds.height = bounds.height > this.scrollSettings.viewPortHeight ?\n                bounds.height + (bounds.y > 0 ? bounds.y : 0) : this.scrollSettings.viewPortHeight;\n            bounds.x = bounds.x > 0 ? 0 : bounds.x;\n            bounds.y = bounds.y > 0 ? 0 : bounds.y;\n            return bounds;\n        }\n        return new Rect();\n    };\n    /**\n     * To export Diagram\n     * @param {IExportOptions} options - defines the how the image to be exported.\n     */\n    Diagram.prototype.exportDiagram = function (options) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.exportDiagram(options);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To print Diagram\n     * @param {IPrintOptions} optons - defines how the image to be printed.\n     */\n    Diagram.prototype.print = function (options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.print(options);\n        }\n    };\n    /**\n     * Add ports at the run time\n     * @blazorArgsType obj|DiagramNode\n     */\n    Diagram.prototype.addPorts = function (obj, ports) {\n        this.protectPropertyChange(true);\n        obj = this.nameTable[obj.id] || obj;\n        var newObj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < ports.length; i++) {\n            newObj = new PointPort(obj, 'ports', ports[i], true);\n            obj.ports.push(newObj);\n            if (obj.children) {\n                var container = obj.wrapper;\n                obj.initPorts(this.getDescription, obj.wrapper.children[container.children.length - 1]);\n            }\n            else {\n                var canvas = obj.wrapper;\n                canvas.children.push(obj.initPortWrapper(obj.ports[obj.ports.length - 1]));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'PortCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(obj.width, obj.height));\n        obj.wrapper.arrange(obj.wrapper.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add constraints at run time\n     */\n    Diagram.prototype.addConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType | constraintsValue;\n    };\n    /**\n     * Remove constraints at run time\n     */\n    Diagram.prototype.removeConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType & ~constraintsValue;\n    };\n    /**\n     * Add labels in node at the run time in the blazor platform\n     */\n    Diagram.prototype.addNodeLabels = function (obj, labels) {\n        this.addLabels(obj, labels);\n    };\n    /**\n     * Add labels in connector at the run time in the blazor platform\n     */\n    Diagram.prototype.addConnectorLabels = function (obj, labels) {\n        this.addLabels(obj, labels);\n    };\n    /**\n     * Add Labels at the run time\n     */\n    Diagram.prototype.addLabels = function (obj, labels) {\n        this.protectPropertyChange(true);\n        obj = this.nameTable[obj.id] || obj;\n        var canvas = obj.wrapper;\n        var newObj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < labels.length; i++) {\n            if (obj instanceof Node) {\n                newObj = new ShapeAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                if (isBlazor()) {\n                    var selectedNode = cloneObject(obj);\n                    this.insertValue(selectedNode, (obj instanceof Node) ? true : false);\n                }\n                this.UpdateBlazorDiagramModel(newObj, 'NodeAnnotation', undefined, this.nodes.indexOf(obj));\n                if (obj.children) {\n                    var node = obj;\n                    for (var i_2 = 0; i_2 < node.wrapper.children.length; i_2++) {\n                        if (node.wrapper.children[i_2].id === node.id + 'group_container') {\n                            var container = node.wrapper.children[i_2];\n                            container.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                        }\n                    }\n                }\n                else {\n                    canvas.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                }\n            }\n            else if (obj instanceof Connector) {\n                newObj = new PathAnnotation(obj, 'annotations', labels[i], true);\n                this.UpdateBlazorDiagramModel(newObj, 'ConnectorAnnotation', undefined, this.connectors.indexOf(obj));\n                obj.annotations.push(newObj);\n                if (isBlazor()) {\n                    var selectedNode = cloneObject(obj);\n                    this.insertValue(selectedNode, (obj instanceof Node) ? true : false);\n                }\n                var segment = canvas.children[0];\n                var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n                canvas.children.push(obj.getAnnotationElement(obj.annotations[obj.annotations.length - 1], obj.intermediatePoints, bounds, this.getDescription, this.element.id));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'LabelCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(canvas.width, canvas.height));\n        obj.wrapper.arrange(canvas.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add dynamic Lanes to swimLane at runtime\n     */\n    Diagram.prototype.addLanes = function (node, lane, index) {\n        node = this.nameTable[node.id] || node;\n        for (var i = 0; i < lane.length; i++) {\n            addLane(this, node, lane[i], index);\n            if (index !== undefined) {\n                index += 1;\n            }\n        }\n        this.updateDiagramElementQuad();\n    };\n    /**\n     * Add a phase to a swimLane at runtime\n     */\n    Diagram.prototype.addPhases = function (node, phases) {\n        node = this.nameTable[node.id] || node;\n        for (var i = 0; i < phases.length; i++) {\n            addPhase(this, node, phases[i]);\n        }\n        this.updateDiagramElementQuad();\n    };\n    /**\n     * Remove dynamic Lanes to swimLane at runtime\n     */\n    Diagram.prototype.removeLane = function (node, lane) {\n        removeLane(this, undefined, node, lane);\n        this.updateDiagramElementQuad();\n    };\n    /**\n     * Remove a phase to a swimLane at runtime\n     */\n    Diagram.prototype.removePhase = function (node, phase) {\n        removePhase(this, undefined, node, phase);\n        this.updateDiagramElementQuad();\n    };\n    Diagram.prototype.removelabelExtension = function (obj, labels, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if ((canvas instanceof TextElement) || (canvas instanceof DiagramHtmlElement)) {\n                if (canvas.id.match('_' + labels[j].id + '$')) {\n                    for (var k = 0; k < obj.annotations.length; k++) {\n                        if (canvas.id.match('_' + obj.annotations[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'LabelCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.annotations[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.annotations.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        if (element) {\n                            var element_1 = getDiagramElement(canvas.id, this.element.id);\n                            element_1.parentNode.removeChild(element_1);\n                        }\n                        var textElement = getDiagramElement(canvas.id + '_text', this.element.id);\n                        if (textElement) {\n                            element = getDiagramElement(canvas.id + '_text', this.element.id);\n                            element.parentNode.removeChild(element);\n                        }\n                        var htmlElement = getDiagramElement(canvas.id + '_html_element', this.element.id);\n                        if (htmlElement) {\n                            htmlElement.parentNode.removeChild(htmlElement);\n                        }\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Labels at the run time\n     */\n    Diagram.prototype.removeLabels = function (obj, labels) {\n        obj = this.nameTable[obj.id] || obj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = labels.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removelabelExtension(obj, labels, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removelabelExtension(obj, labels, j, obj.wrapper);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    Diagram.prototype.removePortsExtenion = function (obj, ports, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if (canvas instanceof PathElement) {\n                if (canvas.id.match('_' + ports[j].id + '$')) {\n                    for (var k = 0; k < obj.ports.length; k++) {\n                        if (canvas.id.match('_' + obj.ports[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'PortCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.ports[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.ports.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        element.parentNode.removeChild(element);\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Ports at the run time\n     */\n    Diagram.prototype.removePorts = function (obj, ports) {\n        obj = this.nameTable[obj.id] || obj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = ports.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removePortsExtenion(obj, ports, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removePortsExtenion(obj, ports, j, obj.wrapper);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    //public methods - end region\n    //helper methods - start region\n    /**\n     * @private\n     * @param {string | number} real - real value\n     * @param {number} rulerSize - ruler size\n     */\n    Diagram.prototype.getSizeValue = function (real, rulerSize) {\n        var value;\n        if (real.toString().indexOf('px') > 0) {\n            value = real.toString();\n        }\n        else if (real.toString().indexOf('%') > 0) {\n            value = rulerSize !== undefined ? '100%' : real.toString();\n        }\n        else {\n            value = real.toString() + 'px';\n        }\n        if (rulerSize) {\n            var position = getRulerSize(this);\n            value = 'calc(' + value + ' - ' + rulerSize + 'px)';\n        }\n        return value;\n    };\n    Diagram.prototype.renderRulers = function () {\n        if (this.rulerSettings.showRulers) {\n            renderOverlapElement(this);\n            renderRuler(this, true);\n            renderRuler(this, false);\n        }\n        else {\n            removeRulerElements(this);\n        }\n    };\n    Diagram.prototype.intOffPageBackground = function () {\n        var position = new Size();\n        position = getRulerSize(this);\n        var element = document.getElementById(this.element.id + 'content');\n        var width = this.getSizeValue(this.width, position.width);\n        var height = this.getSizeValue(this.height, position.height);\n        var style = this.rulerSettings.showRulers ?\n            'width:' + width + '; height:' + height + ';' +\n                'top:' + position.height + 'px;left:' + position.width + 'px;' +\n                'overflow: scroll;position:absolute;overflow:auto;' :\n            'width:' + width + '; height:' + height + ';position:absolute;' +\n                ' left:0px;  top:0px;overflow: auto;';\n        var attr = {\n            'id': this.element.id + 'content',\n            'tabindex': '0',\n            'style': style\n        };\n        if (!element) {\n            this.diagramCanvas = createHtmlElement('div', attr);\n            this.element.appendChild(this.diagramCanvas);\n        }\n        else {\n            this.diagramCanvas = element;\n            applyStyleAgainstCsp(this.diagramCanvas, style);\n        }\n        this.diagramCanvas.style.background = this.backgroundColor;\n    };\n    Diagram.prototype.initDiagram = function () {\n        this.intOffPageBackground();\n        setAttributeHtml(this.element, {\n            style: 'width:' + this.getSizeValue(this.width) + '; height:'\n                + this.getSizeValue(this.height) + ';position:relative;overflow:hidden;'\n        });\n    };\n    ;\n    Diagram.prototype.renderBackgroundLayer = function (bounds, commonStyle) {\n        var bgLayer = this.createSvg(this.element.id + '_backgroundLayer_svg', bounds.width, bounds.height);\n        applyStyleAgainstCsp(bgLayer, commonStyle);\n        var backgroundImage = createSvgElement('g', {\n            'id': this.element.id + '_backgroundImageLayer',\n            'class': 'e-background-image-layer'\n        });\n        bgLayer.appendChild(backgroundImage);\n        var attr = { 'id': this.element.id + '_backgroundLayer', 'class': 'e-background-layer' };\n        var background = createSvgElement('g', attr);\n        bgLayer.appendChild(background);\n        this.diagramCanvas.appendChild(bgLayer);\n    };\n    Diagram.prototype.renderGridLayer = function (bounds, commonStyle) {\n        var svgGridSvg = this.createSvg(this.element.id + '_gridline_svg', bounds.width, bounds.height);\n        svgGridSvg.setAttribute('class', 'e-grid-layer');\n        var svgGrid = createSvgElement('g', { 'id': this.element.id + '_gridline', 'width': '100%', 'height': '100%' });\n        var rect = createSvgElement('rect', {\n            'id': this.element.id + '_grid_rect', 'x': '0', 'y': '0', 'width': '100%', 'height': '100%'\n        });\n        if (checkBrowserInfo()) {\n            rect.setAttribute('fill', 'url(' + location.href + '#' + this.element.id + '_pattern ');\n        }\n        else {\n            rect.setAttribute('fill', 'url(#' + this.element.id + '_pattern)');\n        }\n        svgGrid.appendChild(rect);\n        svgGridSvg.appendChild(svgGrid);\n        this.diagramCanvas.appendChild(svgGridSvg);\n        setAttributeSvg(svgGridSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderDiagramLayer = function (bounds, commonStyle) {\n        var attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;' + commonStyle\n        };\n        this.diagramLayerDiv = createHtmlElement('div', attributes);\n        if (this.mode === 'SVG') {\n            var diagramSvg = this.createSvg(this.element.id + '_diagramLayer_svg', bounds.width, bounds.height);\n            diagramSvg.style['pointer-events'] = 'none';\n            diagramSvg.setAttribute('class', 'e-diagram-layer');\n            var diagramLayer = createSvgElement('g', { 'id': this.element.id + '_diagramLayer' });\n            var transformationLayer = createSvgElement('g', {});\n            this.diagramLayer = diagramLayer;\n            diagramSvg.style['pointer-events'] = 'all';\n            transformationLayer.appendChild(diagramLayer);\n            diagramSvg.appendChild(transformationLayer);\n            this.diagramLayerDiv.appendChild(diagramSvg);\n        }\n        else {\n            this.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagram', bounds.width, bounds.height);\n            applyStyleAgainstCsp(this.diagramLayer, 'position:absolute;left:0px;top:0px;');\n            this.diagramLayerDiv.appendChild(this.diagramLayer);\n        }\n        this.diagramCanvas.appendChild(this.diagramLayerDiv);\n    };\n    Diagram.prototype.initLayers = function () {\n        var commonStyle = 'position:absolute;top:0px;left:0px;overflow:hidden;pointer-events:none;';\n        var container = document.getElementById(this.element.id);\n        var bounds = container.getBoundingClientRect();\n        var scrollerSize = getScrollerWidth();\n        this.scroller.scrollerWidth = scrollerSize;\n        this.scroller.setViewPortSize(bounds.width, bounds.height);\n        this.renderRulers();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n            var measureElements = document.getElementById('measureElement');\n            measureElements.remove();\n        }\n        createMeasureElements();\n        // this.renderBackgroundImageLayer(bounds, commonStyle);\n        this.renderBackgroundLayer(bounds, commonStyle);\n        this.renderGridLayer(bounds, commonStyle);\n        this.renderDiagramLayer(bounds, commonStyle);\n        this.renderHTMLLayer(bounds, commonStyle);\n        this.renderPortsExpandLayer(bounds, commonStyle);\n        this.renderNativeLayer(bounds, commonStyle);\n        this.renderAdornerLayer(bounds, commonStyle);\n    };\n    Diagram.prototype.renderAdornerLayer = function (bounds, commonStyle) {\n        var divElement = createHtmlElement('div', {\n            'id': this.element.id + '_diagramAdornerLayer',\n            'style': 'width:' + bounds.width + 'px;height:' + bounds.height + 'px;' + commonStyle\n        });\n        var svgAdornerSvg = this.createSvg(this.element.id + '_diagramAdorner_svg', bounds.width, bounds.height);\n        svgAdornerSvg.setAttribute('class', 'e-adorner-layer');\n        svgAdornerSvg.style['pointer-events'] = 'none';\n        this.adornerLayer = createSvgElement('g', { 'id': this.element.id + '_diagramAdorner' });\n        this.adornerLayer.style[' pointer-events'] = 'all';\n        svgAdornerSvg.appendChild(this.adornerLayer);\n        divElement.appendChild(svgAdornerSvg);\n        this.diagramCanvas.appendChild(divElement);\n        var svgSelector = createSvgElement('g', { 'id': this.element.id + '_SelectorElement' });\n        this.adornerLayer.appendChild(svgSelector);\n        setAttributeSvg(svgAdornerSvg, { style: 'pointer-events:none;' });\n    };\n    Diagram.prototype.renderPortsExpandLayer = function (bounds, commonStyle) {\n        var svgPortsSvg = this.createSvg(this.element.id + '_diagramPorts_svg', bounds.width, bounds.height);\n        svgPortsSvg.setAttribute('class', 'e-ports-expand-layer');\n        var svgPortsLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramPorts',\n            'class': 'e-ports-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgPortsLayer);\n        var svgExpandLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramExpander',\n            'class': 'e-expand-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgExpandLayer);\n        this.diagramCanvas.appendChild(svgPortsSvg);\n        setAttributeSvg(svgPortsSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderHTMLLayer = function (bounds, commonStyle) {\n        this.htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;position:absolute;top:0px;' +\n                'left:0px;overflow:hidden;pointer-events:none;',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;pointer-events:all;'\n        });\n        this.htmlLayer.appendChild(htmlLayerDiv);\n        this.diagramCanvas.appendChild(this.htmlLayer);\n    };\n    Diagram.prototype.renderNativeLayer = function (bounds, commonStyle) {\n        var nativeLayerSvg = this.createSvg(this.element.id + '_nativeLayer_svg', bounds.width, bounds.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer', 'style': 'pointer-events:all;' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        this.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer', 'style': commonStyle });\n    };\n    /** @private */\n    Diagram.prototype.createSvg = function (id, width, height) {\n        var svgObj = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        setAttributeSvg(svgObj, { 'id': id, 'width': width, 'height': height });\n        return svgObj;\n    };\n    Diagram.prototype.updateBazorShape = function () {\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n            switch (node.shape.type) {\n                case 'Bpmn':\n                    node.shape.bpmnShape =\n                        node.shape.shape ? node.shape.shape\n                            : node.shape.bpmnShape;\n                    break;\n                case 'UmlActivity':\n                    node.shape.umlActivityShape =\n                        node.shape.shape ? node.shape.shape\n                            : node.shape.umlActivityShape;\n                    break;\n                case 'Flow':\n                    node.shape.flowShape =\n                        node.shape.shape ? node.shape.shape\n                            : node.shape.flowShape;\n                    break;\n                case 'Basic':\n                    node.shape.basicShape =\n                        node.shape.shape ? node.shape.shape\n                            : node.shape.basicShape;\n                    break;\n                case 'Text':\n                    node.shape.textContent =\n                        node.shape.content ? node.shape.content\n                            : node.shape.textContent;\n                    break;\n            }\n        }\n    };\n    Diagram.prototype.initObjects = function (isLoad) {\n        this.updateBazorShape();\n        if (!this.isLoading) {\n            this.initData();\n        }\n        this.initLayerObjects();\n        this.updateBridging(isLoad);\n    };\n    /** @private */\n    Diagram.prototype.initLayerObjects = function () {\n        var hasLayers = this.layers.length > 1;\n        var set = false;\n        var connectors = [];\n        var blazor = 'Blazor';\n        var canCloneObject = window && window[blazor] && !this.dataSourceSettings.dataSource;\n        var tempTabel = {};\n        var bpmnTable = {};\n        var tempNode = [];\n        var groups = [];\n        var i = 0;\n        var previousNodeObject = [];\n        var previousConnectorObject = [];\n        var updateNodeObject = [];\n        var updateConnectorObject = [];\n        var changeNodes = [];\n        var changeConnectors = [];\n        if (isBlazor() && canCloneObject) {\n            previousNodeObject = this.previousNodeCollection;\n            previousConnectorObject = this.previousConnectorCollection;\n        }\n        for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n            var obj = _c[_b];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _d = 0, _e = this.layers; _d < _e.length; _d++) {\n            var layer = _e[_d];\n            for (var _f = 0, _g = layer.objects; _f < _g.length; _f++) {\n                var obj = _g[_f];\n                if (tempTabel[obj]) {\n                    if (!(tempTabel[obj] instanceof Connector)) {\n                        if (tempTabel[obj].children) {\n                            groups.push(obj);\n                        }\n                        else if ((tempTabel[obj].shape instanceof BpmnShape) &&\n                            tempTabel[obj].shape.activity.subProcess.processes &&\n                            tempTabel[obj].shape.activity.subProcess.processes.length > 0) {\n                            bpmnTable[tempTabel[obj].id] = obj;\n                        }\n                        else {\n                            this.initNodes(tempTabel[obj], layer);\n                        }\n                    }\n                    else {\n                        var connector = tempTabel[obj];\n                        if (connector.sourceID && connector.targetID) {\n                            var sourceNode = tempTabel[connector.sourceID];\n                            var targetNode = tempTabel[connector.targetID];\n                            if (sourceNode && sourceNode.wrapper && targetNode && targetNode.wrapper) {\n                                this.initConnectors(tempTabel[obj], layer);\n                            }\n                            else {\n                                connectors.push(tempTabel[obj]);\n                            }\n                        }\n                        else {\n                            this.initConnectors(tempTabel[obj], layer);\n                        }\n                    }\n                }\n            }\n            if (this.bpmnModule) {\n                for (var _h = 0, _j = this.bpmnModule.textAnnotationConnectors; _h < _j.length; _h++) {\n                    var obj = _j[_h];\n                    this.initConnectors(obj, layer, false);\n                }\n            }\n        }\n        for (var _k = 0, _l = Object.keys(bpmnTable); _k < _l.length; _k++) {\n            var obj = _l[_k];\n            this.initObject(tempTabel[obj]);\n            this.bpmnModule.updateDocks(tempTabel[obj], this);\n        }\n        for (var _m = 0, groups_1 = groups; _m < groups_1.length; _m++) {\n            var obj = groups_1[_m];\n            var layer = this.commandHandler.getObjectLayer(obj);\n            this.initNodes(tempTabel[obj], layer);\n        }\n        for (var _o = 0, connectors_1 = connectors; _o < connectors_1.length; _o++) {\n            var connector = connectors_1[_o];\n            var layer = this.commandHandler.getObjectLayer(connector.id);\n            this.initConnectors(connector, layer);\n        }\n        if (isBlazor() && canCloneObject) {\n            for (var _p = 0, _q = this.nodes; _p < _q.length; _p++) {\n                var obj_2 = _q[_p];\n                updateNodeObject.push(cloneObject(obj_2, undefined, undefined, true));\n            }\n            for (var _r = 0, _s = this.connectors; _r < _s.length; _r++) {\n                var obj_3 = _s[_r];\n                updateConnectorObject.push(cloneObject(obj_3, undefined, undefined, true));\n            }\n            this.commandHandler.getObjectChanges(previousNodeObject, updateNodeObject, changeNodes);\n            this.commandHandler.getObjectChanges(previousConnectorObject, updateConnectorObject, changeConnectors);\n            var blazorInterop = 'sfBlazor';\n            var diagramObject = { nodes: changeNodes, connectors: changeConnectors };\n            var obj = {\n                'methodName': 'UpdateBlazorProperties',\n                'diagramobj': diagramObject\n            };\n            window[blazorInterop].updateBlazorProperties(obj, this);\n        }\n    };\n    Diagram.prototype.addToLayer = function (obj, hasLayers) {\n        var layer;\n        if (hasLayers) {\n            layer = this.commandHandler.getObjectLayer(obj.id);\n        }\n        if (!hasLayers || !layer) {\n            if (this.activeLayer.objects.indexOf(obj.id) === -1) {\n                this.activeLayer.objects.push(obj.id);\n            }\n        }\n        this.setZIndex(layer || this.activeLayer, obj);\n    };\n    Diagram.prototype.updateLayer = function (newProp) {\n        for (var _i = 0, _a = Object.keys(newProp.layers); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var layerObject = this.layers[key].objects;\n            for (var _b = 0, layerObject_1 = layerObject; _b < layerObject_1.length; _b++) {\n                var obj = layerObject_1[_b];\n                var node = this.nameTable[obj];\n                if (newProp.layers[key].visible !== undefined) {\n                    this.updateElementVisibility(node.wrapper, node, newProp.layers[key].visible);\n                }\n                else if (newProp.layers[key].lock === true) {\n                    this.unSelect(node);\n                }\n            }\n            if (newProp.layers[key].lock !== undefined) {\n                this.layers[key].lock = newProp.layers[key].lock;\n            }\n        }\n        if (this.mode !== 'SVG') {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateScrollSettings = function (newProp) {\n        var hPan = (-this.scroller.horizontalOffset + newProp.scrollSettings.horizontalOffset || 0);\n        var vPan = (this.scroller.verticalOffset - newProp.scrollSettings.verticalOffset || 0);\n        var oldValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        if (hPan !== 0 || vPan !== 0) {\n            this.pan(hPan, vPan);\n        }\n        var newValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        var arg = {\n            oldValue: oldValue,\n            newValue: newValue, source: this\n        };\n        if (isBlazor() && this.scrollChange) {\n            arg = {\n                oldValue: oldValue,\n                newValue: newValue,\n                sourceId: this.element.id\n            };\n        }\n        this.triggerEvent(DiagramEvent.scrollChange, arg);\n        if (this.mode === 'Canvas' && (this.constraints & DiagramConstraints.Virtualization)) {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.initData = function () {\n        var dataSourceSettings = this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource;\n        var adapter = 'adaptorName';\n        if (this.dataBindingModule && !(this.realActions & RealAction.PreventDataInit)) {\n            if (dataSourceSettings && this.dataSourceSettings.connectionDataSource.dataManager) {\n                var dataManager = this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource;\n                this.nodes = this.generateData(dataManager, true);\n                this.connectors = this.generateData(this.dataSourceSettings.connectionDataSource.dataManager, false);\n            }\n            else if (dataSourceSettings && dataSourceSettings.dataSource &&\n                (dataSourceSettings.dataSource.url || (dataSourceSettings[adapter] === 'BlazorAdaptor' &&\n                    !dataSourceSettings.dataSource.url))) {\n                this.dataBindingModule.initSource(this.dataSourceSettings, this);\n            }\n            else {\n                this.dataBindingModule.initData(this.dataSourceSettings, this);\n            }\n        }\n    };\n    Diagram.prototype.generateData = function (dataSource, isNode) {\n        var nodes = [];\n        var i;\n        for (i = 0; i < dataSource.length; i++) {\n            var row = dataSource[i];\n            var node = isNode ? this.makeData(row, true) : this.makeData(row, false);\n            if (node && node.id && (!findNodeByName(nodes, node.id) || !findNodeByName(nodes, node.id))) {\n                nodes.push(node);\n            }\n        }\n        return (nodes);\n    };\n    Diagram.prototype.makeData = function (row, isNode) {\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        var data = {};\n        data.id = row[fields.id] ? row[fields.id] : randomId();\n        if (fields.sourceID) {\n            data.sourceID = row[fields.sourceID];\n        }\n        if (fields.targetID) {\n            data.targetID = row[fields.targetID];\n        }\n        if (row[fields.sourcePointX] && row[fields.sourcePointY]) {\n            data.sourcePoint = { 'x': Number(row[fields.sourcePointX]), 'y': Number(row[fields.sourcePointY]) };\n        }\n        if (row[fields.targetPointX] && row[fields.targetPointY]) {\n            data.targetPoint = { 'x': Number(row[fields.targetPointX]), 'y': Number(row[fields.targetPointY]) };\n        }\n        if (fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++) {\n                data[fields.crudAction.customFields[i]] = row[fields.crudAction.customFields[i]];\n            }\n        }\n        return data;\n    };\n    Diagram.prototype.initNodes = function (obj, layer) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.initConnectors = function (obj, layer, independentObj) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer, independentObj);\n        this.updateEdges(obj);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.setZIndex = function (layer, obj) {\n        //should be changed\n        var currentLayer = layer;\n        if ((obj).zIndex === -1) {\n            while (currentLayer.zIndexTable[currentLayer.objectZIndex + 1]) {\n                layer.objectZIndex++;\n            }\n            obj.zIndex = ++currentLayer.objectZIndex;\n        }\n        else {\n            var index = obj.zIndex;\n            if (currentLayer.zIndexTable[index]) {\n                var tabelLength = Object.keys(currentLayer.zIndexTable).length;\n                var j = 0;\n                for (var i = 0; i < tabelLength; i++) {\n                    if (i === index) {\n                        for (var j_1 = tabelLength; j_1 > index; j_1--) {\n                            currentLayer.zIndexTable[j_1] = currentLayer.zIndexTable[j_1 - 1];\n                            if (this.nameTable[currentLayer.zIndexTable[j_1]]) {\n                                this.nameTable[currentLayer.zIndexTable[j_1]].zIndex = j_1;\n                            }\n                        }\n                        currentLayer.zIndexTable[i] = obj.id;\n                    }\n                    j++;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initializeDiagramLayers = function () {\n        var tempLayers = this.layers;\n        for (var i = 0; i < this.layers.length; i++) {\n            if (this.layers[i].zIndex !== -1) {\n                var temp = this.layers[i];\n                this.layers[i] = this.layers[this.layers[i].zIndex];\n                this.layers[temp.zIndex] = temp;\n            }\n        }\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            layer.zIndex = layer.zIndex !== -1 ? layer.zIndex : this.layers.indexOf(layer);\n            this.layerZIndexTable[layer.zIndex] = layer.id;\n        }\n        for (var i = 0; i < this.layers.length; i++) {\n            for (var j = i + 1; j < this.layers.length; j++) {\n                if (this.layers[i].zIndex > this.layers[j].zIndex) {\n                    var temp = this.layers[i];\n                    this.layers[i] = this.layers[j];\n                    this.layers[j] = temp;\n                }\n            }\n        }\n        if (this.layers.length === 0) {\n            var defaultLayer = {\n                id: 'default_layer', visible: true, lock: false, objects: [], zIndex: 0,\n                objectZIndex: -1, zIndexTable: {}\n            };\n            this.commandHandler.addLayer(defaultLayer, null, true);\n        }\n        this.setActiveLayer(this.layers[this.layers.length - 1].id);\n    };\n    /** @private */\n    Diagram.prototype.resetTool = function () {\n        this.eventHandler.resetTool();\n    };\n    Diagram.prototype.initObjectExtend = function (obj, layer, independentObj) {\n        if (independentObj) {\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, obj.wrapper.bounds);\n            layer.zIndexTable[obj.zIndex] = obj.id;\n            if (!checkBoundaryConstraints) {\n                var node = obj instanceof Node ? this.nodes : this.connectors;\n                for (var i = 0; i <= node.length; i++) {\n                    if (node[i] && obj.id === node[i].id) {\n                        node.splice(i, 1);\n                    }\n                }\n                delete layer.zIndexTable[obj.zIndex];\n            }\n        }\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.initObject = function (obj, layer, independentObj, group) {\n        if (independentObj === void 0) { independentObj = true; }\n        if (obj !== undefined) {\n            if (independentObj) {\n                if (!layer) {\n                    this.addToLayer(obj, false);\n                    layer = this.activeLayer;\n                }\n                //Move the common properties like zindex and id to an abstract class\n                if (obj instanceof Node || obj instanceof Connector) {\n                    this.setZIndex(layer, obj);\n                }\n            }\n            if (obj instanceof Node) {\n                if (independentObj) {\n                    if (obj.id !== 'helper') {\n                        var getDefaults = getFunction(this.getNodeDefaults);\n                        if (getDefaults) {\n                            var defaults = getDefaults(obj, this);\n                            if (defaults && defaults.ports) {\n                                for (var i = 0; i < defaults.ports.length; i++) {\n                                    defaults.ports[i].inEdges = [];\n                                    defaults.ports[i].outEdges = [];\n                                }\n                            }\n                            if (defaults && defaults !== obj) {\n                                extendObject(defaults, obj);\n                            }\n                        }\n                    }\n                    this.initNode(obj, this.element.id);\n                }\n            }\n            else if (obj instanceof Connector) {\n                var getDefaults = getFunction(this.getConnectorDefaults);\n                if (getDefaults) {\n                    var defaults = getDefaults(obj, this);\n                    if (defaults && defaults !== obj) {\n                        extendObject(defaults, obj);\n                    }\n                    if (obj.segments.length) {\n                        if (obj.type !== obj.segments[0].type) {\n                            obj.segments = [];\n                        }\n                    }\n                }\n                var sourceNode = this.nameTable[obj.sourceID];\n                var targetNode = this.nameTable[obj.targetID];\n                var port = this.getConnectedPort(sourceNode, obj);\n                var targetPort = this.getConnectedPort(targetNode, obj);\n                var outPort = this.findInOutConnectPorts(sourceNode, false);\n                var inPort = this.findInOutConnectPorts(targetNode, true);\n                if ((sourceNode !== undefined && canOutConnect(sourceNode)) || (obj.sourcePortID !== ''\n                    && canPortOutConnect(outPort))) {\n                    obj.sourceWrapper = this.getEndNodeWrapper(sourceNode, obj, true);\n                    if (obj.sourcePortID) {\n                        if (port && port.constraints && !(port.constraints & PortConstraints.None)) {\n                            obj.sourcePortWrapper = this.getWrapper(sourceNode.wrapper, obj.sourcePortID);\n                        }\n                    }\n                }\n                if ((targetNode !== undefined && canInConnect(targetNode)) || (obj.targetPortID !== ''\n                    && canPortInConnect(inPort))) {\n                    obj.targetWrapper = this.getEndNodeWrapper(targetNode, obj, false);\n                    if (obj.targetPortID) {\n                        if (targetPort && targetPort.constraints && !(targetPort.constraints & PortConstraints.None)) {\n                            obj.targetPortWrapper = this.getWrapper(targetNode.wrapper, obj.targetPortID);\n                        }\n                    }\n                }\n                if (!independentObj) {\n                    var points = obj.getConnectorPoints(obj.type);\n                    updateConnector(obj, points);\n                }\n                if (independentObj) {\n                    obj.init(this);\n                }\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    if (this.pathTable[obj.wrapper.children[k].data]) {\n                        obj.wrapper.children[k].absoluteBounds =\n                            this.pathTable[obj.wrapper.children[k].data].absoluteBounds;\n                    }\n                }\n                obj.wrapper.measure(new Size(undefined, undefined));\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                if (obj instanceof Connector && obj.type === 'Bezier') {\n                    this.updateConnectorAnnotation(obj);\n                }\n                for (var j = 0; j < obj.wrapper.children.length; j++) {\n                    this.pathTable[obj.wrapper.children[j].data] = {};\n                    this.pathTable[obj.wrapper.children[j].data].absoluteBounds =\n                        obj.wrapper.children[j].absoluteBounds;\n                }\n            }\n            if (obj instanceof Node && obj.children && obj.container) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    this.nameTable[obj.children[i]].offsetX = this.nameTable[obj.children[i]].wrapper.offsetX;\n                    this.nameTable[obj.children[i]].offsetY = this.nameTable[obj.children[i]].wrapper.offsetY;\n                }\n            }\n            if (this.bpmnModule && obj instanceof Node\n                && obj.shape.type === 'Bpmn' && obj.shape.annotations.length > 0) {\n                this.bpmnModule.updateQuad(obj, this);\n            }\n            this.initObjectExtend(obj, layer, independentObj);\n            this.nameTable[obj.id] = obj;\n            if (obj instanceof Node && obj.children) {\n                this.preventNodesUpdate = true;\n                this.preventConnectorsUpdate = true;\n                if (!group && !obj.container) {\n                    this.updateGroupOffset(obj, true);\n                }\n                this.groupTable[obj.id] = obj.children;\n                for (var i = 0; i < obj.children.length; i++) {\n                    var node = (this.nameTable[obj.children[i]]);\n                    if (node) {\n                        node.parentId = obj.id;\n                    }\n                }\n                if (!this.isLoading && obj.rotateAngle && !obj.container) {\n                    this.commandHandler.rotateObjects(obj, [obj], obj.rotateAngle, { x: obj.offsetX, y: obj.offsetY }, false);\n                }\n                this.preventNodesUpdate = false;\n                this.preventConnectorsUpdate = false;\n            }\n            if (this['enterObject'] === undefined) {\n                this.updateQuad(obj);\n            }\n        }\n        if (obj.visible === false) {\n            this.updateElementVisibility(obj.wrapper, obj, false);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.getConnectedPort = function (node, connector) {\n        if (node && node.ports) {\n            for (var _i = 0, _a = node.ports; _i < _a.length; _i++) {\n                var port = _a[_i];\n                if (port.id === connector.sourcePortID) {\n                    return port;\n                }\n                else if (port.id === connector.targetPortID) {\n                    return port;\n                }\n            }\n        }\n        return null;\n    };\n    Diagram.prototype.scaleObject = function (obj, size, isWidth) {\n        var actualSize = isWidth ? obj.wrapper.actualSize.width : obj.wrapper.actualSize.height;\n        var sw = (isWidth) ? 1 + ((size - actualSize) / actualSize) : 1;\n        var sh = (isWidth) ? 1 : 1 + ((size - actualSize) / actualSize);\n        var groupOffsetX = obj.offsetX;\n        var groupOffsetY = obj.offsetY;\n        this.realActions |= RealAction.PreventDrag;\n        this.scale(obj, sw, sh, { x: 0.5, y: 0.5 });\n        this.realActions &= ~RealAction.PreventDrag;\n    };\n    Diagram.prototype.updateDefaultLayoutIcons = function (node) {\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.type === 'ComplexHierarchicalTree') {\n            {\n                this.updateDefaultLayoutIcon(node, node.expandIcon);\n                this.updateDefaultLayoutIcon(node, node.collapseIcon);\n            }\n        }\n    };\n    Diagram.prototype.updateDefaultLayoutIcon = function (node, icon) {\n        if (icon.shape !== 'None') {\n            if (icon.horizontalAlignment === 'Auto' && icon.verticalAlignment === 'Auto' &&\n                icon.offset.x === .5 && icon.offset.y === 1) {\n                var iconWrapper = this.getWrapper(node.wrapper, 'icon_content');\n                var offsetX = void 0;\n                var offsetY = void 0;\n                if (this.layout.orientation === 'TopToBottom' || this.layout.orientation === 'BottomToTop') {\n                    offsetX = .5;\n                    offsetY = this.layout.orientation === 'TopToBottom' ? 1 : 0;\n                }\n                else if (this.layout.orientation === 'RightToLeft' || this.layout.orientation === 'LeftToRight') {\n                    offsetX = this.layout.orientation === 'LeftToRight' ? 1 : 0;\n                    offsetY = .5;\n                }\n                iconWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                iconWrapper.horizontalAlignment = 'Center';\n                iconWrapper.verticalAlignment = 'Center';\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.updateGroupOffset = function (node, isUpdateSize) {\n        if ((node.children && node.children.length > 0 && (!node.container)) || (node.processId)) {\n            var node1 = this.nameTable[node.id];\n            if (!(this.realActions & RealAction.PreventScale) && !(this.realActions & RealAction.PreventDrag)) {\n                if (node1.offsetX && ((this.realActions & RealAction.EnableGroupAction) ||\n                    (!(this.diagramActions & DiagramAction.ToolAction)\n                        && !(this.diagramActions & DiagramAction.PublicMethod)))) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffX = (node1.offsetX - node.wrapper.offsetX);\n                    node1.offsetX = node.wrapper.offsetX;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    if (node.flip === 'None') {\n                        this.drag(node1, diffX, diffY);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetX = node.wrapper.offsetX;\n                }\n                if (node1.offsetY && ((this.realActions & RealAction.EnableGroupAction) ||\n                    (!(this.diagramActions & DiagramAction.ToolAction)))) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    if (node.flip === 'None') {\n                        this.drag(node1, 0, diffY);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetY = node.wrapper.offsetY;\n                }\n                if (this.diagramActions) {\n                    node1.width = node.wrapper.actualSize.width;\n                    node1.height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n        if (isUpdateSize) {\n            if ((node.children && node.children.length > 0)) {\n                if (this.nameTable[node.id].width !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].width, true);\n                }\n                else {\n                    this.nameTable[node.id].width = node.wrapper.actualSize.width;\n                }\n                if (this.nameTable[node.id].height !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].height, false);\n                }\n                else {\n                    this.nameTable[node.id].height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initNode = function (obj, diagramId, group) {\n        var canvas = obj.initContainer();\n        var portContainer = new Canvas();\n        var content;\n        if (!canvas.children) {\n            canvas.children = [];\n        }\n        if (obj.children) {\n            canvas.measureChildren = false;\n            if (obj.container && (obj.container.type === 'Grid')) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    var childCollection = new Canvas();\n                    var child = this.nameTable[obj.children[i]];\n                    childCollection.children = [];\n                    childCollection.children.push(child.wrapper);\n                    if (child) {\n                        canvas.addObject(child.wrapper, child.rowIndex, child.columnIndex, child.rowSpan, child.columnSpan);\n                    }\n                }\n            }\n            else {\n                for (var i = 0; i < obj.children.length; i++) {\n                    if (this.nameTable[obj.children[i]]) {\n                        var child = this.nameTable[obj.children[i]];\n                        this.updateStackProperty(obj, child, i);\n                        canvas.children.push(child.wrapper);\n                        canvas.elementActions = canvas.elementActions | ElementAction.ElementIsGroup;\n                        child.wrapper.flip = child.wrapper.flip === 'None' ?\n                            obj.wrapper.flip : child.wrapper.flip;\n                    }\n                }\n            }\n            portContainer.id = obj.id + 'group_container';\n            portContainer.style.fill = 'none';\n            portContainer.style.strokeColor = 'none';\n            portContainer.horizontalAlignment = 'Stretch';\n            portContainer.verticalAlignment = 'Stretch';\n            canvas.style = obj.style;\n            portContainer.children = [];\n            portContainer.preventContainer = true;\n            if (obj.container) {\n                portContainer.relativeMode = 'Object';\n            }\n            if (!obj.container || (obj.container.type !== 'Grid')) {\n                canvas.children.push(portContainer);\n            }\n        }\n        else {\n            var setNodeTemplate = getFunction(this.setNodeTemplate);\n            if (setNodeTemplate && obj.id !== 'helper') {\n                content = setNodeTemplate(obj, this);\n            }\n            if (!content) {\n                content = obj.init(this);\n            }\n            canvas.children.push(content);\n        }\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        wrapperContent = getFunction(this.getDescription);\n        if (wrapperContent) {\n            (obj.children ? canvas : content).description = wrapperContent;\n        }\n        else {\n            (obj.children ? canvas : content).description = obj.annotations.length ? obj.annotations[0].content : obj.id;\n        }\n        var container = obj.children ? portContainer : canvas;\n        obj.initAnnotations(this.getDescription, container, this.element.id, canVitualize(this) ? true : false, this.annotationTemplate);\n        obj.initPorts(this.getDescription, container);\n        obj.initIcons(this.getDescription, this.layout, container, diagramId);\n        if (obj.shape.type === 'SwimLane' && obj.wrapper && obj.wrapper.children.length > 0 &&\n            obj.wrapper.children[0] instanceof GridPanel) {\n            swimLaneMeasureAndArrange(obj);\n            arrangeChildNodesInSwimLane(this, obj);\n            this.updateDiagramElementQuad();\n        }\n        else {\n            canvas.measure(new Size(obj.width, obj.height), obj.id, this.onLoadImageSize.bind(this));\n            if (canvas instanceof GridPanel) {\n                canvas.arrange(canvas.desiredSize, true);\n            }\n            else {\n                canvas.arrange(canvas.desiredSize);\n            }\n        }\n        if (obj.wrapper.flip !== 'None' && obj.wrapper.elementActions & ElementAction.ElementIsGroup) {\n            alignElement(obj.wrapper, obj.wrapper.offsetX, obj.wrapper.offsetY, this, obj.wrapper.flip);\n        }\n        if (obj instanceof Node && obj.container && (obj.width < canvas.outerBounds.width || obj.height < canvas.outerBounds.height) &&\n            canvas.bounds.x <= canvas.outerBounds.x && canvas.bounds.y <= canvas.outerBounds.y) {\n            obj.width = canvas.width = canvas.outerBounds.width;\n            obj.height = canvas.height = canvas.outerBounds.height;\n            canvas.measure(new Size(obj.width, obj.height));\n            canvas.arrange(canvas.desiredSize);\n        }\n        if (obj.container && obj.container.type === 'Grid' && obj.children && obj.children.length > 0) {\n            this.updateChildPosition(obj);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramElementQuad = function () {\n        for (var i = 0; i < this.nodes.length; i++) {\n            this.updateQuad(this.nodes[i]);\n        }\n    };\n    Diagram.prototype.onLoadImageSize = function (id, size) {\n        var obj = this.getObject(id);\n        var image = document.getElementById(id + 'sf-imageNode');\n        if (image) {\n            image.parentNode.removeChild(image);\n        }\n        this.nodePropertyChange(obj, {}, { width: size.width, height: size.height });\n        var args = { element: cloneObject(obj), size: size };\n        this.triggerEvent(DiagramEvent.onImageLoad, args);\n    };\n    Diagram.prototype.updateChildPosition = function (obj) {\n        for (var i = 0; i < obj.children.length; i++) {\n            var child = this.getObject(obj.children[i]);\n            child.offsetX = child.wrapper.offsetX;\n            child.offsetY = child.wrapper.offsetY;\n            if (child.children && child.children.length > 0) {\n                this.updateChildPosition(child);\n            }\n        }\n    };\n    Diagram.prototype.canExecute = function () {\n        return true;\n    };\n    Diagram.prototype.updateStackProperty = function (obj, child, index) {\n        if (obj.container && obj.container.type === 'Stack') {\n            if (!child.width) {\n                child.wrapper.horizontalAlignment = 'Stretch';\n                child.horizontalAlignment = 'Stretch';\n            }\n            if (!child.height) {\n                child.verticalAlignment = 'Stretch';\n                child.wrapper.verticalAlignment = 'Stretch';\n            }\n            if (index && obj.shape.type === 'UmlClassifier') {\n                child.umlIndex = index;\n            }\n        }\n    };\n    Diagram.prototype.initViews = function () {\n        if (!this.isLoading) {\n            this.views.push(this.element.id);\n            this.views[this.element.id] = this;\n        }\n    };\n    Diagram.prototype.initCommands = function () {\n        var i;\n        var newCommands = this.commandManager.commands;\n        var commands = {\n            'copy': {\n                execute: this.copyCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.C, keyModifiers: KeyModifiers.Control }\n            },\n            'paste': {\n                execute: this.pasteCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.V, keyModifiers: KeyModifiers.Control }\n            },\n            'cut': {\n                execute: this.cutCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.X, keyModifiers: KeyModifiers.Control }\n            },\n            'delete': {\n                execute: this.removeCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Delete }\n            },\n            'selectAll': {\n                execute: this.selectAll.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.A, keyModifiers: KeyModifiers.Control }\n            },\n            'undo': {\n                execute: this.undo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Z, keyModifiers: KeyModifiers.Control }\n            },\n            'redo': {\n                execute: this.redo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Y, keyModifiers: KeyModifiers.Control }\n            },\n            'nudgeUp': {\n                execute: this.nudgeCommand.bind(this, 'Up'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Up },\n                parameter: 'up'\n            },\n            'nudgeRight': {\n                execute: this.nudgeCommand.bind(this, 'Right'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Right },\n                parameter: 'right'\n            },\n            'nudgeDown': {\n                execute: this.nudgeCommand.bind(this, 'Down'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Down },\n                parameter: 'down'\n            },\n            'nudgeLeft': {\n                execute: this.nudgeCommand.bind(this, 'Left'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Left },\n                parameter: 'left'\n            },\n            'startEdit': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.F2 }\n            },\n            'endEdit': {\n                execute: this.endEditCommand.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Escape }\n            },\n            'focusToNextItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab }\n            },\n            'focusToPreviousItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab, keyModifiers: KeyModifiers.Control }\n            },\n            'selectFocusedItem': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Enter }\n            },\n        };\n        this.initCommandManager(newCommands, commands);\n    };\n    Diagram.prototype.overrideCommands = function (newCommand, commands) {\n        var command;\n        for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n            var key = _a[_i];\n            command = commands[key];\n            if (newCommand.gesture.key === command.gesture.key && newCommand.gesture.keyModifiers === command.gesture.keyModifiers) {\n                delete commands[key];\n                break;\n            }\n        }\n    };\n    Diagram.prototype.initCommandManager = function (newCommands, commands) {\n        var i = 0;\n        if (newCommands) {\n            for (i = 0; i < newCommands.length; i++) {\n                if (commands[newCommands[i].name] && newCommands[i]) {\n                    if (newCommands[i].canExecute) {\n                        commands[newCommands[i].name].canExecute = newCommands[i].canExecute;\n                    }\n                    if (newCommands[i].execute) {\n                        commands[newCommands[i].name].execute = newCommands[i].execute;\n                    }\n                    if (newCommands[i].gesture.key || newCommands[i].gesture.keyModifiers) {\n                        commands[newCommands[i].name].gesture = newCommands[i].gesture;\n                    }\n                    if (newCommands[i].parameter !== '') {\n                        commands[newCommands[i].name].parameter = newCommands[i].parameter;\n                    }\n                }\n                else {\n                    this.overrideCommands(newCommands[i], commands);\n                    commands[newCommands[i].name] = {\n                        execute: newCommands[i].execute, canExecute: newCommands[i].canExecute, gesture: newCommands[i].gesture,\n                        parameter: newCommands[i].parameter\n                    };\n                }\n            }\n        }\n        this.commands = commands;\n    };\n    /** @private */\n    Diagram.prototype.updateNodeEdges = function (node) {\n        for (var _i = 0, _a = node.inEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].targetID = '';\n            }\n        }\n        for (var _b = 0, _c = node.outEdges; _b < _c.length; _b++) {\n            var edge = _c[_b];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].sourceID = '';\n            }\n        }\n        node.inEdges = [];\n        node.outEdges = [];\n    };\n    /** @private */\n    Diagram.prototype.updateIconVisibility = function (node, visibility) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child.id) {\n                var id = child.id.split(node.id)[1];\n                if (id && id.match('^_icon')) {\n                    child.visible = visibility;\n                    this.updateDiagramContainerVisibility(child, visibility);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateEdges = function (obj) {\n        if (obj.sourceID !== undefined && obj.sourceID !== '') {\n            var node = this.nameTable[obj.sourceID];\n            if (node && node.outEdges && node.outEdges.length === 0) {\n                node.outEdges = [];\n            }\n            if (node && node.outEdges && node.outEdges.indexOf(obj.id) === -1) {\n                node.outEdges.push(obj.id);\n            }\n            this.updatePortEdges(node, obj, false);\n        }\n        if (obj.targetID !== undefined && obj.targetID !== '') {\n            var node = this.nameTable[obj.targetID];\n            if (node && node.inEdges && node.inEdges.length === 0) {\n                node.inEdges = [];\n            }\n            if (node && node.inEdges && node.inEdges.indexOf(obj.id) === -1) {\n                node.inEdges.push(obj.id);\n            }\n            this.updatePortEdges(node, obj, true);\n            if (node && node.visible && node.outEdges) {\n                var value = node.outEdges.length === 0 ? false : true;\n                this.updateIconVisibility(node, value);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePortEdges = function (node, obj, isInEdges) {\n        if (node) {\n            for (var i = 0; i < node.ports.length; i++) {\n                var port = node.ports[i];\n                var portId = (isInEdges) ? obj.targetPortID : obj.sourcePortID;\n                if (port.id === portId) {\n                    var portEdges = (isInEdges) ? port.inEdges : port.outEdges;\n                    if (portEdges.indexOf(obj.id) === -1) {\n                        portEdges.push(obj.id);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagram = function () {\n        this.initLayerObjects();\n        this.doLayout();\n        this.updateBridging();\n        this.scroller.setSize();\n        this.addBlazorDiagramObjects();\n        if (isBlazor() && this.layout && this.layout.layoutInfo && this.layout.layoutInfo.isRootInverse && this.nodes.length > 2) {\n            var rootNode = this.nodes[0];\n            if (rootNode.outEdges.length > 1) {\n                var isProtectedChange = this.isProtectedOnChange;\n                var connector = this.nameTable[rootNode.outEdges[1]];\n                this.protectPropertyChange(false);\n                this.preventUpdate = true;\n                connector.sourcePortID = rootNode.ports[1].id;\n                this.preventUpdate = false;\n                this.dataBind();\n                this.protectPropertyChange(isProtectedChange);\n            }\n        }\n        if (isBlazor()) {\n            var view = void 0;\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                view = this.views[temp];\n                if (view.renderDocument) {\n                    view.renderDocument(view);\n                    view.diagramRenderer.setLayers();\n                    view.updateView(view);\n                    this.renderNodes(view);\n                }\n            }\n        }\n        this.updateFitToPage();\n    };\n    Diagram.prototype.updateCanupdateStyle = function (element, value) {\n        for (var j = 0; j < element.length; j++) {\n            if (element[j].children) {\n                this.updateCanupdateStyle(element[j].children, value);\n            }\n            element[j].canApplyStyle = value;\n        }\n    };\n    Diagram.prototype.getZindexPosition = function (obj, viewId) {\n        var objects = [];\n        var index = undefined;\n        objects = objects.concat(this.nodes);\n        objects = objects.concat(this.connectors);\n        var type;\n        if (obj.zIndex !== -1) {\n            for (var i = 0; i < objects.length; i++) {\n                if (objects[i].zIndex > obj.zIndex) {\n                    if (obj.shape.type === 'HTML' || obj.shape.type === 'Native') {\n                        type = obj.shape.type === 'HTML' ? 'html' : 'native';\n                    }\n                    index = getDomIndex(viewId, objects[i].id, type);\n                    break;\n                }\n            }\n        }\n        return index;\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramObject = function (obj, canIgnoreIndex, isUpdateObject) {\n        var view;\n        var domTable = 'domTable';\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (this.diagramActions) {\n                if (view.mode === 'SVG') {\n                    var hasLayers = this.layers.length > 1;\n                    var layer = void 0;\n                    if (hasLayers) {\n                        layer = this.commandHandler.getObjectLayer(obj.id);\n                    }\n                    if ((layer === undefined || (layer && layer.visible)) || isUpdateObject) {\n                        var htmlLayer = getHTMLLayer(this.element.id);\n                        if (!window[domTable][view.element.id + '_diagramLayer']) {\n                            window[domTable][view.element.id + '_diagramLayer'] =\n                                document.getElementById(view.element.id + '_diagramLayer');\n                        }\n                        var diagramElementsLayer = window[domTable][view.element.id + '_diagramLayer'];\n                        if (this.diagramActions & DiagramAction.Interactions) {\n                            this.updateCanupdateStyle(obj.wrapper.children, true);\n                        }\n                        this.diagramRenderer.updateNode(obj.wrapper, diagramElementsLayer, htmlLayer, undefined, canIgnoreIndex ? undefined : this.getZindexPosition(obj, view.element.id));\n                        this.updateCanupdateStyle(obj.wrapper.children, true);\n                    }\n                }\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.updateGridContainer = function (grid) {\n        var view;\n        var htmlLayer = getHTMLLayer(this.element.id);\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (view.mode === 'SVG' && this.diagramActions) {\n                var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                this.diagramRenderer.updateNode(grid, diagramElementsLayer, htmlLayer, undefined);\n            }\n            else {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.getObjectsOfLayer = function (objectArray) {\n        var nodeArray = [];\n        for (var _i = 0, objectArray_1 = objectArray; _i < objectArray_1.length; _i++) {\n            var obj = objectArray_1[_i];\n            if (this.nameTable[obj]) {\n                nodeArray.push(this.nameTable[obj]);\n            }\n        }\n        return nodeArray;\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagramLayer = function () {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            switch (view.mode) {\n                case 'SVG':\n                    this.refreshSvgDiagramLayer(view);\n                    break;\n                case 'Canvas':\n                    this.refreshCanvasLayers(view);\n                    break;\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasLayers = function (view) {\n        if (!view) {\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view_1 = this.views[temp];\n                this.refreshCanvasDiagramLayer(view_1);\n            }\n        }\n        else {\n            this.refreshCanvasDiagramLayer(view);\n        }\n    };\n    Diagram.prototype.renderBasicElement = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        for (var i = 0; i < this.basicElements.length; i++) {\n            var element = this.basicElements[i];\n            if (element instanceof Container) {\n                element.prevRotateAngle = 0;\n            }\n            element.measure(new Size(element.width, element.height));\n            element.arrange(element.desiredSize);\n            view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n        }\n    };\n    Diagram.prototype.refreshElements = function (view) {\n        if (!this.isDestroyed) {\n            this.clearCanvas(view);\n            if (view instanceof Diagram) {\n                view.diagramLayer.getContext('2d').setTransform(view.scroller.currentZoom, 0, 0, view.scroller.currentZoom, 0, 0);\n                view.diagramLayer.getContext('2d').scale(1.5, 1.5);\n            }\n            var htmlLayer = getHTMLLayer(view.element.id);\n            var bounds = this.spatialSearch.getPageBounds();\n            this.renderDiagramElements(view.diagramLayer, view.diagramRenderer, htmlLayer);\n            for (var i = 0; i < this.basicElements.length; i++) {\n                var element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize);\n                view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n            }\n            if (view instanceof Diagram) {\n                view.diagramLayer.style.transform = 'scale(' + (2 / 3) + ')';\n                view.diagramLayer.style.transformOrigin = '0 0';\n            }\n            this.renderTimer = null;\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasDiagramLayer = function (view) {\n        var _this = this;\n        if (view.mode !== 'SVG' && !this.isDestroyed) {\n            if (this.basicElements.length > 0) {\n                this.renderBasicElement(view);\n            }\n            if ((!this.diagramActions || (this.diagramActions & DiagramAction.Render) === 0)\n                || (DiagramAction.ToolAction & this.diagramActions) || canVitualize(this) || (this.scroller.currentZoom !== 1)) {\n                this.refreshElements(view);\n            }\n            else if (!this.renderTimer) {\n                this.renderTimer = setTimeout(function () {\n                    _this.refreshElements(view);\n                }, 40);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePortVisibility = function (node, portVisibility, inverse) {\n        var portElement;\n        var drawingObject = !(this.drawingObject && this.drawingObject.shape) ? true : false;\n        if (node instanceof Node && drawingObject && canMove(node)) {\n            var ports = node.ports;\n            var changed = false;\n            for (var i = 0; i < ports.length; i++) {\n                portElement = this.getWrapper(node.wrapper, ports[i].id);\n                if ((portVisibility & PortVisibility.Hover || portVisibility & PortVisibility.Connect)) {\n                    if (checkPortRestriction(ports[i], portVisibility)) {\n                        portElement.visible = !inverse;\n                        changed = true;\n                    }\n                }\n            }\n            if (changed) {\n                this.updateDiagramObject(node);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshSvgDiagramLayer = function (view) {\n        var element;\n        var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(view.element.id);\n        if (!canVitualize(this)) {\n            for (var i = 0; i < this.basicElements.length; i++) {\n                element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize, (!(this.diagramActions & DiagramAction.Render) ? true : false));\n                this.diagramRenderer.renderElement(element, diagramElementsLayer, htmlLayer);\n            }\n            this.renderDiagramElements(diagramElementsLayer, this.diagramRenderer, htmlLayer);\n        }\n        else {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeVirtualObjects = function (clearIntervalVal) {\n        if (this.deleteVirtualObject) {\n            for (var i = 0; i < this.scroller.removeCollection.length; i++) {\n                var obj = this.nameTable[this.scroller.removeCollection[i]];\n                this.removeElements(obj);\n            }\n            this.deleteVirtualObject = false;\n        }\n        clearInterval(clearIntervalVal);\n    };\n    /** @private */\n    Diagram.prototype.updateTextElementValue = function (object) {\n        for (var j = 0; j < object.wrapper.children.length; j++) {\n            var element = object.wrapper.children[j];\n            if (element instanceof TextElement) {\n                element.canMeasure = true;\n                element.measure(new Size(object.width, object.height));\n                element.arrange(element.desiredSize);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateVirtualObjects = function (collection, remove, tCollection) {\n        var diagramElementsLayer = document.getElementById(this.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(this.element.id);\n        if (this.mode === 'SVG') {\n            for (var i = 0; i < collection.length; i++) {\n                var index = this.scroller.removeCollection.indexOf(collection[i]);\n                if (index >= 0) {\n                    this.scroller.removeCollection.splice(index, 1);\n                }\n                var object = this.nameTable[collection[i]];\n                this.updateTextElementValue(object);\n                this.diagramRenderer.renderElement(object.wrapper, diagramElementsLayer, htmlLayer, undefined, undefined, undefined, undefined, object.zIndex);\n            }\n            for (var k = 0; k < tCollection.length; k++) {\n                this.scroller.removeCollection.push(tCollection[k]);\n            }\n            if (this.scroller.currentZoom !== 1) {\n                this.eventHandler.updateVirtualization();\n            }\n        }\n        else if (this.diagramActions) {\n            this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderDiagramElements = function (canvas, renderer, htmlLayer, transform, fromExport, isOverView) {\n        if (transform === void 0) { transform = true; }\n        var pageBounds = this.scroller.getPageBounds();\n        pageBounds.x *= this.scroller.currentZoom;\n        pageBounds.y *= this.scroller.currentZoom;\n        pageBounds.width *= this.scroller.currentZoom;\n        pageBounds.height *= this.scroller.currentZoom;\n        var difX = -this.scroller.horizontalOffset - pageBounds.x;\n        var difY = -this.scroller.verticalOffset - pageBounds.y;\n        for (var _i = 0, _a = Object.keys(this.layerZIndexTable); _i < _a.length; _i++) {\n            var layerId = _a[_i];\n            var layer = this.commandHandler.getLayer(this.layerZIndexTable[layerId]);\n            var left = void 0;\n            var top_1 = void 0;\n            if (this.mode === 'Canvas' && canVitualize(this) && !this.diagramActions) {\n                this.scroller.virtualizeElements();\n            }\n            var id = (this.mode === 'Canvas' && canVitualize(this) &&\n                this.scroller.oldCollectionObjects.length > 0) ?\n                this.scroller.oldCollectionObjects : undefined;\n            for (var _b = 0, _c = Object.keys(id || layer.zIndexTable); _b < _c.length; _b++) {\n                var node = _c[_b];\n                var renderNode = id ? this.nameTable[id[node]] : this.nameTable[layer.zIndexTable[node]];\n                if (renderNode && !(renderNode.parentId) && layer.visible &&\n                    !(renderNode.processId)) {\n                    var transformValue = {\n                        tx: this.scroller.transform.tx,\n                        ty: this.scroller.transform.ty,\n                        scale: this.scroller.transform.scale\n                    };\n                    if (canVitualize(this)) {\n                        if (this.scroller.currentZoom < 1) {\n                            if (pageBounds.x < 0 || this.scroller.horizontalOffset < 0) {\n                                var verticalValue = this.scroller.verticalOffset < 0 ? this.scroller.verticalOffset : 0;\n                                left = (difX > 0 ? difX : 0) + 'px';\n                                top_1 = ((this.realActions & RealAction.vScrollbarMoved) ? 0 : -verticalValue) + 'px';\n                            }\n                            else {\n                                left = 0 + 'px';\n                                top_1 = 0 + 'px';\n                            }\n                            if (this.realActions & RealAction.hScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.hScrollbarMoved;\n                            }\n                            if (this.realActions & RealAction.vScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.vScrollbarMoved;\n                            }\n                        }\n                        else {\n                            left = (pageBounds.x < 0 ? difX : -this.scroller.horizontalOffset) + 'px';\n                            top_1 = (pageBounds.y < 0 ? difY : -this.scroller.verticalOffset) + 'px';\n                        }\n                        this.diagramLayer.style.left = left;\n                        this.diagramLayer.style.top = top_1;\n                        transformValue.tx = this.scroller.horizontalOffset / transformValue.scale;\n                        transformValue.ty = this.scroller.verticalOffset / transformValue.scale;\n                    }\n                    var status_1 = true;\n                    if (fromExport) {\n                        status_1 = false;\n                    }\n                    this.updateTextElementValue(renderNode);\n                    renderer.renderElement(renderNode.wrapper, canvas, htmlLayer, (!renderer.isSvgMode && transform) ? transformValue : undefined, undefined, undefined, status_1 && (!this.diagramActions || isOverView));\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateBridging = function (isLoad) {\n        if (this.bridgingModule) {\n            for (var i = 0; i < this.connectors.length; i++) {\n                var connector = this.connectors[i];\n                this.bridgingModule.updateBridging(connector, this);\n                var canvas = this.connectors[i].wrapper;\n                if (canvas) {\n                    var pathSegment = canvas.children[0];\n                    var data = pathSegment.data;\n                    connector.getSegmentElement(connector, pathSegment, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n                        this.layout.orientation : undefined);\n                    if (pathSegment.data !== data) {\n                        canvas.measure(new Size());\n                        canvas.arrange(canvas.desiredSize);\n                        if (this.mode === 'SVG' && !isLoad) {\n                            this.updateDiagramObject(connector);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.setCursor = function (cursor) {\n        this.diagramRenderer.setCursor(this.diagramCanvas, cursor);\n    };\n    /** @private */\n    Diagram.prototype.clearCanvas = function (view) {\n        var width;\n        var height;\n        width = view.contentWidth || view.diagramLayer.width / this.scroller.currentZoom;\n        height = view.contentHeight || view.diagramLayer.height / this.scroller.currentZoom;\n        if (view.mode !== 'SVG') {\n            var ctx = CanvasRenderer.getContext(view.diagramLayer);\n            ctx.clearRect(0, 0, width, height);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateScrollOffset = function () {\n        this.scroller.setScrollOffset(this.diagramCanvas.scrollLeft, this.diagramCanvas.scrollTop);\n        updateRuler(this);\n        if (canVitualize(this)) {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.setOffset = function (offsetX, offsetY) {\n        var domTable = 'domTable';\n        if (!window[domTable][this.element.id + 'content']) {\n            window[domTable][this.element.id + 'content'] = document.getElementById(this.element.id + 'content');\n        }\n        var container = window[domTable][this.element.id + 'content'];\n        if (container) {\n            container.scrollLeft = offsetX;\n            container.scrollTop = offsetY;\n        }\n    };\n    /** @private */\n    Diagram.prototype.setSize = function (width, height) {\n        if (this.diagramLayer && !this.preventUpdate) {\n            var position = getRulerSize(this);\n            width -= position.width;\n            height -= position.height;\n            var bounds = this.spatialSearch.getPageBounds();\n            bounds.x *= this.scroller.currentZoom;\n            bounds.y *= this.scroller.currentZoom;\n            bounds.width *= this.scroller.currentZoom;\n            bounds.height *= this.scroller.currentZoom;\n            var factor = this.mode === 'SVG' ? 1 : 1.5;\n            var diagramLayer = this.mode === 'SVG' ?\n                getDiagramLayerSvg(this.element.id) : this.diagramLayer;\n            var w = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortWidth : width;\n            var h = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortHeight : height;\n            diagramLayer.setAttribute('width', (factor * w).toString());\n            diagramLayer.setAttribute('height', (factor * h).toString());\n            var attr = { 'width': width.toString(), 'height': height.toString() };\n            this.diagramLayerDiv.style.width = width + 'px';\n            this.diagramLayerDiv.style.height = height + 'px';\n            setAttributeSvg(getNativeLayerSvg(this.element.id), attr);\n            setAttributeSvg(getPortLayerSvg(this.element.id), attr);\n            var adornerSVG = getAdornerLayerSvg(this.element.id);\n            setAttributeSvg(adornerSVG, attr);\n            adornerSVG.parentNode.style.width = width + 'px';\n            adornerSVG.parentNode.style.height = height + 'px';\n            var gridLayer = getGridLayerSvg(this.element.id);\n            setAttributeSvg(gridLayer, attr);\n            this.diagramRenderer.updateGrid(this.snapSettings, gridLayer, this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n            setAttributeSvg(getBackgroundLayerSvg(this.element.id), attr);\n            this.htmlLayer.style.width = width + 'px';\n            this.htmlLayer.style.height = height + 'px';\n            if (this.mode !== 'SVG' && !(canVitualize(this))) {\n                this.refreshDiagramLayer();\n            }\n            if (this.mode === 'SVG' && canVitualize(this)) {\n                this.scroller.virtualizeElements();\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.transformLayers = function () {\n        var bounds = this.spatialSearch.getPageBounds();\n        bounds.x *= this.scroller.currentZoom;\n        bounds.y *= this.scroller.currentZoom;\n        bounds.width *= this.scroller.currentZoom;\n        bounds.height *= this.scroller.currentZoom;\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.diagramRenderer.transformLayers(this.scroller.transform, this.mode === 'SVG');\n        if (!(this.diagramActions & DiagramAction.DragUsingMouse)) {\n            this.updateSelector();\n        }\n        this.renderPageBreaks(bounds);\n    };\n    /**\n     * Defines how to remove the Page breaks\n     * @private\n     */\n    Diagram.prototype.removePageBreaks = function () {\n        if (this.diagramLayer) {\n            var line = getBackgroundLayer(this.element.id);\n            if (line && line.childNodes) {\n                var length_1 = line.childNodes.length;\n                for (var i = 0; i < length_1; i++) {\n                    line.removeChild(line.childNodes[0]);\n                }\n            }\n        }\n    };\n    /**\n     * Defines how the page breaks has been rendered\n     * @private\n     */\n    Diagram.prototype.renderPageBreaks = function (bounds) {\n        this.removePageBreaks();\n        var backgroundLayer = getBackgroundLayer(this.element.id);\n        if (backgroundLayer) {\n            var i = 0;\n            bounds = this.scroller.getPageBounds(true);\n            var x = (this.scroller.transform.tx + bounds.x) * this.scroller.currentZoom;\n            var y = (this.scroller.transform.ty + bounds.y) * this.scroller.currentZoom;\n            var height = bounds.height * this.scroller.currentZoom;\n            var width = bounds.width * this.scroller.currentZoom;\n            DiagramRenderer.renderSvgBackGroundImage(this.pageSettings.background, this.element, x, y, width, height);\n            var options = {\n                id: backgroundLayer.id + 'rect', x: x,\n                y: y,\n                height: height,\n                width: width, angle: 0, stroke: '', strokeWidth: 1,\n                fill: this.pageSettings.background.color, opacity: 1,\n                pivotX: 0, pivotY: 0, visible: true, dashArray: '0',\n            };\n            this.diagramRenderer.drawRect(backgroundLayer, options);\n            if (this.pageSettings.showPageBreaks) {\n                var collection = this.scroller.getPageBreak(bounds);\n                for (i = 0; i < collection.length; i++) {\n                    this.diagramRenderer.drawLine(backgroundLayer, {\n                        class: 'e-diagram-page-break',\n                        fill: 'none', stroke: '#aaaaaa', strokeWidth: 1, dashArray: '10 10',\n                        opacity: 2, x: 0, y: 0, width: 0, height: 0, angle: 0, pivotX: 0, pivotY: 0, visible: true,\n                        startPoint: {\n                            x: (collection[i].x1 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y1 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        },\n                        endPoint: {\n                            x: (collection[i].x2 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y2 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        }, id: collection[i].y1 === collection[i].y2 ? 'HorizontalLines' : 'VerticalLines'\n                    });\n                }\n            }\n        }\n    };\n    Diagram.prototype.validatePageSize = function () {\n        var temp = 0;\n        if (this.pageSettings.orientation === 'Portrait') {\n            if (this.pageSettings.width > this.pageSettings.height) {\n                temp = this.pageSettings.height;\n                this.pageSettings.height = this.pageSettings.width;\n                this.pageSettings.width = temp;\n            }\n        }\n        else {\n            if (this.pageSettings.height > this.pageSettings.width) {\n                temp = this.pageSettings.width;\n                this.pageSettings.width = this.pageSettings.height;\n                this.pageSettings.height = temp;\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.setOverview = function (overview, id) {\n        if (overview) {\n            if (overview) {\n                this.views.push(overview.id);\n                this.views[overview.id] = overview;\n                overview.renderDocument(overview);\n                overview.diagramRenderer.setLayers();\n                overview.updateView(overview);\n                this.renderNodes(overview);\n            }\n        }\n        else {\n            for (var i = 0; i < this.views.length; i++) {\n                if (this.views[i] === id) {\n                    overview = (this.views[id]);\n                }\n            }\n            this.views[id] = undefined;\n            var index = this.views.indexOf(id);\n            this.views.splice(index, 1);\n        }\n    };\n    Diagram.prototype.renderNodes = function (overview) {\n        if (overview) {\n            var renderer = new DiagramRenderer(overview.id, new SvgRenderer(), false);\n            var g = document.getElementById(overview.element.id + '_diagramLayer');\n            var htmlLayer = getHTMLLayer(overview.element.id);\n            this.renderDiagramElements(g, overview.diagramRenderer || renderer, htmlLayer, undefined, undefined, true);\n        }\n    };\n    Diagram.prototype.updateThumbConstraints = function (node, selectorModel, canInitialize) {\n        var state = 0;\n        var length = node.length;\n        for (var i = 0; i < length; i++) {\n            var obj = node[i];\n            var hideRotate = false;\n            var hideResize = false;\n            var thumbConstraints = selectorModel.thumbsConstraints;\n            if (obj instanceof Node) {\n                hideRotate = (obj.shape.type === 'Bpmn' && (obj.shape.shape === 'Activity' &&\n                    (obj.shape.activity.subProcess.collapsed === false)) ||\n                    obj.shape.shape === 'TextAnnotation');\n                hideResize = (obj.shape.type === 'Bpmn' && obj.shape.shape === 'TextAnnotation');\n                if (!canRotate(obj) || !(thumbConstraints & ThumbsConstraints.Rotate) || hideRotate) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n                if (!canResize(obj, 'SouthEast') || !(thumbConstraints & ThumbsConstraints.ResizeSouthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthEast;\n                }\n                if (!canResize(obj, 'NorthWest') || !(thumbConstraints & ThumbsConstraints.ResizeNorthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthWest;\n                }\n                if (!canResize(obj, 'East') || !(thumbConstraints & ThumbsConstraints.ResizeEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeEast;\n                }\n                if (!canResize(obj, 'West') || !(thumbConstraints & ThumbsConstraints.ResizeWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeWest;\n                }\n                if (!canResize(obj, 'North') || !(thumbConstraints & ThumbsConstraints.ResizeNorth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorth;\n                }\n                if (!canResize(obj, 'South') || !(thumbConstraints & ThumbsConstraints.ResizeSouth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouth;\n                }\n                if (!canResize(obj, 'NorthEast') || !(thumbConstraints & ThumbsConstraints.ResizeNorthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthEast;\n                }\n                if (!canResize(obj, 'SouthWest') || !(thumbConstraints & ThumbsConstraints.ResizeSouthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthWest;\n                }\n            }\n            else if (obj instanceof Connector) {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (canDragSourceEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorSource;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorSource;\n                }\n                if (canDragTargetEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorTarget;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorTarget;\n                }\n            }\n            else {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (!canResize(obj)) {\n                    thumbConstraints = thumbConstraints & ~(ThumbsConstraints.ResizeSouthEast | ThumbsConstraints.ResizeSouthWest |\n                        ThumbsConstraints.ResizeSouth | ThumbsConstraints.ResizeEast | ThumbsConstraints.ResizeWest |\n                        ThumbsConstraints.ResizeNorth | ThumbsConstraints.ResizeNorthEast | ThumbsConstraints.ResizeNorthWest);\n                }\n                if (!canRotate(obj)) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n            }\n            selectorModel.thumbsConstraints = thumbConstraints;\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelector = function (multipleSelection, isSwimLane) {\n        var isProtectedOnChangeValue = this.isProtectedOnChange;\n        if (isBlazor()) {\n            this.isProtectedOnChange = true;\n            this.commandHandler.oldSelectedObjects = cloneSelectedObjects(this, true);\n        }\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        var rendererActions = this.diagramRenderer.rendererActions;\n        this.diagramRenderer.rendererActions = this.currentSymbol ?\n            this.addConstraints(rendererActions, RendererAction.DrawSelectorBorder) :\n            this.removeConstraints(rendererActions, RendererAction.DrawSelectorBorder);\n        this.clearSelectorLayer();\n        if (this.commandHandler.hasSelection()) {\n            if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                selectorModel.pivot = selectorModel.nodes[0].pivot;\n            }\n            selectorModel.wrapper.measure(size);\n            selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n            selectorModel.width = selectorModel.wrapper.actualSize.width;\n            selectorModel.height = selectorModel.wrapper.actualSize.height;\n            selectorModel.offsetX = selectorModel.wrapper.offsetX;\n            selectorModel.offsetY = selectorModel.wrapper.offsetY;\n            if (selectorModel.rotateAngle !== 0) {\n                for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                    var obj = _a[_i];\n                    obj.offsetX = obj.wrapper.offsetX;\n                    obj.offsetY = obj.wrapper.offsetY;\n                }\n                for (var _b = 0, _c = selectorModel.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    //update connections\n                }\n            }\n            var bounds = this.spatialSearch.getPageBounds();\n            var selectorElement = void 0;\n            selectorElement = getSelectorElement(this.element.id);\n            selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n            if (selectorModel.annotation) {\n                this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n            }\n            else {\n                this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                this.updateThumbConstraints(selectorModel.connectors, selectorModel, true);\n            }\n            if (selectorModel.annotation) {\n                this.renderSelectorForAnnotation(selectorModel, selectorElement);\n            }\n            else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                if (selectorModel.nodes[0] instanceof Node) {\n                    var node = selectorModel.nodes[0];\n                    if (checkParentAsContainer(this, node)) {\n                        if (!isSwimLane && (node.shape.type !== 'UmlClassifier' && !(node.parentId &&\n                            this.nameTable[node.parentId]\n                            && this.nameTable[node.parentId].shape.type === 'UmlClassifier'))) {\n                            if (!(node.container && (node.container.type === 'Canvas' || node.container.type === 'Grid'))) {\n                                selectorModel.nodes[0].constraints &= ~(NodeConstraints.Rotate | NodeConstraints.HideThumbs);\n                            }\n                            selectorModel.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                        }\n                    }\n                    var constraints = isSwimLane ? true : ((node.constraints & NodeConstraints.HideThumbs) ? true : false);\n                    var swimlane = (node.shape.type === 'SwimLane' || node.isLane || node.isPhase || isSwimLane) ? true : false;\n                    this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(node), constraints, swimlane);\n                }\n                else if (selectorModel.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                    var connector = selectorModel.connectors[0];\n                    this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorModel.constraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                }\n            }\n            else {\n                this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel));\n            }\n            if (!(selectorModel.annotation) && !this.currentSymbol) {\n                this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n            }\n        }\n        this.commandHandler.updateBlazorSelector();\n        this.isProtectedOnChange = isProtectedOnChangeValue;\n    };\n    /** @private */\n    Diagram.prototype.updateSelector = function () {\n        var size = new Size();\n        var selector = this.selectedItems;\n        var selectorConstraints = selector.constraints;\n        if (!(this.diagramActions & DiagramAction.ToolAction) && this.selectedItems.nodes.length === 1) {\n            this.selectedItems.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n            this.selectedItems.wrapper.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n        }\n        if (this.selectedItems !== undefined) {\n            this.clearSelectorLayer();\n            if (selector.wrapper !== null && selector.wrapper.children && selector.wrapper.children.length) {\n                selector.wrapper.measure(size);\n                selector.wrapper.arrange(selector.wrapper.desiredSize);\n                if (selector.rotateAngle !== 0 || selector.rotateAngle !== selector.wrapper.prevRotateAngle) {\n                    for (var _i = 0, _a = selector.nodes; _i < _a.length; _i++) {\n                        var obj = _a[_i];\n                        obj.offsetX = obj.wrapper.offsetX;\n                        obj.offsetY = obj.wrapper.offsetY;\n                    }\n                }\n                selector.width = selector.wrapper.actualSize.width;\n                selector.height = selector.wrapper.actualSize.height;\n                selector.offsetX = selector.wrapper.offsetX;\n                selector.offsetY = selector.wrapper.offsetY;\n                var selectorEle = void 0;\n                selectorEle = getSelectorElement(this.element.id);\n                var canHideResizers = this.eventHandler.canHideResizers();\n                selector.thumbsConstraints = ThumbsConstraints.Default;\n                if (selector.annotation) {\n                    this.updateThumbConstraints([selector.annotation], selector);\n                }\n                else {\n                    this.updateThumbConstraints(selector.nodes, selector);\n                    this.updateThumbConstraints(selector.connectors, selector, true);\n                }\n                if ((this.selectedItems.constraints & SelectorConstraints.UserHandle) && (!(selector.annotation)) && !this.currentSymbol) {\n                    this.diagramRenderer.renderUserHandler(selector, selectorEle, this.scroller.transform);\n                }\n                if (selector.annotation) {\n                    this.renderSelectorForAnnotation(selector, selectorEle);\n                }\n                else if (selector.nodes.length + selector.connectors.length === 1) {\n                    if (selector.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                        var connector = selector.connectors[0];\n                        this.diagramRenderer.renderEndPointHandle(connector, selectorEle, selector.thumbsConstraints, selectorConstraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                    }\n                    else if (selector.nodes[0] instanceof Node) {\n                        var stackPanel = selector.nodes[0];\n                        if (checkParentAsContainer(this, selector.nodes[0])) {\n                            if (stackPanel.shape.type !== 'UmlClassifier' && !(stackPanel.parentId &&\n                                this.nameTable[stackPanel.parentId]\n                                && this.nameTable[stackPanel.parentId].shape.type === 'UmlClassifier')) {\n                                if (!(stackPanel.container && (stackPanel.container.type === 'Canvas'\n                                    || stackPanel.container.type === 'Grid'))) {\n                                    selector.nodes[0].constraints &= ~(NodeConstraints.HideThumbs | NodeConstraints.Rotate);\n                                }\n                                selector.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                            }\n                        }\n                        var swimlane = (stackPanel.shape.type === 'SwimLane' || stackPanel.isLane ||\n                            stackPanel.isPhase) ? true : false;\n                        this.diagramRenderer.renderResizeHandle(selector.wrapper.children[0], selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector.nodes[0]), (selector.nodes[0].constraints & NodeConstraints.HideThumbs) ? true : false, swimlane);\n                    }\n                }\n                else {\n                    if (this.diagramActions & DiagramAction.Interactions) {\n                        this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions | RendererAction.PreventRenderSelector;\n                    }\n                    this.diagramRenderer.renderResizeHandle(selector.wrapper, selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector));\n                    this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions & ~RendererAction.PreventRenderSelector;\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelectorForAnnotation = function (selectorModel, selectorElement) {\n        this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.annotation));\n    };\n    /** @private */\n    Diagram.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.clearSelectorLayer();\n        this.diagramRenderer.drawSelectionRectangle(x, y, width, height, this.adornerLayer, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.renderHighlighter = function (element) {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        this.diagramRenderer.renderHighlighter(element, adornerSvg, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.clearHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getNodesConnectors = function (selectedItems) {\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n            selectedItems.push(node);\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            var conn = this.connectors[i];\n            selectedItems.push(conn);\n        }\n        return selectedItems;\n    };\n    /** @private */\n    Diagram.prototype.clearSelectorLayer = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        if (!this.currentSymbol) {\n            var selectionRect = adornerSvg.getElementById(this.adornerLayer.id + '_selected_region');\n            if (selectionRect) {\n                selectionRect.parentNode.removeChild(selectionRect);\n            }\n            this.clearHighlighter();\n            var childNodes = getSelectorElement(this.element.id).childNodes;\n            var child = void 0;\n            for (var i = childNodes.length; i > 0; i--) {\n                child = childNodes[i - 1];\n                child.parentNode.removeChild(child);\n            }\n        }\n        else {\n            var symbolBorder = adornerSvg.getElementById('borderRect_symbol');\n            if (symbolBorder) {\n                symbolBorder.parentNode.removeChild(symbolBorder);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.getWrapper = function (nodes, id) {\n        var wrapper;\n        id = nodes.id + '_' + id;\n        var container = nodes instanceof Canvas ? nodes : this.getPortContainer(this.nameTable[nodes.id]);\n        for (var i = 0; i < container.children.length; i++) {\n            if (id === container.children[i].id) {\n                wrapper = container.children[i];\n            }\n        }\n        return wrapper;\n    };\n    /** @private */\n    Diagram.prototype.getEndNodeWrapper = function (node, connector, source) {\n        if (node.shape.type === 'Bpmn' && node.wrapper.children[0] instanceof Canvas) {\n            if ((!isBlazor() && node.shape.shape === 'Activity') ||\n                (isBlazor() && node.shadow.bpmnShape === 'Activity')) {\n                if (source && node.shape.activity.subProcess.type === 'Transaction'\n                    && connector.sourcePortID) {\n                    var portId = connector.sourcePortID;\n                    var parent_3 = node.wrapper.children[0].children[0].children[2];\n                    if (parent_3.children) {\n                        for (var _i = 0, _a = parent_3.children; _i < _a.length; _i++) {\n                            var child = _a[_i];\n                            if (child.visible && child.id === node.id + '_' + portId) {\n                                return child.children[0];\n                            }\n                        }\n                    }\n                }\n                return node.wrapper.children[0].children[0].children[0];\n            }\n            return node.wrapper.children[0].children[0];\n        }\n        if (!this.containsMargin(node.wrapper.children[0])) {\n            if (!node.children) {\n                return node.wrapper.children[0];\n            }\n        }\n        return node.wrapper;\n    };\n    Diagram.prototype.containsMargin = function (node) {\n        return node.margin && (node.margin.left !== 0 || node.margin.top !== 0 || node.margin.right !== 0 || node.margin.bottom !== 0);\n    };\n    Diagram.prototype.focusOutEdit = function () {\n        this.endEdit();\n    };\n    Diagram.prototype.endEditCommand = function () {\n        this.endEdit();\n        this.textEditing = false;\n    };\n    /**\n     * @private\n     */\n    /* tslint:disable */\n    Diagram.prototype.endEdit = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var textArea, text, element, node, annotation, args, bpmnAnnotation, textWrapper, deleteNode, annotation_1, clonedObject, selectedNode, swimLaneNode, laneHeader, phaseHeader, collection, j;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(this.diagramActions & DiagramAction.TextEdit)) return [3 /*break*/, 9];\n                        this.enableServerDataBinding(false);\n                        textArea = document.getElementById(this.element.id + '_editBox');\n                        if (!((isBlazor() && textArea) || !isBlazor())) return [3 /*break*/, 9];\n                        text = textArea.value;\n                        EventHandler.remove(textArea, 'input', this.eventHandler.inputChange);\n                        EventHandler.remove(textArea, 'focusout', this.focusOutEdit);\n                        element = document.getElementById(this.element.id + '_editTextBoxDiv');\n                        node = void 0;\n                        node = this.nameTable[this.activeLabel.parentId];\n                        annotation = findAnnotation(node, this.activeLabel.id);\n                        args = { oldValue: this.activeLabel.text, newValue: text, cancel: false, element: node, annotation: annotation };\n                        if (isBlazor() && this.textEdit) {\n                            args = this.getBlazorTextEditArgs(args);\n                        }\n                        bpmnAnnotation = false;\n                        element.parentNode.removeChild(element);\n                        textWrapper = void 0;\n                        if (!this.bpmnModule) return [3 /*break*/, 4];\n                        node = this.bpmnModule.isBpmnTextAnnotation(this.activeLabel, this);\n                        textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, this.activeLabel.id);\n                        bpmnAnnotation = node ? true : false;\n                        if (!bpmnAnnotation) return [3 /*break*/, 4];\n                        if (!(element.textContent !== text || text !== this.activeLabel.text)) return [3 /*break*/, 4];\n                        if (!isBlazor()) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.triggerEvent(DiagramEvent.textEdit, args)];\n                    case 1:\n                        args = (_a.sent()) || args;\n                        return [3 /*break*/, 3];\n                    case 2:\n                        this.triggerEvent(DiagramEvent.textEdit, args);\n                        _a.label = 3;\n                    case 3:\n                        if (!args.cancel) {\n                            this.bpmnModule.updateTextAnnotationContent(node, this.activeLabel, text, this);\n                        }\n                        _a.label = 4;\n                    case 4:\n                        if (!!bpmnAnnotation) return [3 /*break*/, 8];\n                        node = this.nameTable[this.activeLabel.parentId];\n                        deleteNode = this.eventHandler.isAddTextNode(node, true);\n                        if (!(!deleteNode && (element.textContent !== text || text !== this.activeLabel.text))) return [3 /*break*/, 7];\n                        if (!isBlazor()) return [3 /*break*/, 6];\n                        return [4 /*yield*/, this.triggerEvent(DiagramEvent.textEdit, args)];\n                    case 5:\n                        args = (_a.sent()) || args;\n                        return [3 /*break*/, 7];\n                    case 6:\n                        this.triggerEvent(DiagramEvent.textEdit, args);\n                        _a.label = 7;\n                    case 7:\n                        if (!textWrapper) {\n                            textWrapper = this.getWrapper(node.wrapper, this.activeLabel.id);\n                        }\n                        annotation_1 = findAnnotation(node, this.activeLabel.id);\n                        if (annotation_1.content !== text && !args.cancel) {\n                            if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier'\n                                && text.indexOf('+') === -1 && text.indexOf('-') === -1 && text.indexOf('#') === -1\n                                && text.indexOf('~') === -1 && node.id.indexOf('_umlClass_header') === -1) {\n                                text = ' + ' + text;\n                            }\n                            if (node.isLane || node.isPhase) {\n                                this.protectPropertyChange(true);\n                            }\n                            if (isBlazor() && (node.shape).type === \"Text\") {\n                                node.shape.textContent = text;\n                            }\n                            annotation_1.content = text;\n                            this.dataBind();\n                            this.updateSelector();\n                            if (node.isLane || node.isPhase) {\n                                this.protectPropertyChange(false);\n                            }\n                        }\n                        if (deleteNode) {\n                            this.removeObjectsFromLayer(node);\n                            this.removeFromAQuad(node);\n                            delete this.nameTable[this.activeLabel.parentId];\n                            if (text !== '') {\n                                this.clearSelection();\n                                clonedObject = cloneObject(node);\n                                node = this.add(clonedObject);\n                                this.updateDiagramObject(node);\n                                this.commandHandler.select(this.nameTable[node.id]);\n                            }\n                        }\n                        _a.label = 8;\n                    case 8:\n                        if (this.selectedItems.nodes.length) {\n                            selectedNode = this.nameTable[this.activeLabel.parentId];\n                            swimLaneNode = this.nameTable[selectedNode.parentId];\n                            if ((swimLaneNode && swimLaneNode.shape.type === 'SwimLane') || (selectedNode.shape.type === 'SwimLane')) {\n                                laneHeader = 'LaneHeaderParent';\n                                phaseHeader = 'PhaseHeaderParent';\n                                if ((selectedNode.shape.type === 'SwimLane')) {\n                                    swimLaneNode = this.nameTable[this.activeLabel.parentId];\n                                    selectedNode = node;\n                                }\n                                if ((selectedNode.isLane || selectedNode.isPhase)) {\n                                    collection = selectedNode.isLane ?\n                                        swimLaneNode.shape.lanes : swimLaneNode.shape.phases;\n                                    for (j = 0; j < collection.length; j++) {\n                                        if (collection[j].id === (selectedNode[laneHeader] || selectedNode[phaseHeader])) {\n                                            collection[j].header.annotation.content = selectedNode.annotations[0].content;\n                                        }\n                                    }\n                                }\n                                else if (selectedNode.isHeader && swimLaneNode.shape.hasHeader) {\n                                    swimLaneNode.shape.header.annotation.content = selectedNode.annotations[0].content;\n                                }\n                            }\n                            this.dataBind();\n                        }\n                        textWrapper.visible = true;\n                        this.updateDiagramObject(node);\n                        this.diagramActions = this.diagramActions & ~DiagramAction.TextEdit;\n                        if (this.activeLabel.isGroup) {\n                            this.endGroupAction();\n                        }\n                        this.activeLabel = { id: '', parentId: '', isGroup: false, text: undefined };\n                        this.commandHandler.getBlazorOldValues();\n                        this.enableServerDataBinding(true);\n                        _a.label = 9;\n                    case 9: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /* tslint:enable */\n    Diagram.prototype.getBlazorTextEditArgs = function (args) {\n        var element = getObjectType(args.element) === Connector ? { connector: cloneBlazorObject(args.element) }\n            : { node: cloneBlazorObject(args.element) };\n        var annotation = {};\n        if (element.node) {\n            if (element.node.shape.type === 'Text') {\n                annotation.textNode = args.element.shape;\n            }\n            else {\n                annotation.nodeAnnotation = args.element.annotations[0];\n            }\n        }\n        else {\n            annotation.connectorAnnotation = args.element.annotations[0];\n        }\n        args = {\n            oldValue: args.oldValue,\n            newValue: args.newValue,\n            cancel: args.cancel,\n            element: element,\n            annotation: annotation\n        };\n        return args;\n    };\n    /** @private */\n    Diagram.prototype.canLogChange = function () {\n        if ((this.diagramActions & DiagramAction.Render) && (!(this.diagramActions & DiagramAction.ToolAction)) &&\n            (!(this.diagramActions & DiagramAction.UndoRedo)) && (!(this.diagramActions & DiagramAction.PublicMethod))) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    Diagram.prototype.modelChanged = function (newProp, oldProp) {\n        if (newProp.connectors || oldProp.connectors || newProp.nodes || oldProp.connectors\n            || newProp.pageSettings || oldProp.pageSettings || newProp.bridgeDirection || oldProp.bridgeDirection) {\n            return true;\n        }\n        return false;\n    };\n    Diagram.prototype.resetDiagramActions = function (action) {\n        var isAction = action ? true : false;\n        if (this.diagramActions & DiagramAction.UndoRedo && (!isAction || (action === DiagramAction.UndoRedo))) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.UndoRedo;\n        }\n        if (this.diagramActions & DiagramAction.PublicMethod && (!isAction || action === DiagramAction.PublicMethod)) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.PublicMethod;\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeNode = function (node) {\n        this.removeObjectsFromLayer(node);\n        this.removeFromAQuad(this.nameTable[node.id]);\n        delete this.nameTable[node.id];\n        if (node.children) {\n            delete this.groupTable[node.id];\n        }\n        if (isBlazor()) {\n            for (var i = 0; i < this.nodes.length; i++) {\n                if (node.id === this.nodes[i].id) {\n                    this.UpdateBlazorDiagramModel(node, 'Node', i);\n                }\n            }\n        }\n        this.UpdateBlazorDiagramModel(node, 'Node', (this.nodes.indexOf(node)));\n        this.nodes.splice(this.nodes.indexOf(node), 1);\n    };\n    /** @private */\n    Diagram.prototype.deleteGroup = function (node) {\n        var elements = [];\n        var tempNode = [];\n        if (node.children) {\n            tempNode = this.commandHandler.getChildren(node, elements);\n        }\n        this.UpdateBlazorDiagramModelCollection(node);\n        for (var _i = 0, tempNode_1 = tempNode; _i < tempNode_1.length; _i++) {\n            var nodes = tempNode_1[_i];\n            if (this.nameTable[nodes.id]) {\n                this.remove(nodes);\n            }\n        }\n    };\n    //helper methods - end region\n    //property changes - start region\n    /** @private */\n    Diagram.prototype.updateObject = function (actualObject, oldObject, changedProp) {\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            var bound = actualObject.wrapper.children[0].bounds;\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bound);\n            if (!checkBoundaryConstraints) {\n                if (actualObject instanceof Node) {\n                    var oldNode = oldObject;\n                    for (var _i = 0, _a = Object.keys(changedProp); _i < _a.length; _i++) {\n                        var key = _a[_i];\n                        switch (key) {\n                            case 'width':\n                                actualObject.width = oldNode.width;\n                                break;\n                            case 'height':\n                                actualObject.height = oldNode.height;\n                                break;\n                            case 'offsetX':\n                                actualObject.offsetX = oldNode.offsetX;\n                                break;\n                            case 'offsetY':\n                                actualObject.offsetY = oldNode.offsetY;\n                                break;\n                            case 'rotateAngle':\n                                actualObject.rotateAngle = oldNode.rotateAngle;\n                                break;\n                        }\n                    }\n                    this.nodePropertyChange(actualObject, changedProp, oldObject);\n                }\n                else {\n                    for (var _b = 0, _c = Object.keys(changedProp); _b < _c.length; _b++) {\n                        var key = _c[_b];\n                        var oldConnector = oldObject;\n                        var actualSourcePoint = actualObject.sourcePoint;\n                        var actualTargetPoint = actualObject.targetPoint;\n                        switch (key) {\n                            case 'sourcePoint':\n                                actualSourcePoint.x = oldConnector.sourcePoint.x || actualSourcePoint.x;\n                                actualSourcePoint.y = oldConnector.sourcePoint.y || actualSourcePoint.y;\n                                break;\n                            case 'targetPoint':\n                                actualTargetPoint.x = oldConnector.targetPoint.x || actualTargetPoint.x;\n                                actualTargetPoint.y = oldConnector.targetPoint.y || actualTargetPoint.y;\n                        }\n                    }\n                    this.connectorPropertyChange(actualObject, changedProp, oldObject);\n                }\n            }\n        }\n    };\n    Diagram.prototype.nodePropertyChangeExtend = function (actualObject, oldObject, node, update) {\n        if (node.style !== undefined && actualObject.shape.type !== 'Bpmn') {\n            updateStyle(node.style, actualObject.wrapper.children[0]);\n            update = true;\n        }\n        if (node.shadow !== undefined) {\n            this.updateShadow(actualObject.shadow, node.shadow);\n            update = true;\n        }\n        if (node.constraints !== undefined) {\n            if ((oldObject.constraints & NodeConstraints.Select) &&\n                (!(node.constraints & NodeConstraints.Select)) && isSelected(this, actualObject)) {\n                this.clearSelection();\n            }\n            else {\n                this.updateThumbConstraints(this.selectedItems.nodes, this.selectedItems);\n                this.updateSelector();\n                update = true;\n            }\n        }\n        this.swimLaneNodePropertyChange(actualObject, oldObject, node, update);\n        return update;\n    };\n    /* tslint:disable */\n    Diagram.prototype.swimLaneNodePropertyChange = function (actualObject, oldObject, node, update) {\n        if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol) {\n            if (oldObject.shape) {\n                var shape = node.shape;\n                var actualShape = actualObject.shape;\n                var orientation_1 = (actualShape.orientation === 'Horizontal') ? true : false;\n                var padding = actualShape.padding;\n                var oldShape = oldObject.shape;\n                var grid = actualObject.wrapper.children[0];\n                var oldObjects = void 0;\n                var newObjects = void 0;\n                var id = void 0;\n                if (oldShape.lanes || oldShape.phases) {\n                    if (oldShape.lanes) {\n                        for (var _i = 0, _a = Object.keys(shape.lanes); _i < _a.length; _i++) {\n                            var count = _a[_i];\n                            var indexValue = Number(count);\n                            var lane = oldShape.lanes[indexValue];\n                            var laneIndex = void 0;\n                            var newLane = shape.lanes[indexValue];\n                            if (newLane && newLane.header) {\n                                id = actualShape.lanes[indexValue].header.id;\n                                oldObjects = lane.header;\n                                newObjects = newLane.header;\n                                this.nodePropertyChange(this.nameTable[id], oldObjects, newObjects);\n                            }\n                            if (lane.children) {\n                                for (var _b = 0, _c = Object.keys(lane.children); _b < _c.length; _b++) {\n                                    var childNodeIndex = _c[_b];\n                                    id = actualShape.lanes[indexValue].children[Number(childNodeIndex)].id;\n                                    var node_1 = this.nameTable[id];\n                                    oldObjects = lane.children[Number(childNodeIndex)];\n                                    newObjects = newLane.children[Number(childNodeIndex)];\n                                    this.nodePropertyChange(node_1, oldObjects, newObjects);\n                                }\n                            }\n                            if (lane.width && !orientation_1) {\n                                laneIndex = (actualShape.phases && actualShape.phaseSize) ? indexValue + 1 : indexValue;\n                                grid.updateColumnWidth(laneIndex, newLane.width, true, padding);\n                                this.updateDiagramElementQuad();\n                            }\n                            if (lane.height && orientation_1) {\n                                laneIndex = (actualShape.header && actualShape.hasHeader) ? indexValue + 1 : indexValue;\n                                laneIndex += (actualShape.phases && actualShape.phaseSize) ? 1 : 0;\n                                grid.updateRowHeight(laneIndex, newLane.height, true, padding);\n                                this.updateDiagramElementQuad();\n                            }\n                        }\n                    }\n                    if (shape.phases) {\n                        for (var _d = 0, _e = Object.keys(shape.phases); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var indexValue = Number(key);\n                            var phase = shape.phases[indexValue];\n                            var size = void 0;\n                            var rowIndex = (actualShape.header && actualShape.hasHeader) ? 1 : 0;\n                            if (phase && phase.header) {\n                                id = actualShape.phases[indexValue].header.id;\n                                oldObjects = oldShape.phases[indexValue].header;\n                                newObjects = phase.header;\n                                this.nodePropertyChange(this.nameTable[id], oldObjects, newObjects);\n                            }\n                            if (phase.offset) {\n                                if (indexValue === 0) {\n                                    size = phase.offset;\n                                }\n                                else {\n                                    var previousPhase = actualShape.phases[indexValue - 1];\n                                    size = phase.offset - previousPhase.offset;\n                                    if (size <= 0) {\n                                        size = phase.offset;\n                                    }\n                                }\n                                if (orientation_1) {\n                                    grid.updateColumnWidth(indexValue, size, true, padding);\n                                    updatePhaseMaxWidth(actualObject, this, grid.rows[rowIndex].cells[indexValue], indexValue);\n                                }\n                                else {\n                                    grid.updateRowHeight(rowIndex + indexValue, size, true, padding);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (shape.phaseSize !== undefined && actualShape.phases.length) {\n                    if (shape.phaseSize === 0 || oldShape.phaseSize === 0) {\n                        if (oldShape.phaseSize) {\n                            if (orientation_1) {\n                                grid.removeRow((actualShape.header && actualShape.hasHeader) ? 1 : 0);\n                                actualObject.height = actualObject.wrapper.height = grid.height;\n                            }\n                            else {\n                                if (actualShape.header && actualShape.hasHeader) {\n                                    grid.rows[0].cells[1].children = grid.rows[0].cells[0].children;\n                                    grid.rows[0].cells[1].columnSpan = grid.rows[0].cells[0].columnSpan - 1;\n                                    grid.rows[0].cells[0].children = [];\n                                }\n                                grid.removeColumn(0);\n                            }\n                        }\n                        else {\n                            if (orientation_1) {\n                                var rowDef = new RowDefinition();\n                                rowDef.height = shape.phaseSize;\n                                grid.addRow((actualShape.header && actualShape.hasHeader) ? 1 : 0, rowDef, true);\n                                actualObject.height = actualObject.wrapper.height += shape.phaseSize;\n                            }\n                            else {\n                                var colDef = new ColumnDefinition();\n                                colDef.width = shape.phaseSize;\n                                grid.addColumn(0, colDef, true);\n                                if (actualShape.header && actualShape.hasHeader) {\n                                    grid.rows[0].cells[0].children = grid.rows[0].cells[1].children;\n                                    grid.rows[0].cells[1].children = [];\n                                    grid.rows[0].cells[1].columnSpan = 1;\n                                    grid.rows[0].cells[1].minWidth = undefined;\n                                    grid.rows[0].cells[0].columnSpan = actualShape.lanes.length + 1;\n                                }\n                            }\n                            for (var k = 0; k < actualShape.phases.length; k++) {\n                                if (actualShape.phases[k].id === '') {\n                                    actualShape.phases[k].id = randomId();\n                                }\n                                phaseDefine(grid, this, actualObject, (actualShape.header && actualShape.hasHeader) ? 1 : 0, orientation_1, k);\n                            }\n                        }\n                    }\n                    else {\n                        if (orientation_1) {\n                            grid.updateRowHeight((actualShape.header && actualShape.hasHeader) ? 1 : 0, shape.phaseSize, false);\n                        }\n                        else {\n                            grid.updateColumnWidth(0, shape.phaseSize, false);\n                        }\n                    }\n                }\n                if (actualShape.header && actualShape.hasHeader && oldShape.header) {\n                    var id_1 = grid.rows[0].cells[0].children[0].id;\n                    var headerNode = this.nameTable[id_1];\n                    this.nodePropertyChange(headerNode, (oldShape.header), shape.header);\n                }\n                actualObject.height = actualObject.wrapper.height = grid.height;\n                actualObject.width = actualObject.wrapper.width = grid.width;\n            }\n            else if (oldObject.constraints) {\n                var oldSelectConstraints = (oldObject.constraints & NodeConstraints.Select);\n                var newSelectConstraints = (node.constraints & NodeConstraints.Select);\n                if (oldSelectConstraints !== newSelectConstraints) {\n                    var shape = actualObject.shape;\n                    // Header - constraints\n                    var headerNode = this.nameTable[actualObject.id + shape.header.id];\n                    headerNode.constraints = (!newSelectConstraints) ? headerNode.constraints & ~NodeConstraints.Select :\n                        headerNode.constraints | NodeConstraints.Select;\n                    // Phase - Constraints\n                    var phaseNode = void 0;\n                    if (shape.phaseSize > 0) {\n                        for (var i = 0; i < shape.phases.length; i++) {\n                            phaseNode = this.nameTable[actualObject.id + shape.phases[i].id + '_header'];\n                            phaseNode.constraints = (!newSelectConstraints) ? phaseNode.constraints & ~NodeConstraints.Select :\n                                phaseNode.constraints | NodeConstraints.Select;\n                        }\n                    }\n                    // Header - Constraints\n                    var laneNode = void 0;\n                    var laneHeader = void 0;\n                    var value = shape.phases.length || 1;\n                    for (var i = 0; i < shape.lanes.length; i++) {\n                        for (var l = 0; l < value; l++) {\n                            laneNode = this.nameTable[actualObject.id + shape.lanes[i].id + l];\n                            laneNode.constraints = (!newSelectConstraints) ? laneNode.constraints & ~NodeConstraints.Select :\n                                laneNode.constraints | NodeConstraints.Select;\n                            if (l === 0) {\n                                laneHeader = this.nameTable[actualObject.id + shape.lanes[i].id + '_' + l + '_header'];\n                                laneHeader.constraints = (!newSelectConstraints) ? laneHeader.constraints & ~NodeConstraints.Select :\n                                    laneHeader.constraints | NodeConstraints.Select;\n                            }\n                        }\n                    }\n                }\n            }\n            update = true;\n        }\n        return update;\n    };\n    /** @private */\n    Diagram.prototype.insertValue = function (oldNodeObject, isNode) {\n        var value;\n        var oldObjects = isNode ? this.oldNodeObjects : this.oldConnectorObjects;\n        for (var i = 0; i < oldObjects.length; i++) {\n            if (oldObjects[i].id === oldNodeObject.id) {\n                value = true;\n            }\n        }\n        if (!value) {\n            isNode ? (this.oldNodeObjects.push(oldNodeObject)) : this.oldConnectorObjects.push(oldNodeObject);\n        }\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.nodePropertyChange = function (actualObject, oldObject, node, isLayout, rotate, propertyChange) {\n        if (this.canEnableBlazorObject) {\n            var node_2 = cloneObject(actualObject);\n            this.insertValue(node_2, true);\n        }\n        var existingBounds = actualObject.wrapper.outerBounds;\n        var existingInnerBounds = actualObject.wrapper.bounds;\n        var updateConnector = false;\n        var i;\n        var j;\n        var offsetX;\n        var offsetY;\n        var update;\n        var tx;\n        var ty;\n        if (node.width !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].width = node.width;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.width, true);\n            }\n            else {\n                actualObject.wrapper.width = node.width;\n            }\n        }\n        if (node.height !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].height = node.height;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.height, false);\n            }\n            else {\n                actualObject.wrapper.height = node.height;\n            }\n        }\n        update = this.nodePropertyChangeExtend(actualObject, oldObject, node, update);\n        if (node.constraints !== undefined && canShadow(oldObject) !== canShadow(node)) {\n            actualObject.wrapper.children[0].shadow = canShadow(actualObject) ? actualObject.shadow : null;\n        }\n        if (node.offsetX !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetX !== actualObject.wrapper.offsetX && oldObject.offsetX !== undefined) {\n                    var offsetX_1 = node.offsetX - oldObject.offsetX;\n                    actualObject.wrapper.offsetX = actualObject.wrapper.offsetX + offsetX_1;\n                    this.updateFlipOffset(actualObject.wrapper, offsetX_1, 0, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetX = node.offsetX;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.offsetY !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetY !== actualObject.wrapper.offsetY && oldObject.offsetY !== undefined) {\n                    var offsetY_1 = node.offsetY - oldObject.offsetY;\n                    actualObject.wrapper.offsetY = actualObject.wrapper.offsetY + offsetY_1;\n                    this.updateFlipOffset(actualObject.wrapper, 0, offsetY_1, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetY = node.offsetY;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.pivot !== undefined) {\n            actualObject.wrapper.pivot = node.pivot;\n            update = true;\n        }\n        if (node.minWidth !== undefined) {\n            actualObject.wrapper.minWidth = actualObject.wrapper.children[0].minWidth = node.minWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.minHeight !== undefined) {\n            actualObject.wrapper.minHeight = actualObject.wrapper.children[0].minHeight = node.minHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxWidth !== undefined) {\n            actualObject.wrapper.maxWidth = node.maxWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxHeight !== undefined) {\n            actualObject.wrapper.maxHeight = node.maxHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.flip !== undefined) {\n            actualObject.wrapper.flip = node.flip;\n            update = true;\n            updateConnector = true;\n            if (actualObject.wrapper.elementActions & ElementAction.ElementIsGroup) {\n                alignElement(actualObject.wrapper, actualObject.offsetX, actualObject.offsetY, this, node.flip);\n                if (actualObject && actualObject.children) {\n                    for (var _i = 0, _a = actualObject.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        var updateNode = this.nameTable[child];\n                        updateNode.wrapper.flip = node.flip;\n                        this.updatePorts(updateNode, node.flip);\n                    }\n                }\n            }\n            else {\n                actualObject.wrapper.children[0].flip = node.flip;\n                this.updatePorts(actualObject, node.flip);\n            }\n        }\n        if (node.rotateAngle !== undefined) {\n            if (actualObject.children && rotate) {\n                this.commandHandler.rotateObjects(actualObject, [actualObject], actualObject.rotateAngle - actualObject.wrapper.rotateAngle, { x: actualObject.offsetX, y: actualObject.offsetY }, false);\n            }\n            actualObject.wrapper.rotateAngle = node.rotateAngle;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.backgroundColor !== undefined) {\n            actualObject.wrapper.style.fill = node.backgroundColor;\n        }\n        if (node.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (node.shape !== undefined && actualObject.shape.type !== 'Bpmn') {\n            update = true;\n            updateShape(node, actualObject, oldObject, this);\n            updateConnector = true;\n        }\n        if (node.margin) {\n            update = true;\n            this.updateMargin(actualObject, node);\n            updateConnector = true;\n        }\n        if (((node.shape !== undefined && node.shape.type === undefined) || node.width !== undefined\n            || node.height !== undefined || node.style !== undefined) && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            update = true;\n            updateConnector = true;\n            this.bpmnModule.updateBPMN(node, oldObject, actualObject, this);\n        }\n        if (actualObject.shape.type === 'UmlActivity' && ((!isBlazor() && actualObject.shape.shape === 'FinalNode') ||\n            (isBlazor() && actualObject.shape.umlActivityShape === 'FinalNode'))) {\n            update = true;\n            updateConnector = true;\n            this.updateUMLActivity(node, oldObject, actualObject, this);\n        }\n        if ((actualObject.shape && actualObject.shape.type === 'UmlClassifier') || (actualObject.parentId &&\n            this.nameTable[actualObject.parentId] && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier')) {\n            update = true;\n            updateConnector = true;\n        }\n        if (node.ports !== undefined) {\n            for (var _b = 0, _c = Object.keys(node.ports); _b < _c.length; _b++) {\n                var key = _c[_b];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.ports[key];\n                var actualPort = actualObject.ports[index];\n                this.updatePort(changedObject, actualPort, actualObject.wrapper);\n                updateConnector = true;\n            }\n        }\n        if (node.annotation !== undefined || node.annotations !== undefined || node.width !== undefined) {\n            for (var _d = 0, _e = Object.keys(node.annotations || actualObject.annotations); _d < _e.length; _d++) {\n                var key = _e[_d];\n                var index = Number(key);\n                update = true;\n                var changedObject = void 0;\n                if (node.annotation) {\n                    changedObject = node.annotation;\n                }\n                else {\n                    changedObject = node.annotations ? node.annotations[key] : actualObject.annotations;\n                }\n                var actualAnnotation = actualObject.annotations[index];\n                if (actualAnnotation) {\n                    var updateSize = actualObject.width ? true : false;\n                    this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject, updateSize);\n                }\n            }\n        }\n        if (node.expandIcon !== undefined || node.collapseIcon !== undefined || node.isExpanded !== undefined) {\n            this.updateIcon(actualObject);\n            this.updateDefaultLayoutIcons(actualObject);\n            if (node.isExpanded !== undefined) {\n                this.commandHandler.expandNode(actualObject, this);\n            }\n            update = true;\n        }\n        if (node.tooltip !== undefined) {\n            this.updateTooltip(actualObject, node);\n        }\n        if (update) {\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateTextAnnotationProp(actualObject, { offsetX: (oldObject.offsetX || actualObject.offsetX), offsetY: (oldObject.offsetY || actualObject.offsetY) }, this);\n            }\n            if (this.checkSelectedItem(actualObject) && actualObject.wrapper.children[0] instanceof TextElement) {\n                actualObject.wrapper.children[0].refreshTextElement();\n            }\n            actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height), actualObject.id, this.onLoadImageSize.bind(this));\n            actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            this.updateObject(actualObject, oldObject, node);\n            if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol && !(this.diagramActions & DiagramAction.ToolAction)) {\n                updateHeaderMaxWidth(this, actualObject);\n                var grid = actualObject.wrapper.children[0];\n                var shape = actualObject.shape;\n                var column = grid.columnDefinitions().length;\n                if (shape.orientation === 'Horizontal') {\n                    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n                    updatePhaseMaxWidth(actualObject, this, grid.rows[index].cells[column - 1], column - 1);\n                }\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            }\n            if ((!(this.diagramActions & DiagramAction.ToolAction)) || (this.diagramActions & DiagramAction.UndoRedo)) {\n                if (this.checkSelectedItem(actualObject)) {\n                    this.updateSelector();\n                }\n            }\n            if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) {\n                this.updateQuad(actualObject);\n            }\n            if (!isLayout) {\n                this.commandHandler.connectorSegmentChange(actualObject, existingInnerBounds, (node.rotateAngle !== undefined) ? true : false);\n                // if (updateConnector) {\n                //     this.updateConnectorEdges(actualObject);\n                // }\n            }\n            else {\n                if (actualObject && actualObject.visible && actualObject.outEdges) {\n                    this.updateIconVisibility(actualObject, (actualObject.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateDocks(actualObject, this);\n            }\n            this.updateGroupOffset(actualObject);\n            // if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) { this.updateQuad(actualObject); }\n            var objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n            if (objects.length === 0) {\n                if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n                    var parent_4 = this.nameTable[actualObject.parentId];\n                    parent_4.wrapper.measure(new Size(parent_4.wrapper.width, actualObject.wrapper.height));\n                    parent_4.wrapper.arrange(parent_4.wrapper.desiredSize);\n                    parent_4.offsetX = parent_4.wrapper.offsetX;\n                    parent_4.offsetY = parent_4.wrapper.offsetY;\n                }\n            }\n            if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n                this.updateGroupSize(actualObject);\n                if (actualObject.children) {\n                    this.updateGroupOffset(actualObject);\n                }\n            }\n            if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol && (this.diagramActions & DiagramAction.Render)) {\n                var connectors = getConnectors(this, actualObject.wrapper.children[0], undefined, true);\n                updateConnectorsProperties(connectors, this);\n            }\n            if (!this.preventNodesUpdate) {\n                if (!canVitualize(this) || (canVitualize(this) && this.scroller.oldCollectionObjects.indexOf(actualObject.id) > -1)) {\n                    if (this.diagramActions & DiagramAction.PreventZIndexOnDragging) {\n                        this.updateDiagramObject(actualObject, true);\n                    }\n                    else {\n                        this.updateDiagramObject(actualObject);\n                    }\n                }\n                if (!isLayout && updateConnector) {\n                    if (this.lineRoutingModule && this.diagramActions && (this.constraints & DiagramConstraints.LineRouting) && actualObject.id !== 'helper') {\n                        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n                            this.lineRoutingModule.renderVirtualRegion(this, true);\n                        }\n                    }\n                    this.updateConnectorEdges(actualObject);\n                    if (actualObject.id !== 'helper' && !(this.diagramActions & DiagramAction.ToolAction)) {\n                        var objects_2 = this.spatialSearch.findObjects(actualObject.wrapper.outerBounds);\n                        for (var i_3 = 0; i_3 < objects_2.length; i_3++) {\n                            var object = objects_2[i_3];\n                            if (object instanceof Connector) {\n                                this.connectorPropertyChange(objects_2[i_3], {}, {\n                                    sourceID: object.sourceID,\n                                    targetID: object.targetID,\n                                    sourcePortID: object.sourcePortID,\n                                    targetPortID: object.targetPortID,\n                                    sourcePoint: object.sourcePoint,\n                                    targetPoint: object.targetPoint\n                                });\n                            }\n                        }\n                    }\n                }\n            }\n            if (actualObject.status !== 'New' && this.diagramActions) {\n                actualObject.status = 'Update';\n            }\n        }\n        if (!propertyChange) {\n            var element = actualObject;\n            var args = {\n                element: element, cause: this.diagramActions,\n                oldValue: oldObject, newValue: node\n            };\n            if (isBlazor() && this.propertyChange) {\n                args.element = { node: cloneBlazorObject(element) };\n                args.oldValue = { node: cloneBlazorObject(oldObject) };\n                args.newValue = { node: cloneBlazorObject(node) };\n            }\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n    };\n    Diagram.prototype.updatePorts = function (actualObject, flip) {\n        if (actualObject && actualObject.ports.length > 0) {\n            for (var _i = 0, _a = Object.keys(actualObject.ports); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var actualPort = actualObject.ports[index];\n                var portWrapper = this.getWrapper(actualObject.wrapper, actualPort.id);\n                portWrapper = updatePortEdges(portWrapper, flip, actualPort);\n                portWrapper.relativeMode = 'Point';\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n        }\n    };\n    Diagram.prototype.updateFlipOffset = function (element, diffX, diffY, flip) {\n        if (element.hasChildren()) {\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (flip === 'Horizontal' || flip === 'Both') {\n                    child.flipOffset.x = child.flipOffset.x + diffX;\n                }\n                if (flip === 'Vertical' || flip === 'Both') {\n                    child.flipOffset.y = child.flipOffset.y + diffY;\n                }\n                if (child instanceof Canvas || child instanceof Container) {\n                    this.updateFlipOffset(child, diffX, diffY, flip);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateUMLActivity = function (changedProp, oldObject, actualObject, diagram) {\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (sizeChanged) {\n            var innerFinalNode = actualObject.wrapper.children[0].children[0];\n            innerFinalNode.width = changedProp.width;\n            innerFinalNode.height = changedProp.height;\n            var outerFinalNode = actualObject.wrapper.children[0].children[1];\n            outerFinalNode.width = changedProp.width / 1.5;\n            outerFinalNode.height = changedProp.height / 1.5;\n        }\n    };\n    Diagram.prototype.updateConnectorProperties = function (connector) {\n        if (this.preventConnectorsUpdate) {\n            var index = this.selectionConnectorsList.indexOf(connector);\n            if (index === -1) {\n                this.selectionConnectorsList.push(connector);\n            }\n        }\n        else {\n            var conn = {\n                sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint, sourceID: connector.sourceID,\n                targetID: connector.targetID, sourcePortID: connector.sourcePortID, targetPortID: connector.targetPortID\n            };\n            this.connectorPropertyChange(connector, {}, conn, undefined, true);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateConnectorEdges = function (actualObject) {\n        if (actualObject.inEdges.length > 0) {\n            for (var j = 0; j < actualObject.inEdges.length; j++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.inEdges[j]]);\n            }\n        }\n        if (actualObject.outEdges.length > 0) {\n            for (var k = 0; k < actualObject.outEdges.length; k++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.outEdges[k]]);\n            }\n        }\n        if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n            this.updateConnectorEdges(this.nameTable[actualObject.parentId]);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.connectorProprtyChangeExtend = function (actualObject, oldProp, newProp, updateSelector) {\n        if (newProp.type !== undefined && newProp.type !== oldProp.type) {\n            if (actualObject.segments.length > 0 && newProp.segments === undefined) {\n                actualObject.segments = [];\n            }\n        }\n        if ((newProp.shape !== undefined) && actualObject.shape !== undefined &&\n            actualObject.shape && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            this.bpmnModule.updateBPMNConnector(actualObject, oldProp, newProp, this);\n        }\n        if (actualObject.constraints !== undefined) {\n            this.updateThumbConstraints(this.selectedItems.connectors, this.selectedItems);\n            return updateSelector = true;\n        }\n        return updateSelector;\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.connectorPropertyChange = function (actualObject, oldProp, newProp, disableBridging, propertyChange) {\n        if (this.canEnableBlazorObject) {\n            var node = cloneObject(actualObject);\n            this.insertValue(node, false);\n        }\n        var existingBounds = actualObject.wrapper.bounds;\n        var updateSelector = false;\n        var points = [];\n        updateSelector = this.connectorProprtyChangeExtend(actualObject, oldProp, newProp, updateSelector);\n        var inPort;\n        var outPort;\n        var source;\n        var target;\n        if (newProp.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (newProp.sourcePoint !== undefined || newProp.targetPoint !== undefined\n            || newProp.sourceID !== undefined || newProp.targetID !== undefined || newProp.targetPadding !== undefined ||\n            newProp.sourcePortID !== undefined || newProp.targetPortID !== undefined || newProp.sourcePadding !== undefined ||\n            newProp.type !== undefined || newProp.segments !== undefined || newProp.flip !== undefined) {\n            if ((newProp.sourceID !== undefined && newProp.sourceID !== oldProp.sourceID) || newProp.sourcePortID) {\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                outPort = this.findInOutConnectPorts(sourceNode, false);\n                if (!sourceNode || (canOutConnect(sourceNode) || (actualObject.sourcePortID !== '' && canPortOutConnect(outPort)))) {\n                    actualObject.sourceWrapper = sourceNode ? this.getEndNodeWrapper(sourceNode, actualObject, true) : undefined;\n                    if (actualObject.sourcePortID && newProp.sourcePortID === undefined) {\n                        actualObject.sourcePortWrapper = sourceNode ? this.getWrapper(sourceNode.wrapper, actualObject.sourcePortID) : undefined;\n                    }\n                    this.removePortEdges(this.nameTable[oldProp.sourceID] || sourceNode, oldProp.sourcePortID || actualObject.sourcePortID, actualObject.id, false);\n                }\n                if (newProp.sourceID !== undefined && oldProp.sourceID !== undefined && oldProp.sourceID !== '') {\n                    var oldSource = this.nameTable[oldProp.sourceID];\n                    if (oldSource !== undefined && oldSource.outEdges && oldSource.outEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldSource.outEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.targetID !== undefined && newProp.targetID !== oldProp.targetID) {\n                var targetNode = this.nameTable[newProp.targetID];\n                inPort = this.findInOutConnectPorts(targetNode, true);\n                if (!targetNode || (canInConnect(targetNode) || (actualObject.targetPortID !== '' && canPortInConnect(inPort)))) {\n                    actualObject.targetWrapper = targetNode ? this.getEndNodeWrapper(targetNode, actualObject, false) : undefined;\n                    if (actualObject.targetPortID && newProp.targetPortID === undefined) {\n                        actualObject.targetPortWrapper = targetNode ? this.getWrapper(targetNode.wrapper, actualObject.targetPortID) : undefined;\n                    }\n                    this.removePortEdges(this.nameTable[oldProp.targetID] || targetNode, oldProp.targetPortID || actualObject.targetPortID, actualObject.id, true);\n                }\n                if (oldProp !== undefined && oldProp.targetID !== undefined && oldProp.targetID !== '') {\n                    var oldTarget = this.nameTable[oldProp.targetID];\n                    if (oldTarget !== undefined && oldTarget.inEdges && oldTarget.inEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldTarget.inEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.sourcePortID !== undefined && newProp.sourcePortID !== oldProp.sourcePortID) {\n                if (actualObject.sourceID && this.nameTable[actualObject.sourceID]) {\n                    source = this.nameTable[actualObject.sourceID].wrapper;\n                }\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                if (!sourceNode || (canOutConnect(sourceNode) || (actualObject.sourcePortID !== '' && canPortOutConnect(outPort)))) {\n                    actualObject.sourcePortWrapper = source ? this.getWrapper(source, newProp.sourcePortID) : undefined;\n                }\n            }\n            if (newProp.targetPortID !== undefined && newProp.targetPortID !== oldProp.targetPortID) {\n                var targetNode = this.nameTable[actualObject.targetID];\n                if (actualObject.targetID && this.nameTable[actualObject.targetID]) {\n                    target = this.nameTable[actualObject.targetID].wrapper;\n                }\n                if (!targetNode || (canInConnect(targetNode) || (actualObject.targetPortID !== '' && canPortInConnect(inPort)))) {\n                    actualObject.targetPortWrapper = target ? this.getWrapper(target, newProp.targetPortID) : undefined;\n                }\n            }\n            if (newProp.flip !== undefined) {\n                actualObject.flip = newProp.flip;\n                flipConnector(actualObject);\n            }\n            if (actualObject.type === 'Orthogonal' && this.lineRoutingModule && this.diagramActions &&\n                (this.constraints & DiagramConstraints.LineRouting) && !(this.diagramActions & DiagramAction.ToolAction)) {\n                this.lineRoutingModule.renderVirtualRegion(this, true);\n                this.lineRoutingModule.refreshConnectorSegments(this, actualObject, false);\n            }\n            points = this.getPoints(actualObject);\n        } //Add prop change for zindex, alignments and margin\n        if (newProp.style !== undefined) {\n            updateStyle(newProp.style, actualObject.wrapper.children[0]);\n        }\n        if (points.length > 0 || newProp.sourceDecorator !== undefined || (newProp.targetDecorator !== undefined\n            && (canMeasureDecoratorPath(Object.keys(newProp.targetDecorator)))) || newProp.cornerRadius !== undefined) {\n            updateConnector(actualObject, points.length > 0 ? points : actualObject.intermediatePoints, this.diagramActions);\n            if (newProp.type !== undefined) {\n                updateSelector = true;\n            }\n            if (points.length > 0) {\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                this.updateConnectorAnnotation(actualObject);\n                this.updateObject(actualObject, oldProp, newProp);\n            } //work-around to update intersected connector bridging\n        }\n        if ((newProp.sourcePoint || newProp.targetPoint || newProp.segments)\n            && this.diagramActions === DiagramAction.Render) {\n            updateSelector = true;\n        }\n        if (actualObject.shape.type === 'Bpmn' && actualObject.shape.sequence === 'Default') {\n            this.commandHandler.updatePathElementOffset(actualObject);\n        }\n        if (!disableBridging) {\n            this.updateBridging();\n        }\n        this.updateAnnotations(newProp, actualObject);\n        actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n        actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n        if (existingBounds.equals(existingBounds, actualObject.wrapper.bounds) === false) {\n            this.updateQuad(actualObject);\n            this.updateGroupSize(actualObject);\n        }\n        if (updateSelector === true && this.checkSelectedItem(actualObject) && (!(this.diagramActions & DiagramAction.ToolAction)\n            || (this.diagramActions & DiagramAction.UndoRedo))) {\n            this.updateSelector();\n        }\n        if (!this.preventConnectorsUpdate) {\n            if (!canVitualize(this) || (canVitualize(this) && this.scroller.oldCollectionObjects.indexOf(actualObject.id) > -1)) {\n                if (this.diagramActions & DiagramAction.PreventZIndexOnDragging) {\n                    this.updateDiagramObject(actualObject, true);\n                }\n                else {\n                    this.updateDiagramObject(actualObject);\n                }\n            }\n        }\n        if (this.diagramActions && actualObject.status !== 'New') {\n            actualObject.status = 'Update';\n        }\n        this.triggerPropertyChange(propertyChange, actualObject, oldProp, newProp);\n    };\n    /* tslint:enable */\n    /** @private */\n    Diagram.prototype.removePortEdges = function (node, portId, item, isInEdges) {\n        if (node) {\n            for (var i = 0; i < node.ports.length; i++) {\n                var port = node.ports[i];\n                if (port.id === portId) {\n                    var portEdge = (isInEdges) ? port.inEdges : port.outEdges;\n                    removeItem(portEdge, item);\n                }\n            }\n        }\n    };\n    Diagram.prototype.getpropertyChangeArgs = function (element, oldProp, newProp, args) {\n        args.element = { connector: cloneBlazorObject(element) };\n        args.oldValue = { connector: cloneBlazorObject(oldProp) };\n        args.newValue = { connector: cloneBlazorObject(newProp) };\n        return args;\n    };\n    Diagram.prototype.triggerPropertyChange = function (propertyChange, actualObject, oldProp, newProp) {\n        if (!propertyChange) {\n            var element = actualObject;\n            var args = {\n                element: cloneBlazorObject(element), cause: this.diagramActions,\n                oldValue: cloneBlazorObject(oldProp), newValue: cloneBlazorObject(newProp)\n            };\n            if (isBlazor()) {\n                args = this.getpropertyChangeArgs(element, oldProp, newProp, args);\n            }\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n    };\n    Diagram.prototype.findInOutConnectPorts = function (node, isInconnect) {\n        var port = {};\n        if (node) {\n            port = getInOutConnectPorts(node, isInconnect);\n        }\n        return port;\n    };\n    Diagram.prototype.getPoints = function (actualObject, points) {\n        var pts;\n        pts = actualObject.getConnectorPoints(actualObject.type, points, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n            this.layout.orientation : undefined);\n        return pts;\n    };\n    /**\n     * update the  opacity  and visibility for the node  once the layout animation starts\n     */\n    /** @private */\n    Diagram.prototype.updateNodeProperty = function (element, visible, opacity) {\n        if (visible === undefined) {\n            this.updateElementVisibility(element, this.nameTable[element.id], visible);\n        }\n        else {\n            element.style.opacity = opacity;\n            for (var i = 0; i < element.children.length; i++) {\n                if (element.children[i] instanceof Container) {\n                    this.updateNodeProperty(element.children[i], undefined, opacity);\n                }\n                element.children[i].style.opacity = opacity;\n            }\n        }\n    };\n    /**\n     * checkSelected Item for Connector\n     * @private\n     */\n    Diagram.prototype.checkSelectedItem = function (actualObject) {\n        var selectorModel = this.selectedItems;\n        var isSelected = false;\n        var selItems = [];\n        selItems = selItems.concat(selectorModel.nodes, selectorModel.connectors);\n        if (selItems.length > 0) {\n            if (actualObject.id === selItems[selItems.length - 1].id) {\n                isSelected = true;\n            }\n        }\n        return isSelected;\n    };\n    /**\n     * Updates the visibility of the diagram container\n     * @private\n     */\n    Diagram.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * Updates the visibility of the node/connector\n     * @private\n     */\n    Diagram.prototype.updateElementVisibility = function (element, obj, visible) {\n        if (visible !== undefined) {\n            element.visible = visible;\n            if (obj instanceof Node) {\n                //content\n                if (!obj.children) {\n                    element.children[0].visible = visible;\n                    this.updateDiagramContainerVisibility(element.children[0], visible);\n                    if (obj.shape.type === 'Bpmn' && this.bpmnModule) {\n                        this.bpmnModule.updateElementVisibility(obj, visible, this);\n                    }\n                }\n                else {\n                    for (var _i = 0, _a = obj.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        this.updateElementVisibility(this.nameTable[child].wrapper, this.nameTable[child], visible);\n                    }\n                }\n                //ports\n                if (obj.ports) {\n                    for (var _b = 0, _c = obj.ports; _b < _c.length; _b++) {\n                        var port = _c[_b];\n                        if (port.visibility & PortVisibility.Visible) {\n                            var wrapper = this.getWrapper(element, port.id);\n                            wrapper.visible = visible;\n                        }\n                    }\n                }\n                if (obj.annotations) {\n                    for (var _d = 0, _e = obj.annotations; _d < _e.length; _d++) {\n                        var annotation = _e[_d];\n                        var wrapper = this.getWrapper(element, annotation.id);\n                        wrapper.visible = visible;\n                    }\n                }\n            }\n            else {\n                //path and decorators\n                for (var i = 0; i < 3; i++) {\n                    element.children[i].visible = visible;\n                }\n            }\n            if (obj.annotations) {\n                //annotations\n                for (var _f = 0, _g = obj.annotations; _f < _g.length; _f++) {\n                    var annotation = _g[_f];\n                    var wrapper = this.getWrapper(element, annotation.id);\n                    wrapper.visible = visible;\n                }\n            }\n            if (obj.expandIcon || obj.collapseIcon) {\n                var wrapper = this.getWrapper(element, 'icon_content');\n                if (wrapper) {\n                    for (var i = 0; i < wrapper.children.length; i++) {\n                        wrapper.children[i].visible = visible;\n                    }\n                    wrapper.visible = visible;\n                }\n                if (obj && obj.visible && obj.outEdges) {\n                    this.updateIconVisibility(obj, (obj.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (visible === false) {\n                this.unSelect(this.nameTable[element.id]);\n            }\n            if ((obj instanceof Node && !this.preventNodesUpdate) || (obj instanceof Connector && !this.preventConnectorsUpdate)) {\n                //Avoid calling updateDiagramObject method during rendering\n                if (this.diagramActions) {\n                    this.updateDiagramObject(this.nameTable[element.id], undefined, true);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateAnnotations = function (newProp, actualObject) {\n        if (newProp.annotations !== undefined) {\n            for (var _i = 0, _a = Object.keys(newProp.annotations); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var changedObject = newProp.annotations[key];\n                var actualAnnotation = actualObject.annotations[index];\n                this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateAnnotation = function (changedObject, actualAnnotation, nodes, actualObject, canUpdateSize) {\n        var annotationWrapper;\n        var isMeasure = false;\n        annotationWrapper = this.getWrapper(nodes, actualAnnotation.id);\n        if (annotationWrapper !== undefined) {\n            if (changedObject.width !== undefined && changedObject.height !== undefined) {\n                annotationWrapper.width = changedObject.width;\n                annotationWrapper.height = changedObject.height;\n                isMeasure = true;\n            }\n            if (changedObject.rotateAngle !== undefined) {\n                annotationWrapper.rotateAngle = changedObject.rotateAngle;\n            }\n            if (canUpdateSize && !(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            if (actualAnnotation instanceof PathAnnotation && changedObject.segmentAngle !== undefined) {\n                annotationWrapper.rotateAngle = actualAnnotation.rotateAngle;\n            }\n            if (actualAnnotation instanceof ShapeAnnotation &&\n                changedObject.offset !== undefined) {\n                var offset = changedObject.offset;\n                isMeasure = true;\n                var offsetX = offset.x !== undefined ? offset.x :\n                    actualAnnotation.offset.x;\n                var offsetY = offset.y !== undefined ? offset.y :\n                    actualAnnotation.offset.y;\n                annotationWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                annotationWrapper.relativeMode = 'Point';\n            }\n            else if (actualAnnotation instanceof PathAnnotation &&\n                (changedObject.offset !== undefined ||\n                    changedObject.segmentAngle !== undefined)) {\n                actualObject.updateAnnotation(actualAnnotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n            }\n            if ((actualAnnotation instanceof PathAnnotation) && changedObject.displacement) {\n                if (changedObject.displacement.x !== undefined ||\n                    changedObject.displacement.y !== undefined) {\n                    isMeasure = true;\n                }\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    annotationWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    annotationWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    annotationWrapper.margin.left = changedObject.margin.left;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    annotationWrapper.margin.right = changedObject.margin.right;\n                }\n            }\n            if (isMeasure || canUpdateSize) {\n                annotationWrapper.width = (actualAnnotation.width || actualObject.width);\n                if (actualAnnotation.template) {\n                    annotationWrapper.width = (annotationWrapper.width || annotationWrapper.actualSize.width);\n                    annotationWrapper.height = (actualAnnotation.height || actualObject.height ||\n                        annotationWrapper.actualSize.height);\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                annotationWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                annotationWrapper.verticalAlignment = changedObject.verticalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.visibility !== undefined) {\n                annotationWrapper.visible = (nodes.visible && changedObject.visibility) ? true : false;\n            }\n            if (changedObject.constraints !== undefined) {\n                var updateSelector = false;\n                if ((annotationWrapper.constraints & AnnotationConstraints.Select) &&\n                    (!(changedObject.constraints & AnnotationConstraints.Select)) &&\n                    isSelected(this, actualObject, false, annotationWrapper)) {\n                    //updateSelector = true;\n                }\n                annotationWrapper.constraints = changedObject.constraints;\n                if (updateSelector) {\n                    this.clearSelection();\n                }\n            }\n            if (changedObject.style !== undefined) {\n                updateStyle(changedObject.style, annotationWrapper);\n            }\n            if (changedObject.hyperlink !== undefined) {\n                updateHyperlink(changedObject.hyperlink, annotationWrapper, actualAnnotation);\n            }\n            this.updateAnnotationContent(changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes);\n            if (isMeasure === true) {\n                annotationWrapper.measure(new Size(annotationWrapper.width, annotationWrapper.height));\n                annotationWrapper.arrange(annotationWrapper.desiredSize);\n            }\n            if (!(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            // this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateAnnotationContent = function (changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes) {\n        if (changedObject.content !== undefined) {\n            if (annotationWrapper) {\n                isMeasure = true;\n                if (actualObject.shape.type === 'UmlActivity' &&\n                    ((isBlazor && actualObject.shape.umlActivityShape === 'StructuredNode') ||\n                        (!isBlazor && actualObject.shape.shape === 'StructuredNode'))) {\n                    annotationWrapper.content = '<<' + changedObject.content + '>>';\n                }\n                else {\n                    annotationWrapper.content = changedObject.content;\n                }\n            }\n            if (annotationWrapper instanceof DiagramHtmlElement) {\n                this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n            }\n        }\n        if (changedObject.template !== undefined) {\n            annotationWrapper.content = changedObject.template;\n            this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n        }\n    };\n    Diagram.prototype.updateAnnotationWrapper = function (annotationWrapper, actualObject, actualAnnotation, nodes) {\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var elementId = _a[_i];\n            removeElement(annotationWrapper.id + '_groupElement', elementId);\n            removeElement(annotationWrapper.id + '_html_element', elementId);\n        }\n        if (actualObject instanceof Node) {\n            annotationWrapper =\n                actualObject.initAnnotationWrapper(actualAnnotation, this.element.id);\n        }\n        else if (actualObject instanceof Connector) {\n            var canvas = actualObject.wrapper;\n            var segment = canvas.children[0];\n            var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n            annotationWrapper =\n                actualObject.getAnnotationElement(actualObject.annotations[actualObject.annotations.length - 1], actualObject.intermediatePoints, bounds, this.getDescription, this.element.id);\n        }\n        for (var i = 0; i < nodes.children.length; i++) {\n            if (annotationWrapper.id === nodes.children[i].id) {\n                nodes.children.splice(i, 1, annotationWrapper);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePort = function (changedObject, actualPort, nodes) {\n        var portWrapper;\n        var isMeasure = false;\n        portWrapper = this.getWrapper(nodes, actualPort.id);\n        if (portWrapper !== undefined) {\n            if (changedObject.offset !== undefined) {\n                isMeasure = true;\n                var offsetX = changedObject.offset.x !== undefined ? changedObject.offset.x :\n                    actualPort.offset.x;\n                var offsetY = changedObject.offset.y !== undefined ? changedObject.offset.y :\n                    actualPort.offset.y;\n                portWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                portWrapper.relativeMode = 'Point';\n            }\n            if (changedObject.width !== undefined) {\n                isMeasure = true;\n                portWrapper.width = changedObject.width;\n            }\n            if (changedObject.height !== undefined) {\n                isMeasure = true;\n                portWrapper.height = changedObject.height;\n            }\n            if (changedObject.visibility !== undefined) {\n                portWrapper.visible = (nodes.visible && checkPortRestriction(actualPort, PortVisibility.Visible)) ? true : false;\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    portWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    portWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    portWrapper.margin.right = changedObject.margin.right;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    portWrapper.margin.left = changedObject.margin.left;\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.verticalAlignment = changedObject.verticalAlignment;\n            }\n            if (changedObject.style !== undefined) {\n                if (changedObject.style.fill !== undefined) {\n                    portWrapper.style.fill = changedObject.style.fill;\n                }\n                if (changedObject.style.opacity !== undefined) {\n                    portWrapper.style.opacity = changedObject.style.opacity;\n                }\n                if (changedObject.style.strokeColor !== undefined) {\n                    portWrapper.style.strokeColor = changedObject.style.strokeColor;\n                }\n                if (changedObject.style.strokeWidth !== undefined) {\n                    portWrapper.style.strokeWidth = changedObject.style.strokeWidth;\n                }\n                if (changedObject.style.strokeDashArray !== undefined) {\n                    portWrapper.style.strokeDashArray = changedObject.style.strokeDashArray;\n                }\n            }\n            if (changedObject.shape !== undefined) {\n                if (portWrapper) {\n                    var pathdata = getPortShape(changedObject.shape);\n                    portWrapper.data = pathdata;\n                    portWrapper.canMeasurePath = true;\n                }\n            }\n            if (changedObject.pathData !== undefined) {\n                portWrapper.data = String(changedObject.pathData);\n                isMeasure = true;\n            }\n            if (isMeasure === true) {\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n            //this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateIcon = function (actualObject) {\n        var iconContainer = this.getWrapper(actualObject.wrapper, 'icon_content');\n        var diagramId = (this.diagramActions & DiagramAction.Render) ? this.element.id : undefined;\n        if (iconContainer) {\n            if (this.mode === 'SVG') {\n                var icon = getDiagramElement(actualObject.wrapper.id + '_icon_content', diagramId);\n                if (icon) {\n                    var iconRect = getDiagramElement(icon.id + '_rect', diagramId);\n                    var iconShape = getDiagramElement(icon.id + '_shape', diagramId);\n                    var nativeContent = getDiagramElement(iconShape.id + '_native_element', diagramId);\n                    if (nativeContent) {\n                        nativeContent.parentNode.removeChild(nativeContent);\n                    }\n                    iconShape.parentNode.removeChild(iconShape);\n                    iconRect.parentNode.removeChild(iconRect);\n                    icon.parentNode.removeChild(icon);\n                }\n            }\n            var index = actualObject.wrapper.children.indexOf(iconContainer);\n            actualObject.wrapper.children.splice(index, 1);\n        }\n        var portContainer = this.getPortContainer(actualObject);\n        actualObject.initIcons(this.getDescription, this.layout, portContainer, this.element.id);\n    };\n    Diagram.prototype.getPortContainer = function (actualObject) {\n        if (actualObject.children) {\n            for (var i = 0; i < actualObject.wrapper.children.length; i++) {\n                if (actualObject.wrapper.children[i].id === actualObject.id + 'group_container') {\n                    return actualObject.wrapper.children[i];\n                }\n            }\n        }\n        return actualObject.wrapper;\n    };\n    Diagram.prototype.updateTooltip = function (actualObject, node) {\n        if (node.tooltip.content !== undefined) {\n            actualObject.tooltip.content = node.tooltip.content;\n        }\n        if (node.tooltip.position !== undefined) {\n            actualObject.tooltip.position = node.tooltip.position;\n        }\n        if (node.tooltip.height !== undefined) {\n            actualObject.tooltip.height = node.tooltip.height;\n        }\n        if (node.tooltip.width !== undefined) {\n            actualObject.tooltip.width = node.tooltip.width;\n        }\n        if (node.tooltip.showTipPointer !== undefined) {\n            actualObject.tooltip.showTipPointer = node.tooltip.showTipPointer;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateQuad = function (obj) {\n        var modified = this.spatialSearch.updateQuad(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeFromAQuad = function (obj) {\n        if (obj.children) {\n            var child = void 0;\n            var children = obj.children;\n            for (var i = 0; i < children.length; i++) {\n                child = this.nameTable[children[i]];\n                if (child) {\n                    this.removeFromAQuad(child);\n                }\n            }\n        }\n        this.spatialSearch.removeFromAQuad(obj.wrapper);\n        var modified = this.spatialSearch.updateBounds(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateGroupSize = function (node) {\n        var tempNode;\n        if (node.parentId) {\n            tempNode = this.nameTable[node.parentId];\n            if (tempNode) {\n                if (tempNode.parentId) {\n                    this.updateGroupSize(tempNode);\n                }\n                else {\n                    tempNode.wrapper.measure(new Size());\n                    tempNode.wrapper.arrange(tempNode.wrapper.desiredSize);\n                    this.updateGroupOffset(tempNode);\n                    this.updateDiagramObject(tempNode);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updatePage = function () {\n        if ((this.diagramActions & DiagramAction.Render) &&\n            !(this.diagramActions & DiagramAction.DragUsingMouse)) {\n            this.scroller.updateScrollOffsets();\n            this.scroller.setSize();\n            //updating overview\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    view.updateView(view);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.protectPropertyChange = function (enable) {\n        this.isProtectedOnChange = enable;\n    };\n    /** @private */\n    Diagram.prototype.getProtectPropertyChangeValue = function () {\n        return this.isProtectedOnChange;\n    };\n    /** @private */\n    Diagram.prototype.enableServerDataBinding = function (enable) {\n        if (isBlazor()) {\n            this.allowServerDataBinding = enable;\n            if (enable) {\n                this.bulkChanges = {};\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateShadow = function (nodeShadow, changedShadow) {\n        if (changedShadow.angle !== undefined) {\n            nodeShadow.angle = changedShadow.angle;\n        }\n        if (changedShadow.color !== undefined) {\n            nodeShadow.color = changedShadow.color;\n        }\n        if (changedShadow.distance !== undefined) {\n            nodeShadow.distance = changedShadow.distance;\n        }\n        if (changedShadow.opacity !== undefined) {\n            nodeShadow.opacity = changedShadow.opacity;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateMargin = function (node, changes) {\n        if (changes.margin.top !== undefined) {\n            node.margin.top = changes.margin.top;\n        }\n        if (changes.margin.bottom !== undefined) {\n            node.margin.bottom = changes.margin.bottom;\n        }\n        if (changes.margin.left !== undefined) {\n            node.margin.left = changes.margin.left;\n        }\n        if (changes.margin.right !== undefined) {\n            node.margin.right = changes.margin.right;\n        }\n    };\n    //property changes - end region\n    /* tslint:disable */\n    Diagram.prototype.initDroppables = function () {\n        var _this = this;\n        // initiates droppable event\n        var childTable = {};\n        var entryTable = {};\n        var header;\n        var lane;\n        this.droppable = new Droppable(this.element);\n        // this.droppable.accept = '.e-dragclone';\n        // tslint:disable-next-line:no-any\n        this.droppable.over = function (args) {\n            if (!_this.currentSymbol) {\n                var dragDataHelper = null;\n                if (!args.dragData && args.name === 'drag') {\n                    var helper = document.getElementsByClassName('e-dragclone')[0];\n                    if (helper) {\n                        dragDataHelper = helper;\n                    }\n                }\n                if (args.dragData || dragDataHelper) {\n                    var newObj = void 0;\n                    var isHorizontal = void 0;\n                    document.getElementById(_this.element.id + 'content').focus();\n                    var position = _this.eventHandler.getMousePosition(args.event);\n                    var clonedObject = void 0;\n                    var selectedSymbol = dragDataHelper || args.dragData.helper;\n                    var paletteId = selectedSymbol.getAttribute('paletteId');\n                    var nodeDragSize = void 0;\n                    var nodePreviewSize = void 0;\n                    var paletteDragSize = void 0;\n                    if (paletteId) {\n                        // tslint:disable-next-line:no-any\n                        var sourceElement = document.getElementById(paletteId).ej2_instances[0];\n                        var source = 'sourceElement';\n                        _this.droppable[source] = sourceElement;\n                        var selectedSymbols = 'selectedSymbols';\n                        var childtable = 'childTable';\n                        if (sourceElement) {\n                            var obj = sourceElement[selectedSymbols];\n                            _this.allowServerDataBinding = false;\n                            clonedObject = cloneObject(sourceElement[selectedSymbols]);\n                            childTable = sourceElement[childtable];\n                            var wrapper = obj.wrapper.children[0].children[0];\n                            if (sourceElement[selectedSymbols] instanceof Node) {\n                                if (obj.shape.shape === 'TextAnnotation') {\n                                    clonedObject.offsetX = position.x + 11 + (clonedObject.width || wrapper.actualSize.width) / 2;\n                                    clonedObject.offsetY = position.y + 11 + (clonedObject.height || wrapper.actualSize.height) / 2;\n                                }\n                                else {\n                                    clonedObject.offsetX = position.x + 5 + (clonedObject.width || wrapper.actualSize.width) / 2;\n                                    clonedObject.offsetY = position.y + (clonedObject.height || wrapper.actualSize.height) / 2;\n                                }\n                                var newNode = new Node(_this, 'nodes', clonedObject, true);\n                                if (newNode.shape.type === 'Bpmn' && newNode.shape.activity.subProcess.processes\n                                    && newNode.shape.activity.subProcess.processes.length) {\n                                    newNode.shape.activity.subProcess.processes = [];\n                                }\n                                nodeDragSize = newNode.dragSize;\n                                nodePreviewSize = newNode.previewSize;\n                                paletteDragSize = sourceElement['symbolDragSize'];\n                                var palettePreview = sourceElement['symbolPreview'];\n                                newNode.width = nodeDragSize.width || paletteDragSize.width || nodePreviewSize.width || palettePreview.width || newNode.width;\n                                newNode.height = nodeDragSize.height || paletteDragSize.height || nodePreviewSize.height || palettePreview.height || newNode.height;\n                                if (newNode.shape.type === 'SwimLane') {\n                                    _this.diagramActions |= DiagramAction.PreventHistory;\n                                    if (newNode.shape.isLane) {\n                                        newNode.children = [];\n                                        header = {\n                                            id: 'header' + randomId(),\n                                        };\n                                        if (newNode.shape.orientation === 'Horizontal') {\n                                            header.width = newNode.shape.lanes[0].header.width;\n                                            header.height = newNode.shape.lanes[0].height;\n                                        }\n                                        else {\n                                            header.width = newNode.shape.lanes[0].width;\n                                            header.height = newNode.shape.lanes[0].header.height;\n                                        }\n                                        header.style = newNode.shape.lanes[0].header.style;\n                                        header.offsetX = position.x + 5 + header.width / 2;\n                                        header.offsetY = position.y + header.height / 2;\n                                        _this.diagramActions |= DiagramAction.PreventCollectionChangeOnDragOver;\n                                        header = _this.add(header);\n                                        lane = {\n                                            id: 'body' + randomId(),\n                                        };\n                                        if (newNode.shape.orientation === 'Horizontal') {\n                                            lane.width = newNode.shape.lanes[0].width - header.width;\n                                            lane.height = newNode.shape.lanes[0].height;\n                                            lane.offsetX = position.x + 5 + (newNode.shape.lanes[0].header.width + (lane.width / 2));\n                                            lane.offsetY = position.y + lane.height / 2;\n                                        }\n                                        else {\n                                            lane.width = newNode.shape.lanes[0].width;\n                                            lane.height = newNode.shape.lanes[0].height - header.height;\n                                            lane.offsetX = position.x + 5 + lane.width / 2;\n                                            lane.offsetY = position.y + (newNode.shape.lanes[0].header.height + (lane.height / 2));\n                                        }\n                                        lane.style = newNode.shape.lanes[0].style;\n                                        lane = _this.add(lane);\n                                        var group = {\n                                            id: 'group' + randomId(),\n                                            children: [header.id, lane.id],\n                                        };\n                                        group.shape = newNode.shape;\n                                        group.width = newNode.shape.lanes[0].width;\n                                        group.height = newNode.shape.lanes[0].height;\n                                        group.previewSize = newNode.previewSize;\n                                        group.dragSize = newNode.dragSize;\n                                        group.addInfo = newNode.addInfo;\n                                        newNode = _this.add(group);\n                                        _this.diagramActions &= ~DiagramAction.PreventCollectionChangeOnDragOver;\n                                    }\n                                    _this.diagramActions &= ~DiagramAction.PreventHistory;\n                                }\n                                if (newNode.shape.isPhase) {\n                                    isHorizontal = (newNode.shape.orientation === 'Horizontal') ? true : false;\n                                    if (isHorizontal) {\n                                        newNode.offsetX = position.x + 5 + (newNode.width || wrapper.actualSize.width) / 2;\n                                        newNode.offsetY = position.y;\n                                        newNode.shape.data =\n                                            'M' + 20 + ',' + (newNode.height / 2) + ' L' + (newNode.width - 20) + ',' +\n                                                (newNode.height / 2) + 'z';\n                                        newNode.height = 1;\n                                    }\n                                    else {\n                                        newNode.offsetX = position.x + 5;\n                                        newNode.offsetY = position.y + (newNode.height || wrapper.actualSize.height) / 2;\n                                        newNode.shape.data =\n                                            'M' + (newNode.width / 2) + ',' + 20 + ' L' + (newNode.width / 2) +\n                                                ',' + (newNode.height - 20) + 'z';\n                                        newNode.width = 1;\n                                    }\n                                }\n                                newObj = newNode;\n                                if (clonedObject.children) {\n                                    var parentNode = clonedObject;\n                                    var tempTable = {};\n                                    entryTable = _this.getChildren(parentNode, tempTable, childTable);\n                                    arrangeChild(parentNode, -parentNode.offsetX, -parentNode.offsetY, entryTable, true, _this);\n                                }\n                            }\n                            else if (sourceElement[selectedSymbols] instanceof Connector) {\n                                newObj = new Connector(_this, 'connectors', clonedObject, true);\n                                var bounds = Rect.toBounds([newObj.sourcePoint, newObj.targetPoint]);\n                                var tx = position.x - bounds.left;\n                                var ty = position.y - bounds.top;\n                                newObj.sourcePoint.x += tx;\n                                newObj.sourcePoint.y += ty;\n                                newObj.targetPoint.x += tx;\n                                newObj.targetPoint.y += ty;\n                            }\n                            if (!newObj.shape.isLane) {\n                                newObj.id += randomId();\n                            }\n                            var arg = {\n                                source: sourceElement, element: newObj, cancel: false,\n                                diagram: _this\n                            };\n                            if (isBlazor()) {\n                                arg = _this.getBlazorDragEventArgs(arg);\n                            }\n                            _this['enterObject'] = newObj;\n                            _this['enterTable'] = entryTable;\n                            _this.triggerEvent(DiagramEvent.dragEnter, arg);\n                            if ((newObj instanceof Node) && newObj.shape.type === 'SwimLane' && newObj.shape.isLane) {\n                                var swimLaneObj = arg.element;\n                                var laneObj = swimLaneObj.shape.lanes[0];\n                                var child1 = void 0;\n                                var child2 = void 0;\n                                isHorizontal = (swimLaneObj.shape.orientation === 'Horizontal') ? true : false;\n                                child1 = _this.nameTable[newObj.children[0]];\n                                child2 = _this.nameTable[newObj.children[1]];\n                                nodeDragSize = newObj.dragSize;\n                                nodePreviewSize = newObj.previewSize;\n                                paletteDragSize = sourceElement['symbolDragSize'];\n                                laneObj.width = nodeDragSize.width || paletteDragSize.width || nodePreviewSize.width || laneObj.width;\n                                laneObj.height = nodeDragSize.height || paletteDragSize.height || nodePreviewSize.height || laneObj.height;\n                                if (isHorizontal) {\n                                    header.width = laneObj.header.width;\n                                    header.height = laneObj.height;\n                                    lane.width = laneObj.width - header.width;\n                                    lane.height = laneObj.height;\n                                    lane.offsetX = position.x + 5 + (laneObj.header.width + (child2.width / 2));\n                                    lane.offsetY = position.y + child2.height / 2;\n                                }\n                                else {\n                                    header.width = laneObj.width;\n                                    header.height = laneObj.header.height;\n                                    lane.width = laneObj.width;\n                                    lane.height = laneObj.height - header.height;\n                                    lane.offsetX = position.x + 5 + child2.width / 2;\n                                    lane.offsetY = position.y + (laneObj.header.height + (child2.height / 2));\n                                }\n                                header.offsetX = position.x + 5 + child1.width / 2;\n                                header.offsetY = position.y + child1.height / 2;\n                                newObj.width = laneObj.width;\n                                newObj.height = laneObj.height;\n                            }\n                            if ((newObj instanceof Node) && newObj.shape.isPhase) {\n                                if (isHorizontal) {\n                                    newObj.height = 1;\n                                }\n                                else {\n                                    newObj.width = 1;\n                                }\n                            }\n                            if (!_this.activeLayer.lock && !arg.cancel) {\n                                _this.preventUpdate = true;\n                                if (newObj.children) {\n                                    _this.findChild(newObj, entryTable);\n                                }\n                                _this.preventUpdate = true;\n                                if (newObj.zIndex !== -1) {\n                                    newObj.zIndex = -1;\n                                }\n                                _this.initObject(newObj, undefined, undefined, true);\n                                _this.currentSymbol = newObj;\n                                if (_this.mode !== 'SVG') {\n                                    _this.refreshDiagramLayer();\n                                }\n                                _this.commandHandler.select(newObj);\n                                _this.eventHandler.mouseDown(args.event);\n                                _this.eventHandler.mouseMove(args.event, args);\n                                _this.preventUpdate = false;\n                                _this.updatePage();\n                                selectedSymbol.style.opacity = '0';\n                            }\n                            delete _this['enterObject'];\n                            delete _this['enterTable'];\n                        }\n                        _this.droppable[selectedSymbols] = selectedSymbol;\n                        _this.allowServerDataBinding = true;\n                    }\n                }\n            }\n            else {\n                if (args.event.touches && args.event.touches.length) {\n                    _this.eventHandler.mouseMove(args.event, args.event.touches);\n                }\n            }\n        };\n        // tslint:disable-next-line:no-any\n        this.droppable.drop = function (args) { return __awaiter(_this, void 0, void 0, function () {\n            var source, value, isPhase, orientation_2, isConnector, newObj, node, conn, arg, clonedObject, id, nodeId, arg, clonedObject, id, selectedSymbols;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.allowServerDataBinding = false;\n                        source = 'sourceElement';\n                        if (!this.currentSymbol) return [3 /*break*/, 4];\n                        isPhase = false;\n                        isConnector = void 0;\n                        isConnector = (this.currentSymbol instanceof Connector) ? true : false;\n                        if (args.event.touches) {\n                            this.eventHandler.mouseUp(args.event);\n                        }\n                        newObj = void 0;\n                        node = void 0;\n                        conn = void 0;\n                        arg = void 0;\n                        arg = {\n                            source: this.droppable[source],\n                            element: this.currentSymbol,\n                            target: this.eventHandler['hoverNode'] || this.eventHandler['lastObjectUnderMouse'] || this, cancel: false,\n                            position: { x: this.currentSymbol.wrapper.offsetX, y: this.currentSymbol.wrapper.offsetY }\n                        };\n                        if (!isBlazor()) return [3 /*break*/, 2];\n                        arg = {\n                            source: cloneBlazorObject(this.droppable[source]),\n                            element: getObjectType(this.currentSymbol) === Connector ? { connector: cloneBlazorObject(this.currentSymbol) } : { node: cloneBlazorObject(this.currentSymbol) },\n                            cancel: false, target: {},\n                            position: { x: this.currentSymbol.wrapper.offsetX, y: this.currentSymbol.wrapper.offsetY }\n                        };\n                        this.getDropEventArgs(arg);\n                        return [4 /*yield*/, this.triggerEvent(DiagramEvent.drop, arg)];\n                    case 1:\n                        arg = (_a.sent()) || arg;\n                        return [3 /*break*/, 3];\n                    case 2:\n                        this.triggerEvent(DiagramEvent.drop, arg);\n                        _a.label = 3;\n                    case 3:\n                        clonedObject = void 0;\n                        id = 'id';\n                        clonedObject = cloneObject(this.currentSymbol);\n                        clonedObject['hasTarget'] = this.currentSymbol['hasTarget'];\n                        this.removeFromAQuad(this.currentSymbol);\n                        this.removeObjectsFromLayer(this.nameTable[this.currentSymbol.id]);\n                        this.removeElements(this.currentSymbol);\n                        if (this.currentSymbol.shape.isLane ||\n                            this.currentSymbol.shape.isPhase) {\n                            this.removeChildInNodes(this.currentSymbol);\n                        }\n                        if (arg.cancel) {\n                            removeChildNodes(this.currentSymbol, this);\n                        }\n                        if (this.currentSymbol.shape.isPhase) {\n                            isPhase = true;\n                            orientation_2 = this.currentSymbol.shape.orientation;\n                        }\n                        delete this.nameTable[this.currentSymbol.id];\n                        this.currentSymbol = null;\n                        this.protectPropertyChange(true);\n                        if (!arg.cancel) {\n                            this.startGroupAction();\n                            if (clonedObject && (clonedObject.shape.isLane || isPhase)) {\n                                if (isPhase) {\n                                    clonedObject.shape.isPhase = isPhase;\n                                    clonedObject.shape.orientation = orientation_2;\n                                }\n                                this.eventHandler.addSwimLaneObject(clonedObject);\n                            }\n                            if (clonedObject.shape.type === 'Bpmn' && clonedObject.shape.annotation\n                                && clonedObject['hasTarget']) {\n                                nodeId = clonedObject.shape.annotation.nodeId;\n                                clonedObject.shape.annotation.id = clonedObject.id;\n                                this.addTextAnnotation(clonedObject.shape.annotation, this.nameTable[nodeId]);\n                                clonedObject.nodeId = '';\n                            }\n                            if (!clonedObject.shape.isLane && !isPhase) {\n                                if (clonedObject.children) {\n                                    this.addChildNodes(clonedObject);\n                                }\n                                if (arg.target && (arg.target instanceof Node) && !isConnector && checkParentAsContainer(this, arg.target)\n                                    && canAllowDrop(arg.target)) {\n                                    addChildToContainer(this, arg.target, clonedObject);\n                                }\n                                else {\n                                    value = this.add(clonedObject, true);\n                                }\n                                if ((clonedObject || value) && canSingleSelect(this)) {\n                                    this.select([this.nameTable[clonedObject[id]]]);\n                                }\n                            }\n                        }\n                        else {\n                            this.clearSelectorLayer();\n                        }\n                        this.protectPropertyChange(false);\n                        newObj = this.nameTable[clonedObject[id]];\n                        if (clonedObject['hasTarget']) {\n                            clonedObject.nodeId = clonedObject['hasTarget'];\n                            this.remove(clonedObject);\n                        }\n                        if (this.bpmnModule && newObj instanceof Node && clonedObject.processId) {\n                            newObj.processId = clonedObject.processId;\n                            this.bpmnModule.dropBPMNchild(this.nameTable[newObj.processId], newObj, this);\n                        }\n                        this.endGroupAction();\n                        if (this.mode !== 'SVG') {\n                            this.refreshDiagramLayer();\n                        }\n                        delete this.droppable[source];\n                        return [3 /*break*/, 5];\n                    case 4:\n                        arg = {\n                            source: cloneBlazorObject(args.droppedElement),\n                            element: undefined,\n                            target: cloneBlazorObject(this.eventHandler['hoverNode'] || (this.eventHandler['lastObjectUnderMouse']) || this), cancel: false,\n                            position: undefined\n                        };\n                        if (isBlazor()) {\n                            arg = {\n                                source: cloneBlazorObject(args.droppedElement),\n                                element: undefined,\n                                cancel: false,\n                                position: undefined,\n                                target: {}\n                            };\n                            this.getDropEventArgs(arg);\n                        }\n                        this.triggerEvent(DiagramEvent.drop, arg);\n                        clonedObject = void 0;\n                        id = 'id';\n                        _a.label = 5;\n                    case 5:\n                        selectedSymbols = 'selectedSymbols';\n                        if (this.droppable[selectedSymbols]) {\n                            remove(this.droppable[selectedSymbols]);\n                        }\n                        this.allowServerDataBinding = true;\n                        return [2 /*return*/];\n                }\n            });\n        }); };\n        this.droppable.out = function (args) {\n            if (_this.currentSymbol && !_this.eventHandler.focus) {\n                _this.unSelect(_this.currentSymbol);\n                _this.removeFromAQuad(_this.currentSymbol);\n                if (_this.mode !== 'SVG' && _this.currentSymbol.shape.type === 'Native') {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                delete _this.nameTable[_this.currentSymbol.id];\n                var args_1 = {\n                    element: cloneBlazorObject(_this.currentSymbol),\n                    diagram: _this\n                };\n                if (isBlazor()) {\n                    args_1 = _this.getBlazorDragLeaveEventArgs(args_1);\n                }\n                _this.triggerEvent(DiagramEvent.dragLeave, args_1);\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                else {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.currentSymbol = null;\n                var selectedSymbols = 'selectedSymbols';\n                _this.droppable[selectedSymbols].style.opacity = '1';\n                var source = 'sourceElement';\n                delete _this.droppable[source];\n                _this.diagramRenderer.rendererActions =\n                    _this.removeConstraints(_this.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                if (_this.previousSelectedObject) {\n                    _this.select(_this.previousSelectedObject, _this.previousSelectedObject.length > 1 ? true : false);\n                }\n                _this.previousSelectedObject = null;\n            }\n        };\n    };\n    Diagram.prototype.getBlazorDragLeaveEventArgs = function (args) {\n        args = {\n            diagramId: this.element.id,\n            element: getObjectType(args.element) === Connector ? { connector: cloneBlazorObject(args.element) }\n                : { node: cloneBlazorObject(args.element) }\n        };\n        return args;\n    };\n    Diagram.prototype.getDropEventArgs = function (arg) {\n        if ((this.eventHandler['lastObjectUnderMouse'] || this.eventHandler['hoverNode'])) {\n            var object = this.eventHandler['lastObjectUnderMouse'] || this.eventHandler['hoverNode'];\n            arg.target = getObjectType(object) === Connector ? { connector: cloneBlazorObject(object) } : { node: cloneBlazorObject(object) };\n        }\n        else {\n            arg.target.diagramId = this.element.id;\n        }\n    };\n    Diagram.prototype.removeChildInNodes = function (node) {\n        if (node) {\n            if (node.children) {\n                for (var i = 0; i < node.children.length; i++) {\n                    this.removeChildInNodes(this.nameTable[node.children[i]]);\n                }\n            }\n            var index = this.nodes.indexOf(node);\n            if (index !== -1) {\n                this.nodes.splice(index, 1);\n            }\n        }\n    };\n    Diagram.prototype.getBlazorDragEventArgs = function (args) {\n        args = {\n            source: cloneBlazorObject(args.source), element: getObjectType(args.element) === Connector ? { connector: cloneBlazorObject(args.element) }\n                : { node: cloneBlazorObject(args.element) },\n            cancel: args.cancel, diagramId: this.element.id\n        };\n        return args;\n    };\n    Diagram.prototype.findChild = function (node, childTable) {\n        var group;\n        var newNode;\n        for (var i = 0; i < node.children.length; i++) {\n            group = childTable[node.children[i]];\n            if (group) {\n                if (group.children) {\n                    this.findChild(group, childTable);\n                }\n                group.id = group.id + randomId();\n                childTable[group.id] = group;\n                node.children[i] = group.id;\n                newNode = new Node(this, 'nodes', group, true);\n                this.initObject(newNode, undefined, undefined, true);\n                //this.add(group, true);\n            }\n        }\n    };\n    Diagram.prototype.getChildren = function (node, entryTable, childTable) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (childTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    entryTable = this.getChildren(temp, entryTable, childTable);\n                }\n                entryTable[temp.id] = cloneObject(temp);\n            }\n        }\n        return entryTable;\n    };\n    Diagram.prototype.addChildNodes = function (node) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (this.nameTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    this.addChildNodes(temp);\n                }\n                this.add(temp, true);\n            }\n        }\n    };\n    Diagram.prototype.moveNode = function (node) {\n        var currentLayer = this.commandHandler.getObjectLayer(node.id);\n        var index = currentLayer.zIndex;\n        var length = currentLayer.objects.length;\n        var targetLayer;\n        for (var i = 0; i < this.layers.length; i++) {\n            if (index === this.layers[i].zIndex) {\n                targetLayer = this.layers[i + 1];\n            }\n        }\n        if (length > 1) {\n            this.commandHandler.moveSvgNode(node.id, currentLayer.objects[length - 2]);\n            this.commandHandler.moveSvgNode(currentLayer.objects[length - 2], node.id);\n        }\n        else {\n            if (targetLayer) {\n                var targetObject = this.commandHandler.getLayer(this.layerZIndexTable[targetLayer.zIndex]).objects[0];\n                if (targetObject) {\n                    this.commandHandler.moveSvgNode(node.id, targetObject);\n                    this.commandHandler.updateNativeNodeIndex(node.id, targetObject);\n                }\n                else {\n                    this.moveObjectsUp(node, currentLayer);\n                }\n            }\n            else {\n                this.moveObjectsUp(node, currentLayer);\n            }\n        }\n    };\n    /**\n     * moves the node or connector forward within given layer\n     */\n    Diagram.prototype.moveObjectsUp = function (node, currentLayer) {\n        var targetLayer;\n        for (var i = this.layers.length - 1; i >= 0; i--) {\n            targetLayer = this.layers[i];\n            if (currentLayer.id !== targetLayer.id) {\n                var targetObject = this.commandHandler.getLayer(this.layerZIndexTable[targetLayer.zIndex]).objects[targetLayer.objects.length - 1];\n                if (targetObject) {\n                    this.commandHandler.moveSvgNode(node.id, targetObject);\n                    this.commandHandler.moveSvgNode(targetObject, node.id);\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * Inserts newly added element into the database\n     */\n    Diagram.prototype.insertData = function (node) {\n        return this.crudOperation(node, 'create', this.getNewUpdateNodes('New'));\n    };\n    /**\n     * updates the user defined element properties into the existing database\n     */\n    Diagram.prototype.updateData = function (node) {\n        return this.crudOperation(node, 'update', this.getNewUpdateNodes('Update'));\n    };\n    /**\n     * Removes the user deleted element from the existing database\n     */\n    Diagram.prototype.removeData = function (node) {\n        return this.crudOperation(node, 'destroy', this.getDeletedNodes());\n    };\n    Diagram.prototype.crudOperation = function (node, crud, getNodesCollection) {\n        if (node) {\n            var data = this.parameterMap(node, node instanceof Connector ? false : true);\n            if (data) {\n                var url = node instanceof Connector ? this.dataSourceSettings.connectionDataSource.crudAction[crud] : this.dataSourceSettings.crudAction[crud];\n                this.raiseAjaxPost(JSON.stringify(data), url);\n            }\n            return data;\n        }\n        else {\n            var newObjects = getNodesCollection;\n            this.processCrudCollection(newObjects, this.dataSourceSettings.crudAction[crud], this.dataSourceSettings.connectionDataSource.crudAction[crud]);\n            return newObjects;\n        }\n    };\n    Diagram.prototype.processCrudCollection = function (newObjects, nodeCrudAction, connectorCrudAction) {\n        if (newObjects.nodes) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.nodes.length; i++) {\n                data.push(this.parameterMap(newObjects.nodes[i], true));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), nodeCrudAction);\n        }\n        if (newObjects.connectors) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.connectors.length; i++) {\n                data.push(this.parameterMap(newObjects.connectors[i], false));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), connectorCrudAction);\n        }\n    };\n    Diagram.prototype.parameterMap = function (object, isNode) {\n        var mappingObj = {};\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        if (fields.id)\n            mappingObj[fields.id] = object.id;\n        if (fields.sourcePointX && fields.sourcePointY) {\n            mappingObj[fields.sourcePointX] = object.sourcePoint.x;\n            mappingObj[fields.sourcePointY] = object.sourcePoint.y;\n        }\n        if (fields.targetPointX && fields.targetPointY) {\n            mappingObj[fields.targetPointX] = object.targetPoint.x;\n            mappingObj[fields.targetPointY] = object.targetPoint.y;\n        }\n        if (fields.sourceID)\n            mappingObj[fields.sourceID] = object.sourceID;\n        if (fields.targetID)\n            mappingObj[fields.targetID] = object.targetID;\n        if (fields.crudAction && fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++)\n                mappingObj[fields.crudAction.customFields[i]] = object[fields.crudAction.customFields[i]];\n        }\n        return mappingObj;\n    };\n    Diagram.prototype.getNewUpdateNodes = function (status) {\n        var nodes = [];\n        var connectors = [];\n        for (var name_1 in this.nameTable) {\n            var node = this.nameTable[name_1];\n            if (node.status == status) {\n                if (node && node instanceof Connector) {\n                    node.status = 'None';\n                    connectors.push(node);\n                }\n                else {\n                    node.status = 'None';\n                    nodes.push(node);\n                }\n            }\n        }\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.getDeletedNodes = function () {\n        var nodes = [];\n        var connectors = [];\n        var i;\n        for (i = 0; i < this.crudDeleteNodes.length; i++) {\n            var node = this.crudDeleteNodes[i];\n            if (node && node.segments)\n                connectors.push(node);\n            else if (node) {\n                nodes.push(node);\n            }\n        }\n        this.crudDeleteNodes = [];\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.raiseAjaxPost = function (value, url) {\n        var callback = new Ajax(url, 'POST', true, 'application/json');\n        var data = JSON.stringify(JSON.parse(value));\n        callback.send(data).then();\n        callback.onSuccess = function (data) {\n        };\n    };\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"width\", void 0);\n    __decorate([\n        Property('SVG')\n    ], Diagram.prototype, \"mode\", void 0);\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ContextMenuSettings)\n    ], Diagram.prototype, \"contextMenuSettings\", void 0);\n    __decorate([\n        Property(DiagramConstraints.Default)\n    ], Diagram.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(DiagramTools.Default)\n    ], Diagram.prototype, \"tool\", void 0);\n    __decorate([\n        Property('Top')\n    ], Diagram.prototype, \"bridgeDirection\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Diagram.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Complex({}, SnapSettings)\n    ], Diagram.prototype, \"snapSettings\", void 0);\n    __decorate([\n        Complex({}, RulerSettings)\n    ], Diagram.prototype, \"rulerSettings\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], Diagram.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, SerializationSettings)\n    ], Diagram.prototype, \"serializationSettings\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Diagram.prototype, \"nodes\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"drawingObject\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Diagram.prototype, \"connectors\", void 0);\n    __decorate([\n        Property([])\n    ], Diagram.prototype, \"basicElements\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Diagram.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, DataSource)\n    ], Diagram.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"historyManager\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"nodeTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"annotationTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"nodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"connectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"setNodeTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getDescription\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomProperty\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomTool\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomCursor\", void 0);\n    __decorate([\n        Collection([], CustomCursorAction)\n    ], Diagram.prototype, \"customCursor\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"updateSelection\", void 0);\n    __decorate([\n        Complex({}, Selector)\n    ], Diagram.prototype, \"selectedItems\", void 0);\n    __decorate([\n        Complex({}, ScrollSettings)\n    ], Diagram.prototype, \"scrollSettings\", void 0);\n    __decorate([\n        Complex({}, Layout)\n    ], Diagram.prototype, \"layout\", void 0);\n    __decorate([\n        Complex({}, CommandManager)\n    ], Diagram.prototype, \"commandManager\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dataLoaded\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"textEdit\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"scrollChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"selectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sizeChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"connectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sourcePointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"targetPointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"propertyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"positionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"keyUp\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"keyDown\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"rotateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"collectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"segmentCollectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onImageLoad\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"expandStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuBeforeItemRender\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"commandExecute\", void 0);\n    __decorate([\n        Collection([], Layer)\n    ], Diagram.prototype, \"layers\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"drop\", void 0);\n    return Diagram;\n}(Component));\nexport { Diagram };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { Size } from './primitives/size';\nimport { SnapConstraints } from './enum/enum';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from './utility/dom-util';\nimport { Rect } from './primitives/rect';\nimport { createSvgElement, getHTMLLayer } from './utility/dom-util';\nimport { getDiagramLayerSvg } from './utility/dom-util';\nimport { checkBrowserInfo } from './utility/diagram-util';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { DiagramNativeElement } from './core/elements/native-element';\n/**\n * Print and Export Settings\n */\nvar PrintAndExport = /** @class */ (function () {\n    function PrintAndExport(diagram) {\n        this.diagram = diagram;\n    }\n    /**\n     * To Export the diagram\n     * @private\n     */\n    PrintAndExport.prototype.exportDiagram = function (options) {\n        var fileType;\n        var customBounds;\n        var content;\n        var content1 = '';\n        var data = 'data';\n        var mode;\n        var buffers = [];\n        var margin = options.margin || {};\n        var region = options && options.region ? options.region : 'Content';\n        mode = options && options.mode ? options.mode : 'Download';\n        var bounds = this.getDiagramBounds(region, options);\n        if (options.bounds) {\n            customBounds = true;\n            bounds.x = options.bounds.x ? options.bounds.x : bounds.x;\n            bounds.y = options.bounds.y ? options.bounds.y : bounds.y;\n            bounds.width = options.bounds.width || bounds.width;\n            bounds.height = options.bounds.height || bounds.height;\n        }\n        margin = {\n            top: margin.top !== undefined ? margin.top : 25,\n            bottom: margin.bottom !== undefined ? margin.bottom : 25,\n            right: margin.right !== undefined ? margin.right : 25,\n            left: margin.left !== undefined ? margin.left : 25\n        };\n        var nodes = this.diagram.nodes;\n        if (region !== 'PageSettings') {\n            bounds.x -= margin.left;\n            bounds.y -= margin.top;\n            bounds.width += margin.left + margin.right;\n            bounds.height += margin.top + margin.bottom;\n        }\n        var fileName = options.fileName || 'diagram';\n        if (options.format !== 'SVG') {\n            data = this.setCanvas(options, bounds, margin, mode, customBounds, region, fileName);\n            if (data !== null) {\n                return data;\n            }\n        }\n        else {\n            fileType = options.format;\n            options.bounds = bounds;\n            options.margin = margin;\n            var svg = content = this.diagramAsSvg(options, margin);\n            if (mode === 'Data') {\n                return content;\n            }\n            var buffer = new XMLSerializer().serializeToString(svg);\n            buffers.push(buffer);\n        }\n        if (mode === 'Download' && data !== null) {\n            var browserInfo = void 0;\n            // Ensure this for Safari\n            // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n            //     let info: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n            //     alert('Downloading option is not supported in ' + info + ', Please use the returned data');\n            //     return content;\n            // } else {\n            for (var b = 0; b < buffers.length; b++) {\n                var blob = new Blob([buffers[b]], { type: 'application/octet-stream' });\n                if (Browser.info.name === 'msie') {\n                    window.navigator.msSaveOrOpenBlob(blob, fileName + '.' + fileType);\n                }\n                else {\n                    var pom = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                    var url = URL.createObjectURL(blob);\n                    pom.href = url;\n                    var e = document.createEvent('MouseEvents');\n                    e.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                    pom.dispatchEvent(e);\n                }\n            }\n        }\n        return null;\n    };\n    PrintAndExport.prototype.setCanvas = function (options, bounds, margin, mode, customBounds, region, fileName) {\n        var content;\n        options.bounds = bounds;\n        options.region = region;\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        this.setScaleValueforCanvas(options, bounds);\n        var canvas = this.diagramAsCanvas({\n            bounds: bounds, margin: margin, region: region, scaleX: options[scaleX],\n            scaleY: options[scaleY], scaleOffsetX: options[scaleOffsetX], scaleOffsetY: options[scaleOffsetY]\n        }, customBounds);\n        var image = content = canvas.toDataURL();\n        if (mode === 'Data') {\n            return content;\n        }\n        this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        return null;\n    };\n    PrintAndExport.prototype.canvasMultiplePage = function (options, canvas, margin, image, fileName) {\n        var _this = this;\n        var images = [];\n        var fileType = options.format || 'JPG';\n        if (options.multiplePage) {\n            options.pageHeight = options.pageHeight ? options.pageHeight : this.diagram.pageSettings.height;\n            options.pageWidth = options.pageWidth ? options.pageWidth : this.diagram.pageSettings.width;\n            options.pageHeight = options.pageHeight ? options.pageHeight : canvas.width;\n            options.pageWidth = options.pageWidth ? options.pageWidth : canvas.height;\n            margin = options.margin || {};\n            if (options.pageOrientation) {\n                if ((options.pageOrientation === 'Landscape' && options.pageHeight > options.pageWidth) ||\n                    options.pageOrientation === 'Portrait' && options.pageWidth > options.pageHeight) {\n                    var temp = options.pageWidth;\n                    options.pageWidth = options.pageHeight;\n                    options.pageHeight = temp;\n                }\n            }\n            options.margin = {\n                top: !isNaN(margin.top) ? margin.top : 0,\n                bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n                left: !isNaN(margin.left) ? margin.left : 0,\n                right: !isNaN(margin.right) ? margin.right : 0\n            };\n            var attr = {\n                'id': this.diagram.element.id + '_printImage',\n                'src': image,\n            };\n            var img_1 = createHtmlElement('img', attr);\n            img_1.onload = function () {\n                images = _this.getMultipleImage(img_1, options, true);\n                _this.exportImage(images, fileName, fileType, image);\n            };\n        }\n        else {\n            images = [image];\n            this.exportImage(images, fileName, fileType, image);\n        }\n    };\n    PrintAndExport.prototype.exportImage = function (images, fileName, fileType, image) {\n        var buffers = [];\n        var length = (!(images instanceof HTMLElement)) ? images.length : 0;\n        for (var g = 0; g < length; g++) {\n            image = images[g];\n            image = image.replace(/^data:[a-z]*;,/, '');\n            var image1 = image.split(',');\n            var byteString = atob(image1[1]);\n            var buffer = new ArrayBuffer(byteString.length);\n            var intArray = new Uint8Array(buffer);\n            for (var i = 0; i < byteString.length; i++) {\n                intArray[i] = byteString.charCodeAt(i);\n            }\n            buffers.push(buffer);\n        }\n        var _loop_1 = function (j) {\n            var b = new Blob([buffers[j]], { type: 'application/octet-stream' });\n            if (Browser.info.name === 'msie') {\n                window.navigator.msSaveOrOpenBlob(b, fileName + '.' + fileType);\n            }\n            else {\n                var htmlElement_1 = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                var urlLink = URL.createObjectURL(b);\n                htmlElement_1.href = urlLink;\n                var mouseEvent_1 = document.createEvent('MouseEvents');\n                mouseEvent_1.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                setTimeout(function () {\n                    htmlElement_1.dispatchEvent(mouseEvent_1);\n                }, ((j + 1) * 5));\n            }\n        };\n        // Ensure this for safari\n        // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n        //     let browserInfo: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n        //     alert('Downloading option is not supported in ' + browserInfo + ', Please use the returned data');\n        //     return content;\n        // } else {\n        for (var j = 0; j < buffers.length; j++) {\n            _loop_1(j);\n        }\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getObjectsBound = function (options) {\n        var nodes = this.diagram.nodes;\n        var nodebounds;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node.visible) {\n                if (((options.format !== 'SVG' && !(node instanceof DiagramNativeElement) && !(node instanceof DiagramHtmlElement))\n                    || (options.format === 'SVG' && !(node instanceof DiagramHtmlElement)))) {\n                    if (!nodebounds) {\n                        nodebounds = node.wrapper.outerBounds;\n                    }\n                    else {\n                        nodebounds = nodebounds.uniteRect(node.wrapper.outerBounds);\n                    }\n                }\n            }\n        }\n        var connectors = this.diagram.connectors;\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            if (connector.visible) {\n                if (!nodebounds) {\n                    nodebounds = connector.wrapper.outerBounds;\n                }\n                else {\n                    nodebounds = nodebounds.uniteRect(connector.wrapper.outerBounds);\n                }\n            }\n        }\n        return nodebounds || new Rect(0, 0, 0, 0);\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getDiagramBounds = function (mode, options) {\n        var rect = this.getObjectsBound(options);\n        var left = rect.left;\n        var top = rect.top;\n        var right = rect.right - rect.left;\n        var bottom = rect.bottom - rect.top;\n        if (mode !== 'Content') {\n            if (this.diagram.pageSettings && this.diagram.pageSettings.multiplePage) {\n                left = rect.left;\n                top = rect.top;\n                if (this.diagram.pageSettings.width) {\n                    left = Math.floor(left / this.diagram.pageSettings.width) * this.diagram.pageSettings.width;\n                    right = Math.ceil(rect.right / this.diagram.pageSettings.width) * this.diagram.pageSettings.width - left;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = Math.floor(top / this.diagram.pageSettings.height) * this.diagram.pageSettings.height;\n                    bottom = Math.ceil(rect.bottom / this.diagram.pageSettings.height) * this.diagram.pageSettings.height - top;\n                }\n                if ((rect.width === 0) && this.diagram.pageSettings.width !== null) {\n                    right = this.diagram.pageSettings.width;\n                }\n                if ((rect.height === 0) && this.diagram.pageSettings.height !== null) {\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n            else {\n                if (this.diagram.pageSettings.width) {\n                    left = 0;\n                    right = this.diagram.pageSettings.width;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = 0;\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n        }\n        var svgBounds = new Rect();\n        svgBounds.x = left;\n        svgBounds.y = top;\n        svgBounds.width = right;\n        svgBounds.height = bottom;\n        return svgBounds;\n    };\n    PrintAndExport.prototype.setScaleValueforCanvas = function (options, bounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        options[scaleX] = 1;\n        options[scaleY] = 1;\n        options[scaleOffsetX] = 0;\n        options[scaleOffsetY] = 0;\n        options.pageHeight = options.pageHeight || this.diagram.pageSettings.height;\n        options.pageWidth = options.pageWidth || this.diagram.pageSettings.width;\n        var pageOrientation = options.pageOrientation || this.diagram.pageSettings.orientation;\n        if (!pageOrientation) {\n            pageOrientation = 'Portrait';\n        }\n        if (pageOrientation === 'Portrait') {\n            if (options.pageWidth > options.pageHeight) {\n                var temp = options.pageHeight;\n                options.pageHeight = options.pageWidth;\n                options.pageWidth = temp;\n            }\n        }\n        else {\n            if (options.pageHeight > options.pageWidth) {\n                var temp = options.pageWidth;\n                options.pageWidth = options.pageHeight;\n                options.pageHeight = temp;\n            }\n        }\n        if (options.pageWidth && options.pageHeight && !options.multiplePage) {\n            options.stretch = 'Meet';\n        }\n        var height = options.pageHeight || bounds.height;\n        var width = options.pageWidth || bounds.width;\n        if (options.stretch === 'Stretch' || options.stretch === 'Meet' || options.stretch === 'Slice') {\n            options[scaleX] = width / bounds.width;\n            options[scaleY] = height / bounds.height;\n            if (options.stretch === 'Meet') {\n                options[scaleX] = options[scaleY] = Math.min(options[scaleX], options[scaleY]);\n                options[scaleOffsetY] = (options.pageHeight - bounds.height * options[scaleX]) / 2;\n                options[scaleOffsetX] = (options.pageWidth - bounds.width * options[scaleX]) / 2;\n            }\n            else if (options.stretch === 'Slice') {\n                options[scaleX] = options[scaleY] = Math.max(options[scaleX], options[scaleY]);\n            }\n            bounds.width = width;\n            bounds.height = height;\n        }\n        bounds.x *= options[scaleX];\n        bounds.y *= options[scaleY];\n    };\n    PrintAndExport.prototype.diagramAsSvg = function (options, margin) {\n        var svg = this.diagram.createSvg(this.diagram.element.id + '_diagram_svg', options.bounds.width, options.bounds.height);\n        document.body.appendChild(svg);\n        var g = createSvgElement('g', { 'id': this.diagram.element.id + '_pageBackground' });\n        var region = options && options.region ? options.region : 'Content';\n        var bounds = this.getDiagramBounds(region, options);\n        var left = bounds.x;\n        var top = bounds.y;\n        var width = bounds.width;\n        var height = bounds.height;\n        svg.appendChild(g);\n        var attr = {\n            'x': String(left),\n            'y': String(top), 'width': String(width), 'height': String(height)\n        };\n        setAttributeSvg(g, attr);\n        this.setTransform(g, options.bounds, margin);\n        var gradient = document.getElementById(this.diagram.element.id + 'gradient_pattern');\n        if (gradient) {\n            svg.appendChild(gradient);\n        }\n        attr = {\n            'x': 0,\n            'y': 0, 'width': String(width + margin.left + margin.right), 'height': String(height + margin.top + margin.bottom)\n        };\n        var backimage = document.getElementById(this.diagram.element.id + '_backgroundImageLayer').cloneNode(true);\n        setAttributeSvg(backimage, attr);\n        svg.appendChild(backimage);\n        this.setTransform(backimage, bounds, margin);\n        var backRect = document.getElementById(this.diagram.element.id + '_backgroundLayerrect').cloneNode(true);\n        setAttributeSvg(backRect, attr);\n        svg.appendChild(backRect);\n        this.setTransform(backRect, bounds, margin);\n        if (this.diagram.mode === 'SVG') {\n            var element = void 0;\n            var i = void 0;\n            var diagramLayerSVG = getDiagramLayerSvg(this.diagram.element.id);\n            svg.appendChild(diagramLayerSVG.getElementById(this.diagram.diagramLayer.id).cloneNode(true));\n            for (i = 0; i < svg.childNodes.length; i++) {\n                element = svg.childNodes[i];\n                if (element.id === this.diagram.element.id + '_diagramLayer') {\n                    this.setTransform(element, bounds, margin);\n                }\n            }\n        }\n        else {\n            g = createSvgElement('g', { 'id': this.diagram.element.id + '_diagramLayer' });\n            svg.appendChild(g);\n            this.setTransform(g, options.bounds, margin);\n            //renderLabels\n            var renderer = new DiagramRenderer('', null, true);\n            var htmlLayer = getHTMLLayer(this.diagram.element.id);\n            this.diagram.renderDiagramElements(svg, renderer, htmlLayer, false);\n        }\n        document.body.removeChild(svg);\n        return svg;\n    };\n    PrintAndExport.prototype.setTransform = function (element, bounds, margin) {\n        element.setAttribute('transform', 'translate(' + (-bounds.x + margin.left) + ', ' +\n            (-bounds.y + margin.top) + ')');\n    };\n    PrintAndExport.prototype.diagramAsCanvas = function (options, customBounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        var element;\n        var elements = [];\n        var region = options.bounds;\n        var margin = options.margin;\n        var mode = options && options.region ? options.region : 'Content';\n        var pageBounds = this.getDiagramBounds(mode, options);\n        var bgColor = this.diagram.pageSettings.background.color;\n        var canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', options.bounds.width, options.bounds.height);\n        //canvas.setAttribute('style', 'position:absolute;top:135px;left:160px;');\n        var context = canvas.getContext('2d');\n        context.translate(-region.x, -region.y);\n        context.save();\n        context.fillStyle = this.diagram.pageSettings.background.color;\n        region = mode === 'Content' ? pageBounds : region;\n        context.fillRect(region.x, region.y, region.width, region.height);\n        var bgImg = this.diagram.pageSettings.background;\n        if (bgImg && bgImg.source) {\n            pageBounds = this.getDiagramBounds(mode, options);\n            var image = new Image();\n            image.src = bgImg.source;\n            var proportionX = pageBounds.width / image.width;\n            var proportionY = pageBounds.height / image.height;\n            var x = pageBounds.x;\n            var y = pageBounds.y;\n            var width = pageBounds.width;\n            var height = pageBounds.height;\n            var exportable = this.isImageExportable(bgImg);\n            if (bgImg.scale !== 'None' && bgImg.align !== 'None') {\n                var proportion = bgImg.scale === 'Meet' ? Math.min(proportionX, proportionY) : Math.max(proportionX, proportionY);\n                width = proportion * image.width;\n                height = proportion * image.height;\n                if (bgImg.align.indexOf('xmid') > -1) {\n                    x += (pageBounds.width - width) / 2;\n                }\n                else if (bgImg.align.indexOf('xmax') > -1) {\n                    x = x + pageBounds.width - width;\n                }\n                if (bgImg.align.indexOf('ymid') > -1) {\n                    y += (pageBounds.height - height) / 2;\n                }\n                else if (bgImg.align.indexOf('ymax') > -1) {\n                    y = y + pageBounds.height - height;\n                }\n                if (this.diagram.pageSettings.background.color === 'none' || this.diagram.pageSettings.background.color === 'transparent') {\n                    context.fillStyle = 'white';\n                    context.fillRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n                }\n                if (exportable) {\n                    context.drawImage(image, x, y, proportion * image.width, proportion * image.height);\n                }\n            }\n            else if (exportable) {\n                context.drawImage(image, x, y, pageBounds.width, pageBounds.height);\n            }\n        }\n        else {\n            context.fillStyle = bgColor === 'transparent' ? 'white' : bgColor;\n            context.fillRect((pageBounds.x * options[scaleX]) - margin.left, (pageBounds.y * options[scaleY]) - margin.top, (pageBounds.width * options[scaleX]) + margin.left + margin.right, (options[scaleY] * pageBounds.height) + margin.top + margin.bottom);\n        }\n        var brColor = this.diagram.pageSettings.background.color;\n        var brWidth = this.diagram.pageSettings.width;\n        if (brWidth) {\n            context.strokeStyle = brColor === 'none' ? 'transparent' : brColor;\n            context.lineWidth = brWidth;\n            context.strokeRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n        }\n        context.restore();\n        var htmlLayer = getHTMLLayer(this.diagram.element.id);\n        var renderer = new DiagramRenderer('', null, false);\n        this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], true);\n        this.diagram.renderDiagramElements(canvas, renderer, htmlLayer, false, true);\n        this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], false);\n        return canvas;\n    };\n    PrintAndExport.prototype.updateWrapper = function (canvas, value, scaleOffsetX, scaleOffsetY, isExport) {\n        if (canvas && canvas.length > 0) {\n            for (var j = 0; j < canvas.length; j++) {\n                if (canvas[j].children) {\n                    this.updateWrapper(canvas[j].children, value, scaleOffsetX, scaleOffsetY, isExport);\n                }\n                canvas[j].exportScaleValue.x = value;\n                canvas[j].exportScaleValue.y = value;\n                canvas[j].exportScaleOffset.x = scaleOffsetX;\n                canvas[j].exportScaleOffset.y = scaleOffsetY;\n                canvas[j].isExport = isExport;\n            }\n        }\n    };\n    PrintAndExport.prototype.updateObjectValue = function (value, scaleOffsetX, scaleOffsetY, isExport) {\n        var wrapper;\n        for (var i = 0; i < this.diagram.nodes.length; i++) {\n            wrapper = this.diagram.nodes[i].wrapper;\n            this.updateWrapper(wrapper.children, value, scaleOffsetX, scaleOffsetY, isExport);\n            wrapper.exportScaleValue.x = value;\n            wrapper.exportScaleValue.y = value;\n            wrapper.exportScaleOffset.x = scaleOffsetX;\n            wrapper.exportScaleOffset.y = scaleOffsetY;\n            wrapper.isExport = isExport;\n        }\n        for (var j = 0; j < this.diagram.connectors.length; j++) {\n            wrapper = this.diagram.connectors[j].wrapper;\n            for (var k = 0; k < wrapper.children.length; k++) {\n                wrapper.children[k].isExport = isExport;\n                if (isExport) {\n                    wrapper.children[k].exportScaleValue.x = value;\n                    wrapper.children[k].exportScaleValue.y = value;\n                    wrapper.children[k].exportScaleOffset.x = scaleOffsetX;\n                    wrapper.children[k].exportScaleOffset.y = scaleOffsetY;\n                }\n            }\n        }\n    };\n    PrintAndExport.prototype.isImageExportable = function (backgroundImage) {\n        var state = true;\n        var content;\n        var canvas;\n        if (backgroundImage.source) {\n            try {\n                canvas = CanvasRenderer.createCanvas(this.diagram.element.id + 'temp_canvas', 100, 100);\n                var ctx = canvas.getContext('2d');\n                ctx.save();\n                var image = new Image();\n                image.src = backgroundImage.source;\n                ctx.drawImage(image, 0, 0, 100, 100);\n                ctx.restore();\n                content = canvas.toDataURL();\n            }\n            catch (e) {\n                state = false;\n            }\n        }\n        return state;\n    };\n    PrintAndExport.prototype.getPrintCanvasStyle = function (img, options) {\n        var width = 0;\n        var height = 0;\n        var size = new Size();\n        width = img.width;\n        height = img.height;\n        if (options.pageHeight || options.pageWidth) {\n            height = options.pageHeight ? options.pageHeight : height;\n            width = options.pageWidth ? options.pageWidth : width;\n        }\n        if (options.pageOrientation) {\n            if ((options.pageOrientation === 'Landscape' && height > width) || options.pageOrientation === 'Portrait' && width > height) {\n                var temp = width;\n                width = height;\n                height = temp;\n            }\n        }\n        size.height = height;\n        size.width = width;\n        return size;\n    };\n    PrintAndExport.prototype.getMultipleImage = function (img, options, isExport) {\n        var imageArray = [];\n        var div = createHtmlElement('div', {});\n        var pageSize = this.getPrintCanvasStyle(img, options);\n        var pageWidth;\n        var pageHeight;\n        var margin = options.margin;\n        var mLeft = margin.left;\n        var mTop = margin.top;\n        var mRight = margin.right;\n        var mBottom = margin.bottom;\n        var x = 0;\n        var y = 0;\n        pageWidth = pageSize.width + x;\n        pageHeight = pageSize.height + y;\n        var drawnX = 0;\n        var drawnY = 0;\n        if (options && options.multiplePage) {\n            div.style.height = 'auto';\n            div.style.width = 'auto';\n            var imgHeight = img.height;\n            var imgWidth = img.width;\n            //if (img) {\n            var i = 0;\n            var j = 0;\n            var url = void 0;\n            var clipWidth = 0;\n            var clipHeight = 0;\n            var ctx = void 0;\n            var canvas = void 0;\n            do {\n                do {\n                    clipWidth = pageSize.width;\n                    clipHeight = pageSize.height;\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        clipWidth = (imgWidth - drawnX);\n                    }\n                    if ((drawnY + pageSize.height) >= imgHeight) {\n                        clipHeight = (imgHeight - drawnY);\n                    }\n                    canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_multiplePrint', pageSize.width, pageSize.height);\n                    ctx = canvas.getContext('2d');\n                    ctx.drawImage(img, x + drawnX + mLeft, y + drawnY + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop, 0 + mLeft, 0 + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop);\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        drawnX -= (drawnX - imgWidth);\n                    }\n                    url = canvas.toDataURL();\n                    ctx.restore();\n                    drawnX += pageWidth;\n                    if (isExport) {\n                        imageArray.push(url);\n                    }\n                    else {\n                        this.printImage(div, url, i + '' + j, pageWidth + 'px;', pageHeight + 'px;');\n                    }\n                    i++;\n                } while (drawnX < imgWidth);\n                j++;\n                i = x = drawnX = 0;\n                if ((drawnY + pageSize.height) >= imgHeight) {\n                    drawnY -= (drawnY - imgHeight);\n                }\n                drawnY += pageHeight;\n            } while (drawnY < imgHeight);\n            //}\n        }\n        else {\n            var x_1 = 0;\n            var y_1 = 0;\n            var pageSize_1 = this.getPrintCanvasStyle(img, options);\n            var pageWidth_1;\n            var pageHeight_1;\n            pageWidth_1 = pageSize_1.width;\n            pageHeight_1 = pageSize_1.height;\n            var ctx = void 0;\n            var canvas = void 0;\n            var url = void 0;\n            canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', pageWidth_1, pageHeight_1);\n            ctx = canvas.getContext('2d');\n            ctx.drawImage(img, x_1 + mLeft, y_1 + mTop, img.width - (mRight + mLeft), img.height - (mTop + mBottom), 0 + mLeft, 0 + mTop, pageWidth_1 - (mRight + mLeft), pageHeight_1 - (mTop + mBottom));\n            url = canvas.toDataURL();\n            ctx.restore();\n            if (isExport) {\n                imageArray.push(url);\n            }\n            else {\n                this.printImage(div, url, 0);\n            }\n        }\n        if (isExport) {\n            return imageArray;\n        }\n        else {\n            return div;\n        }\n    };\n    PrintAndExport.prototype.printImage = function (div, url, i, pageWidth, pageHeight) {\n        var attr = { 'class': 'e-diagram-print-page', 'style': 'width:' + pageWidth + 'height:' + pageHeight };\n        var img = createHtmlElement('img', attr);\n        var innerDiv = createHtmlElement('div', attr);\n        attr = { 'id': this.diagram.element.id + '_multiplePrint_img' + i, 'style': 'float:left', 'src': url };\n        setAttributeHtml(img, attr);\n        innerDiv.appendChild(img);\n        div.appendChild(innerDiv);\n    };\n    /**\n     * To print the image\n     * @private\n     */\n    PrintAndExport.prototype.print = function (options) {\n        options.mode = 'Data';\n        var url = this.exportDiagram(options);\n        this.printImages(url, options);\n    };\n    PrintAndExport.prototype.printImages = function (url, options) {\n        var _this = this;\n        var attr = {\n            'id': this.diagram.element.id + '_printImage',\n            'src': url,\n        };\n        options.margin = { top: 0, bottom: 0, right: 0, left: 0 };\n        var img = createHtmlElement('img', attr);\n        img.onload = function () {\n            var div = _this.getMultipleImage(img, options);\n            // specify window parameters\n            var printWind = window.open('');\n            if (printWind != null) {\n                if ((div instanceof HTMLElement)) {\n                    printWind.document.write('<html><head><style> body{margin:0px;}  @media print { .e-diagram-print-page' +\n                        '{page-break-after: left; }.e-diagram-print-page:last-child {page-break-after: avoid;}}' +\n                        '</style><title></title></head>');\n                    printWind.document.write('<BODY onload=\"setTimeout(function(){window.print();}, 100)\">');\n                    printWind.document.write('<center>' + div.innerHTML + '</center>');\n                    printWind.document.close();\n                }\n            }\n        };\n    };\n    /** @private */\n    PrintAndExport.prototype.getDiagramContent = function (styleSheets) {\n        var container = document.getElementById(this.diagram.element.id + 'content');\n        var scrollerX = container.scrollLeft;\n        var scrollerY = container.scrollTop;\n        var oldZoom = this.diagram.scrollSettings.currentZoom;\n        var oldHorizontalOffset = this.diagram.scroller.horizontalOffset;\n        var oldVerticalOffset = this.diagram.scroller.verticalOffset;\n        var oldWidth = Number(String(this.diagram.width).split('px')[0]);\n        var oldHeight = Number(String(this.diagram.height).split('px')[0]);\n        var bounds = this.getDiagramBounds('', {});\n        this.diagram.scroller.zoom((1 / oldZoom));\n        var scrollX = 0;\n        var scrollY = 0;\n        scrollX = bounds.x;\n        scrollY = bounds.y;\n        this.diagram.scroller.transform = {\n            tx: -scrollX,\n            ty: -scrollY,\n            scale: this.diagram.scroller.currentZoom\n        };\n        this.diagram.scroller.horizontalOffset = -scrollX;\n        this.diagram.scroller.verticalOffset = -scrollY;\n        this.diagram.scroller.setSize();\n        this.diagram.setSize(bounds.width, bounds.height);\n        var snapConstraints = this.diagram.snapSettings.constraints;\n        this.diagram.snapSettings.constraints = (this.diagram.snapSettings.constraints & ~SnapConstraints.ShowLines);\n        this.diagram.dataBind();\n        this.diagram.clearSelection();\n        styleSheets = styleSheets || document.styleSheets;\n        var styleSheetRef = '';\n        for (var i = 0; i < styleSheets.length; i++) {\n            if (styleSheets[i].href || typeof styleSheets[i] === 'string') {\n                styleSheetRef += '<link href=\\'' + (styleSheets[i].href || styleSheets[i]) + '\\' rel=\\'stylesheet\\' />';\n            }\n        }\n        var htmlData = document.getElementById(this.diagram.element.id + 'content').innerHTML;\n        var marginStyle = 'margin-left:' + 0 + 'px;margin-top:' + 0 + 'px;margin-right:'\n            + 0 + 'px;margin-bottom:' + 0 + 'px;';\n        htmlData = styleSheetRef + '<body style=\"margin: 0px; padding: 0px\"><div style=\\'' +\n            marginStyle + '\\'>' + htmlData + '</div></body>';\n        htmlData = htmlData.replace(/ transform: t/g, ' -webkit-transform: t');\n        this.diagram.setSize(oldWidth, oldHeight);\n        this.diagram.scroller.zoom(oldZoom / this.diagram.scrollSettings.currentZoom);\n        this.diagram.snapSettings.constraints = snapConstraints;\n        this.diagram.dataBind();\n        if (scrollerX || scrollerY) {\n            this.diagram.setOffset(scrollerX, scrollerY);\n        }\n        else {\n            this.diagram.scroller.transform = {\n                tx: (oldHorizontalOffset) / this.diagram.scroller.currentZoom,\n                ty: (oldVerticalOffset) / this.diagram.scroller.currentZoom,\n                scale: this.diagram.scroller.currentZoom\n            };\n            this.diagram.scroller.horizontalOffset = oldHorizontalOffset;\n            this.diagram.scroller.verticalOffset = oldVerticalOffset;\n        }\n        this.diagram.renderSelector(false);\n        /* tslint:disable */\n        return checkBrowserInfo() ? htmlData.replace(\"url(\" + location.href + \"#diagram_pattern \", \"url(#diagram_pattern)\") : htmlData;\n        /* tslint:enable */\n    };\n    /** @private */\n    PrintAndExport.prototype.exportImages = function (image, options) {\n        var _this = this;\n        var region = options && options.region ? options.region : 'Content';\n        var margin = options.margin || {};\n        margin = {\n            top: !isNaN(margin.top) ? margin.top : 0,\n            bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n            left: !isNaN(margin.left) ? margin.left : 0,\n            right: !isNaN(margin.right) ? margin.right : 0\n        };\n        var bounds = this.getDiagramBounds(region, {});\n        if (options.bounds) {\n            bounds.x = (!isNaN(options.bounds.x) ? options.bounds.x : bounds.x);\n            bounds.y = (!isNaN(options.bounds.y) ? options.bounds.y : bounds.y);\n            bounds.width = (options.bounds.width || bounds.width);\n            bounds.height = (options.bounds.height || bounds.height);\n        }\n        var img = document.createElement('img');\n        var attr = {\n            'src': image\n        };\n        setAttributeHtml(img, attr);\n        var context = this;\n        img.onload = function () {\n            var canvas = CanvasRenderer.createCanvas(context.diagram.element.id + 'innerImage', bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            var ctx = canvas.getContext('2d');\n            ctx.fillStyle = context.diagram.pageSettings.background.color;\n            ctx.fillRect(0, 0, bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            ctx.drawImage(img, 0, 0, bounds.width, bounds.height, margin.left, margin.top, bounds.width, bounds.height);\n            image = canvas.toDataURL();\n            if (options.printOptions) {\n                context.printImages(image, options);\n                return;\n            }\n            ctx.restore();\n            var fileName = options.fileName || 'diagram';\n            _this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        };\n    };\n    /**\n     * To destroy the Print and Export module\n     * @return {void}\n     * @private\n     */\n    PrintAndExport.prototype.destroy = function () {\n        /**\n         * Destroys the Print and Export module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    PrintAndExport.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'PrintandExport';\n    };\n    return PrintAndExport;\n}());\nexport { PrintAndExport };\n","import { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { randomId, getFunction } from '../utility/base-util';\nimport { cloneBlazorObject } from '../utility/diagram-util';\nimport { updateDefaultValues } from '../utility/diagram-util';\n/**\n * data source defines the basic unit of diagram\n */\nvar DataBinding = /** @class */ (function () {\n    /**\n     * Constructor for the data binding module.\n     * @private\n     */\n    function DataBinding() {\n        /**   @private  */\n        this.dataTable = {};\n        //constructs the data binding module\n    }\n    /**\n     * To destroy the data binding module\n     * @return {void}\n     * @private\n     */\n    DataBinding.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    DataBinding.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'DataBinding';\n    };\n    /**\n     * Initialize nodes and connectors when we have a data as JSON\n     * @param {DataSourceModel} data\n     * @param {Diagram} diagram\n     * @private\n     */\n    DataBinding.prototype.initData = function (data, diagram) {\n        var dataSource;\n        var dataProp = 'data';\n        var jsonProp = 'json';\n        var dataManager = data.dataManager || data.dataSource || {};\n        dataSource = dataManager[dataProp] || dataManager[jsonProp] ||\n            (dataManager.dataSource ? dataManager.dataSource.json : undefined);\n        if (dataSource && dataSource.length === 0 && dataManager.dataSource.data) {\n            dataSource = dataManager.dataSource.data;\n        }\n        if (dataSource && dataSource.length) {\n            this.applyDataSource(data, dataSource, diagram);\n        }\n    };\n    /**\n     * Initialize nodes and connector when we have a data as remote url\n     * @param {DataSourceModel} data\n     * @param {Diagram} diagram\n     * @private\n     */\n    DataBinding.prototype.initSource = function (data, diagram) {\n        var _this = this;\n        var dataSource = data;\n        var result;\n        var mapper = data;\n        var node;\n        if (dataSource.dataManager instanceof DataManager || dataSource.dataSource instanceof DataManager) {\n            var tempObj = mapper.dataManager || mapper.dataSource;\n            var query = tempObj.defaultQuery || new Query();\n            var dataManager = data.dataManager || data.dataSource;\n            dataManager.executeQuery(query).then(function (e) {\n                var prop = 'result';\n                result = e[prop];\n                if (!diagram.isDestroyed) {\n                    diagram.protectPropertyChange(true);\n                    _this.applyDataSource(data, result, diagram);\n                    diagram.refreshDiagram();\n                    diagram.protectPropertyChange(false);\n                    diagram.trigger('dataLoaded', { diagram: cloneBlazorObject(diagram) });\n                }\n            });\n        }\n    };\n    DataBinding.prototype.applyDataSource = function (mapper, data, diagram) {\n        this.dataTable = {};\n        var obj;\n        var firstNode;\n        var node;\n        var nodes;\n        var rootNodes = [];\n        var firstLevel = [];\n        var item;\n        var nextLevel;\n        if (data !== undefined) {\n            for (var r = 0; r < data.length; r++) {\n                obj = data[r];\n                if (obj[mapper.parentId] === undefined || obj[mapper.parentId] === null ||\n                    typeof obj[mapper.parentId] !== 'object') {\n                    if (rootNodes[obj[mapper.parentId]] !== undefined) {\n                        rootNodes[obj[mapper.parentId]].items.push(obj);\n                    }\n                    else {\n                        rootNodes[obj[mapper.parentId]] = { items: [obj] };\n                    }\n                }\n                else {\n                    rootNodes = this.updateMultipleRootNodes(obj, rootNodes, mapper, data);\n                }\n                if (mapper.root === obj[mapper.id]) {\n                    firstNode = { items: [obj] };\n                }\n            }\n            if (firstNode) {\n                firstLevel.push(firstNode);\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(rootNodes); _i < _a.length; _i++) {\n                    var n = _a[_i];\n                    if (!n || n === 'undefined' || n === '\\'\\'' || n === 'null') {\n                        firstLevel.push(rootNodes[n]);\n                    }\n                }\n            }\n            for (var i = 0; i < firstLevel.length; i++) {\n                for (var j = 0; j < firstLevel[i].items.length; j++) {\n                    item = firstLevel[i].items[j];\n                    node = this.applyNodeTemplate(mapper, item, diagram);\n                    diagram.nodes.push(node);\n                    this.dataTable[item[mapper.id]] = node;\n                    nextLevel = rootNodes[node.data[mapper.id]];\n                    if (nextLevel !== undefined) {\n                        this.renderChildNodes(mapper, nextLevel, node.id, rootNodes, diagram);\n                    }\n                }\n            }\n        }\n        this.dataTable = null;\n    };\n    /**\n     * updateMultipleRootNodes method is used  to update the multiple Root Nodes\n     * @param {Object} object\n     * @param {Object[]} rootnodes\n     * @param {DataSourceModel} mapper\n     * @param {Object[]} data\n     */\n    DataBinding.prototype.updateMultipleRootNodes = function (obj, rootNodes, mapper, data) {\n        var parents = obj[mapper.parentId];\n        var parent;\n        for (var i = 0; i < parents.length; i++) {\n            parent = parents[i];\n            if (rootNodes[parent]) {\n                rootNodes[parent].items.push(obj);\n            }\n            else {\n                rootNodes[parent] = { items: [obj] };\n            }\n        }\n        return rootNodes;\n    };\n    /**\n     * Get the node values\n     * @param {DataSourceModel} mapper\n     * @param {Object} item\n     * @param {Diagram} diagram\n     */\n    DataBinding.prototype.applyNodeTemplate = function (mapper, item, diagram) {\n        var root = item;\n        var id = randomId();\n        var blazor = 'Blazor';\n        var nodeModel = { id: id, data: item };\n        var doBinding = getFunction(mapper.doBinding);\n        if (doBinding) {\n            doBinding(nodeModel, item, diagram);\n        }\n        var obj = new Node(diagram, 'nodes', nodeModel, true);\n        updateDefaultValues(obj, nodeModel, diagram.nodeDefaults);\n        if (mapper.dataMapSettings) {\n            var index = void 0;\n            var arrayProperty = [];\n            var innerProperty = [];\n            for (var i = 0; i < mapper.dataMapSettings.length; i++) {\n                if (mapper.dataMapSettings[i].property.indexOf('.') !== -1) {\n                    innerProperty = this.splitString(mapper.dataMapSettings[i].property);\n                    for (var p = 0; p < innerProperty.length; p++) {\n                        if (innerProperty[p].indexOf('[') !== -1) {\n                            index = innerProperty[p].indexOf('[');\n                            arrayProperty = innerProperty[p].split('[');\n                        }\n                    }\n                    if (index) {\n                        if (innerProperty[2]) {\n                            obj[arrayProperty[0]][innerProperty[0].charAt(index + 1)][innerProperty[1]][innerProperty[2]] =\n                                item[mapper.dataMapSettings[i].field];\n                        }\n                        else {\n                            var value = item[mapper.dataMapSettings[i].field];\n                            obj[arrayProperty[0]][innerProperty[0].charAt(index + 1)][innerProperty[1]] = value;\n                        }\n                    }\n                    else {\n                        if (innerProperty[2]) {\n                            obj[innerProperty[0]][innerProperty[1]][innerProperty[2]] = item[mapper.dataMapSettings[i].field];\n                        }\n                        else {\n                            obj[innerProperty[0]][innerProperty[1]] = item[mapper.dataMapSettings[i].field];\n                        }\n                    }\n                }\n                else {\n                    var property = mapper.dataMapSettings[i].property;\n                    property = property.charAt(0).toLowerCase() + property.slice(1);\n                    obj[property] = item[mapper.dataMapSettings[i].field];\n                }\n                index = 0;\n                arrayProperty = [];\n                innerProperty = [];\n            }\n        }\n        if (!this.collectionContains(obj, diagram, mapper.id, mapper.parentId)) {\n            return obj;\n        }\n        else {\n            return this.dataTable[item[mapper.id]];\n        }\n    };\n    DataBinding.prototype.splitString = function (property) {\n        var temp = [];\n        temp = property.split('.');\n        for (var i = 0; i < temp.length; i++) {\n            temp[i] = temp[i].charAt(0).toLowerCase() + temp[i].slice(1);\n        }\n        return temp;\n    };\n    DataBinding.prototype.renderChildNodes = function (mapper, parent, value, rtNodes, diagram) {\n        var child;\n        var nextLevel;\n        var node;\n        var returnNode;\n        for (var j = 0; j < parent.items.length; j++) {\n            child = parent.items[j];\n            node = this.applyNodeTemplate(mapper, child, diagram);\n            var canBreak = false;\n            if (!this.collectionContains(node, diagram, mapper.id, mapper.parentId)) {\n                this.dataTable[child[mapper.id]] = node;\n                diagram.nodes.push(node);\n            }\n            else {\n                canBreak = true;\n            }\n            if (!this.containsConnector(diagram, value, node.id)) {\n                diagram.connectors.push(this.applyConnectorTemplate(value, node.id, diagram));\n            }\n            if (!canBreak) {\n                nextLevel = rtNodes[node.data[mapper.id]];\n                if (nextLevel !== undefined) {\n                    this.renderChildNodes(mapper, nextLevel, node.id, rtNodes, diagram);\n                }\n            }\n        }\n    };\n    DataBinding.prototype.containsConnector = function (diagram, sourceNode, targetNode) {\n        if (sourceNode !== '' && targetNode !== '') {\n            for (var i = 0; i < diagram.connectors.length; i++) {\n                var connector = diagram.connectors[i];\n                if (connector !== undefined && (connector.sourceID === sourceNode && connector.targetID === targetNode)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     *  collectionContains method is used to  check wthear the node is already present in collection or not\n     * @param {Node} node\n     * @param {Diagram} diagram\n     * @param {string} id\n     * @param {string} parentId\n     */\n    DataBinding.prototype.collectionContains = function (node, diagram, id, parentId) {\n        var obj = this.dataTable[node.data[id]];\n        if (obj !== undefined && obj.data[id] === node.data[id] && obj.data[parentId] === node.data[parentId]) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Get the Connector values\n     * @param {string} sNode\n     * @param {string} tNode\n     * @param {Diagram} diagram\n     */\n    DataBinding.prototype.applyConnectorTemplate = function (sNode, tNode, diagram) {\n        var connModel = {\n            id: randomId(), sourceID: sNode, targetID: tNode\n        };\n        var obj = new Connector(diagram, 'connectors', connModel, true);\n        updateDefaultValues(obj, connModel, diagram.connectorDefaults);\n        return obj;\n    };\n    return DataBinding;\n}());\nexport { DataBinding };\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { isBlazor } from '@syncfusion/ej2-base';\nimport { remove } from '@syncfusion/ej2-base';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport { contextMenuClick, contextMenuOpen, contextMenuBeforeItemRender } from '../enum/enum';\nimport { createHtmlElement } from '../../diagram/utility/dom-util';\n/**\n * @private\n */\nexport var menuClass = {\n    content: '.e-diagramcontent',\n    copy: 'e-copy',\n    paste: 'e-paste',\n    undo: 'e-undo',\n    redo: 'e-redo',\n    cut: 'e-cut',\n    selectAll: 'e-selectall',\n    grouping: 'e-grouping',\n    group: 'e-group',\n    unGroup: 'e-ungroup',\n    bringToFront: 'e-bringfront',\n    sendToBack: 'e-sendback',\n    moveForward: 'e-bringforward',\n    sendBackward: 'e-sendbackward',\n    order: 'e-order'\n};\n/**\n * 'ContextMenu module used to handle context menu actions.'\n * @private\n */\nvar DiagramContextMenu = /** @class */ (function () {\n    function DiagramContextMenu(parent, service) {\n        this.defaultItems = {};\n        /**\n         * @private\n         */\n        this.disableItems = [];\n        /**\n         * @private\n         */\n        this.hiddenItems = [];\n        this.localeText = this.setLocaleKey();\n        this.parent = parent;\n        this.serviceLocator = service;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on('initial-load', this.render, this);\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('initial-load', this.render);\n    };\n    DiagramContextMenu.prototype.render = function () {\n        this.l10n = this.serviceLocator.getService('localization');\n        this.element = createHtmlElement('ul', { id: this.parent.element.id + '_contextMenu' });\n        this.parent.element.appendChild(this.element);\n        var target = '#' + this.parent.element.id;\n        this.contextMenu = new Menu({\n            items: this.getMenuItems(),\n            enableRtl: this.parent.enableRtl,\n            enablePersistence: this.parent.enablePersistence,\n            locale: this.parent.locale,\n            target: target,\n            select: this.contextMenuItemClick.bind(this),\n            beforeOpen: this.contextMenuBeforeOpen.bind(this),\n            onOpen: this.contextMenuOpen.bind(this),\n            beforeItemRender: this.BeforeItemRender.bind(this),\n            onClose: this.contextMenuOnClose.bind(this),\n            cssClass: 'e-diagram-menu',\n            animationSettings: { effect: 'None' }\n        });\n        this.contextMenu.appendTo(this.element);\n    };\n    DiagramContextMenu.prototype.getMenuItems = function () {\n        var menuItems = [];\n        var orderItems = [];\n        var groupItems = [];\n        if (!this.parent.contextMenuSettings.showCustomMenuOnly) {\n            for (var _i = 0, _a = this.getDefaultItems(); _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.toLocaleLowerCase().indexOf('group') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'grouping') {\n                        groupItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else if (item.toLocaleLowerCase().indexOf('order') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'order') {\n                        orderItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else {\n                    menuItems.push(this.buildDefaultItems(item));\n                }\n            }\n            if (groupItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('grouping');\n                orderGroup.items = groupItems;\n                menuItems.push(orderGroup);\n            }\n            if (orderItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('order');\n                orderGroup.items = orderItems;\n                menuItems.push(orderGroup);\n            }\n        }\n        if (this.parent.contextMenuSettings.items) {\n            for (var _b = 0, _c = this.parent.contextMenuSettings.items; _b < _c.length; _b++) {\n                var customItem = _c[_b];\n                menuItems.push(customItem);\n            }\n        }\n        return menuItems;\n    };\n    DiagramContextMenu.prototype.contextMenuOpen = function () {\n        this.isOpen = true;\n    };\n    DiagramContextMenu.prototype.BeforeItemRender = function (args) {\n        this.parent.trigger(contextMenuBeforeItemRender, args);\n    };\n    DiagramContextMenu.prototype.contextMenuItemClick = function (args) {\n        document.getElementById(this.parent.element.id + 'content').focus();\n        this.parent.trigger(contextMenuClick, args);\n        var item = this.getKeyFromId(args.item.id);\n        if (!args.cancel) {\n            switch (item) {\n                case 'cut':\n                    this.parent.cut();\n                    break;\n                case 'copy':\n                    this.parent.copy();\n                    break;\n                case 'undo':\n                    this.parent.undo();\n                    break;\n                case 'redo':\n                    this.parent.redo();\n                    break;\n                case 'paste':\n                    this.parent.paste();\n                    break;\n                case 'selectAll':\n                    this.parent.selectAll();\n                    break;\n                case 'group':\n                    this.parent.group();\n                    break;\n                case 'unGroup':\n                    this.parent.unGroup();\n                    break;\n                case 'bringToFrontOrder':\n                    this.parent.bringToFront();\n                    break;\n                case 'moveForwardOrder':\n                    this.parent.moveForward();\n                    break;\n                case 'sendToBackOrder':\n                    this.parent.sendToBack();\n                    break;\n                case 'sendBackwardOrder':\n                    this.parent.sendBackward();\n                    break;\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuOnClose = function (args) {\n        var parent = 'parentObj';\n        if (args.items.length > 0 && args.items[0][parent] instanceof Menu) {\n            this.updateItemStatus();\n        }\n    };\n    DiagramContextMenu.prototype.getLocaleText = function (item) {\n        return this.l10n.getConstant(this.localeText[item]);\n    };\n    DiagramContextMenu.prototype.updateItemStatus = function () {\n        this.contextMenu.showItems(this.hiddenItems, true);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        this.hiddenItems = [];\n        this.disableItems = [];\n        this.isOpen = false;\n    };\n    DiagramContextMenu.prototype.ensureItems = function (item, event) {\n        var key = this.getKeyFromId(item.id);\n        var dItem = this.defaultItems[key];\n        if (this.getDefaultItems().indexOf(key) !== -1) {\n            if (item.target && (event || this.parent.checkMenu) &&\n                !this.ensureTarget(item)) {\n                this.hiddenItems.push(item.id);\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuBeforeOpen = function (args) {\n        return __awaiter(this, void 0, void 0, function () {\n            var diagramArgs, _i, _a, item, _b, _c, newItem, hidden, contextItems, i, item, i, item;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        if (!this.parent.checkMenu &&\n                            (window.navigator.userAgent.indexOf('Linux') !== -1 || window.navigator.userAgent.indexOf('X11') !== -1)) {\n                            this.parent.checkMenu = args.cancel = true;\n                        }\n                        if (this.parent.checkMenu) {\n                            this.hiddenItems = [];\n                        }\n                        diagramArgs = args;\n                        diagramArgs.hiddenItems = [];\n                        for (_i = 0, _a = args.items; _i < _a.length; _i++) {\n                            item = _a[_i];\n                            this.ensureItems(item, args.event);\n                            if (item.items.length) {\n                                for (_b = 0, _c = item.items; _b < _c.length; _b++) {\n                                    newItem = _c[_b];\n                                    this.ensureItems(newItem, args.event);\n                                }\n                            }\n                        }\n                        this.eventArgs = args.event;\n                        if (!isBlazor()) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.parent.trigger(contextMenuOpen, diagramArgs)];\n                    case 1:\n                        diagramArgs =\n                            (_d.sent()) || diagramArgs;\n                        if (typeof diagramArgs === 'string') {\n                            diagramArgs = JSON.parse(diagramArgs);\n                        }\n                        return [3 /*break*/, 3];\n                    case 2:\n                        this.parent.trigger(contextMenuOpen, diagramArgs);\n                        _d.label = 3;\n                    case 3:\n                        hidden = true;\n                        this.hiddenItems = this.hiddenItems.concat(diagramArgs.hiddenItems);\n                        this.contextMenu.enableItems(this.disableItems, false, true);\n                        contextItems = this;\n                        for (i = 0; i < args.items.length; i++) {\n                            item = args.items[i];\n                            if (contextItems.hiddenItems.indexOf(item.id) > -1) {\n                                contextItems.contextMenu.hideItems([item.id], true);\n                            }\n                        }\n                        for (i = 0; i < contextItems.contextMenu.items.length; i++) {\n                            item = contextItems.contextMenu.items[i];\n                            if (contextItems.hiddenItems.indexOf(item.id) === -1) {\n                                hidden = false;\n                                contextItems.contextMenu.showItems([item.id], true);\n                            }\n                        }\n                        if (hidden) {\n                            diagramArgs.cancel = hidden;\n                            this.hiddenItems = [];\n                        }\n                        /* tslint:disable */\n                        if (this.parent.selectedItems && this.parent.selectedItems.nodes[0].isPhase) {\n                            args.cancel = true;\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    DiagramContextMenu.prototype.ensureTarget = function (item) {\n        var selectedLength = this.parent.selectedItems.nodes.length +\n            this.parent.selectedItems.connectors.length;\n        var itemText = this.getKeyFromId(item.id);\n        var target = false;\n        switch (itemText) {\n            case 'undo':\n                target = this.parent.historyManager && this.parent.historyManager.canUndo ? true : false;\n                break;\n            case 'redo':\n                target = this.parent.historyManager && this.parent.historyManager.canRedo ? true : false;\n                break;\n            case 'paste':\n                target = this.parent.commandHandler.clipboardData.clipObject ? true : false;\n                break;\n            case 'selectAll':\n                target = this.parent.nodes.length + this.parent.connectors.length ? true : false;\n                break;\n            case 'grouping':\n                target = ((selectedLength > 1) || (this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'group':\n                target = selectedLength > 1;\n                break;\n            case 'unGroup':\n                target = ((this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'cut':\n            case 'copy':\n            case 'order':\n            case 'bringToFrontOrder':\n            case 'moveForwardOrder':\n            case 'sendToBackOrder':\n            case 'sendBackwardOrder':\n                target = selectedLength ? true : false;\n                break;\n        }\n        return target;\n    };\n    /**\n     * To destroy the Context menu.\n     * @method destroy\n     * @return {void}\n     * @private\n     */\n    DiagramContextMenu.prototype.destroy = function () {\n        this.contextMenu.destroy();\n        remove(this.element);\n        this.removeEventListener();\n    };\n    DiagramContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    DiagramContextMenu.prototype.generateID = function (item) {\n        return this.parent.element.id + '_contextMenu_' + item;\n    };\n    DiagramContextMenu.prototype.getKeyFromId = function (id) {\n        return id.replace(this.parent.element.id + '_contextMenu_', '');\n    };\n    DiagramContextMenu.prototype.buildDefaultItems = function (item) {\n        var menuItem;\n        switch (item) {\n            case 'copy':\n                menuItem = { target: menuClass.content, iconCss: menuClass.copy };\n                break;\n            case 'cut':\n                menuItem = { target: menuClass.content, iconCss: menuClass.cut };\n                break;\n            case 'paste':\n                menuItem = { target: menuClass.content, iconCss: menuClass.paste };\n                break;\n            case 'undo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.undo };\n                break;\n            case 'redo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.redo };\n                break;\n            case 'grouping':\n                menuItem = { target: menuClass.content };\n                break;\n            case 'group':\n                menuItem = { target: menuClass.content, iconCss: menuClass.group };\n                break;\n            case 'unGroup':\n                menuItem = { target: menuClass.content, iconCss: menuClass.unGroup };\n                break;\n            case 'order':\n                menuItem = { target: menuClass.content, iconCss: menuClass.order };\n                break;\n            case 'bringToFrontOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.bringToFront };\n                break;\n            case 'moveForwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.moveForward };\n                break;\n            case 'sendToBackOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendToBack };\n                break;\n            case 'sendBackwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendBackward };\n                break;\n            case 'selectAll':\n                menuItem = { target: menuClass.content };\n                break;\n        }\n        this.defaultItems[item] = {\n            text: this.getLocaleText(item), id: this.generateID(item),\n            target: menuItem.target, iconCss: menuItem.iconCss ? 'e-icons ' + menuItem.iconCss : ''\n        };\n        return this.defaultItems[item];\n    };\n    DiagramContextMenu.prototype.getDefaultItems = function () {\n        return [\n            'copy',\n            'cut', 'paste', 'undo', 'redo', 'selectAll', 'grouping', 'group', 'unGroup', 'order',\n            'bringToFrontOrder', 'moveForwardOrder', 'sendToBackOrder', 'sendBackwardOrder'\n        ];\n    };\n    DiagramContextMenu.prototype.setLocaleKey = function () {\n        return {\n            'copy': 'Copy',\n            'cut': 'Cut',\n            'paste': 'Paste',\n            'undo': 'Undo',\n            'redo': 'Redo',\n            'selectAll': 'SelectAll',\n            'grouping': 'Grouping',\n            'group': 'Group',\n            'unGroup': 'UnGroup',\n            'order': 'Order',\n            'bringToFrontOrder': 'BringToFront',\n            'moveForwardOrder': 'MoveForward',\n            'sendToBackOrder': 'SendToBack',\n            'sendBackwardOrder': 'SendBackward'\n        };\n    };\n    return DiagramContextMenu;\n}());\nexport { DiagramContextMenu };\n","import { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect2 } from '../utility/diagram-util';\nimport { canBridge } from '../utility/constraints-util';\n/**\n * ConnectorBridging defines the bridging behavior\n */\n/** @private */\nvar ConnectorBridging = /** @class */ (function () {\n    /**\n     * Constructor for the bridging module\n     * @private\n     */\n    function ConnectorBridging() {\n        //constructs the bridging module\n    }\n    /** @private */\n    ConnectorBridging.prototype.updateBridging = function (conn, diagram) {\n        var lastBridge = [];\n        var bounds;\n        conn.bridges = [];\n        if (canBridge(conn, diagram)) {\n            // if (this.canBridge(conn, diagram)) {\n            var points1 = this.getPoints(conn);\n            bounds = Rect.toBounds(points1);\n            var bridgeSpacing = conn.bridgeSpace;\n            var bgedir = diagram.bridgeDirection;\n            var count = -1;\n            var quads = diagram.connectors;\n            for (var q = 0; q < quads.length; q++) {\n                var connector1 = quads[q];\n                if (conn && connector1 && conn.id !== connector1.id) {\n                    var points2 = this.getPoints(connector1);\n                    var bounds1 = Rect.toBounds(points2);\n                    if (this.intersectsRect(bounds, bounds1)) {\n                        var intersectPts = this.intersect(points1, points2, false, bgedir, true);\n                        if (intersectPts.length > 0) {\n                            for (var i = 0; i < intersectPts.length; i++) {\n                                var fullLength = 0;\n                                var length_1 = 0;\n                                var segmentIndex = 0;\n                                var pointIndex = 0;\n                                var obj = this.getLengthAtFractionPoint(conn, intersectPts[i]);\n                                if (obj.pointIndex !== -1) {\n                                    length_1 = obj.lengthFractionIndex;\n                                    fullLength = obj.fullLength;\n                                    segmentIndex = obj.segmentIndex;\n                                    pointIndex = obj.pointIndex;\n                                    var stBridge = this.getPointAtLength((length_1 - (bridgeSpacing / 2)), points1);\n                                    var enBridge = this.getPointAtLength((length_1 + (bridgeSpacing / 2)), points1);\n                                    var fractLength = (length_1 - (bridgeSpacing / 2)) / fullLength;\n                                    fractLength = (length_1 + (bridgeSpacing / 2)) / fullLength;\n                                    if (this.isEmptyPoint(enBridge)) {\n                                        enBridge = stBridge;\n                                    }\n                                    var start = void 0;\n                                    var end = void 0;\n                                    start = conn.sourcePoint;\n                                    if (conn.type === 'Straight') {\n                                        end = conn.targetPoint;\n                                    }\n                                    else {\n                                        end = conn.intermediatePoints[pointIndex];\n                                    }\n                                    var angle = this.angleCalculation(start, end);\n                                    if (lastBridge.length) {\n                                        var fixedPoint = void 0;\n                                        fixedPoint = conn.sourcePoint;\n                                        var fix = Math.abs(this.lengthCalculation(fixedPoint, enBridge));\n                                        var var1 = 0;\n                                        var insertAt = -1;\n                                        count = -1;\n                                        for (var k = 0; k < lastBridge[segmentIndex].bridges.length; k++) {\n                                            count++;\n                                            var arcSeg = lastBridge[segmentIndex].bridges[k];\n                                            var1 = Math.abs(this.lengthCalculation(fixedPoint, arcSeg.endPoint));\n                                            if (fix < var1) {\n                                                insertAt = count;\n                                                break;\n                                            }\n                                        }\n                                        if (insertAt >= 0) {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.splice(insertAt, 0, paths);\n                                            lastBridge[segmentIndex].bridges.join();\n                                            lastBridge[segmentIndex].bridgeStartPoint.splice(insertAt, 0, stBridge);\n                                            lastBridge[segmentIndex].bridgeStartPoint.join();\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                        else {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.push(paths);\n                                            lastBridge[segmentIndex].bridgeStartPoint.push(stBridge);\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                    else {\n                                        if (!isNaN(stBridge.x) && !isNaN(stBridge.y) && !this.isEmptyPoint(enBridge)) {\n                                            var arcs = void 0;\n                                            var bges = [];\n                                            var bgept = [];\n                                            arcs = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            var bgseg = {\n                                                bridges: bges, bridgeStartPoint: bgept, segmentIndex: segmentIndex\n                                            };\n                                            arcs.target = connector1.id;\n                                            var stPoints = [];\n                                            var edPoints = [];\n                                            stPoints.push(stBridge);\n                                            edPoints.push(enBridge);\n                                            lastBridge[segmentIndex] = bgseg;\n                                            lastBridge[segmentIndex].bridges.push(arcs);\n                                            lastBridge[segmentIndex].bridgeStartPoint = stPoints;\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (lastBridge.length !== 0) {\n                this.firstBridge(lastBridge, conn, bridgeSpacing);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.firstBridge = function (bridgeList, connector, bridgeSpacing) {\n        for (var i = 0; i < bridgeList.length; i++) {\n            var bridge = bridgeList[i];\n            for (var k = 1; k < bridge.bridges.length; k++) {\n                if (Point.findLength(bridge.bridges[k].endPoint, bridge.bridges[k - 1].endPoint) < bridgeSpacing) {\n                    bridge.bridges[k - 1].endPoint = bridge.bridges[k].endPoint;\n                    var subBridge = bridge.bridges[k - 1];\n                    var arc = this.createBridgeSegment(subBridge.startPoint, subBridge.endPoint, subBridge.angle, bridgeSpacing, subBridge.sweep);\n                    bridge.bridges[k - 1].path = arc;\n                    bridge.bridges.splice(k, 1);\n                    bridge.bridgeStartPoint.splice(k, 1);\n                    k--;\n                }\n            }\n            var pre = connector.sourcePoint;\n            for (var j = 0; j < bridge.bridges.length; j++) {\n                var subBridge = bridge.bridges[j];\n                var preventChecking = true;\n                pre = subBridge.endPoint;\n                connector.bridges.push(subBridge);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.createSegment = function (st, end, angle, direction, index, conn, diagram) {\n        var arc;\n        var sweep;\n        var path = {\n            angle: 0, endPoint: { x: 0, y: 0 }, target: '', path: '',\n            segmentPointIndex: -1, startPoint: { x: 0, y: 0 }, sweep: 1, rendered: false\n        };\n        sweep = this.sweepDirection(angle, direction, conn, diagram);\n        arc = this.createBridgeSegment(st, end, angle, conn.bridgeSpace, sweep);\n        path.path = arc;\n        path.startPoint = st;\n        path.endPoint = end;\n        path.angle = angle;\n        path.segmentPointIndex = index;\n        path.sweep = sweep;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.createBridgeSegment = function (startPt, endPt, angle, bridgeSpace, sweep) {\n        var path = 'A ' + bridgeSpace / 2 + ' ' + bridgeSpace / 2 + ' ' + angle + ' , 1 ' + sweep + ' ' + endPt.x + ',' + endPt.y;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.sweepDirection = function (angle, bridgeDirection, connector, diagram) {\n        var angle1 = Math.abs(angle);\n        var sweep;\n        switch (bridgeDirection) {\n            case 'Top':\n            case 'Bottom':\n                sweep = 1;\n                if (angle1 >= 0 && angle1 <= 90) {\n                    sweep = 0;\n                }\n                break;\n            case 'Left':\n            case 'Right':\n                sweep = 1;\n                if (angle < 0 && angle >= -180) {\n                    sweep = 0;\n                }\n                break;\n        }\n        if (bridgeDirection === 'Right' || bridgeDirection === 'Bottom') {\n            if (sweep === 0) {\n                sweep = 1;\n            }\n            else {\n                sweep = 0;\n            }\n        }\n        return sweep;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPointAtLength = function (length, pts) {\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        for (var i = 0; i < pts.length; i++) {\n            var pt = pts[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = this.lengthCalculation(pre, pt);\n                if (run + l > length) {\n                    var r = length - run;\n                    var deg = Point.findAngle(pre, pt);\n                    var x = r * Math.cos(deg * Math.PI / 180);\n                    var y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPoints = function (connector) {\n        var points = [];\n        if (connector.intermediatePoints && (connector.type === 'Straight' || connector.type === 'Orthogonal')) {\n            for (var j = 0; j < connector.intermediatePoints.length; j++) {\n                points.push(connector.intermediatePoints[j]);\n            }\n        }\n        return points;\n    };\n    ConnectorBridging.prototype.intersectsRect = function (rect1, rect2) {\n        return ((((rect2.x < (rect1.x + rect1.width)) && (rect1.x < (rect2.x + rect2.width)))\n            && (rect2.y < (rect1.y + rect1.height))) && (rect1.y < (rect2.y + rect2.height)));\n    };\n    /** @private */\n    ConnectorBridging.prototype.intersect = function (points1, points2, self, bridgeDirection, zOrder) {\n        if (self && points2.length >= 2) {\n            points2.splice(0, 1);\n            points2.splice(0, 1);\n        }\n        var points = [];\n        for (var i = 0; i < points1.length - 1; i++) {\n            var pt = this.inter1(points1[i], points1[i + 1], points2, zOrder, bridgeDirection);\n            if (pt.length > 0) {\n                for (var k = 0; k < pt.length; k++) {\n                    points.push(pt[k]);\n                }\n            }\n            if (self && points2.length >= 1) {\n                points2.splice(0, 1);\n            }\n        }\n        return points;\n    };\n    /** @private */\n    ConnectorBridging.prototype.inter1 = function (startPt, endPt, pts, zOrder, bridgeDirection) {\n        var points1 = [];\n        for (var i = 0; i < pts.length - 1; i++) {\n            var point = intersect2(startPt, endPt, pts[i], pts[i + 1]);\n            if (!this.isEmptyPoint(point)) {\n                var angle = this.angleCalculation(startPt, endPt);\n                var angle1 = this.angleCalculation(pts[i], pts[i + 1]);\n                angle = this.checkForHorizontalLine(angle);\n                angle1 = this.checkForHorizontalLine(angle1);\n                switch (bridgeDirection) {\n                    case 'Left':\n                    case 'Right':\n                        if (angle > angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                    case 'Top':\n                    case 'Bottom':\n                        if (angle < angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                }\n                if (angle === angle1 && zOrder) {\n                    points1.push(point);\n                }\n            }\n        }\n        return points1;\n    };\n    ConnectorBridging.prototype.checkForHorizontalLine = function (angle) {\n        var temp = 0;\n        var roundedAngle = Math.abs(angle);\n        if (roundedAngle > 90) {\n            temp = 180 - roundedAngle;\n        }\n        else {\n            temp = roundedAngle;\n        }\n        return temp;\n    };\n    ConnectorBridging.prototype.isEmptyPoint = function (point) {\n        return point.x === 0 && point.y === 0;\n    };\n    ConnectorBridging.prototype.getLengthAtFractionPoint = function (connector, pointAt) {\n        var lengthFraction;\n        var confirm = 100;\n        var pointIndex = -1;\n        var fullLength = 0;\n        var segmentIndex = -1;\n        var count = 0;\n        var lengthAtFractionPt = 0;\n        var pt1 = connector.sourcePoint;\n        var previouspt2 = pt1;\n        var points = [];\n        for (var i = 0; i < connector.intermediatePoints.length; i++) {\n            var point2 = connector.intermediatePoints[i];\n            points.push(point2);\n        }\n        for (var j = 0; j < points.length; j++) {\n            var pt2 = points[j];\n            var suspect = this.getSlope(pt2, pt1, pointAt, connector);\n            if (suspect < confirm) {\n                confirm = suspect;\n                lengthAtFractionPt = fullLength + this.lengthCalculation(pointAt, previouspt2);\n                segmentIndex = count;\n                pointIndex = j;\n            }\n            fullLength += Point.findLength(pt2, pt1);\n            pt1 = pt2;\n            previouspt2 = pt2;\n        }\n        count++;\n        lengthFraction = {\n            lengthFractionIndex: lengthAtFractionPt, fullLength: fullLength,\n            segmentIndex: segmentIndex, pointIndex: pointIndex\n        };\n        return lengthFraction;\n    };\n    ConnectorBridging.prototype.getSlope = function (startPt, endPt, point, connector) {\n        var three = 3.0;\n        var delX = Math.abs(startPt.x - endPt.x);\n        var delY = Math.abs(startPt.y - endPt.y);\n        var lhs = ((point.y - startPt.y) / (endPt.y - startPt.y));\n        var rhs = ((point.x - startPt.x) / (endPt.x - startPt.x));\n        if (!isFinite(lhs) || !isFinite(rhs) || isNaN(lhs) || isNaN(rhs)) {\n            if (startPt.x === endPt.x) {\n                if (startPt.y === endPt.y) {\n                    return 10000;\n                }\n                else if (((startPt.y > point.y) && (point.y > endPt.y)) || ((startPt.y < point.y) && (point.y < endPt.y))) {\n                    return Math.abs(startPt.x - point.x);\n                }\n            }\n            else if (startPt.y === endPt.y) {\n                if (((startPt.x > point.x) && (point.x > endPt.x)) || ((startPt.x < point.x) && (point.x < endPt.x))) {\n                    return Math.abs(startPt.y - point.y);\n                }\n            }\n        }\n        else {\n            if ((startPt.x >= point.x && point.x >= endPt.x) || (startPt.x <= point.x && point.x <= endPt.x) || delX < three) {\n                if ((startPt.y >= point.y && point.y >= endPt.y) || (startPt.y <= point.y && point.y <= endPt.y) || delY < three) {\n                    return Math.abs(lhs - rhs);\n                }\n            }\n        }\n        return 10000;\n    };\n    /** @private */\n    ConnectorBridging.prototype.angleCalculation = function (startPt, endPt) {\n        var xDiff = startPt.x - endPt.x;\n        var yDiff = startPt.y - endPt.y;\n        return Math.atan2(yDiff, xDiff) * (180 / Math.PI);\n    };\n    ConnectorBridging.prototype.lengthCalculation = function (startPt, endPt) {\n        //removed a try catch from here\n        var len = Math.sqrt(((startPt.x - endPt.x) * (startPt.x - endPt.x)) + ((startPt.y - endPt.y) * (startPt.y - endPt.y)));\n        return len;\n    };\n    /**\n     * To destroy the bridging module\n     * @return {void}\n     * @private\n     */\n    ConnectorBridging.prototype.destroy = function () {\n        /**\n         * Destroys the bridging module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorBridging.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bridging';\n    };\n    return ConnectorBridging;\n}());\nexport { ConnectorBridging };\n","import { Rect } from '../primitives/rect';\nimport { PathElement } from '../core/elements/path-element';\nimport { SnapConstraints } from '../enum/enum';\nimport { Connector } from './connector';\nimport { Selector } from '../objects/node';\nimport { getBounds } from './../utility/base-util';\nimport { randomId } from './../utility/base-util';\nimport { isSelected } from '../interaction/actions';\nimport { TextElement } from '../core/elements/text-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\n/**\n * Snapping\n */\nvar Snapping = /** @class */ (function () {\n    function Snapping(diagram) {\n        this.line = [];\n        this.diagram = diagram;\n    }\n    /** @private */\n    Snapping.prototype.canSnap = function () {\n        return (this.diagram.snapSettings.constraints\n            & (SnapConstraints.SnapToObject | SnapConstraints.SnapToLines)) !== 0;\n    };\n    /**\n     * Snap to object\n     * @private\n     */\n    Snapping.prototype.snapPoint = function (diagram, selectedObject, towardsLeft, towardsTop, delta, startPoint, endPoint) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = this.diagram.scroller.currentZoom;\n        var offset = { x: 0, y: 0 };\n        var bounds = getBounds(selectedObject.wrapper);\n        var horizontallysnapped = { snapped: false, offset: 0 };\n        var verticallysnapped = { snapped: false, offset: 0 };\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            var snapLine = void 0;\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n            this.snapObject(diagram, selectedObject, snapLine, horizontallysnapped, verticallysnapped, delta, startPoint === endPoint);\n        }\n        //original position\n        var left = bounds.x + delta.x;\n        var top = bounds.y + delta.y;\n        var right = bounds.x + bounds.width + delta.x;\n        var bottom = bounds.y + bounds.height + delta.y;\n        var scaledIntervals = snapSettings.verticalGridlines.scaledIntervals;\n        //snapped positions\n        var roundedRight = this.round(right, scaledIntervals, zoomFactor);\n        var roundedLeft = this.round(left, scaledIntervals, zoomFactor);\n        scaledIntervals = snapSettings.horizontalGridlines.scaledIntervals;\n        var roundedTop = this.round(top, scaledIntervals, zoomFactor);\n        var roundedBottom = this.round(bottom, scaledIntervals, zoomFactor);\n        //currentposition\n        var currentright = bounds.x + bounds.width;\n        var currentbottom = bounds.y + bounds.height;\n        if (!horizontallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                if (Math.abs(delta.x) >= 1) {\n                    if (towardsLeft) {\n                        if (Math.abs(roundedRight - currentright) > Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                        else {\n                            offset.x += roundedRight - currentright;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedRight - currentright) < Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedRight - currentright;\n                        }\n                        else {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        else {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n                offset.x = horizontallysnapped.offset;\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        if (!verticallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                if (Math.abs(delta.y) >= 1) {\n                    if (towardsTop) {\n                        if (Math.abs(roundedBottom - currentbottom) > Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                        else {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedBottom - currentbottom) < Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                        else {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.y = endPoint.y - startPoint.y;\n            }\n        }\n        else {\n            offset.y = verticallysnapped.offset;\n        }\n        return offset;\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.round = function (value, snapIntervals, scale) {\n        if (scale === 1) {\n            scale = Math.pow(2, Math.floor(Math.log(scale) / Math.log(2)));\n        }\n        else {\n            scale = scale;\n        }\n        var cutoff = 0;\n        var i = 0;\n        for (i = 0; i < snapIntervals.length; i++) {\n            cutoff += snapIntervals[i];\n        }\n        cutoff /= scale;\n        var quotient = Math.floor(Math.abs(value) / cutoff);\n        var bal = value % cutoff;\n        var prev = quotient * cutoff;\n        if (prev !== value) {\n            if (value >= 0) {\n                for (i = 0; i < snapIntervals.length; i++) {\n                    if (bal <= snapIntervals[i] / scale) {\n                        return prev + (bal < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev += snapIntervals[i] / scale;\n                        bal -= snapIntervals[i] / scale;\n                    }\n                }\n            }\n            else {\n                prev = prev * -1;\n                for (i = snapIntervals.length - 1; i >= 0; i--) {\n                    if (Math.abs(bal) <= snapIntervals[i] / scale) {\n                        return prev - (Math.abs(bal) < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev -= snapIntervals[i] / scale;\n                        bal += snapIntervals[i] / scale;\n                    }\n                }\n            }\n        }\n        return value;\n    };\n    /**\n     * Snap to Object\n     */\n    Snapping.prototype.snapObject = function (diagram, selectedObject, g, horizontalSnap, verticalSnap, delta, ended) {\n        var lengthX = null;\n        var lengthY;\n        var hTarget;\n        var vTarget;\n        var scroller = this.diagram.scroller;\n        var snapSettings = this.diagram.snapSettings;\n        var objectsAtLeft = [];\n        var objectsAtRight = [];\n        var objectsAtTop = [];\n        var objectsAtBottom = [];\n        var bounds = getBounds(selectedObject.wrapper);\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hIntersectRect = new Rect(hoffset / scale, (bounds.y - snapObjDistance - 5), viewPort.width / scale, (bounds.height + 2 * snapObjDistance + 10));\n        var vIntersectRect = new Rect((bounds.x - snapObjDistance - 5), voffset / scale, (bounds.width + 2 * snapObjDistance + 10), viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vIntersectRect, viewPort);\n        var i;\n        var target;\n        var targetBounds;\n        var nameTable = diagram.nameTable;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.height + targetBounds.y < delta.y + bounds.y) {\n                        objectsAtTop.push({\n                            obj: target, distance: Math.abs(bounds.y + delta.y - targetBounds.y - targetBounds.height)\n                        });\n                    }\n                    else if (targetBounds.y > bounds.y + delta.y + bounds.height) {\n                        objectsAtBottom.push({ obj: target, distance: Math.abs(bounds.y + delta.y + bounds.height - targetBounds.y) });\n                    }\n                    if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y - delta.y)) {\n                        if (Math.abs(targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2 + delta.x)) <=\n                            snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'centerX');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hIntersectRect, viewPort);\n        for (var j = 0; j < nodes.length; j++) {\n            target = nodes[j];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.x + targetBounds.width < bounds.x + delta.x) {\n                        objectsAtLeft[objectsAtLeft.length] = {\n                            obj: target, distance: Math.abs((bounds.x + delta.x) - targetBounds.x - targetBounds.width)\n                        };\n                    }\n                    if (targetBounds.x > bounds.x + delta.x + bounds.width) {\n                        objectsAtRight[objectsAtRight.length] = {\n                            obj: target, distance: Math.abs(bounds.x + delta.x + bounds.width - targetBounds.x)\n                        };\n                    }\n                    if (lengthY == null || lengthY > Math.abs(targetBounds.x - bounds.x - delta.x)) {\n                        if (Math.abs(targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2 + delta.y))\n                            <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'centerY');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'top');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - (bounds.y + bounds.height + delta.y)) <=\n                            snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - (bounds.y + bounds.height + delta.y)) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        this.createGuidelines(diagram, hTarget, vTarget, g, horizontalSnap, verticalSnap, ended);\n        if (!horizontalSnap.snapped) {\n            this.createHSpacingLines(diagram, g, selectedObject, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n        if (!verticalSnap.snapped) {\n            this.createVSpacingLines(diagram, g, selectedObject, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.snapConnectorEnd = function (point) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = this.diagram.scroller.currentZoom;\n        if (snapSettings.constraints & SnapConstraints.SnapToLines) {\n            point.x = this.round(point.x, snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n            point.y = this.round(point.y, snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n        }\n        return point;\n    };\n    Snapping.prototype.canBeTarget = function (diagram, node) {\n        node = this.diagram.nameTable[node.id];\n        return !(isSelected(this.diagram, node, false));\n    };\n    Snapping.prototype.snapSize = function (diagram, horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, selectedObject, ended) {\n        var lengthX;\n        var lengthY;\n        var snapSettings = this.diagram.snapSettings;\n        var scroller = this.diagram.scroller;\n        var hTarget;\n        var vTarget;\n        var bounds = getBounds(selectedObject.wrapper);\n        var nameTable = diagram.nameTable;\n        var sameWidth = [];\n        var sameHeight = [];\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hintersectedrect = new Rect(hoffset / scale, (bounds.y - 5) / scale, viewPort.width / scale, (bounds.height + 10) / scale);\n        var vintersectedrect = new Rect((bounds.x - 5) / scale, voffset / scale, (bounds.width + 10) / scale, viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodesInView = [];\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vintersectedrect, viewPort, nodesInView);\n        var i;\n        var target;\n        var targetBounds;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canConsider(nameTable, selectedObject, target) && !(this.diagram.nameTable[target.id] instanceof Connector)) {\n                targetBounds = target.bounds;\n                if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y)) {\n                    if (horizontalSnap.left) {\n                        if (Math.abs(bounds.x + deltaX - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                    else if (horizontalSnap.right) {\n                        if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hintersectedrect, viewPort);\n        for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n            var target_1 = nodes[i_1];\n            if (this.canConsider(nameTable, selectedObject, target_1) && !(this.diagram.nameTable[target_1.id] instanceof Connector)) {\n                var targetBounds_1 = target_1.bounds;\n                if (lengthY == null || lengthY > Math.abs(targetBounds_1.x - bounds.x)) {\n                    if (verticalSnap.top) {\n                        if (Math.abs(bounds.y + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'top');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                    else if (verticalSnap.bottom) {\n                        if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        for (i = 0; i < nodesInView.length; i++) {\n            target = nodesInView[i];\n            if (this.canConsider(nameTable, selectedObject, target)) {\n                var targetBounds_2 = target.bounds;\n                var delta = horizontalSnap.left ? -deltaX : deltaX;\n                var difference = Math.abs(bounds.width + delta - targetBounds_2.width);\n                var actualDiff = void 0;\n                if (difference <= snapObjDistance) {\n                    actualDiff = horizontalSnap.left ? -targetBounds_2.width + bounds.width : targetBounds_2.width - bounds.width;\n                    sameWidth[sameWidth.length] = { source: target, difference: difference, offset: actualDiff };\n                }\n                delta = verticalSnap.top ? -deltaY : deltaY;\n                var dify = Math.abs(bounds.height + delta - targetBounds_2.height);\n                if (dify <= snapObjDistance) {\n                    actualDiff = verticalSnap.top ? -targetBounds_2.height + bounds.height : targetBounds_2.height - bounds.height;\n                    sameHeight[sameHeight.length] = { source: target, difference: dify, offset: actualDiff };\n                }\n            }\n        }\n        var g;\n        if (!diagram.getTool) {\n            var g_1 = this.createGuidelines(diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended);\n        }\n        if (!horizontalSnap.snapped && sameWidth.length > 0 && (horizontalSnap.left || horizontalSnap.right)) {\n            this.addSameWidthLines(diagram, snapLine, sameWidth, horizontalSnap, ended, selectedObject);\n        }\n        if (!verticalSnap.snapped && sameHeight.length > 0 && (verticalSnap.top || verticalSnap.bottom)) {\n            this.addSameHeightLines(diagram, snapLine, sameHeight, verticalSnap, ended, selectedObject);\n        }\n    };\n    /**\n     * Snap to object on top\n     * @private\n     */\n    Snapping.prototype.snapTop = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsT) {\n        var dify = deltaY;\n        verticalSnap.top = true;\n        var y;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = this.diagram.scroller.currentZoom;\n        //let initialBoundsT: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialBoundsT.y - initialBoundsT.height * shape.pivot.y + deltaY - (shape.offsetY - shape.height * shape.pivot.y);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var top_1 = initialBoundsT.y - initialBoundsT.height * shape.pivot.y;\n                var actualTop = top_1 + deltaY;\n                var roundedTop = this.round(actualTop, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedTop - top_1;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * Snap to object on right\n     * @private\n     */\n    Snapping.prototype.snapRight = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBound) {\n        var difx = deltaX;\n        var x;\n        horizontalSnap.right = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = this.diagram.scroller.currentZoom;\n        //let initialBound: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBound.x + initialBound.width * (1 - shape.pivot.x) + deltaX - (shape.offsetX + shape.width * (1 - shape.pivot.x));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var right = initialBound.x + initialBound.width * (1 - shape.pivot.x);\n                var actualRight = right + deltaX;\n                var roundedRight = this.round(actualRight, this.diagram.snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedRight - right;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on left\n     * @private\n     */\n    Snapping.prototype.snapLeft = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsB) {\n        var difx = deltaX;\n        var x = 0;\n        horizontalSnap.left = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = this.diagram.scroller.currentZoom;\n        //let initialBoundsB: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBoundsB.x - initialBoundsB.width * shape.pivot.x + deltaX - (shape.offsetX - shape.width * shape.pivot.x);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var left = initialBoundsB.x - initialBoundsB.width * shape.pivot.x;\n                var actualLeft = left + deltaX;\n                var roundedLeft = this.round(actualLeft, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedLeft - left;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on bottom\n     * @private\n     */\n    Snapping.prototype.snapBottom = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialRect) {\n        var dify = deltaY;\n        verticalSnap.bottom = true;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = this.diagram.scroller.currentZoom;\n        var y = 0;\n        //let initialRect: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialRect.y + initialRect.height * (1 - shape.pivot.y) + deltaY - (shape.offsetY + shape.height * (1 - shape.pivot.y));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        var bounds;\n        bounds = ((shape instanceof TextElement) || (shape instanceof DiagramHtmlElement)) ? getBounds(shape) :\n            getBounds(shape.wrapper);\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var bottom = initialRect.y + initialRect.height * (1 - shape.pivot.y);\n                var actualBottom = bottom + deltaY;\n                var roundedBottom = this.round(actualBottom, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedBottom - bottom;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * To create the same width and same size lines\n     */\n    Snapping.prototype.createGuidelines = function (diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended) {\n        if (hTarget) {\n            horizontalSnap.offset = hTarget.offsetX;\n            horizontalSnap.snapped = true;\n            if (!ended) {\n                if (hTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        if (vTarget) {\n            verticalSnap.offset = vTarget.offsetY;\n            verticalSnap.snapped = true;\n            if (!ended) {\n                if (vTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        return snapLine;\n    };\n    /**\n     * To create the alignment lines\n     */\n    Snapping.prototype.renderAlignmentLines = function (start, end, svg, transform) {\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        var line1 = {\n            stroke: '#07EDE1', strokeWidth: 1, startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, fill: '#07EDE1', dashArray: '', width: 1,\n            x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        var i = 0;\n        this.line.push(line1);\n        for (i = 0; i < this.line.length; i++) {\n            this.diagram.diagramRenderer.drawLine(svg, this.line.pop());\n        }\n    };\n    /**\n     * To create Horizontal spacing lines\n     */\n    Snapping.prototype.createHSpacingLines = function (diagram, g, shape, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var top = 0;\n        this.sortByDistance(objectsAtLeft, 'distance', true);\n        this.sortByDistance(objectsAtRight, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearestleft;\n        var nearestright;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtLeft.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtLeft[0];\n            nearestleft = ((objectsAtLeft[0].obj).bounds);\n            top = nearestleft.y;\n            if (objectsAtLeft.length > 1) {\n                targetBounds = ((objectsAtLeft[1].obj).bounds);\n                equaldistance = nearestleft.x - targetBounds.x - targetBounds.width;\n                if (Math.abs(equaldistance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    top = this.findEquallySpacedNodesAtLeft(objectsAtLeft, equaldistance, top, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtLeft[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtLeft[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        top = bounds.y < top || !top ? bounds.y : top;\n        if (objectsAtRight.length > 0) {\n            var dist = void 0;\n            nearestright = ((objectsAtRight[0].obj).bounds);\n            top = nearestright.y < top ? nearestright.y : top;\n            if (objectsAtRight.length > 1) {\n                targetBounds = ((objectsAtRight[1].obj).bounds);\n                dist = targetBounds.x - nearestright.x - nearestright.width;\n            }\n            if (objectsAtLeft.length > 0) {\n                if (Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) / 2;\n                    (objectsAtRight[0].distance < objectsAtLeft[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                }\n                else if (objectsAtLeft.length === 1) {\n                    nearestleft = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtRight[0];\n            }\n            if (objectsAtRight.length > 1 && nearestright.x + nearestright.width < targetBounds.x) {\n                top = this.findEquallySpacedNodesAtRight(objectsAtRight, dist, top, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addHSpacingLines(diagram, g, equallySpaced, ended, top);\n            var deltaHorizontal = 0;\n            if (ended) {\n                deltaHorizontal = delta.x;\n            }\n            if (nearestleft) {\n                horizontalSnap.offset = equaldistance - Math.abs(bounds.x + deltaHorizontal - nearestleft.x - nearestleft.width)\n                    + deltaHorizontal;\n            }\n            else if (nearestright) {\n                horizontalSnap.offset = Math.abs(bounds.x + bounds.width + deltaHorizontal - nearestright.x)\n                    - equaldistance + deltaHorizontal;\n            }\n            horizontalSnap.snapped = true;\n        }\n    };\n    /**\n     * To create vertical spacing lines\n     */\n    Snapping.prototype.createVSpacingLines = function (diagram, g, shape, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var right = 0;\n        this.sortByDistance(objectsAtTop, 'distance', true);\n        this.sortByDistance(objectsAtBottom, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearesttop;\n        var nearestbottom;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtTop.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtTop[0];\n            nearesttop = ((objectsAtTop[0].obj).bounds);\n            right = nearesttop.x + nearesttop.width;\n            if (objectsAtTop.length > 1) {\n                targetBounds = ((objectsAtTop[1].obj).bounds);\n                equaldistance = nearesttop.y - targetBounds.y - targetBounds.height;\n                if (Math.abs(equaldistance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    right = this.findEquallySpacedNodesAtTop(objectsAtTop, equaldistance, right, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtTop[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtTop[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        right = bounds.x + bounds.width > right || !right ? bounds.x + bounds.width : right;\n        var dist;\n        if (objectsAtBottom.length > 0) {\n            nearestbottom = ((objectsAtBottom[0].obj).bounds);\n            right = nearestbottom.x + nearestbottom.width > right ? nearestbottom.x + nearestbottom.width : right;\n            if (objectsAtBottom.length > 1) {\n                targetBounds = ((objectsAtBottom[1].obj).bounds);\n                dist = targetBounds.y - nearestbottom.y - nearestbottom.height;\n            }\n            if (objectsAtTop.length > 0) {\n                if (Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) / 2;\n                    (objectsAtBottom[0].distance < objectsAtTop[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                }\n                else if (objectsAtTop.length === 1) {\n                    nearesttop = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n            }\n            if (objectsAtBottom.length > 1 && targetBounds.y > nearestbottom.y + nearestbottom.height) {\n                right = this.findEquallySpacedNodesAtBottom(objectsAtBottom, dist, right, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addVSpacingLines(diagram, g, equallySpaced, ended, right);\n            var deltaVertical = 0;\n            if (ended) {\n                deltaVertical = delta.y;\n            }\n            if (nearesttop) {\n                verticalSnap.offset = equaldistance - Math.abs(bounds.y + deltaVertical - nearesttop.y - nearesttop.height) + deltaVertical;\n            }\n            else if (nearestbottom) {\n                verticalSnap.offset = Math.abs(bounds.y + bounds.height + deltaVertical - nearestbottom.y) - equaldistance + deltaVertical;\n            }\n            verticalSnap.snapped = true;\n        }\n    };\n    /**\n     * Add the Horizontal spacing lines\n     */\n    Snapping.prototype.addHSpacingLines = function (diagram, g, equallySpaced, ended, top) {\n        var i;\n        var start;\n        var end;\n        if (!ended) {\n            for (i = 0; i < equallySpaced.length - 1; i++) {\n                var crnt = equallySpaced[i].obj instanceof Selector ?\n                    getBounds((equallySpaced[i].obj).wrapper) : ((equallySpaced[i].obj).bounds);\n                var next = equallySpaced[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpaced[i + 1].obj).wrapper) : ((equallySpaced[i + 1].obj).bounds);\n                start = { x: crnt.x + crnt.width, y: top - 15 };\n                end = { x: next.x, y: top - 15 };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * Add the vertical spacing lines\n     */\n    Snapping.prototype.addVSpacingLines = function (diagram, g, equallySpacedObjects, ended, right) {\n        var start;\n        var end;\n        if (!ended) {\n            for (var i = 0; i < equallySpacedObjects.length - 1; i++) {\n                var crnt = equallySpacedObjects[i].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i].obj).wrapper) : ((equallySpacedObjects[i].obj).bounds);\n                var next = equallySpacedObjects[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i + 1].obj).wrapper) :\n                    ((equallySpacedObjects[i + 1].obj).bounds);\n                start = { x: right + 15, y: crnt.y + crnt.height };\n                end = { x: right + 15, y: next.y };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * To add same width lines\n     */\n    Snapping.prototype.addSameWidthLines = function (diagram, snapLine, sameWidths, horizontalSnap, ended, shape) {\n        this.sortByDistance(sameWidths, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameWidths[0];\n        var startPt;\n        var endPt;\n        var targetBounds = (target.source).bounds;\n        var sameSizes = [];\n        sameSizes.push(sameWidths[0]);\n        var i;\n        var crntbounds;\n        for (i = 1; i < sameWidths.length; i++) {\n            crntbounds = (sameWidths[i].source).bounds;\n            if (crntbounds.width === targetBounds.width) {\n                sameSizes.push(sameWidths[i]);\n            }\n        }\n        if (!ended) {\n            startPt = { x: bounds.x + target.offset, y: bounds.y - 15 };\n            endPt = { x: bounds.x + bounds.width + target.offset, y: bounds.y - 15 };\n            this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                startPt = { x: bounds.x, y: bounds.y - 15 };\n                endPt = { x: bounds.x + bounds.width, y: bounds.y - 15 };\n                this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        horizontalSnap.offset = target.offset;\n        horizontalSnap.snapped = true;\n    };\n    /**\n     * To add same height lines\n     */\n    Snapping.prototype.addSameHeightLines = function (diagram, snapLine, sameHeights, verticalSnap, ended, shape) {\n        this.sortByDistance(sameHeights, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameHeights[0];\n        var targetBounds = (target.source).bounds;\n        var start;\n        var end;\n        var sameSizes = [];\n        sameSizes.push(sameHeights[0]);\n        var i;\n        var crntbounds;\n        for (i = 0; i < sameHeights.length; i++) {\n            crntbounds = (sameHeights[i].source).bounds;\n            if (crntbounds.height === targetBounds.height) {\n                sameSizes.push(sameHeights[i]);\n            }\n        }\n        if (!ended) {\n            start = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset };\n            end = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset + bounds.height };\n            this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                start = { x: bounds.x + bounds.width + 15, y: bounds.y };\n                end = { x: bounds.x + bounds.width + 15, y: bounds.y + bounds.height };\n                this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        verticalSnap.offset = target.offset;\n        verticalSnap.snapped = true;\n    };\n    /**\n     * Render spacing lines\n     */\n    Snapping.prototype.renderSpacingLines = function (start, end, snapLine, svg, transform) {\n        var d;\n        var d1;\n        var line1;\n        var element = new PathElement();\n        var options = {};\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        if (start.x === end.x) {\n            d = 'M' + (start.x - 5) + ' ' + (start.y + 5) + 'L' + start.x + ' ' + start.y +\n                'L' + (start.x + 5) + ' ' + (start.y + 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y + ' L' +\n                (end.x + 5) + ' ' + (end.y - 5) + 'z';\n            line1 = {\n                startPoint: { x: start.x - 8, y: start.y - 1 },\n                endPoint: { x: start.x + 8, y: start.y - 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId()\n            };\n            element.data = d;\n            options.data = element.data;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                startPoint: { x: end.x - 8, y: end.y + 1 },\n                endPoint: { x: end.x + 8, y: end.y + 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: this.getAdornerLayerSvg().id + 'spacing'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        else {\n            d = 'M' + (start.x + 5) + ' ' + (start.y + 5) + ' L' + start.x + ' ' + start.y +\n                ' L' + (start.x + 5) + ' ' + (start.y - 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y +\n                ' L' + (end.x - 5) + ' ' + (end.y + 5) + 'z';\n            element.data = d;\n            options.data = d;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            line1 = {\n                visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: start.x - 1, y: start.y - 8 },\n                endPoint: { x: start.x - 1, y: start.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: end.x + 1, y: end.y - 8 },\n                endPoint: { x: end.x + 1, y: end.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        line1 = {\n            startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, stroke: '#07EDE1', strokeWidth: 1, fill: '#07EDE1',\n            dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        this.line.push(line1);\n        this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n    };\n    /**\n     * To Create Snap object with position, initial bounds, and final bounds\n     * @private\n     */\n    Snapping.prototype.createSnapObject = function (targetBounds, bounds, snap) {\n        var snapObject;\n        switch (snap) {\n            case 'left':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: Math.min(targetBounds.y, bounds.y) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'right':\n                snapObject = {\n                    type: 'sideAlign',\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x - bounds.width,\n                    offsetY: 0,\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                };\n                break;\n            case 'top':\n                snapObject = {\n                    offsetY: targetBounds.y - bounds.y, offsetX: 0, type: 'sideAlign',\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                };\n                break;\n            case 'bottom':\n                snapObject = {\n                    type: 'sideAlign', offsetY: targetBounds.y + targetBounds.height - bounds.y - bounds.height, offsetX: 0,\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                };\n                break;\n            case 'topBottom':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    offsetY: targetBounds.y + targetBounds.height - bounds.y, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'bottomTop':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                    offsetY: targetBounds.y - bounds.y - bounds.height, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'leftRight':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'rightLeft':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x - bounds.width, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'centerX':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width / 2), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width / 2),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2), offsetY: 0, type: 'centerAlign'\n                };\n                break;\n            case 'centerY':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height / 2 },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height / 2\n                    },\n                    offsetY: targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2), offsetX: 0, type: 'centerAlign'\n                };\n                break;\n        }\n        return snapObject;\n    };\n    /**\n     * Calculate the snap angle\n     * @private\n     */\n    Snapping.prototype.snapAngle = function (diagram, angle) {\n        var snapSettings = this.diagram.snapSettings;\n        var snapAngle = snapSettings.snapAngle;\n        var width = angle % (snapAngle || 0);\n        if (width >= (snapAngle / 2)) {\n            return angle + snapAngle - width;\n        }\n        else {\n            return angle - width;\n        }\n    };\n    /**\n     * Check whether the node to be snapped or not.\n     */\n    Snapping.prototype.canConsider = function (nameTable, selectedObject, target) {\n        var consider = false;\n        if (this.diagram.selectedItems.nodes.length && this.diagram.selectedItems.nodes[0].id === target.id) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Find the total number of nodes in diagram using SpatialSearch\n     */\n    Snapping.prototype.findNodes = function (spatialSearch, node, child, viewPort, nodesInView) {\n        var nodes = [];\n        var nd;\n        var bounds;\n        var quads = spatialSearch.findQuads(nodesInView ? viewPort : child);\n        for (var i = 0; i < quads.length; i++) {\n            var quad = quads[i];\n            if (quad.objects.length > 0) {\n                for (var j = 0; j < quad.objects.length; j++) {\n                    nd = quad.objects[j];\n                    if (!(this.diagram.nameTable[nd.id] instanceof Connector) && nd.visible\n                        && !(this.diagram.nameTable[nd.id].shape.type === 'SwimLane') && !(this.diagram.nameTable[nd.id].isLane) &&\n                        !(this.diagram.nameTable[nd.id].isPhase) && !(this.diagram.nameTable[nd.id].isHeader)) {\n                        bounds = getBounds(nd);\n                        if (nodes.indexOf(nd) === -1 && this.intersectsRect(child, bounds)) {\n                            nodes.push(nd);\n                        }\n                        if (nodesInView && nodesInView.indexOf(nd) && this.intersectsRect(viewPort, bounds)) {\n                            nodesInView.push(nd);\n                        }\n                    }\n                }\n            }\n        }\n        return nodes;\n    };\n    Snapping.prototype.intersectsRect = function (child, bounds) {\n        return ((((bounds.x < (child.x + child.width)) && (child.x < (bounds.x + bounds.width)))\n            && (bounds.y < (child.y + child.height))) && (child.y < (bounds.y + bounds.height)));\n    };\n    Snapping.prototype.getAdornerLayerSvg = function () {\n        return this.diagram.diagramRenderer.adornerSvgLayer;\n    };\n    /**\n     * To remove grid lines on mouse move and mouse up\n     * @private\n     */\n    Snapping.prototype.removeGuidelines = function (diagram) {\n        var selectionRect = this.getAdornerLayerSvg().getElementById('_SnappingLines');\n        var line = this.getAdornerLayerSvg().getElementById('pivotLine');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        if (line) {\n            line.parentNode.removeChild(line);\n        }\n    };\n    /**\n     * Sort the objects by its distance\n     */\n    Snapping.prototype.sortByDistance = function (obj, value, ascending) {\n        var i;\n        var j;\n        var temp;\n        if (ascending) {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] > obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n        else {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] < obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To find nodes that are equally placed at left of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtLeft = function (objectsAtLeft, equalDistance, top, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        var i;\n        for (i = 1; i < objectsAtLeft.length; i++) {\n            prevBounds = ((objectsAtLeft[i - 1].obj).bounds);\n            targetBounds = ((objectsAtLeft[i].obj).bounds);\n            dist = prevBounds.x - targetBounds.x - targetBounds.width;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtLeft[i];\n                if (targetBounds.y < top) {\n                    top = targetBounds.y;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return top;\n    };\n    /**\n     * To find nodes that are equally placed at right of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtRight = function (objectsAtRight, equalDistance, top, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtRight[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtRight.length - 1; i++) {\n                target = objectsAtRight[i].obj;\n                targetBounds = ((objectsAtRight[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.x - prevBounds.x - prevBounds.width;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtRight[i + 1];\n                    if (prevBounds.y < top) {\n                        top = prevBounds.y;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return top;\n    };\n    Snapping.prototype.findEquallySpacedNodesAtTop = function (objectsAtTop, equalDistance, right, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        for (var i = 1; i < objectsAtTop.length; i++) {\n            prevBounds = ((objectsAtTop[i - 1].obj).bounds);\n            targetBounds = ((objectsAtTop[i].obj).bounds);\n            dist = prevBounds.y - targetBounds.y - targetBounds.height;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtTop[i];\n                if (targetBounds.x + targetBounds.width > right) {\n                    right = targetBounds.x + targetBounds.width;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return right;\n    };\n    /**\n     * To find nodes that are equally placed at bottom of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtBottom = function (objectsAtBottom, equalDistance, right, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtBottom[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtBottom.length - 1; i++) {\n                target = objectsAtBottom[i].obj;\n                targetBounds = ((objectsAtBottom[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.y - prevBounds.y - prevBounds.height;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[i + 1];\n                    if (prevBounds.x + prevBounds.width > right) {\n                        right = prevBounds.x + prevBounds.width;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return right;\n    };\n    /**\n     * To get Adoner layer to draw snapLine\n     * @private\n     */\n    Snapping.prototype.getLayer = function () {\n        var snapLine;\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n        }\n        return snapLine;\n    };\n    /**\n     * Constructor for the snapping module\n     * @private\n     */\n    // constructor() {\n    //     //constructs the snapping module\n    // }\n    /**\n     * To destroy the snapping module\n     * @return {void}\n     * @private\n     */\n    Snapping.prototype.destroy = function () {\n        /**\n         * Destroys the snapping module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    Snapping.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Snapping';\n    };\n    return Snapping;\n}());\nexport { Snapping };\n","import { Node } from './node';\nimport { DiagramAction } from '../enum/enum';\nimport { removeItem, getObjectType } from '../utility/diagram-util';\nimport { cloneObject, getFunction } from '../utility/base-util';\nimport { findAnnotation, findPort } from '../utility/diagram-util';\nimport { Size, addChildToContainer } from '../index';\nimport { swimLaneMeasureAndArrange, laneInterChanged, findLaneIndex, updateSwimLaneObject, pasteSwimLane } from '../utility/swim-lane-util';\nimport { DiagramEvent } from '../enum/enum';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * Undo redo function used for revert and restore the changes\n */\nvar UndoRedo = /** @class */ (function () {\n    /**\n     * Constructor for the undo redo module\n     * @private\n     */\n    function UndoRedo() {\n        this.groupUndo = false;\n        this.childTable = [];\n        this.historyCount = 0;\n        this.hasGroup = false;\n        this.groupCount = 0;\n        //constructs the undo redo module\n    }\n    /** @private */\n    UndoRedo.prototype.initHistory = function (diagram) {\n        diagram.historyManager = {\n            canRedo: false, canUndo: false, currentEntry: null,\n            push: diagram.addHistoryEntry.bind(diagram), undo: Function, redo: Function,\n            startGroupAction: diagram.startGroupAction.bind(diagram), endGroupAction: diagram.endGroupAction.bind(diagram),\n            canLog: null, undoStack: [], redoStack: [], stackLimit: diagram.historyManager ? diagram.historyManager.stackLimit : undefined\n        };\n    };\n    /** @private */\n    UndoRedo.prototype.addHistoryEntry = function (entry, diagram) {\n        var entryObject = null;\n        var nextEntry = null;\n        if (diagram.historyManager.canLog) {\n            var hEntry = diagram.historyManager.canLog(entry);\n            if (hEntry.cancel === true) {\n                return;\n            }\n        }\n        if (diagram.historyManager && diagram.historyManager.canUndo && diagram.historyManager.currentEntry) {\n            entryObject = diagram.historyManager.currentEntry;\n            if (entryObject.next) {\n                if (entryObject.previous) {\n                    nextEntry = entryObject.next;\n                    nextEntry.previous = null;\n                    entryObject.next = entry;\n                    entry.previous = entryObject;\n                }\n            }\n            else {\n                entryObject.next = entry;\n                entry.previous = entryObject;\n            }\n        }\n        diagram.historyManager.currentEntry = entry;\n        if (diagram.historyManager.stackLimit) {\n            if (entry.type === 'StartGroup' || entry.type === 'EndGroup') {\n                var value = entry.type === 'EndGroup' ? true : false;\n                this.setEntryLimit(value);\n            }\n            if (!this.hasGroup && this.groupCount === 0) {\n                if (this.historyCount < diagram.historyManager.stackLimit) {\n                    this.historyCount++;\n                }\n                else {\n                    this.applyLimit(diagram.historyManager.currentEntry, diagram.historyManager.stackLimit, diagram);\n                }\n            }\n        }\n        this.getHistoryList(diagram);\n        diagram.historyManager.canUndo = true;\n        diagram.historyManager.canRedo = false;\n    };\n    /** @private */\n    UndoRedo.prototype.applyLimit = function (list, stackLimit, diagram, limitHistory) {\n        if (list && list.previous) {\n            if (list.type === 'StartGroup' || list.type === 'EndGroup') {\n                var value = list.type === 'StartGroup' ? true : false;\n                this.setEntryLimit(value);\n            }\n            if (!this.hasGroup && this.groupCount === 0) {\n                stackLimit--;\n            }\n            if (stackLimit === 0) {\n                if (limitHistory) {\n                    this.limitHistoryStack(list.previous, diagram);\n                }\n                if (diagram.historyManager.stackLimit < this.historyCount) {\n                    this.historyCount = diagram.historyManager.stackLimit;\n                }\n                delete list.previous;\n            }\n            else if (list.previous) {\n                this.applyLimit(list.previous, stackLimit, diagram, limitHistory);\n            }\n        }\n        this.groupCount = 0;\n    };\n    /** @private */\n    UndoRedo.prototype.clearHistory = function (diagram) {\n        var hList = diagram.historyManager;\n        hList.currentEntry = undefined;\n        hList.canUndo = false;\n        hList.canRedo = false;\n        this.historyCount = 0;\n        this.groupCount = 0;\n        diagram.historyManager.undoStack = [];\n        diagram.historyManager.redoStack = [];\n    };\n    UndoRedo.prototype.setEntryLimit = function (value) {\n        value ? this.groupCount-- : this.groupCount++;\n        value ? this.hasGroup = !value : this.hasGroup = value;\n    };\n    UndoRedo.prototype.limitHistoryStack = function (list, diagram) {\n        if (list.type !== 'StartGroup' && list.type !== 'EndGroup') {\n            this.removeFromStack(diagram.historyManager.undoStack, list);\n            this.removeFromStack(diagram.historyManager.redoStack, list);\n        }\n        if (list.previous) {\n            this.limitHistoryStack(list.previous, diagram);\n        }\n    };\n    UndoRedo.prototype.removeFromStack = function (entyList, list) {\n        if (entyList.length) {\n            for (var i = 0; i <= entyList.length; i++) {\n                if (entyList[i].undoObject === list.undoObject && entyList[i].redoObject === list.redoObject) {\n                    entyList.splice(i, 1);\n                    break;\n                }\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.undo = function (diagram) {\n        var entry = this.getUndoEntry(diagram);\n        var endGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'EndGroup') {\n                    endGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.undoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.undoGroupAction(entry, diagram, endGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                if (!isBlazor()) {\n                    diagram.historyManager.undo(entry);\n                }\n                var arg = {\n                    entryType: 'undo', oldValue: entry.undoObject, newValue: entry.redoObject\n                };\n                if (isBlazor()) {\n                    arg = {\n                        entryType: 'undo', oldValue: this.getHistoryChangeEvent(entry.undoObject, entry.blazorHistoryEntryType),\n                        newValue: this.getHistoryChangeEvent(entry.redoObject, entry.blazorHistoryEntryType)\n                    };\n                }\n                diagram.triggerEvent(DiagramEvent.historyStateChange, arg);\n            }\n        }\n    };\n    UndoRedo.prototype.getHistoryChangeEvent = function (object, prop) {\n        var value = {};\n        switch (prop) {\n            case 'Node':\n                value.node = object;\n                break;\n            case 'Connector':\n                value.connector = object;\n                break;\n            case 'Selector':\n                value.selector = object;\n                break;\n            case 'Diagram':\n                value.diagram = object;\n                break;\n            case 'ShapeAnnotation':\n                value.shapeAnnotation = object;\n                break;\n            case 'PathAnnotation':\n                value.pathAnnotation = object;\n                break;\n            case 'PortObject':\n                value.pointPortModel = object;\n                break;\n            case 'Object':\n                value.object = object;\n        }\n        return value;\n    };\n    UndoRedo.prototype.getHistoryList = function (diagram) {\n        var undoStack = [];\n        var redoStack = [];\n        var currEntry = diagram.historyManager.currentEntry;\n        var undoObj;\n        var redoObj;\n        currEntry = diagram.historyManager.currentEntry;\n        if (diagram.historyManager.canUndo || diagram.historyManager.undoStack.length === 0) {\n            this.getHistroyObject(undoStack, currEntry);\n        }\n        else {\n            this.getHistroyObject(redoStack, currEntry);\n        }\n        while (currEntry && currEntry.previous) {\n            undoObj = currEntry.previous;\n            this.getHistroyObject(undoStack, undoObj);\n            currEntry = currEntry.previous;\n        }\n        currEntry = diagram.historyManager.currentEntry;\n        while (currEntry && currEntry.next) {\n            redoObj = currEntry.next;\n            this.getHistroyObject(redoStack, redoObj);\n            currEntry = currEntry.next;\n        }\n        diagram.historyManager.undoStack = undoStack;\n        diagram.historyManager.redoStack = redoStack;\n    };\n    UndoRedo.prototype.getHistroyObject = function (list, obj) {\n        if (obj && obj.type !== 'StartGroup' && obj.type !== 'EndGroup') {\n            list.push({\n                redoObject: obj.redoObject ? obj.redoObject : null,\n                undoObject: obj.undoObject ? obj.undoObject : null,\n                type: obj.type ? obj.type : null,\n                category: obj.category ? obj.category : null\n            });\n        }\n    };\n    UndoRedo.prototype.undoGroupAction = function (entry, diagram, endGroupActionCount) {\n        while (endGroupActionCount !== 0) {\n            this.undoEntry(entry, diagram);\n            entry = this.getUndoEntry(diagram);\n            if (entry.type === 'StartGroup') {\n                endGroupActionCount--;\n            }\n            else if (entry.type === 'EndGroup') {\n                endGroupActionCount++;\n            }\n        }\n        endGroupActionCount = 0;\n    };\n    UndoRedo.prototype.undoEntry = function (entry, diagram) {\n        var obj;\n        var nodeObject;\n        if (entry.type !== 'PropertyChanged' && entry.type !== 'CollectionChanged' && entry.type !== 'LabelCollectionChanged') {\n            obj = (entry.undoObject);\n            nodeObject = (entry.undoObject);\n        }\n        if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n            if (diagram.historyManager.undoStack.length > 0) {\n                var addObject = diagram.historyManager.undoStack.splice(0, 1);\n                diagram.historyManager.redoStack.splice(0, 0, addObject[0]);\n                nodeObject = (entry.undoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        switch (entry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(obj, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(obj, diagram, entry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(obj, diagram, entry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(obj, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(entry, diagram, false);\n                break;\n            case 'CollectionChanged':\n                entry.isUndo = true;\n                this.recordCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'LabelCollectionChanged':\n                entry.isUndo = true;\n                this.recordLabelCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'PortCollectionChanged':\n                entry.isUndo = true;\n                this.recordPortCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'Group':\n                this.unGroup(entry, diagram);\n                break;\n            case 'UnGroup':\n                this.group(entry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(obj, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(entry, diagram, false);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(entry, diagram, false);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(entry, diagram, false);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(entry, diagram, false);\n                break;\n            case 'RowHeightChanged':\n                this.recordGridSizeChanged(entry, diagram, false, true);\n                break;\n            case 'ColumnWidthChanged':\n                this.recordGridSizeChanged(entry, diagram, false, false);\n                break;\n            case 'LanePositionChanged':\n                this.recordLanePositionChanged(entry, diagram, false);\n                break;\n            case 'LaneCollectionChanged':\n            case 'PhaseCollectionChanged':\n                entry.isUndo = true;\n                this.recordLaneOrPhaseCollectionChanged(entry, diagram, false);\n                entry.isUndo = false;\n                break;\n            case 'SendToBack':\n            case 'SendForward':\n            case 'SendBackward':\n            case 'BringToFront':\n                this.recordOrderCommandChanged(entry, diagram, false);\n                break;\n        }\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.protectPropertyChange(false);\n        diagram.historyChangeTrigger(entry, 'Undo');\n        if (nodeObject) {\n            var object = this.checkNodeObject(nodeObject, diagram);\n            if (object) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(object, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.checkNodeObject = function (value, diagram) {\n        var object;\n        if (!value.id) {\n            if ((value.nodes && value.nodes.length > 0) ||\n                (value.connectors && value.connectors.length > 0)) {\n                var undoNode = value.nodes.length > 0 ?\n                    value.nodes : value.connectors;\n                for (var _i = 0, undoNode_1 = undoNode; _i < undoNode_1.length; _i++) {\n                    object = undoNode_1[_i];\n                    object = diagram.nameTable[object.id];\n                }\n            }\n            else {\n                var knownNode = value.nodes ?\n                    value.nodes : value.connectors;\n                if (knownNode) {\n                    for (var _a = 0, _b = Object.keys(knownNode); _a < _b.length; _a++) {\n                        var key = _b[_a];\n                        var index = Number(key);\n                        object = value.nodes ? diagram.nodes[index] : diagram.connectors[index];\n                    }\n                }\n            }\n        }\n        else {\n            object = diagram.nameTable[value.id];\n        }\n        return object;\n    };\n    UndoRedo.prototype.group = function (historyEntry, diagram) {\n        diagram.add(historyEntry.undoObject);\n    };\n    UndoRedo.prototype.unGroup = function (entry, diagram) {\n        var i = 0;\n        entry.redoObject = cloneObject(entry.undoObject);\n        var node = entry.undoObject;\n        diagram.commandHandler.unGroup(node);\n    };\n    UndoRedo.prototype.ignoreProperty = function (key) {\n        if (key === 'zIndex' || key === 'wrapper') {\n            return true;\n        }\n        return false;\n    };\n    UndoRedo.prototype.getProperty = function (collection, property) {\n        for (var _i = 0, _a = Object.keys(property); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (!this.ignoreProperty(key)) {\n                if (property[key] instanceof Object) {\n                    this.getProperty(collection[key], property[key]);\n                }\n                else {\n                    collection[key] = property[key];\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.recordLaneOrPhaseCollectionChanged = function (entry, diagram, isRedo) {\n        var node = entry.redoObject;\n        var obj = entry.undoObject;\n        var changeType;\n        if (entry.isUndo) {\n            if (entry.changeType === 'Insert') {\n                changeType = 'Remove';\n            }\n            else {\n                changeType = 'Insert';\n            }\n        }\n        else {\n            changeType = entry.changeType;\n        }\n        if (changeType === 'Remove') {\n            diagram.remove(node);\n        }\n        else {\n            if (node.isPhase) {\n                var swimlane = diagram.nameTable[node.parentId];\n                diagram.addPhases(swimlane, [obj]);\n            }\n            else {\n                var swimlane = diagram.nameTable[node.parentId];\n                var laneIndex = findLaneIndex(swimlane, node);\n                diagram.addLanes(swimlane, [obj], laneIndex);\n            }\n        }\n        diagram.clearSelection();\n    };\n    UndoRedo.prototype.recordAnnotationChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (diagram.canEnableBlazorObject) {\n            var node = cloneObject(diagram.nameTable[entryObject.id]);\n            diagram.insertValue(node, node instanceof Node ? true : false);\n        }\n        var oldElement = findAnnotation(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getAnnotationChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findAnnotation(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        currentElement.margin = oldElement.margin;\n        currentElement.width = oldElement.width;\n        currentElement.height = oldElement.height;\n        currentElement.rotateAngle = oldElement.rotateAngle;\n        currentElement.margin = oldElement.margin;\n        if (currentObject instanceof Node) {\n            diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        }\n        else {\n            diagram.connectorPropertyChange(currentObject, {}, undoChanges);\n        }\n    };\n    UndoRedo.prototype.recordChildCollectionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var parentNode = diagram.nameTable[entryObject.parentId];\n        var actualObject = diagram.nameTable[entryObject.id];\n        if (parentNode) {\n            addChildToContainer(diagram, parentNode, actualObject, !isRedo, entry.historyAction === 'AddNodeToLane');\n        }\n        else {\n            if (actualObject.parentId) {\n                parentNode = diagram.nameTable[actualObject.parentId];\n                parentNode.children.splice(parentNode.children.indexOf(actualObject.id), 1);\n                parentNode.wrapper.children.splice(parentNode.wrapper.children.indexOf(actualObject.wrapper), 1);\n            }\n            if (entryObject.parentId !== '') {\n                parentNode = diagram.nameTable[entryObject.parentId];\n                parentNode.children.push(entryObject.id);\n                parentNode.wrapper.children.push(actualObject.wrapper);\n            }\n            actualObject.parentId = entryObject.parentId;\n            diagram.removeElements(actualObject);\n            diagram.updateDiagramObject(actualObject);\n        }\n    };\n    UndoRedo.prototype.recordStackPositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_1 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_1) {\n                if (entryObject.target) {\n                    parent_1.wrapper.children.splice(entryObject.targetIndex, 1);\n                    parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, entryObject.source.wrapper);\n                }\n                else {\n                    if (entryObject.sourceIndex !== undefined) {\n                        if (!diagram.nameTable[entryObject.source.id]) {\n                            diagram.add(entryObject.source);\n                        }\n                        parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, diagram.nameTable[entryObject.source.id].wrapper);\n                        diagram.nameTable[entryObject.source.id].parentId = parent_1.id;\n                    }\n                    else {\n                        parent_1.wrapper.children.splice(parent_1.wrapper.children.indexOf(diagram.nameTable[entryObject.source.id].wrapper), 1);\n                        diagram.nameTable[entryObject.source.id].parentId = '';\n                    }\n                }\n                if (isRedo && parent_1.shape.type === 'UmlClassifier') {\n                    diagram.remove(entryObject.source);\n                }\n                parent_1.wrapper.measure(new Size());\n                parent_1.wrapper.arrange(parent_1.wrapper.desiredSize);\n                diagram.updateDiagramObject(parent_1);\n                diagram.updateSelector();\n            }\n        }\n    };\n    UndoRedo.prototype.recordGridSizeChanged = function (entry, diagram, isRedo, isRow) {\n        var obj = (isRedo) ? entry.redoObject : entry.undoObject;\n        var node = (!isRedo) ? entry.redoObject : entry.undoObject;\n        if (obj.parentId) {\n            var swimlane = diagram.nameTable[obj.parentId];\n            var actualObject = diagram.nameTable[obj.id];\n            var x = swimlane.wrapper.bounds.x;\n            var y = swimlane.wrapper.bounds.y;\n            if (swimlane.shape.type === 'SwimLane') {\n                var grid = swimlane.wrapper.children[0];\n                var padding = swimlane.shape.padding;\n                updateSwimLaneObject(diagram, node, swimlane, obj);\n                if (isRow) {\n                    grid.updateRowHeight(obj.rowIndex, obj.wrapper.actualSize.height, true, padding);\n                    swimlane.height = swimlane.wrapper.height = grid.height;\n                }\n                else {\n                    grid.updateColumnWidth(obj.columnIndex, obj.wrapper.actualSize.width, true, padding);\n                    swimlane.width = swimlane.wrapper.width = grid.width;\n                    if (obj.isPhase) {\n                        actualObject.maxWidth = actualObject.wrapper.maxWidth = obj.wrapper.actualSize.width;\n                    }\n                }\n                swimLaneMeasureAndArrange(swimlane);\n                var tx = x - swimlane.wrapper.bounds.x;\n                var ty = y - swimlane.wrapper.bounds.y;\n                diagram.drag(swimlane, tx, ty);\n                diagram.clearSelection();\n                diagram.updateDiagramObject(swimlane);\n            }\n        }\n    };\n    UndoRedo.prototype.recordLanePositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_2 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_2 && parent_2.shape.type === 'SwimLane') {\n                laneInterChanged(diagram, entryObject.target, entryObject.source);\n                diagram.clearSelection();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject.nodes[0] :\n            entry.undoObject.nodes[0]);\n        if (diagram.canEnableBlazorObject) {\n            var node = cloneObject(diagram.nameTable[entryObject.id]);\n            diagram.insertValue(node, true);\n        }\n        var oldElement = findPort(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getPortChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findPort(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        if (currentObject.parentId) {\n            diagram.updateConnectorEdges(diagram.nameTable[currentObject.parentId]);\n        }\n    };\n    UndoRedo.prototype.recordPropertyChanged = function (entry, diagram, isRedo) {\n        var redoObject = entry.redoObject;\n        var undoObject = entry.undoObject;\n        this.getProperty(diagram, (isRedo ? redoObject : undoObject));\n        isRedo ? diagram.onPropertyChanged(redoObject, undoObject) : diagram.onPropertyChanged(undoObject, redoObject);\n        diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n    };\n    UndoRedo.prototype.recordOrderCommandChanged = function (entry, diagram, isRedo) {\n        var redoObject = entry.redoObject;\n        var undoObject = entry.undoObject;\n        diagram.commandHandler.orderCommands(isRedo, (isRedo ? redoObject : undoObject), entry.type);\n        diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n    };\n    UndoRedo.prototype.recordSegmentChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.segmentChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.segmentChanged = function (connector, diagram) {\n        var conn = diagram.nameTable[connector.id];\n        conn.segments = connector.segments;\n        diagram.commandHandler.updateEndPoint(conn);\n    };\n    UndoRedo.prototype.recordPositionChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.positionChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        if (obj.processId && !node.processId) {\n            diagram.addProcess(obj, obj.processId);\n        }\n        if (!obj.processId && node.processId) {\n            diagram.removeProcess(obj.id);\n        }\n        if (node.processId) {\n            var tx = obj.margin.left - node.margin.left;\n            var ty = obj.margin.top - node.margin.top;\n            diagram.drag(node, tx, ty);\n        }\n        else {\n            if (node.parentId) {\n                var parent_3 = diagram.nameTable[node.parentId];\n                if (parent_3.isLane) {\n                    obj.wrapper.offsetX = (obj.width / 2) + (parent_3.wrapper.bounds.x + obj.margin.left);\n                    obj.wrapper.offsetY = (obj.height / 2) + (parent_3.wrapper.bounds.y + obj.margin.top);\n                }\n            }\n            var tx = obj.wrapper.offsetX - node.offsetX;\n            var ty = obj.wrapper.offsetY - node.offsetY;\n            diagram.drag(node, tx, ty);\n        }\n        if (diagram.bpmnModule) {\n            diagram.bpmnModule.updateDocks(node, diagram);\n        }\n    };\n    UndoRedo.prototype.recordSizeChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var connector;\n        var node;\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                if (node.children && !node.container) {\n                    var elements = [];\n                    var nodes = diagram.commandHandler.getAllDescendants(node, elements);\n                    for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n                        var tempNode = entry.childTable[nodes[i_1].id];\n                        if ((getObjectType(tempNode) === Node)) {\n                            this.sizeChanged(tempNode, diagram, entry);\n                            this.positionChanged(tempNode, diagram);\n                        }\n                        else {\n                            this.connectionChanged(tempNode, diagram, entry);\n                        }\n                    }\n                }\n                else {\n                    this.sizeChanged(node, diagram);\n                    this.positionChanged(node, diagram);\n                }\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            var connectors = obj.connectors;\n            for (i = 0; i < connectors.length; i++) {\n                connector = connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.sizeChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        var scaleWidth = obj.wrapper.actualSize.width / node.wrapper.actualSize.width;\n        var scaleHeight = obj.wrapper.actualSize.height / node.wrapper.actualSize.height;\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(node);\n        }\n        diagram.scale(node, scaleWidth, scaleHeight, {\n            x: obj.wrapper.offsetX / node.wrapper.offsetX,\n            y: obj.wrapper.offsetY / node.wrapper.offsetY\n        });\n    };\n    UndoRedo.prototype.recordRotationChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var node;\n        var connector;\n        var selectorObj = diagram.selectedItems;\n        selectorObj.rotateAngle = obj.rotateAngle;\n        if (selectorObj && selectorObj.wrapper) {\n            selectorObj.wrapper.rotateAngle = obj.rotateAngle;\n        }\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.rotationChanged(node, diagram);\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.rotationChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        diagram.rotate(node, obj.rotateAngle - node.rotateAngle);\n    };\n    UndoRedo.prototype.recordConnectionChanged = function (obj, diagram) {\n        var connector = obj.connectors[0];\n        this.connectionChanged(connector, diagram);\n    };\n    UndoRedo.prototype.connectionChanged = function (obj, diagram, entry) {\n        var connector = diagram.nameTable[obj.id];\n        var node;\n        if (obj.sourcePortID !== connector.sourcePortID) {\n            diagram.removePortEdges(diagram.nameTable[connector.sourceID], connector.sourcePortID, connector.id, false);\n            connector.sourcePortID = obj.sourcePortID;\n            diagram.connectorPropertyChange(connector, {}, { sourcePortID: obj.sourcePortID });\n        }\n        if (obj.targetPortID !== connector.targetPortID) {\n            diagram.removePortEdges(diagram.nameTable[connector.targetID], connector.targetPortID, connector.id, true);\n            connector.targetPortID = obj.targetPortID;\n            diagram.connectorPropertyChange(connector, {}, { targetPortID: obj.targetPortID });\n        }\n        if (obj.sourceID !== connector.sourceID) {\n            if (obj.sourceID === '') {\n                node = diagram.nameTable[connector.sourceID];\n                removeItem(node.outEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.sourceID];\n                node.outEdges.push(obj.id);\n                diagram.updatePortEdges(node, obj, false);\n            }\n            connector.sourceID = obj.sourceID;\n            diagram.connectorPropertyChange(connector, {}, { sourceID: obj.sourceID });\n        }\n        if (obj.targetID !== connector.targetID) {\n            if (obj.targetID === '') {\n                node = diagram.nameTable[connector.targetID];\n                removeItem(node.inEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.targetID];\n                node.inEdges.push(obj.id);\n                diagram.updatePortEdges(node, obj, true);\n            }\n            connector.targetID = obj.targetID;\n            diagram.connectorPropertyChange(connector, {}, { targetID: obj.targetID });\n        }\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(connector);\n        }\n        var sx = obj.sourcePoint.x - connector.sourcePoint.x;\n        var sy = obj.sourcePoint.y - connector.sourcePoint.y;\n        if (sx !== 0 || sy !== 0) {\n            diagram.dragSourceEnd(connector, sx, sy);\n        }\n        var tx = obj.targetPoint.x - connector.targetPoint.x;\n        var ty = obj.targetPoint.y - connector.targetPoint.y;\n        if (tx !== 0 || ty !== 0) {\n            diagram.dragTargetEnd(connector, tx, ty);\n        }\n        diagram.updateSelector();\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n    };\n    UndoRedo.prototype.recordCollectionChanged = function (entry, diagram) {\n        var obj = entry.undoObject;\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                if (entry.changeType === 'Insert') {\n                    changeType = 'Remove';\n                }\n                else {\n                    changeType = 'Insert';\n                }\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                if (obj.nodeId) {\n                    diagram.remove(diagram.nameTable[obj.nodeId + '_textannotation_' + obj.id]);\n                }\n                else {\n                    diagram.remove(obj);\n                    diagram.clearSelectorLayer();\n                }\n            }\n            else {\n                diagram.clearSelectorLayer();\n                if (obj.parentId) {\n                    var parentNode = diagram.nameTable[obj.parentId];\n                    if (parentNode) {\n                        diagram.addChild(parentNode, obj);\n                    }\n                    else {\n                        diagram.add(obj);\n                    }\n                }\n                else if (obj.nodeId) {\n                    diagram.addTextAnnotation(obj, diagram.nameTable[obj.nodeId]);\n                }\n                else {\n                    if (!diagram.nameTable[obj.id]) {\n                        if (obj && obj.shape && obj.shape.type === 'SwimLane' && entry.isUndo) {\n                            pasteSwimLane(obj, undefined, undefined, undefined, undefined, true);\n                        }\n                        diagram.add(obj);\n                    }\n                }\n                if (obj.processId && diagram.nameTable[obj.processId]) {\n                    diagram.addProcess(obj, obj.processId);\n                }\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordLabelCollectionChanged = function (entry, diagram) {\n        var label = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removeLabels(node, [label]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addLabels(node, [label]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortCollectionChanged = function (entry, diagram) {\n        var port = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removePorts(node, [port]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addPorts(node, [port]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.redo = function (diagram) {\n        var entry = this.getRedoEntry(diagram);\n        var startGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'StartGroup') {\n                    startGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.redoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.redoGroupAction(entry, diagram, startGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                if (!isBlazor()) {\n                    diagram.historyManager.redo(entry);\n                }\n                var arg = {\n                    entryType: 'redo', oldValue: entry.redoObject, newValue: entry.undoObject\n                };\n                if (isBlazor()) {\n                    arg = {\n                        entryType: 'undo', oldValue: this.getHistoryChangeEvent(entry.redoObject, entry.blazorHistoryEntryType),\n                        newValue: this.getHistoryChangeEvent(entry.undoObject, entry.blazorHistoryEntryType)\n                    };\n                }\n                diagram.triggerEvent(DiagramEvent.historyStateChange, arg);\n            }\n        }\n    };\n    UndoRedo.prototype.redoGroupAction = function (entry, diagram, startGroupActionCount) {\n        while (startGroupActionCount !== 0) {\n            this.redoEntry(entry, diagram);\n            entry = this.getRedoEntry(diagram);\n            if (entry.type === 'EndGroup') {\n                startGroupActionCount--;\n            }\n            else if (entry.type === 'StartGroup') {\n                startGroupActionCount++;\n            }\n        }\n        startGroupActionCount = 0;\n    };\n    UndoRedo.prototype.redoEntry = function (historyEntry, diagram) {\n        var redoObject;\n        var redovalue;\n        if (historyEntry.type !== 'PropertyChanged' && historyEntry.type !== 'CollectionChanged') {\n            redoObject = (historyEntry.redoObject);\n            redovalue = (historyEntry.redoObject);\n        }\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        if (historyEntry.type !== 'StartGroup' && historyEntry.type !== 'EndGroup') {\n            if (diagram.historyManager.redoStack.length > 0) {\n                var addObject = diagram.historyManager.redoStack.splice(0, 1);\n                diagram.historyManager.undoStack.splice(0, 0, addObject[0]);\n                redovalue = (historyEntry.redoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        switch (historyEntry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(redoObject, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(redoObject, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(historyEntry, diagram, true);\n                break;\n            case 'CollectionChanged':\n                this.recordCollectionChanged(historyEntry, diagram);\n                break;\n            case 'LabelCollectionChanged':\n                this.recordLabelCollectionChanged(historyEntry, diagram);\n                break;\n            case 'PortCollectionChanged':\n                this.recordPortCollectionChanged(historyEntry, diagram);\n                break;\n            case 'Group':\n                this.group(historyEntry, diagram);\n                break;\n            case 'UnGroup':\n                this.unGroup(historyEntry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(redoObject, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(historyEntry, diagram, true);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(historyEntry, diagram, true);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(historyEntry, diagram, true);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(historyEntry, diagram, true);\n                break;\n            case 'RowHeightChanged':\n                this.recordGridSizeChanged(historyEntry, diagram, true, true);\n                break;\n            case 'ColumnWidthChanged':\n                this.recordGridSizeChanged(historyEntry, diagram, true, false);\n                break;\n            case 'LanePositionChanged':\n                this.recordLanePositionChanged(historyEntry, diagram, true);\n                break;\n            case 'LaneCollectionChanged':\n            case 'PhaseCollectionChanged':\n                this.recordLaneOrPhaseCollectionChanged(historyEntry, diagram, true);\n                break;\n            case 'SendToBack':\n            case 'SendForward':\n            case 'SendBackward':\n            case 'BringToFront':\n                this.recordOrderCommandChanged(historyEntry, diagram, true);\n                break;\n        }\n        diagram.protectPropertyChange(false);\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.historyChangeTrigger(historyEntry, 'Redo');\n        if (redovalue) {\n            var value = this.checkNodeObject(redovalue, diagram);\n            if (value) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(value, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.getUndoEntry = function (diagram) {\n        var undoEntry = null;\n        var currentObject;\n        var hList = diagram.historyManager;\n        if (hList.canUndo) {\n            undoEntry = hList.currentEntry;\n            currentObject = hList.currentEntry.previous;\n            if (currentObject) {\n                hList.currentEntry = currentObject;\n                if (!hList.canRedo) {\n                    hList.canRedo = true;\n                }\n            }\n            else {\n                hList.canRedo = true;\n                hList.canUndo = false;\n            }\n        }\n        return undoEntry;\n    };\n    UndoRedo.prototype.getRedoEntry = function (diagram) {\n        var redoEntry = null;\n        var entryCurrent;\n        var hList = diagram.historyManager;\n        if (hList.canRedo) {\n            if (!hList.currentEntry.previous && !hList.canUndo) {\n                entryCurrent = hList.currentEntry;\n            }\n            else {\n                entryCurrent = hList.currentEntry.next;\n            }\n            if (entryCurrent) {\n                hList.currentEntry = entryCurrent;\n                if (!hList.canUndo) {\n                    hList.canUndo = true;\n                }\n                if (!entryCurrent.next) {\n                    hList.canRedo = false;\n                    hList.canUndo = true;\n                }\n            }\n            redoEntry = hList.currentEntry;\n        }\n        return redoEntry;\n    };\n    /**\n     * To destroy the undo redo module\n     * @return {void}\n     * @private\n     */\n    UndoRedo.prototype.destroy = function () {\n        /**\n         * Destroys the undo redo module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    UndoRedo.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'UndoRedo';\n    };\n    return UndoRedo;\n}());\nexport { UndoRedo };\n","import { Container } from '../core/containers/container';\nimport { DiagramEvent, RealAction, DiagramConstraints } from '../enum/enum';\nimport { cloneObject as clone } from '../utility/base-util';\nimport { cloneBlazorObject } from '../utility/diagram-util';\n/**\n * Layout Animation function to enable or disable layout animation\n */\nvar LayoutAnimation = /** @class */ (function () {\n    function LayoutAnimation() {\n        this.protectChange = false;\n    }\n    /**\n     * Layout expand function for animation of expand and collapse\n     */\n    LayoutAnimation.prototype.expand = function (animation, objects, node, diagram) {\n        var _this = this;\n        var setIntervalObject = {};\n        var i = 0;\n        var j = 0;\n        diagram.realActions = diagram.realActions | RealAction.AnimationClick;\n        setIntervalObject[i] = setInterval(function () {\n            j++;\n            return _this.layoutAnimation(objects, setIntervalObject, j === 6, diagram, node);\n        }, 20);\n        if (node.isExpanded) {\n            var opacity_1 = .2;\n            var protect = 'isProtectedOnChange';\n            this.protectChange = diagram[protect];\n            diagram.protectPropertyChange(false);\n            //let objects: ILayout = diagram.doLayout();\n            var setIntervalObjects_1 = {};\n            var x = 0;\n            if (animation) {\n                this.updateOpacity(node, opacity_1, diagram);\n                var current = this;\n                setIntervalObjects_1[x] = setInterval(function () {\n                    diagram.allowServerDataBinding = false;\n                    opacity_1 <= 1 ? _this.updateOpacity(node, opacity_1, diagram) : clearInterval(setIntervalObjects_1[0]);\n                    opacity_1 += .2;\n                    diagram.allowServerDataBinding = true;\n                }, 20);\n            }\n        }\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    LayoutAnimation.prototype.layoutAnimation = function (objValue, layoutTimer, stop, diagram, node) {\n        if (!stop) {\n            for (var k = 0; k < objValue.objects.length; k++) {\n                var node_1 = diagram.nameTable[objValue.objects[k].id];\n                node_1.offsetX += objValue.objects[k].differenceX / 5;\n                node_1.offsetY += objValue.objects[k].differenceY / 5;\n            }\n        }\n        if (stop) {\n            clearInterval(layoutTimer[0]);\n            diagram.realActions = diagram.realActions & ~RealAction.AnimationClick;\n            diagram.refreshCanvasLayers();\n            diagram.protectPropertyChange(true);\n            diagram.triggerEvent(DiagramEvent.animationComplete, undefined);\n            diagram.organizationalChartModule.isAnimation = false;\n            diagram.layout.fixedNode = '';\n            diagram.protectPropertyChange(this.protectChange);\n            var arg = {\n                element: cloneBlazorObject(clone(node)), state: (node.isExpanded) ? true : false\n            };\n            diagram.triggerEvent(DiagramEvent.expandStateChange, arg);\n            if (diagram.lineRoutingModule && diagram.constraints & DiagramConstraints.LineRouting) {\n                diagram.resetSegments();\n            }\n        }\n    };\n    /**\n     * update the node opacity for the node and connector once the layout animation starts\n     */\n    LayoutAnimation.prototype.updateOpacity = function (source, value, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            connector.style.opacity = value;\n            for (var j = 0; j < connector.wrapper.children.length; j++) {\n                connector.wrapper.children[j].style.opacity = value;\n                target.style.opacity = value;\n                if (target.wrapper instanceof Container) {\n                    diagram.updateNodeProperty(target.wrapper, undefined, value);\n                }\n            }\n            this.updateOpacity(target, value, diagram);\n        }\n    };\n    /**\n     * To destroy the  LayoutAnimate module\n     * @return {void}\n     * @private\n     */\n    LayoutAnimation.prototype.destroy = function () {\n        /**\n         * Destroys the LayoutAnimate module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LayoutAnimation.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LayoutAnimate';\n    };\n    return LayoutAnimation;\n}());\nexport { LayoutAnimation };\n","import { Rect } from '../primitives/rect';\nimport { getPortDirection } from '../utility/connector';\nimport { canEnableRouting } from '../utility/constraints-util';\n/**\n * Line Routing\n */\nvar LineRouting = /** @class */ (function () {\n    /**\n     * Constructor for the line routing module\n     * @private\n     */\n    function LineRouting() {\n        this.size = 20;\n        this.intermediatePoints = [];\n        this.gridCollection = [];\n        this.startArray = [];\n        this.targetGridCollection = [];\n        this.sourceGridCollection = [];\n        this.considerWalkable = [];\n        //constructs the line routing module\n    }\n    /** @private */\n    LineRouting.prototype.lineRouting = function (diagram) {\n        var length = diagram.connectors.length;\n        this.renderVirtualRegion(diagram);\n        if (length > 0) {\n            for (var k = 0; k < length; k++) {\n                var connector = diagram.connectors[k];\n                if (connector.type === 'Orthogonal' && connector.visible) {\n                    this.refreshConnectorSegments(diagram, connector, true);\n                }\n            }\n        }\n    };\n    /** @private */\n    LineRouting.prototype.renderVirtualRegion = function (diagram, isUpdate) {\n        /* tslint:disable */\n        var extraBounds = this.size;\n        if (diagram.spatialSearch['pageTop'] < 0 || diagram.spatialSearch['pageLeft'] < 0) {\n            extraBounds = this.size + (this.size / 2);\n        }\n        var right = diagram.spatialSearch['pageRight'] + extraBounds;\n        var bottom = diagram.spatialSearch['pageBottom'] + extraBounds;\n        var left = diagram.spatialSearch['pageLeft'] - extraBounds;\n        var top = diagram.spatialSearch['pageTop'] - extraBounds;\n        left = left < 0 ? left - 20 : 0;\n        top = top < 0 ? top - 20 : 0;\n        /* tslint:enable */\n        if ((isUpdate && (this.width !== (right - left) || this.height !== (bottom - top) ||\n            this.diagramStartX !== left || this.diagramStartY !== top)) || isUpdate === undefined) {\n            this.width = right - left;\n            this.height = bottom - top;\n            this.diagramStartX = left;\n            this.diagramStartY = top;\n            this.gridCollection = [];\n            this.noOfRows = this.width / this.size;\n            this.noOfCols = this.height / this.size;\n            var size = this.size;\n            var x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n            var y = this.diagramStartY < 0 ? this.diagramStartY : 0;\n            for (var i = 0; i < this.noOfCols; i++) {\n                for (var j = 0; j < this.noOfRows; j++) {\n                    if (i === 0) {\n                        // tslint:disable-next-line:no-any\n                        this.gridCollection.push([0]);\n                    }\n                    var grid = {\n                        x: x, y: y, width: size, height: size, gridX: j,\n                        gridY: i, walkable: true, tested: undefined, nodeId: []\n                    };\n                    this.gridCollection[j][i] = grid;\n                    x += size;\n                }\n                x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n                y += size;\n            }\n        }\n        var nodes = this.findNodes(diagram.nodes);\n        this.updateNodesInVirtualRegion(nodes);\n    };\n    LineRouting.prototype.findNodes = function (nodes) {\n        var objects = [];\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (node.shape.type !== 'SwimLane' && !node.isLane && !node.isPhase && !node.isHeader && node.visible) {\n                objects.push(node);\n            }\n        }\n        return objects;\n    };\n    LineRouting.prototype.updateNodesInVirtualRegion = function (diagramNodes) {\n        var size = this.size;\n        var x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n        var y = this.diagramStartY < 0 ? this.diagramStartY : 0;\n        for (var i = 0; i < this.noOfCols; i++) {\n            for (var j = 0; j < this.noOfRows; j++) {\n                var grid = this.gridCollection[j][i];\n                var rectangle = new Rect(x, y, this.size, this.size);\n                var isContains = void 0;\n                var k = void 0;\n                grid.walkable = true;\n                grid.tested = undefined;\n                grid.nodeId = [];\n                for (k = 0; k < diagramNodes.length; k++) {\n                    isContains = this.intersectRect(rectangle, diagramNodes[k].wrapper.bounds);\n                    if (isContains) {\n                        grid.nodeId.push(diagramNodes[k].id);\n                        grid.walkable = false;\n                        if (diagramNodes[k].parentId !== '') {\n                            grid.parentNodeId = diagramNodes[k].parentId;\n                        }\n                    }\n                }\n                x += size;\n            }\n            x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n            y += size;\n        }\n    };\n    LineRouting.prototype.intersectRect = function (r1, r2) {\n        return !(r2.left >= r1.right || r2.right <= r1.left ||\n            r2.top >= r1.bottom || r2.bottom <= r1.top);\n    };\n    LineRouting.prototype.findEndPoint = function (connector, isSource, isPortBounds) {\n        var endPoint;\n        var portDirection;\n        if ((isSource && connector.sourcePortID !== '') || (!isSource && connector.targetPortID !== '')) {\n            endPoint = (isSource) ? { x: connector.sourcePortWrapper.offsetX, y: connector.sourcePortWrapper.offsetY } :\n                { x: connector.targetPortWrapper.offsetX, y: connector.targetPortWrapper.offsetY };\n            portDirection = getPortDirection(endPoint, undefined, (isSource) ? connector.sourceWrapper.bounds : connector.targetWrapper.bounds, false);\n            var bounds = (isSource) ? connector.sourcePortWrapper.bounds : connector.targetPortWrapper.bounds;\n            if (isPortBounds) {\n                if (portDirection === 'Top') {\n                    endPoint = { x: bounds.topCenter.x, y: bounds.topCenter.y };\n                }\n                else if (portDirection === 'Left') {\n                    endPoint = { x: bounds.middleLeft.x, y: bounds.middleLeft.y };\n                }\n                else if (portDirection === 'Right') {\n                    endPoint = { x: bounds.middleRight.x, y: bounds.middleRight.y };\n                }\n                else {\n                    endPoint = { x: bounds.bottomCenter.x, y: bounds.bottomCenter.y };\n                }\n            }\n            else {\n                endPoint = { x: bounds.center.x, y: bounds.center.y };\n            }\n        }\n        else {\n            if ((isSource && this.startNode) || (!isSource && this.targetNode)) {\n                endPoint = (isSource) ? { x: this.startNode.wrapper.offsetX, y: this.startNode.wrapper.offsetY } :\n                    { x: this.targetNode.wrapper.offsetX, y: this.targetNode.wrapper.offsetY };\n            }\n            else {\n                endPoint = (isSource) ? { x: connector.sourcePoint.x, y: connector.sourcePoint.y } :\n                    { x: connector.targetPoint.x, y: connector.targetPoint.y };\n            }\n        }\n        return endPoint;\n    };\n    /** @private */\n    LineRouting.prototype.refreshConnectorSegments = function (diagram, connector, isUpdate) {\n        var sourceId = connector.sourceID;\n        var targetId = connector.targetID;\n        var sourcePortID = connector.sourcePortID;\n        var targetPortID = connector.targetPortID;\n        var startPoint;\n        var targetPoint;\n        var sourcePortDirection;\n        var targetPortDirection;\n        var grid;\n        var sourceTop;\n        var sourceBottom;\n        var isBreak;\n        var sourceLeft;\n        var sourceRight;\n        var targetRight;\n        var targetTop;\n        var targetBottom;\n        var targetLeft;\n        if (canEnableRouting(connector, diagram)) {\n            this.startNode = diagram.nameTable[sourceId];\n            this.targetNode = diagram.nameTable[targetId];\n            this.intermediatePoints = [];\n            this.startArray = [];\n            this.targetGridCollection = [];\n            this.sourceGridCollection = [];\n            this.startGrid = undefined;\n            this.targetGrid = undefined;\n            for (var i = 0; i < this.noOfCols; i++) {\n                for (var j = 0; j < this.noOfRows; j++) {\n                    this.gridCollection[j][i].tested = this.gridCollection[j][i].parent = undefined;\n                    this.gridCollection[j][i].previousDistance = this.gridCollection[j][i].afterDistance = undefined;\n                    this.gridCollection[j][i].totalDistance = undefined;\n                }\n            }\n            // Set the source point and target point\n            startPoint = this.findEndPoint(connector, true);\n            targetPoint = this.findEndPoint(connector, false);\n            // Find the start grid and target grid\n            for (var i = 0; i < this.noOfRows; i++) {\n                for (var j = 0; j < this.noOfCols; j++) {\n                    grid = this.gridCollection[i][j];\n                    var rectangle = new Rect(grid.x, grid.y, grid.width, grid.height);\n                    if (rectangle.containsPoint(startPoint) && !this.startGrid &&\n                        (grid.nodeId.indexOf(sourceId) !== -1 || sourceId === '')) {\n                        this.startGrid = (sourcePortID && this.startGrid &&\n                            (sourcePortDirection === 'Left' || sourcePortDirection === 'Top')) ? this.startGrid : grid;\n                    }\n                    if (rectangle.containsPoint(targetPoint) && !this.targetGrid &&\n                        (grid.nodeId.indexOf(targetId) !== -1 || targetId === '')) {\n                        this.targetGrid = (targetPortID && this.targetGrid &&\n                            (targetPortDirection === 'Left' || targetPortDirection === 'Top')) ? this.targetGrid : grid;\n                    }\n                    if (!sourcePortID && this.startNode) {\n                        var bounds = this.startNode.wrapper.bounds;\n                        if (rectangle.containsPoint(bounds.topCenter) && !sourceTop) {\n                            sourceTop = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleLeft) && !sourceLeft) {\n                            sourceLeft = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleRight) && !sourceRight) {\n                            sourceRight = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.bottomCenter) && !sourceBottom) {\n                            sourceBottom = grid;\n                        }\n                    }\n                    if (!targetPortID && this.targetNode) {\n                        var bounds = this.targetNode.wrapper.bounds;\n                        if (rectangle.containsPoint(bounds.topCenter) && !targetTop) {\n                            targetTop = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleLeft) && !targetLeft) {\n                            targetLeft = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleRight) && !targetRight) {\n                            targetRight = grid;\n                        }\n                        if (rectangle.containsPoint({ x: bounds.bottomCenter.x, y: bounds.bottomCenter.y }) && !targetBottom) {\n                            targetBottom = grid;\n                        }\n                    }\n                }\n            }\n            this.findEdgeBoundary(sourcePortID, sourceLeft, sourceRight, sourceTop, sourceBottom, true);\n            this.findEdgeBoundary(targetPortID, targetLeft, targetRight, targetTop, targetBottom, false);\n            this.startGrid.totalDistance = 0;\n            this.startGrid.previousDistance = 0;\n            this.intermediatePoints.push({ x: this.startGrid.gridX, y: this.startGrid.gridY });\n            this.startArray.push(this.startGrid);\n            this.checkObstacles(connector);\n            renderPathElement: while (this.startArray.length > 0) {\n                var startGridNode = this.startArray.pop();\n                for (var i = 0; i < this.targetGridCollection.length; i++) {\n                    var target = this.targetGridCollection[i];\n                    if (startGridNode.gridX === target.gridX && startGridNode.gridY === target.gridY) {\n                        this.getIntermediatePoints(startGridNode);\n                        isBreak = this.updateConnectorSegments(diagram, this.intermediatePoints, this.gridCollection, connector, isUpdate);\n                        if (!isBreak) {\n                            this.targetGridCollection.splice(this.targetGridCollection.indexOf(target), 1);\n                            startGridNode = this.startArray.pop();\n                        }\n                        else {\n                            this.considerWalkable = [];\n                            break renderPathElement;\n                        }\n                    }\n                }\n                this.findPath(startGridNode);\n            }\n        }\n    };\n    LineRouting.prototype.findEdgeBoundary = function (portID, left, right, top, bottom, isSource) {\n        var grid;\n        var collection = (isSource) ? this.sourceGridCollection : this.targetGridCollection;\n        if (!portID && ((isSource) ? this.startNode : this.targetNode)) {\n            for (var i = left.gridX; i <= right.gridX; i++) {\n                grid = this.gridCollection[i][left.gridY];\n                if ((grid.nodeId.length === 1 && (i === left.gridX || i === right.gridX)) ||\n                    (i !== left.gridX && i !== right.gridX)) {\n                    collection.push(grid);\n                }\n            }\n            for (var i = top.gridY; i <= bottom.gridY; i++) {\n                grid = this.gridCollection[top.gridX][i];\n                if (((grid.nodeId.length === 1 && (i === top.gridY || i === bottom.gridY)) ||\n                    (i !== top.gridY && i !== bottom.gridY)) && collection.indexOf(grid) === -1) {\n                    collection.push(grid);\n                }\n            }\n        }\n        else {\n            collection.push((isSource) ? this.startGrid : this.targetGrid);\n        }\n    };\n    LineRouting.prototype.checkObstacles = function (connector) {\n        var neigbours = this.findNearestNeigbours(this.startGrid, this.gridCollection, true);\n        if (neigbours.length === 0) {\n            if (connector.sourcePortID !== '') {\n                var endPoint = { x: connector.sourcePortWrapper.offsetX, y: connector.sourcePortWrapper.offsetY };\n                var portDirection = getPortDirection(endPoint, undefined, connector.sourceWrapper.bounds, false);\n                if (portDirection === 'Top') {\n                    this.resetGridColl(this.startGrid, 'top', true);\n                }\n                else if (portDirection === 'Right') {\n                    this.resetGridColl(this.startGrid, 'right', true);\n                }\n                else if (portDirection === 'Bottom') {\n                    this.resetGridColl(this.startGrid, 'bottom', true);\n                }\n                else {\n                    this.resetGridColl(this.startGrid, 'left', true);\n                }\n            }\n            else {\n                this.resetGridColl(this.startGrid, 'top', true);\n                this.resetGridColl(this.startGrid, 'right', true);\n                this.resetGridColl(this.startGrid, 'bottom', true);\n                this.resetGridColl(this.startGrid, 'left', true);\n            }\n        }\n        neigbours = this.findNearestNeigbours(this.targetGrid, this.gridCollection, false);\n        if (neigbours.length === 0) {\n            if (connector.targetPortID !== '') {\n                var endPoint = { x: connector.targetPortWrapper.offsetX, y: connector.targetPortWrapper.offsetY };\n                var portDirection = getPortDirection(endPoint, undefined, connector.targetWrapper.bounds, false);\n                if (portDirection === 'Top') {\n                    this.resetGridColl(this.targetGrid, 'top', true);\n                }\n                else if (portDirection === 'Right') {\n                    this.resetGridColl(this.targetGrid, 'right', true);\n                }\n                else if (portDirection === 'Bottom') {\n                    this.resetGridColl(this.targetGrid, 'bottom', true);\n                }\n                else {\n                    this.resetGridColl(this.targetGrid, 'left', true);\n                }\n            }\n            else {\n                this.resetGridColl(this.targetGrid, 'top', false);\n                this.resetGridColl(this.targetGrid, 'right', false);\n                this.resetGridColl(this.targetGrid, 'bottom', false);\n                this.resetGridColl(this.targetGrid, 'left', false);\n            }\n        }\n    };\n    // Get all the intermediated points from target grid\n    LineRouting.prototype.getIntermediatePoints = function (target) {\n        var distance;\n        this.intermediatePoints = [];\n        while (target) {\n            this.intermediatePoints.push({ x: target.gridX, y: target.gridY });\n            target = target.parent;\n        }\n        this.intermediatePoints.reverse();\n        if (this.intermediatePoints[0].x === this.intermediatePoints[1].x) {\n            if (this.intermediatePoints[0].y < this.intermediatePoints[1].y) {\n                distance = this.neigbour(this.startGrid, 'bottom', undefined, true);\n                this.intermediatePoints[0].y += distance - 1;\n            }\n            else {\n                distance = this.neigbour(this.startGrid, 'top', undefined, true);\n                this.intermediatePoints[0].y -= distance - 1;\n            }\n        }\n        else {\n            if (this.intermediatePoints[0].x < this.intermediatePoints[1].x) {\n                distance = this.neigbour(this.startGrid, 'right', undefined, true);\n                this.intermediatePoints[0].x += distance - 1;\n            }\n            else {\n                distance = this.neigbour(this.startGrid, 'left', undefined, true);\n                this.intermediatePoints[0].x -= distance - 1;\n            }\n        }\n    };\n    // Connector rendering\n    /* tslint:disable */\n    LineRouting.prototype.updateConnectorSegments = function (diagram, intermediatePoints, gridCollection, connector, isUpdate) {\n        var segments = [];\n        var seg;\n        var targetPoint;\n        var pointX;\n        var pointY;\n        var node;\n        var points = [];\n        var direction;\n        var length;\n        var currentdirection;\n        var prevDirection;\n        var targetWrapper = connector.targetWrapper;\n        var sourceWrapper = connector.sourceWrapper;\n        var sourcePoint = this.findEndPoint(connector, true);\n        if (connector.targetPortID !== '' || !connector.targetWrapper) {\n            targetPoint = this.findEndPoint(connector, false, true);\n        }\n        for (var i = 0; i < intermediatePoints.length; i++) {\n            node = gridCollection[intermediatePoints[i].x][intermediatePoints[i].y];\n            pointX = node.x + node.width / 2;\n            pointY = node.y + node.height / 2;\n            points.push({ x: pointX, y: pointY });\n            if (i >= 1) {\n                if (points[points.length - 2].x !== points[points.length - 1].x) {\n                    currentdirection = (points[points.length - 2].x > points[points.length - 1].x) ? 'Left' : 'Right';\n                }\n                else {\n                    currentdirection = (points[points.length - 2].y > points[points.length - 1].y) ? 'Top' : 'Bottom';\n                }\n            }\n            if (i >= 2 && prevDirection === currentdirection) {\n                points.splice(points.length - 2, 1);\n            }\n            prevDirection = currentdirection;\n        }\n        for (var j = 0; j < points.length - 1; j++) {\n            if (points[j].x !== points[j + 1].x) {\n                if (j === 0 && connector.sourcePortID === '' && sourceWrapper) {\n                    sourcePoint = (points[j].x > points[j + 1].x) ? sourceWrapper.bounds.middleLeft : sourceWrapper.bounds.middleRight;\n                }\n                if (j === points.length - 2 && connector.targetPortID === '' && targetWrapper) {\n                    targetPoint = (points[j].x > points[j + 1].x) ? targetWrapper.bounds.middleRight : targetWrapper.bounds.middleLeft;\n                }\n                if (j === 0 && sourcePoint) {\n                    points[j].x = sourcePoint.x;\n                    points[j].y = points[j + 1].y = sourcePoint.y;\n                }\n                if (j === points.length - 2 && targetPoint) {\n                    if (((targetPoint.x - points[j + 1].x) < 0) &&\n                        (Math.abs(targetPoint.x - points[j].x) < connector.targetDecorator.width + 1)) {\n                        points[j].x = points[j - 1].x -= this.size / 2;\n                    }\n                    if (((targetPoint.x - points[j + 1].x) > 0) &&\n                        (Math.abs(targetPoint.x - points[j].x) < connector.targetDecorator.width + 1)) {\n                        points[j].x = points[j - 1].x += this.size / 2;\n                    }\n                    points[j + 1].x = targetPoint.x;\n                    points[j].y = points[j + 1].y = targetPoint.y;\n                }\n            }\n            else {\n                if (j === 0 && sourceWrapper) {\n                    sourcePoint = (points[j].y > points[j + 1].y) ? sourceWrapper.bounds.topCenter : sourceWrapper.bounds.bottomCenter;\n                }\n                if (j === points.length - 2 && connector.targetPortID === '' && targetWrapper) {\n                    targetPoint = (points[j].y > points[j + 1].y) ? targetWrapper.bounds.bottomCenter : targetWrapper.bounds.topCenter;\n                }\n                if (j === 0 && sourcePoint) {\n                    points[j].y = sourcePoint.y;\n                    points[j].x = points[j + 1].x = sourcePoint.x;\n                }\n                if (j === points.length - 2 && targetPoint) {\n                    if (((targetPoint.y - points[j + 1].y) < 0) &&\n                        (Math.abs(targetPoint.y - points[j].y) < connector.targetDecorator.height + 1)) {\n                        points[j].y = points[j - 1].y -= this.size / 2;\n                    }\n                    if (((targetPoint.y - points[j + 1].y) > 0) &&\n                        (Math.abs(targetPoint.y - points[j].y) < connector.targetDecorator.width + 1)) {\n                        points[j].y = points[j - 1].y += this.size / 2;\n                    }\n                    points[j + 1].y = targetPoint.y;\n                    points[j].x = points[j + 1].x = targetPoint.x;\n                }\n            }\n        }\n        for (var j = 0; j < points.length - 1; j++) {\n            if (points[j].x !== points[j + 1].x) {\n                if (points[j].x > points[j + 1].x) {\n                    direction = 'Left';\n                    length = points[j].x - points[j + 1].x;\n                }\n                else {\n                    direction = 'Right';\n                    length = points[j + 1].x - points[j].x;\n                }\n            }\n            else {\n                if (points[j].y > points[j + 1].y) {\n                    direction = 'Top';\n                    length = points[j].y - points[j + 1].y;\n                }\n                else {\n                    direction = 'Bottom';\n                    length = points[j + 1].y - points[j].y;\n                }\n            }\n            seg = { type: 'Orthogonal', length: length, direction: direction };\n            segments.push(seg);\n        }\n        var lastSeg = segments[segments.length - 1];\n        if (segments.length === 1) {\n            lastSeg.length -= 20;\n        }\n        if (lastSeg.length < 10 && segments.length === 2) {\n            segments.pop();\n            segments[0].length -= 20;\n            lastSeg = segments[0];\n        }\n        if (((lastSeg.direction === 'Top' || lastSeg.direction === 'Bottom') && lastSeg.length > connector.targetDecorator.height + 1) ||\n            ((lastSeg.direction === 'Right' || lastSeg.direction === 'Left') && lastSeg.length > connector.targetDecorator.width + 1)) {\n            connector.segments = segments;\n            if (isUpdate) {\n                diagram.connectorPropertyChange(connector, {}, { type: 'Orthogonal', segments: segments });\n            }\n            return true;\n        }\n        return false;\n    };\n    /* tslint:enable */\n    // Shortest path\n    LineRouting.prototype.findPath = function (startGrid) {\n        var intermediatePoint;\n        var collection = [];\n        var neigbours = this.findNearestNeigbours(startGrid, this.gridCollection, true);\n        for (var i = 0; i < neigbours.length; i++) {\n            intermediatePoint = this.findIntermediatePoints(neigbours[i].gridX, neigbours[i].gridY, startGrid.gridX, startGrid.gridY, this.targetGrid.gridX, this.targetGrid.gridY);\n            if (intermediatePoint !== null) {\n                var grid = this.gridCollection[intermediatePoint.x][intermediatePoint.y];\n                var h = this.octile(Math.abs(intermediatePoint.x - startGrid.gridX), Math.abs(intermediatePoint.y - startGrid.gridY));\n                var l = startGrid.previousDistance + h;\n                if ((!grid.previousDistance || grid.previousDistance > l) &&\n                    (!(intermediatePoint.x === startGrid.gridX && intermediatePoint.y === startGrid.gridY))) {\n                    collection.push(intermediatePoint);\n                    grid.previousDistance = l;\n                    grid.afterDistance = grid.afterDistance || this.manhattan(Math.abs(intermediatePoint.x - this.targetGrid.gridX), Math.abs(intermediatePoint.y - this.targetGrid.gridY));\n                    grid.totalDistance = grid.previousDistance + grid.afterDistance;\n                    grid.parent = startGrid;\n                }\n            }\n        }\n        if (collection.length > 0) {\n            for (var i = 0; i < collection.length; i++) {\n                var grid = this.gridCollection[collection[i].x][collection[i].y];\n                if (this.startArray.indexOf(grid) === -1) {\n                    this.startArray.push(grid);\n                }\n            }\n        }\n        this.sorting(this.startArray);\n    };\n    // sorting the array based on total distance between source and target node\n    LineRouting.prototype.sorting = function (array) {\n        var done = false;\n        while (!done) {\n            done = true;\n            for (var i = 1; i < array.length; i += 1) {\n                if (array[i - 1].totalDistance < array[i].totalDistance) {\n                    done = false;\n                    var tmp = array[i - 1];\n                    array[i - 1] = array[i];\n                    array[i] = tmp;\n                }\n            }\n        }\n        return array;\n    };\n    LineRouting.prototype.octile = function (t, e) {\n        var r = Math.SQRT2 - 1;\n        return e > t ? r * t + e : r * e + t;\n    };\n    LineRouting.prototype.manhattan = function (t, e) {\n        return t + e;\n    };\n    // Find the nearest neigbour from the current boundaries, the neigbour is use to find next intermdiate point.\n    LineRouting.prototype.findNearestNeigbours = function (startGrid, gridCollection, isSource) {\n        var neigbours = [];\n        var parent = startGrid.parent;\n        if (parent) {\n            var dx = (startGrid.gridX - parent.gridX) / Math.max(Math.abs(startGrid.gridX - parent.gridX), 1);\n            var dy = (startGrid.gridY - parent.gridY) / Math.max(Math.abs(startGrid.gridY - parent.gridY), 1);\n            if (dx !== 0) {\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY - 1, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY - 1]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY - 1]);\n                }\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY + 1, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY + 1])) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY + 1]);\n                }\n                if (this.isWalkable(startGrid.gridX + dx, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX + dx][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX + dx][startGrid.gridY]);\n                }\n            }\n            else if (dy !== 0) {\n                if (this.isWalkable(startGrid.gridX - 1, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX - 1][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX - 1][startGrid.gridY]);\n                }\n                if (this.isWalkable(startGrid.gridX + 1, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX + 1][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX + 1][startGrid.gridY]);\n                }\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY + dy, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY + dy]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY + dy]);\n                }\n            }\n        }\n        else {\n            this.neigbour(startGrid, 'top', neigbours, isSource);\n            this.neigbour(startGrid, 'right', neigbours, isSource);\n            this.neigbour(startGrid, 'bottom', neigbours, isSource);\n            this.neigbour(startGrid, 'left', neigbours, isSource);\n        }\n        return neigbours;\n    };\n    LineRouting.prototype.neigbour = function (startGrid, direction, neigbours, isSource) {\n        var i = 1;\n        var nearGrid;\n        while (i > 0) {\n            var x = (direction === 'top' || direction === 'bottom') ?\n                (startGrid.gridX) : ((direction === 'left') ? startGrid.gridX - i : startGrid.gridX + i);\n            var y = (direction === 'right' || direction === 'left') ?\n                (startGrid.gridY) : ((direction === 'top') ? startGrid.gridY - i : startGrid.gridY + i);\n            nearGrid = this.gridCollection[x][y];\n            if (nearGrid && ((isSource && this.sourceGridCollection.indexOf(nearGrid) === -1)\n                || (!isSource && this.targetGridCollection.indexOf(nearGrid) === -1))) {\n                if (neigbours && this.isWalkable(x, y)) {\n                    neigbours.push(nearGrid);\n                }\n                return i;\n            }\n            if (x > 0 && y > 0) {\n                i++;\n            }\n            else {\n                break;\n            }\n        }\n        return null;\n    };\n    LineRouting.prototype.resetGridColl = function (grid, direction, isSource) {\n        var i = 1;\n        var nearGrid;\n        while (i > 0) {\n            var x = (direction === 'top' || direction === 'bottom') ?\n                (grid.gridX) : ((direction === 'left') ? grid.gridX - i : grid.gridX + i);\n            var y = (direction === 'right' || direction === 'left') ?\n                (grid.gridY) : ((direction === 'top') ? grid.gridY - i : grid.gridY + i);\n            nearGrid = this.gridCollection[x][y];\n            if (nearGrid && ((isSource && this.sourceGridCollection.indexOf(nearGrid) === -1) ||\n                (!isSource && this.targetGridCollection.indexOf(nearGrid) === -1))) {\n                if (this.isWalkable(x, y)) {\n                    break;\n                }\n                else {\n                    var grid_1 = this.gridCollection[x][y];\n                    this.considerWalkable.push(grid_1);\n                }\n            }\n            if (x > 0 && y > 0) {\n                if (direction === 'top' || direction === 'left') {\n                    i--;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return null;\n    };\n    LineRouting.prototype.isWalkable = function (x, y, isparent) {\n        if (x >= 0 && x < this.noOfRows && y >= 0 && y < this.noOfCols) {\n            var grid = this.gridCollection[x][y];\n            if (grid && (grid.walkable || ((grid.nodeId.length === 1 || (grid.nodeId.length === 2 && grid.parentNodeId)) &&\n                (this.sourceGridCollection.indexOf(grid) !== -1 || this.targetGridCollection.indexOf(grid) !== -1 ||\n                    this.considerWalkable.indexOf(grid) !== -1)))) {\n                if ((isparent && !grid.parent) || !isparent) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    LineRouting.prototype.findIntermediatePoints = function (neigbourGridX, neigbourGridY, startGridX, startGridY, endGridX, endGridY) {\n        var dx = neigbourGridX - startGridX;\n        var dy = neigbourGridY - startGridY;\n        var gridX = neigbourGridX;\n        var gridY = neigbourGridY;\n        for (var i = 0; i < this.targetGridCollection.length; i++) {\n            if (neigbourGridX === this.targetGridCollection[i].gridX && neigbourGridY === this.targetGridCollection[i].gridY) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        if (!this.isWalkable(neigbourGridX, neigbourGridY)) {\n            return null;\n        }\n        var neigbourGrid = this.gridCollection[neigbourGridX][neigbourGridY];\n        if (neigbourGrid.tested) {\n            return { x: neigbourGridX, y: neigbourGridY };\n        }\n        neigbourGrid.tested = true;\n        if (dx !== 0) {\n            dx = (dx > 0) ? 1 : -1;\n            if ((this.isWalkable(gridX, gridY - 1) && !this.isWalkable(gridX - dx, gridY - 1)) ||\n                (this.isWalkable(gridX, gridY + 1) && !this.isWalkable(gridX - dx, gridY + 1))) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        if (dy !== 0) {\n            dy = (dy > 0) ? 1 : -1;\n            if ((this.isWalkable(gridX - 1, gridY) && !this.isWalkable(gridX - 1, gridY - dy)) ||\n                (this.isWalkable(gridX + 1, gridY) && !this.isWalkable(gridX + 1, gridY - dy))) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n            if (this.findIntermediatePoints(gridX + 1, gridY, gridX, gridY, endGridX, endGridY) ||\n                this.findIntermediatePoints(gridX - 1, gridY, gridX, gridY, endGridX, endGridY)) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        return this.findIntermediatePoints(gridX + dx, gridY + dy, gridX, gridY, endGridX, endGridY);\n    };\n    /**\n     * To destroy the line routing module\n     * @return {void}\n     * @private\n     */\n    LineRouting.prototype.destroy = function () {\n        /**\n         * Destroys the line routing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LineRouting.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LineRouting';\n    };\n    return LineRouting;\n}());\nexport { LineRouting };\n","import { DiagramAction } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { getFunction } from '../utility/base-util';\nimport { Point } from '../primitives/point';\nimport { updateLayoutValue } from '../utility/diagram-util';\n/**\n * Hierarchical Tree and Organizational Chart\n */\nvar HierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function HierarchicalTree() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    HierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    HierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'OrganizationalChart';\n    };\n    /**   @private  */\n    HierarchicalTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport, uniqueId, action) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {},\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo),\n            layoutInfo: layoutProp.layoutInfo, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, viewport, uniqueId, action);\n        return layout;\n    };\n    HierarchicalTree.prototype.doLayout = function (layout, nodes, viewport, uniqueId, action) {\n        var node;\n        var i;\n        var layoutInfo = {};\n        var shape;\n        var rootNodes = [];\n        if (layout.nameTable[layout.root]) {\n            layout.firstLevelNodes.push(layout.nameTable[layout.root]);\n        }\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layoutInfo = layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                layoutInfo.tree.hasSubTree = false;\n                if (!layout.nameTable[layout.root]) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        var parentId = 'parentId';\n                        var processId = 'processId';\n                        if (!node[parentId] && !node[processId]) {\n                            rootNodes.push(node);\n                        }\n                        if (node.data && String(node.data[uniqueId]) === layout.root) {\n                            layout.firstLevelNodes.push(node);\n                        }\n                    }\n                }\n            }\n        }\n        if (layout.firstLevelNodes.length === 0) {\n            layout.firstLevelNodes = rootNodes;\n        }\n        //Update relationship(parent and children)\n        for (i = 0; i < layout.firstLevelNodes.length; i++) {\n            node = layout.firstLevelNodes[i];\n            var check = void 0;\n            this.updateEdges(layout, node, 1, action, nodes);\n        }\n        if (layout.firstLevelNodes.length > 0) {\n            layout.rootNode = layout.firstLevelNodes[0];\n            var x = 0;\n            var y = 0;\n            var minX = void 0;\n            var maxY = void 0;\n            var maxX = void 0;\n            var minY = void 0;\n            var j = void 0;\n            var bounds = void 0;\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                bounds = this.updateTree(layout, x, y, layout.firstLevelNodes[i], 0, layout.firstLevelNodes[i - 1]);\n                var rootInfo = layout.graphNodes[layout.firstLevelNodes[i].id];\n                bounds.y = Math.min(bounds.y, rootInfo.y);\n                bounds.x = Math.min(bounds.x, rootInfo.x);\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    y = bounds.right + layout.horizontalSpacing;\n                }\n                else {\n                    x = bounds.right + layout.horizontalSpacing;\n                }\n                if (i === 0) {\n                    minX = bounds.x;\n                    minY = bounds.y;\n                    maxX = bounds.right;\n                    maxY = bounds.bottom;\n                }\n                else {\n                    minX = Math.min(minX, bounds.x);\n                    minY = Math.min(minY, bounds.y);\n                    maxX = Math.max(maxX, bounds.right);\n                    maxY = Math.max(maxY, bounds.bottom);\n                }\n            }\n            this.updateAnchor(layout, { x: minX, y: minY, right: maxX, bottom: maxY }, viewport);\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateNodes(layout, layout.firstLevelNodes[i], 0);\n            }\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateConnectors(layout, layout.firstLevelNodes[i], 1);\n            }\n        }\n    };\n    HierarchicalTree.prototype.getBounds = function (node) {\n        var x = node.offsetX - node.actualSize.width * node.pivot.x;\n        var y = node.offsetY - node.actualSize.height * node.pivot.y;\n        return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n    };\n    HierarchicalTree.prototype.updateTree = function (layout, x, y, shape, level, prev, dontupdate) {\n        var dimensions;\n        var info = {};\n        var lev;\n        var obj;\n        var hasChild;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        info = layout.graphNodes[shape.id];\n        var firstChild;\n        //Set maximum level of layout\n        layout.maxLevel = Math.max(layout.maxLevel, level);\n        lev = level;\n        hasChild = this.hasChild(layout, shape);\n        if (!hasChild && !info.tree.assistants.length) {\n            //update leaf nodes\n            shape.treeBounds = this.updateLeafNode(layout, shape, prev, dimensions, level, dontupdate);\n            return shape.treeBounds;\n        }\n        else {\n            var treeBounds = void 0;\n            var shapeBounds = void 0;\n            var levelBounds = void 0;\n            var d = void 0;\n            var asstBounds = void 0;\n            var space = void 0;\n            var bottom = void 0;\n            bottom = dimensions.y + dimensions.height + layout.verticalSpacing;\n            if (info.tree.assistants.length) {\n                //Vertically place assistants\n                obj = this.setDepthSpaceForAssitants(layout, shape, bottom, dimensions.height, level, layout.verticalSpacing);\n                lev = obj.level;\n                bottom = obj.bottom;\n            }\n            if (!info.tree.assistants.length && info.tree.orientation !== 'Horizontal') {\n                bottom = dimensions.y + dimensions.height + layout.verticalSpacing / 2;\n            }\n            if (info.tree.children.length) {\n                if (info.tree.orientation === 'Horizontal' && (info.tree.type !== 'Balanced' || info.tree.children.length === 1)) {\n                    treeBounds = this.updateHorizontalTree(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else if (info.tree.type === 'Balanced') {\n                    treeBounds = this.updateHorizontalTreeWithMultipleRows(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else {\n                    treeBounds = this.updateVerticalTree(layout, shape, dimensions.x, bottom, lev, dontupdate);\n                }\n            }\n            if (!(info.y && info.y > dimensions.y)) {\n                info.y = dimensions.y;\n            }\n            if (info.mid) {\n                x = info.mid;\n            }\n            if (info.tree.assistants.length) {\n                //Set breadth space for assistants\n                space = x !== undefined ? x : dimensions.x;\n                asstBounds = this.setBreadthSpaceForAssistants(layout, shape, dimensions, space, bottom, level);\n                if (!hasChild) {\n                    levelBounds = treeBounds = asstBounds;\n                    x = (levelBounds.x + levelBounds.right) / 2 - dimensions.width / 2;\n                    treeBounds = levelBounds;\n                }\n                d = asstBounds ? asstBounds.canMoveBy : undefined;\n            }\n            info.x = x;\n            if (!info.translate) {\n                info.treeWidth = treeBounds.right - treeBounds.x;\n            }\n            {\n                shapeBounds = { x: x, y: dimensions.y, right: x + dimensions.width, bottom: dimensions.y + dimensions.height };\n            }\n            var translateInfo = {\n                layout: layout, shape: shape, shapeBounds: shapeBounds, treeBounds: treeBounds,\n                dim: dimensions, level: level\n            };\n            this.translateSubTree(translateInfo, d, prev !== undefined, dontupdate);\n            if (info.firstChild && typeof info.firstChild !== 'string') {\n                info.firstChild.x += info.subTreeTranslation;\n            }\n            shape.treeBounds = treeBounds;\n            return treeBounds;\n        }\n    };\n    HierarchicalTree.prototype.updateLeafNode = function (layout, shape, prev, dimensions, level, dontupdate) {\n        var bounds;\n        var info = layout.graphNodes[shape.id];\n        info.x = dimensions.x;\n        if (!(info.y && info.y > dimensions.y)) {\n            info.y = dimensions.y;\n            info.maxLevel = Math.max(level, info.maxLevel || 0);\n        }\n        bounds = { x: dimensions.x, y: dimensions.y, right: dimensions.x + dimensions.width, bottom: dimensions.y + dimensions.height };\n        info.maxLevel = Math.max(info.maxLevel || 0, level);\n        var translateInfo = {\n            layout: layout, shape: shape, shapeBounds: bounds, treeBounds: bounds,\n            dim: dimensions, level: level\n        };\n        this.translateSubTree(translateInfo, undefined, prev !== undefined, dontupdate);\n        return { x: info.x, y: info.y, right: info.x + dimensions.width, bottom: info.y + dimensions.height };\n    };\n    HierarchicalTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.subTreeTranslation = 0;\n        if (layout.type === 'OrganizationalChart') {\n            info.tree = { orientation: 'Vertical', type: 'Alternate', offset: 20, enableRouting: true };\n        }\n        else {\n            info.tree = { orientation: 'Horizontal', type: 'Center', enableRouting: true };\n        }\n        info.tree.children = [];\n        info.tree.assistants = [];\n        info.tree.level = 0;\n        info.translate = true;\n        return info;\n    };\n    HierarchicalTree.prototype.translateSubTree = function (translateInfo, asstDif, translate, dontupdate) {\n        var layout = translateInfo.layout;\n        var shape = translateInfo.shape;\n        var shapeBounds = translateInfo.shapeBounds;\n        var treeBounds = translateInfo.treeBounds;\n        var level = translateInfo.level;\n        var dim = translateInfo.dim;\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.firstChild ? info.firstChild.child : info.tree.children[0]];\n        var firstChildInfo = firstChild ? layout.graphNodes[firstChild.id] : null;\n        var hasChild = this.hasChild(layout, shape);\n        var intersect = this.findIntersectingLevels(layout, shapeBounds, level, info.actualLevel);\n        var treeIntersect = this.findIntersectingLevels(layout, treeBounds, level, info.actualLevel);\n        var levelBounds = [];\n        var diff;\n        if (intersect.length && info.translate) {\n            info.intersect = intersect;\n            this.spaceLeftFromPrevSubTree(layout, shape, shapeBounds);\n            info.canMoveBy = info.diff;\n            if (asstDif !== undefined) {\n                info.canMoveBy = Math.min(asstDif, info.canMoveBy);\n            }\n            if (firstChild && firstChildInfo.canMoveBy !== undefined) {\n                if (firstChildInfo.canMoveBy >= info.canMoveBy) {\n                    info.translated = true;\n                }\n                info.canMoveBy = Math.min(info.canMoveBy, firstChildInfo.canMoveBy);\n            }\n            if (translate) {\n                info.x -= info.canMoveBy;\n                info.subTreeTranslation -= info.canMoveBy;\n                if (hasChild) {\n                    this.shiftSubordinates(layout, treeIntersect, info.canMoveBy);\n                    treeBounds.x = Math.min(treeBounds.x, info.x);\n                    treeBounds.right = Math.max(treeBounds.right, info.x + dim.width);\n                    treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n                    treeBounds.x -= info.canMoveBy;\n                    treeBounds.right -= info.canMoveBy;\n                }\n                if (firstChild && firstChildInfo.canMoveBy > info.canMoveBy) {\n                    info.canMoveBy = firstChildInfo.canMoveBy - info.canMoveBy;\n                }\n                else if (firstChild && info.canMoveBy !== undefined) {\n                    info.canMoveBy = 0;\n                }\n            }\n        }\n        else {\n            if (hasChild) {\n                treeBounds.x = Math.min(treeBounds.x, shapeBounds.x);\n                treeBounds.right = Math.max(treeBounds.right, shapeBounds.x + dim.width);\n                treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n            }\n            if (!info.translate) {\n                info.canMoveBy = 0;\n                info.subTreeTranslation = 0;\n            }\n        }\n        if (!dontupdate) {\n            shapeBounds = { x: info.x, y: dim.y, right: info.x + dim.width, bottom: dim.y + dim.height };\n            levelBounds.push({ rBounds: shapeBounds });\n            this.updateRearBounds(layout, shape, levelBounds, level);\n        }\n    };\n    HierarchicalTree.prototype.updateRearBounds = function (layout, shape, levelBounds, level, intersect) {\n        var bnds;\n        var index;\n        var isLastLeaf = true;\n        var i;\n        var info = {};\n        var firstLevel;\n        var lastLevel;\n        var bottom;\n        if (shape) {\n            info = layout.graphNodes[shape.id];\n            intersect = info.intersect;\n            isLastLeaf = !info.tree.children.length && !info.tree.assistants.length;\n        }\n        firstLevel = levelBounds[0].rBounds;\n        lastLevel = levelBounds[levelBounds.length - 1].rBounds;\n        if (intersect && intersect.length) {\n            bnds = layout.levels[intersect[0]].rBounds;\n            bottom = bnds.bottom;\n            if (bnds.y < firstLevel.y) {\n                bnds.bottom = firstLevel.y;\n                levelBounds.splice(0, 0, { rBounds: bnds });\n            }\n            if (bottom > lastLevel.bottom) {\n                levelBounds.push({ rBounds: { x: bnds.x, right: bnds.right, y: firstLevel.bottom, bottom: bottom } });\n            }\n            else {\n                bnds = layout.levels[intersect[intersect.length - 1]].rBounds;\n                if (isLastLeaf && bnds.bottom > lastLevel.bottom) {\n                    bnds.y = lastLevel.bottom;\n                    levelBounds.push({ rBounds: bnds });\n                }\n            }\n            index = intersect[0];\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n            index += levelBounds.length;\n            layout.levels.splice(index, intersect.length);\n        }\n        else {\n            index = this.findLevel(layout, levelBounds[levelBounds.length - 1].rBounds, level);\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.shiftSubordinates = function (layout, intersect, diff) {\n        var i;\n        //Shift the sublevels by the distance diff\n        if (diff !== 0) {\n            for (i = 0; i < intersect.length; i++) {\n                if (layout.levels[intersect[i]].rBounds) {\n                    layout.levels[intersect[i]].rBounds.x -= diff;\n                    layout.levels[intersect[i]].rBounds.right -= diff;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.setDepthSpaceForAssitants = function (layout, shape, bottom, height, lev, vSpace) {\n        var info = layout.graphNodes[shape.id];\n        var asst = {};\n        var asstHeight;\n        var i;\n        var asstElement;\n        var max;\n        max = bottom;\n        //Vertically place the assistants as alternate layout(alternatively at both right and left sides of parent)\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            if (asst) {\n                asst.tree.children = asst.tree.assistants = [];\n                asst.y = bottom;\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstHeight = asstElement.actualSize.height;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstHeight = asstElement.actualSize.width;\n                }\n                max = bottom + asstHeight + vSpace / 2;\n                layout.maxLevel = lev + 1;\n                if (i % 2 === 1 && i !== info.tree.assistants.length - 1) {\n                    bottom = max;\n                    lev++;\n                }\n            }\n        }\n        return { level: layout.maxLevel, bottom: bottom + asstHeight + vSpace };\n    };\n    HierarchicalTree.prototype.setBreadthSpaceForAssistants = function (layout, shape, dim, space, bottom, level) {\n        var asst = {};\n        var asstWidth;\n        var prevBounds;\n        var bounds;\n        var asstElement;\n        var i;\n        var info = layout.graphNodes[shape.id];\n        var max = bottom;\n        var lev = level;\n        var left;\n        var diff;\n        var intersect;\n        var levelBounds = { x: 0, y: 0, right: 0, bottom: 0 };\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            //Arrange assistants at both left and right sides of parent(like alternate layout)\n            //Check - By default, distance to be left between parent and child nodes is assumed as 20.\n            //It can be modified/customized later.\n            if (asst) {\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstWidth = asstElement.actualSize.width;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstWidth = asstElement.actualSize.height;\n                }\n                if (i % 2 === 0) {\n                    left = space + dim.width / 2 - 20 - asstWidth;\n                }\n                else {\n                    left = space + dim.width / 2 + 20;\n                }\n                //Check - What will happen if update leaf node is called? Since assistants don't have children\n                bounds = this.updateTree(layout, left, asst.y, layout.nameTable[info.tree.assistants[i]], lev + 1);\n                if (!this.hasChild(layout, shape)) {\n                    if (i === 0) {\n                        levelBounds = bounds;\n                    }\n                    else {\n                        this.uniteRects(levelBounds, bounds);\n                    }\n                }\n                if (i % 2 === 0 && asst.prevBounds) {\n                    if (diff === undefined) {\n                        diff = asst.canMoveBy;\n                    }\n                    else {\n                        diff = Math.min(diff, asst.canMoveBy);\n                    }\n                }\n                if (i % 2 === 1 || i === info.tree.assistants.length - 1) {\n                    intersect = this.findIntersectingLevels(layout, bounds, lev + 1);\n                    //Update rightmost positions of known layout levels\n                    this.updateRearBounds(layout, null, [{ rBounds: bounds }], lev + 1, intersect);\n                    lev++;\n                }\n            }\n        }\n        if (levelBounds) {\n            levelBounds.canMoveBy = diff;\n        }\n        return levelBounds;\n    };\n    HierarchicalTree.prototype.getDimensions = function (layout, shape, x, y, level) {\n        var width;\n        width = shape.actualSize.width;\n        var height;\n        height = shape.actualSize.height;\n        if (layout.orientation.indexOf('Left') !== -1) {\n            if (!level) {\n                var temp = void 0;\n                temp = x;\n                x = y;\n                y = temp;\n            }\n            height = shape.actualSize.width;\n            width = shape.actualSize.height;\n        }\n        return { x: x, y: y, width: width, height: height };\n    };\n    HierarchicalTree.prototype.hasChild = function (layout, shape) {\n        //Check whether the node has children            \n        var shape1 = layout.graphNodes[shape.id];\n        return shape1 ? shape1.tree.children && shape1.tree.children.length : 0;\n    };\n    HierarchicalTree.prototype.updateHorizontalTree = function (layout, shape, prev, x, y, level) {\n        //Get dimensions with respect to layout orientations  \n        var dimensions;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = {};\n        info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev;\n        lev = level;\n        var right = 0;\n        right = x;\n        var bottom;\n        bottom = y;\n        var width;\n        var height;\n        var child;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var maxLevel;\n        var translateSibilingsBy;\n        var canMoveBy;\n        var oldActBounds;\n        var i;\n        var childInfo;\n        var prevLayoutLevels;\n        var firstChildInfo;\n        prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        if (this.hasChild(layout, shape)) {\n            var h = void 0;\n            h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            for (i = 0; i < info.tree.children.length; i++) {\n                child = layout.nameTable[info.tree.children[i]];\n                width = child.actualSize.width;\n                height = child.actualSize.height;\n                childWidth = h ? height : width;\n                childHeight = h ? width : height;\n                prevBounds = layout.levels[lev + 1] ? layout.levels[lev + 1].rBounds : null;\n                //Update sub tree\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[info.tree.children[i - 1]]);\n                childInfo = layout.graphNodes[child.id];\n                info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n                actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n                if (i === 0) {\n                    //Compare with previous(right most) subtree\n                    bounds = {\n                        x: Math.min(childInfo.x, childBounds.x), y: Math.min(childInfo.y, childBounds.y),\n                        right: childBounds.right, bottom: childBounds.bottom\n                    };\n                    firstChildInfo = childInfo;\n                }\n                if (!oldActBounds) {\n                    oldActBounds = actBounds;\n                }\n                else {\n                    oldActBounds.x = actBounds.x;\n                    oldActBounds.y = actBounds.y;\n                    if (actBounds.right > oldActBounds.right) {\n                        oldActBounds.right = actBounds.right;\n                    }\n                    oldActBounds.bottom = actBounds.bottom;\n                    //oldActBounds = actBounds;\n                }\n                //Compare with previous subtree if level of the child is greater than the level of previous sub tree\n                //Check - what will happen if level of second child is greater than current child\n                if (i === 0) {\n                    info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n                }\n                if (this.hasChild(layout, child)) {\n                    if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                        if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                            info.firstChild.canMoveBy = canMoveBy;\n                            childInfo.canMoveBy = canMoveBy;\n                            canMoveBy = info.firstChild.canMoveBy;\n                            layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy;\n                        }\n                        var canMoveValue = canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy;\n                        info.firstChild = { x: childInfo.firstChild.x, canMoveBy: canMoveValue, child: child.id };\n                    }\n                    else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                        info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                    }\n                }\n                maxLevel = maxLevel ? Math.max(childInfo.maxLevel, maxLevel) : childInfo.maxLevel;\n                this.uniteRects(bounds, childBounds);\n                if (i !== 0 && !this.hasChild(layout, child) && childInfo.subTreeTranslation < 0) {\n                    right = childBounds.right - childInfo.subTreeTranslation + layout.horizontalSpacing;\n                }\n                else {\n                    right = childBounds.right + layout.horizontalSpacing;\n                }\n            }\n            if (!isNaN(translateSibilingsBy)) {\n                firstChildInfo.canMoveBy = translateSibilingsBy;\n            }\n            info.mid = (firstChildInfo.x + oldActBounds.right) / 2 - dimensions.width / 2;\n            //Set parent based on the chart type\n            if (side === 'Left') {\n                info.mid = actBounds.right - dimensions.width;\n            }\n            else if (side === 'Right') {\n                info.mid = x;\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateHorizontalTreeWithMultipleRows = function (layout, shape, prev, x, y, level) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var firstChildInfo;\n        var maxLevel;\n        var bounds;\n        var rowBounds;\n        var width;\n        var height;\n        var diff;\n        var translateSibilingsBy;\n        var fchild;\n        var maxRowWidth;\n        var j;\n        var i;\n        var k;\n        var max;\n        var leftCenter;\n        var rightCenter;\n        //Get dimensions with respect to layout orientations\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev = level;\n        var right = x;\n        var bottom = y;\n        var prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        var minTranslation = 0;\n        if (this.hasChild(layout, shape)) {\n            var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            var align = void 0;\n            var rows = this.splitChildrenInRows(layout, shape);\n            var unique = info.tree.children.length === 5 && rows[0].length === 3;\n            var leftTree = [];\n            var rightTree = [];\n            if (!unique) {\n                this.splitRows(rows, leftTree, rightTree);\n            }\n            else {\n                rightTree = rows;\n            }\n            var treeInfo = { leftTree: leftTree, rows: rows, rightTree: rightTree, dimensions: dimensions };\n            var rightMost = this.updateLeftTree(layout, treeInfo, shape, x, bottom, lev);\n            bounds = treeInfo.bounds;\n            var rightX = void 0;\n            var center = (rightMost || 0) + (rightMost !== undefined ? (layout.horizontalSpacing / 2) : 0);\n            if (rightMost !== undefined) {\n                info.mid = center - dimensions.width / 2;\n                rightX = rightMost + layout.horizontalSpacing;\n            }\n            bottom = y;\n            var rightBounds = void 0;\n            rightBounds = [];\n            for (i = 0; i < rightTree.length; i++) {\n                if (rows[i].length % 2 === 1 && i === rightTree.length - 1 || unique) {\n                    right = x;\n                }\n                else {\n                    right = rightX || x;\n                }\n                if (i !== 0) {\n                    bottom = rightBounds[i - 1].bottom + layout.verticalSpacing;\n                }\n                for (j = 0; j < rightTree[i].length; j++) {\n                    child = layout.nameTable[rightTree[i][j]];\n                    width = child.actualSize.width;\n                    height = child.actualSize.height;\n                    childWidth = h ? height : width;\n                    childHeight = h ? width : height;\n                    //Update sub tree\n                    childInfo = layout.graphNodes[child.id];\n                    childInfo.actualLevel = lev + 1 + i;\n                    if (j === 0 && leftTree[i] && leftTree[i].length) {\n                        childInfo.translate = false;\n                    }\n                    if (unique && i === 1) {\n                        if (j === 0 && leftCenter + childWidth + layout.horizontalSpacing <= rightCenter) {\n                            align = true;\n                            right = leftCenter - childWidth / 2;\n                        }\n                        if (align && j === 1) {\n                            right = rightCenter - childWidth / 2;\n                        }\n                    }\n                    childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[rightTree[i][j - 1]]);\n                    if (unique && j <= 2 && i === 0) {\n                        if (j === 1) {\n                            leftCenter = childBounds.x - layout.horizontalSpacing / 2;\n                            rightCenter = childBounds.x + childWidth + layout.horizontalSpacing / 2;\n                        }\n                    }\n                    if (j === 0) {\n                        rightBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                    }\n                    else {\n                        this.uniteRects(rightBounds[i], childBounds);\n                    }\n                    if (!bounds) {\n                        bounds = {\n                            x: rightBounds[i].x, y: rightBounds[i].y, right: rightBounds[i].right,\n                            bottom: rightBounds[i].bottom\n                        };\n                    }\n                    this.uniteRects(bounds, rightBounds[i]);\n                    right = childBounds.right + layout.horizontalSpacing;\n                    if (!info.firstChild || ((i === rightTree.length - 1 && rows[i].length % 2 === 1) || unique)\n                        && j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                        minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                        info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                    }\n                    treeInfo.leftCenter = leftCenter;\n                    treeInfo.rightCenter = rightCenter;\n                    treeInfo.align = align;\n                    treeInfo.level = lev;\n                    treeInfo.rightBounds = rightBounds;\n                    this.alignRowsToCenter(layout, i, shape, treeInfo, rightX);\n                }\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateLeftTree = function (layout, treeInfo, shape, x, bottom, lev) {\n        var leftTree = treeInfo.leftTree;\n        var info = layout.graphNodes[shape.id];\n        var right;\n        var leftBounds = [];\n        var minTranslation;\n        var rightMost;\n        var childBounds;\n        var bounds;\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        //Arrange left side\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            right = x;\n            if (leftBounds[i - 1]) {\n                bottom = leftBounds[i - 1].bottom + layout.verticalSpacing;\n            }\n            for (var j = 0; j < leftTree[i].length; j++) {\n                var child = layout.nameTable[leftTree[i][j]];\n                var childWidth = h ? child.actualSize.height : child.actualSize.width;\n                var childHeight = h ? child.actualSize.width : child.actualSize.height;\n                //Update sub tree\n                var childInfo = layout.graphNodes[child.id];\n                childInfo.actualLevel = lev + 1 + i;\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[leftTree[i][j - 1]]);\n                if (j === 0) {\n                    leftBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                }\n                else {\n                    this.uniteRects(leftBounds[i], childBounds);\n                }\n                if (i === 0 && j === 0) {\n                    minTranslation = childInfo.canMoveBy;\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                else if (j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                    minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                right = childBounds.right + layout.horizontalSpacing;\n            }\n            if (i === 0) {\n                rightMost = leftBounds[i].right;\n            }\n            else {\n                rightMost = Math.max(rightMost, leftBounds[i].right);\n            }\n        }\n        //Translate to same positions\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            if (rightMost !== leftBounds[i].right) {\n                var diff = rightMost - leftBounds[i].right;\n                for (var j = 0; j < leftTree[i].length; j++) {\n                    var element = layout.nameTable[leftTree[i][j]];\n                    var elementInfo = layout.graphNodes[leftTree[i][j]];\n                    elementInfo.x += diff;\n                }\n                //leftBounds[i].x += diff;\n                //leftBounds[i].right += diff;\n            }\n            if (i === 0) {\n                bounds = { x: leftBounds[0].x, y: leftBounds[0].y, right: leftBounds[0].right, bottom: leftBounds[0].bottom };\n            }\n            else {\n                this.uniteRects(bounds, leftBounds[i]);\n            }\n        }\n        treeInfo.bounds = bounds;\n        return rightMost;\n    };\n    HierarchicalTree.prototype.alignRowsToCenter = function (layout, i, shape, treeInfo, rightX) {\n        var max;\n        var centered;\n        var diff;\n        var info = layout.graphNodes[shape.id];\n        var rows = treeInfo.rows;\n        var rightTree = treeInfo.rightTree;\n        var leftCenter = treeInfo.leftCenter;\n        var rightCenter = treeInfo.rightCenter;\n        var align = treeInfo.align;\n        var rightBounds = treeInfo.rightBounds;\n        var dimensions = treeInfo.dimensions;\n        var lev = treeInfo.level;\n        var unique = info.tree.children.length === 5 && rows[0].length === 3;\n        if (unique && i === 1) {\n            max = (rightBounds[0].right - rightBounds[0].x) >= (rightBounds[1].right - rightBounds[1].x) ? 0 : 1;\n        }\n        if (i === rows.length - 1) {\n            if (rows[i].length % 2 === 1 || unique && i === 1) {\n                centered = rightTree[i][Math.floor(rightTree[i].length / 2)];\n                var centerObjct = void 0;\n                centerObjct = layout.nameTable[centered];\n                var childDimension = void 0;\n                var centeredX = layout.graphNodes[centered].x;\n                var centeredY = layout.graphNodes[centered].y;\n                childDimension = this.getDimensions(layout, centerObjct, centeredX, centeredY, lev + 1);\n                diff = undefined;\n                if (!align && unique) {\n                    if (max === 1) {\n                        i = 0;\n                    }\n                    diff = (rightBounds[max].x + rightBounds[max].right) / 2 - (rightBounds[i].x + rightBounds[i].right) / 2;\n                    if (i === 0) {\n                        info.mid += diff;\n                    }\n                }\n                else if (!unique && rightX !== undefined) {\n                    diff = rightX - layout.horizontalSpacing / 2 - (centeredX + childDimension.width / 2);\n                }\n                if (diff !== undefined) {\n                    this.updateRearBoundsOfTree(layout, rightTree[i], diff, dimensions);\n                }\n                if (unique) {\n                    info.mid = (rightCenter + leftCenter) / 2 + (i === 0 ? diff : 0) - dimensions.width / 2;\n                }\n                if (info.mid === undefined && layout.graphNodes[centered]) {\n                    info.mid = centeredX;\n                }\n                align = false;\n                i++;\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateRearBoundsOfTree = function (layout, rightTree, diff, dimensions) {\n        for (var j = 0; j < rightTree.length; j++) {\n            var childInfo = layout.graphNodes[rightTree[j]];\n            var child = layout.nameTable[rightTree[j]];\n            childInfo.x += diff;\n            childInfo.canMoveBy += diff;\n            if (j === rightTree.length - 1) {\n                //removed child dimensions call calculation, since that is not used\n                var childBnds = {\n                    x: childInfo.x, y: childInfo.y, right: childInfo.x +\n                        dimensions.width, bottom: childInfo.y + dimensions.height\n                };\n                var intersect = this.findIntersectingLevels(layout, childBnds, childInfo.actualLevel);\n                this.updateRearBounds(layout, null, [{ rBounds: childBnds }], childInfo.actualLevel, intersect);\n            }\n        }\n    };\n    HierarchicalTree.prototype.splitRows = function (rows, leftTree, rightTree) {\n        for (var i = 0; i < rows.length; i++) {\n            leftTree[i] = [];\n            rightTree[i] = [];\n            var half = void 0;\n            half = rows[i].length;\n            if (rows[i].length % 2 !== 1) {\n                half = Math.ceil(rows[i].length / 2);\n                for (var k = 0; k < half; k++) {\n                    leftTree[i].push(rows[i][k]);\n                }\n            }\n            for (var j = leftTree[i].length; j < rows[i].length; j++) {\n                rightTree[i].push(rows[i][j]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateVerticalTree = function (layout, shape, x, y, level, dontUpdate) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var oddBounds;\n        var evenBounds;\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.tree.children[0]];\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        var factor = info.tree.type === 'Left' ? -1 : 0;\n        var right = x;\n        var bottom = y;\n        var lev;\n        lev = level;\n        var i;\n        var intersect;\n        var type;\n        var levels = [];\n        var oddLevels = [];\n        var canMoveBy;\n        var diff;\n        for (i = 0; i < info.tree.children.length; i++) {\n            if (info.tree.type === 'Alternate') {\n                //arrange at both left and right\n                type = (i % 2 === 0 && info.tree.children.length > 2) ? 'Left' : 'Right';\n                factor = (i % 2 === 0 && info.tree.children.length > 2) ? -1 : 0;\n            }\n            right = x + this.findOffset(layout, shape, info, type);\n            child = layout.nameTable[info.tree.children[i]];\n            childWidth = h ? child.actualSize.height : child.actualSize.width;\n            childHeight = h ? child.actualSize.width : child.actualSize.height;\n            //Update sub tree\n            childBounds = this.updateTree(layout, right + factor * childWidth, bottom, child, level + 1, undefined, true);\n            childInfo = layout.graphNodes[child.id];\n            actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n            if (i === 0) {\n                this.uniteRects(childBounds, actBounds);\n                bounds = childBounds;\n            }\n            else {\n                this.uniteRects(bounds, childBounds);\n            }\n            //Check and adjust the space left from previous subtree/sibling\n            if (childInfo.prevBounds && !(info.tree.type === 'Alternate' && i % 2 === 1 && info.tree.children.length > 2)) {\n                canMoveBy = canMoveBy !== undefined ? Math.min(childInfo.canMoveBy, canMoveBy) : childInfo.canMoveBy;\n            }\n            //Max level of the subtree node\n            info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n            if (!(info.tree.type === 'Alternate' && info.tree.children.length > 2 && i % 2 === 0)) {\n                if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                    //alternate - arrange children with even index(0,2,4,6,..) at the next level\n                    bottom = Math.max(childBounds.bottom, prevBounds.bottom) + layout.verticalSpacing / 2;\n                }\n                else {\n                    // left/right - arrange next child at the nect level(bottom)\n                    bottom = childBounds.bottom + layout.verticalSpacing / 2;\n                }\n                level = info.maxLevel;\n                levels.push({ rBounds: actBounds });\n                if (!evenBounds) {\n                    evenBounds = {\n                        x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth,\n                        bottom: childInfo.y + childHeight\n                    };\n                }\n                else {\n                    this.uniteRects(evenBounds, actBounds);\n                }\n                if (childInfo.levelBounds) {\n                    levels = levels.concat(childInfo.levelBounds);\n                }\n            }\n            else {\n                if (i !== 0) {\n                    bottom = prevBounds.bottom + layout.verticalSpacing / 2;\n                }\n                oddLevels.push({ rBounds: actBounds });\n                if (childInfo.levelBounds) {\n                    oddLevels = oddLevels.concat(childInfo.levelBounds);\n                }\n            }\n            if (i === 0) {\n                info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n            }\n            if (this.hasChild(layout, child)) {\n                if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                    if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                        var canMoveBy_1 = info.firstChild.canMoveBy;\n                        childInfo.canMoveBy = canMoveBy_1;\n                        layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy_1;\n                        info.firstChild.canMoveBy = canMoveBy_1;\n                    }\n                    info.firstChild = {\n                        x: childInfo.firstChild.x, canMoveBy: canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy,\n                        child: child.id\n                    };\n                }\n                else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                    info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                }\n            }\n            prevBounds = actBounds;\n        }\n        //To set level bounds(right most position of levels)\n        if (!dontUpdate) {\n            if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                oddBounds = {\n                    x: oddLevels[0].rBounds.x, y: oddLevels[0].rBounds.y,\n                    right: oddLevels[oddLevels.length - 1].rBounds.right, bottom: oddLevels[oddLevels.length - 1].rBounds.bottom\n                };\n                intersect = this.findIntersectingLevels(layout, oddBounds, lev + 1);\n                this.updateRearBounds(layout, null, oddLevels, lev + 1, intersect);\n            }\n            intersect = this.findIntersectingLevels(layout, evenBounds || bounds, lev + 1);\n            this.updateRearBounds(layout, null, evenBounds ? levels : [{ rBounds: bounds }], lev + 1, intersect);\n        }\n        else {\n            info.levelBounds = levels;\n        }\n        if (!isNaN(canMoveBy)) {\n            layout.graphNodes[firstChild.id].canMoveBy = canMoveBy;\n        }\n        info.childBounds = bounds;\n        info.mid = x;\n        return bounds;\n    };\n    HierarchicalTree.prototype.splitChildrenInRows = function (layout, shape) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var column;\n        column = 4;\n        var rows = [];\n        var childNodes;\n        childNodes = info.tree.children.length;\n        var children = this.extend(info.tree.children);\n        if (info.tree.rows) {\n            var count = void 0;\n            count = info.tree.children.length;\n            var columns = void 0;\n            columns = Math.ceil(count / info.tree.rows);\n            if (columns % 2 === 0) {\n                column = columns;\n            }\n            else {\n                column = columns + 1;\n            }\n        }\n        else if (info.tree.children.length === 3 || info.tree.children.length === 4) {\n            column = 2;\n        }\n        else if (info.tree.children.length === 5) {\n            column = 3;\n        }\n        while (childNodes > 0) {\n            rows[rows.length] = children.splice(0, column);\n            childNodes -= column;\n            if (childNodes < column) {\n                column = childNodes;\n            }\n        }\n        return rows;\n    };\n    HierarchicalTree.prototype.extend = function (temp) {\n        var i;\n        var dummy = [];\n        for (i = 0; i < temp.length; i++) {\n            dummy[i] = temp[i];\n        }\n        return dummy;\n    };\n    HierarchicalTree.prototype.findOffset = function (layout, shape, info, type) {\n        var offset = 0;\n        var space = (layout.orientation.indexOf('Left') !== -1) ? shape.actualSize.height :\n            shape.actualSize.width;\n        var treeType = type ? type : info.tree.type;\n        offset = info.tree.offset || 20;\n        if (info.tree.type === 'Alternate') {\n            if (offset >= layout.horizontalSpacing) {\n                offset = layout.horizontalSpacing / 2;\n            }\n        }\n        switch (treeType) {\n            case 'Left':\n                offset = space / 2 - offset;\n                break;\n            case 'Right':\n                offset = offset + space / 2;\n                break;\n        }\n        return offset;\n    };\n    HierarchicalTree.prototype.uniteRects = function (rect1, rect2) {\n        //Unite two rects\n        rect1.x = Math.min(rect1.x, rect2.x);\n        rect1.right = Math.max(rect1.right, rect2.right);\n        rect1.bottom = Math.max(rect1.bottom, rect2.bottom);\n    };\n    HierarchicalTree.prototype.spaceLeftFromPrevSubTree = function (layout, shape, bounds) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var dif;\n        var prevBounds;\n        var intersect;\n        var k;\n        var space;\n        space = layout.horizontalSpacing;\n        //Find the minimum distance to move towards previous sub tree\n        for (k = 0; k < info.intersect.length; k++) {\n            prevBounds = layout.levels[info.intersect[k]].rBounds;\n            dif = bounds.x - (prevBounds.right + space);\n            if (info.diff === undefined || dif < info.diff) {\n                info.diff = dif;\n                info.prevBounds = layout.levels[info.intersect[k]].rBounds;\n            }\n        }\n    };\n    HierarchicalTree.prototype.findIntersectingLevels = function (layout, bounds, level, actualLevel) {\n        //intersecting with exact Level\n        var bnds;\n        bnds = { x: bounds.x, y: bounds.y, right: bounds.right, bottom: bounds.bottom };\n        bnds.y -= layout.verticalSpacing / 2;\n        bnds.bottom += layout.verticalSpacing / 2;\n        var intersectingLevels;\n        intersectingLevels = [];\n        var rBounds;\n        var l;\n        l = actualLevel !== undefined ? actualLevel : level;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        //Performance - We can consider only the intersecting levels\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y)\n                || (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y &&\n                    bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                var index = 0;\n                intersectingLevels.splice(index, 0, l);\n            }\n            else if (rBounds && rBounds.bottom < bnds.y) {\n                break;\n            }\n            l--;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l >= 0);\n        l = (actualLevel !== undefined ? actualLevel : level) + 1;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y) ||\n                (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y && bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                intersectingLevels.push(l);\n            }\n            else if (rBounds && rBounds.y > bnds.bottom) {\n                break;\n            }\n            l++;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l <= layout.levels.length);\n        return intersectingLevels;\n    };\n    HierarchicalTree.prototype.findLevel = function (layout, bounds, level) {\n        var bnds;\n        bnds = bounds;\n        var l;\n        l = 0;\n        var rBounds;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        while (l < layout.levels.length) {\n            if (rBounds && bnds.bottom < rBounds.y) {\n                return l;\n            }\n            else {\n                l++;\n            }\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        }\n        return l;\n    };\n    HierarchicalTree.prototype.getParentNode = function (layout, node) {\n        //Return the first parent node\n        return layout.nameTable[layout.nameTable[node.inEdges[0]].sourceID];\n    };\n    HierarchicalTree.prototype.updateEdges = function (layout, node, depth, action, nodes) {\n        var layoutInfo;\n        layoutInfo = layout.graphNodes[node.id];\n        var j;\n        if (node.outEdges && node.outEdges.length && (node.isExpanded || (action === DiagramAction.Render))) {\n            for (j = 0; j < node.outEdges.length; j++) {\n                var edge = void 0;\n                edge = layout.nameTable[layout.nameTable[node.outEdges[j]].targetID];\n                if (edge && !edge.excludeFromLayout) {\n                    if (layoutInfo.tree.children.indexOf(edge.id) === -1) {\n                        layoutInfo.tree.children.push(edge.id);\n                    }\n                    if (edge.outEdges && edge.outEdges.length && edge.isExpanded) {\n                        layoutInfo.tree.hasSubTree = true;\n                    }\n                    this.updateEdges(layout, edge, depth + 1, action, nodes);\n                }\n            }\n        }\n        //set level info\n        layoutInfo.tree.level = depth;\n        //By default, orientation is horizontal for nested trees\n        if (layoutInfo.tree.hasSubTree) {\n            layoutInfo.tree.orientation = 'Horizontal';\n            layoutInfo.tree.type = 'Center';\n        }\n        //Customizing assistants and children collection\n        //Performance-Instead of reading the method everytime, we can set once and can reuse that\n        if ((layout.getLayoutInfo || layout.layoutInfo) && layout.type === 'OrganizationalChart') {\n            layout.getLayoutInfo ?\n                layout.getLayoutInfo(node, layoutInfo.tree) : updateLayoutValue(layoutInfo.tree, layout.layoutInfo, nodes, node);\n            if (layoutInfo.tree.type === 'Balanced' && layoutInfo.tree.hasSubTree) {\n                layoutInfo.tree.type = 'Center';\n                layoutInfo.tree.orientation = 'Horizontal';\n            }\n        }\n        if (layout.level && layoutInfo.tree.type !== 'Alternate' && depth >= layout.level) {\n            layoutInfo.tree.hasSubTree = false;\n        }\n    };\n    HierarchicalTree.prototype.updateAnchor = function (layout, bounds, viewPort) {\n        var node;\n        var fixedNode;\n        var width = 0;\n        var height = 0;\n        var mod = 0;\n        var yValue = 0;\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        var layoutBounds;\n        layoutBounds = layout.bounds ? layout.bounds : viewPortBounds;\n        var orientation = layout.orientation;\n        //Anchor based on fixed nodes\n        if (layout.fixedNode) {\n            fixedNode = layout.nameTable[layout.fixedNode];\n            width = fixedNode.actualSize.width;\n            height = fixedNode.actualSize.height;\n            layout.anchorX = fixedNode.offsetX;\n            layout.anchorY = fixedNode.offsetY;\n            var pivot = fixedNode.pivot;\n            layout.anchorX += layout.orientation === 'RightToLeft' ? width * pivot.x : -width * pivot.x;\n            layout.anchorY += layout.orientation === 'BottomToTop' ? height * pivot.y : -height * pivot.y;\n            node = fixedNode;\n            mod = 0;\n            while (node.inEdges.length) {\n                node = this.getParentNode(layout, node);\n                mod += layout.graphNodes[node.id].subTreeTranslation || 0;\n            }\n            if (layout.orientation.indexOf('Left') !== -1) {\n                yValue = layout.graphNodes[fixedNode.id].y;\n                orientation === 'LeftToRight' ? layout.anchorX -= yValue : layout.anchorX += yValue;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].x + mod;\n            }\n            else {\n                yValue = layout.graphNodes[fixedNode.id].y;\n                layout.anchorX -= layout.graphNodes[fixedNode.id].x + mod;\n                orientation === 'TopToBottom' ? layout.anchorY -= yValue : layout.anchorY += yValue;\n            }\n        }\n        else {\n            if (orientation === 'TopToBottom' || orientation === 'BottomToTop') {\n                switch (layout.horizontalAlignment) {\n                    case 'Left':\n                        layout.anchorX = (layoutBounds.x - bounds.x) + layout.margin.left;\n                        break;\n                    case 'Right':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width - layout.margin.right - bounds.right;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Auto':\n                    case 'Top':\n                        var top_1;\n                        top_1 = layoutBounds.y + layout.margin.top;\n                        layout.anchorY = orientation === 'TopToBottom' ? top_1 : bounds.bottom + top_1;\n                        break;\n                    case 'Bottom':\n                        var bottom = void 0;\n                        bottom = layoutBounds.y + layoutBounds.height - layout.margin.bottom;\n                        layout.anchorY = orientation === 'TopToBottom' ? bottom - bounds.bottom : bottom;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.y + layoutBounds.height / 2;\n                        layout.anchorY = layout.orientation === 'TopToBottom' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n            }\n            else {\n                switch (layout.horizontalAlignment) {\n                    case 'Auto':\n                    case 'Left':\n                        var left = void 0;\n                        left = layoutBounds.x + layout.margin.left;\n                        layout.anchorX = orientation === 'LeftToRight' ? left : bounds.bottom + left;\n                        break;\n                    case 'Right':\n                        var right = void 0;\n                        right = layoutBounds.x + layoutBounds.width - layout.margin.right;\n                        layout.anchorX = orientation === 'LeftToRight' ? right - bounds.bottom : right;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.width / 2 + layoutBounds.x;\n                        layout.anchorX = layout.orientation === 'LeftToRight' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Top':\n                        layout.anchorY = layoutBounds.y + layout.margin.top - bounds.x;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height / 2 - (bounds.right + bounds.x) / 2;\n                        break;\n                    case 'Bottom':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height - layout.margin.bottom - bounds.right;\n                        break;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateConnectors = function (layout, node, level) {\n        var i;\n        var info;\n        var nodeWidth;\n        var nodeHeight;\n        var targetWidth;\n        var targetHeight;\n        var length;\n        var offsetLen;\n        var points;\n        var segments;\n        var target;\n        var conn;\n        var relative;\n        var center;\n        var layoutProp;\n        //Route out edges\n        info = layout.graphNodes[node.id];\n        var direction;\n        if (node.outEdges.length) {\n            for (i = 0; i < node.outEdges.length; i++) {\n                conn = layout.nameTable[node.outEdges[i]];\n                conn.points = [];\n                target = layout.nameTable[conn.targetID];\n                if (conn.visible) {\n                    conn.visited = true;\n                    if (layout.getConnectorSegments) {\n                        segments = layout.getConnectorSegments(conn);\n                    }\n                    else {\n                        if (info && info.tree.children.indexOf(conn.targetID) !== -1) {\n                            conn.segments = [];\n                            if (layout.type === 'OrganizationalChart' && conn.type === 'Orthogonal') {\n                                this.updateSegments(layout, conn, node, target, i);\n                            }\n                        }\n                    }\n                    if (target && (target.isExpanded || this.hasChild(layout, target))) {\n                        this.updateConnectors(layout, target, level + 1);\n                    }\n                }\n            }\n        }\n        if (info && info.tree.assistants.length) {\n            //In-Edge routing of assistant nodes\n            for (i = 0; i < info.tree.assistants.length; i++) {\n                target = layout.nameTable[info.tree.assistants[i]];\n                conn = layout.nameTable[target.inEdges[0]];\n                this.get3Points(layout, node, target, conn);\n                if (target.isExpanded || this.hasChild(layout, target)) {\n                    this.updateConnectors(layout, target, level + 1);\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegments = function (layout, conn, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        //Connector routing - Horizontal layout orientation\n        if (info.tree.assistants.length) {\n            //Route in-edge of child node, if the parent has assistant\n            this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n        }\n        else {\n            //Route in-edge of child node\n            if (info.tree.orientation === 'Horizontal' && info.tree.type === 'Balanced') {\n                this.updateSegmentsForBalancedTree(layout, conn, node, target, i);\n            }\n            else {\n                if (info.tree.orientation === 'Horizontal') {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n                }\n                else {\n                    if (info.tree.offset < 5) {\n                        this.get5Points(layout, node, target, conn);\n                    }\n                    else {\n                        this.get3Points(layout, node, target, conn);\n                    }\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegmentsForBalancedTree = function (layout, connector, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        var center;\n        var relative;\n        if (info.tree.children.length === 5 && i > 2) {\n            relative = info.tree.children[1];\n            if (isNaN(layout.graphNodes[relative].treeWidth)) {\n                layout.graphNodes[relative].treeWidth = layout.nameTable[relative].actualSize.width;\n            }\n            var factor = i !== 3 ? 1 : -1;\n            if (layout.orientation.indexOf('Left') !== -1) {\n                center = layout.nameTable[relative].offsetY - layout.graphNodes[relative].treeWidth / 2 -\n                    (layout.verticalSpacing * factor / 2);\n            }\n            else {\n                center = layout.nameTable[relative].offsetX +\n                    layout.graphNodes[relative].treeWidth / 2 + (layout.horizontalSpacing * factor) / 2;\n            }\n            this.getSegmentsForMultipleRows(layout, node, target, connector);\n        }\n        else {\n            if (info.tree.children.length > 5) {\n                if (i < 4) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else if (info.tree.children.length === 4) {\n                if (i < 2) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else {\n                this.getSegmentsForMultipleRows(layout, node, target, connector);\n            }\n        }\n    };\n    HierarchicalTree.prototype.get3Points = function (layout, node, target, connector) {\n        var points = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        if (layout.orientation.indexOf('Top') !== -1) {\n            var startingPoint = layout.orientation.indexOf('Top') === 0 ? nodeBounds.bottomCenter :\n                nodeBounds.topCenter;\n            var endPoint = node.offsetX > target.offsetX ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: nodeBounds.bottomCenter.x, y: endPoint.y }, endPoint);\n        }\n        else {\n            var startingPoint = layout.orientation.indexOf('Left') === 0 ? nodeBounds.middleRight :\n                nodeBounds.middleLeft;\n            var endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            points.push(startingPoint, { x: targetBounds.bottomCenter.x, y: nodeBounds.middleRight.y }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.get5Points = function (layout, node, target, connector) {\n        var points = [];\n        var layoutprop;\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        var info = layout.graphNodes[node.id];\n        var startingPoint;\n        var endPoint;\n        var horizontalSpacing;\n        var verticalSpacing;\n        if (layout.orientation.indexOf('Top') !== -1) {\n            startingPoint = (node.offsetY < target.offsetY) ? nodeBounds.bottomCenter : nodeBounds.topCenter;\n            verticalSpacing = layout.verticalSpacing / 4 * ((node.offsetY < target.offsetY) ? 1 : -1);\n            horizontalSpacing = layout.horizontalSpacing / 2 * ((node.offsetX > target.offsetX) ? 1 : -1);\n            endPoint = (node.offsetX > target.offsetX) ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: startingPoint.x, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: endPoint.y }, endPoint);\n        }\n        else {\n            startingPoint = (node.offsetX > target.offsetX) ? nodeBounds.middleLeft : nodeBounds.middleRight;\n            endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            horizontalSpacing = layout.horizontalSpacing / 4 * ((node.offsetX < target.offsetX) ? 1 : -1);\n            verticalSpacing = layout.verticalSpacing / 2 * ((node.offsetY > target.offsetY) ? 1 : -1);\n            points.push(startingPoint, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y }, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x, y: startingPoint.y + verticalSpacing }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.getSegmentsFromPoints = function (points, connector) {\n        var segments = [];\n        var segment;\n        for (var i = 0; i < points.length - 2; i++) {\n            segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n            segment.direction = Point.direction(points[i], points[i + 1]);\n            segment.length = Point.distancePoints(points[i], points[i + 1]);\n            segments.push(segment);\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.getSegmentsForMultipleRows = function (layout, node, target, connector) {\n        var points = [];\n        var segments = [];\n        var point;\n        var segment;\n        var targetBounds = this.getBounds(target);\n        var nodeBounds = this.getBounds(node);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.bottomCenter.y + layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.topCenter.y - layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: nodeBounds.middleRight.y, };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point, point3);\n                    segment.length = Point.distancePoints(point, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point_1 = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point_1, point_1);\n                    segment.length = Point.distancePoints(point_1, point_1);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.updateSegmentsForHorizontalOrientation = function (layout, node, target, connector) {\n        var points = [];\n        var point2;\n        var segment;\n        var segments = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point2 = { x: nodeBounds.bottomCenter.x, y: (targetBounds.topCenter.y - layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point2);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point2 = { x: nodeBounds.topCenter.x, y: (targetBounds.bottomCenter.y + layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point2);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point2 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point3);\n                    segment.length = Point.distancePoints(point2, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point2 = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point);\n                    segment.length = Point.distancePoints(point2, point);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n        return points;\n    };\n    HierarchicalTree.prototype.updateNodes = function (layout, node, mod, update, dx, dy) {\n        var i;\n        var child;\n        var width;\n        var height;\n        var offsetX;\n        var offsetY;\n        if (node && !node.excludeFromLayout) {\n            width = node.actualSize.width;\n            height = node.actualSize.height;\n            offsetX = layout.anchorX;\n            offsetY = layout.anchorY;\n            /*Performance - instead of checking conditions for every node, we can make the layout related\n            conditions once and we can reuse them*/\n            if (layout.orientation === 'LeftToRight') {\n                offsetX += layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'RightToLeft') {\n                offsetX -= layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'TopToBottom') {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY += layout.graphNodes[node.id].y + height / 2;\n            }\n            else {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY -= layout.graphNodes[node.id].y + height / 2;\n            }\n            if (layout.graphNodes) {\n                dx = dx ? dx : 0;\n                dy = dy ? dy : 0;\n                offsetX += dx;\n                offsetY += dy;\n                if (!this.isAnimation) {\n                    node.offsetX = offsetX;\n                    node.offsetY = offsetY;\n                }\n            }\n            var objects = { id: node.id, differenceX: offsetX - node.offsetX, differenceY: offsetY - node.offsetY };\n            layout.objects.push(objects);\n            var list = void 0;\n            list = [];\n            if (this.hasChild(layout, node)) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.children.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.children[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), update, dx, dy);\n                    list.push(child);\n                }\n            }\n            if (layout.graphNodes[node.id].tree.assistants.length) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.assistants.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.assistants[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), null, dx, dy);\n                }\n            }\n        }\n    };\n    return HierarchicalTree;\n}());\nexport { HierarchicalTree };\n","import { Rect } from '../primitives/rect';\nimport { getFunction } from '../utility/base-util';\nimport { HierarchicalTree } from './hierarchical-tree';\n/**\n * Layout for mind-map tree\n */\nvar MindMap = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function MindMap() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    MindMap.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    MindMap.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'MindMapChart';\n    };\n    /**   @private  */\n    MindMap.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewPort, uniqueId, root) {\n        var isRoot;\n        isRoot = this.checkRoot(nodes, layoutProp, uniqueId, root, nameTable);\n        if (isRoot) {\n            layoutProp.fixedNode = isRoot;\n        }\n        else {\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                var node = nodes_1[_i];\n                if (!node.excludeFromLayout) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        layoutProp.fixedNode = node.id;\n                        break;\n                    }\n                }\n            }\n        }\n        var rootNode = nameTable[layoutProp.fixedNode];\n        var fistLevelNodes = this.findFirstLevelNodes(rootNode, layoutProp, nameTable);\n        var leftNodes = [];\n        var rightNodes = [];\n        var getMindmapBranch = getFunction(layoutProp.getBranch);\n        getMindmapBranch = getMindmapBranch || getFunction(this.getBranch);\n        for (var _a = 0, fistLevelNodes_1 = fistLevelNodes; _a < fistLevelNodes_1.length; _a++) {\n            var node = fistLevelNodes_1[_a];\n            var align = getMindmapBranch(node, fistLevelNodes);\n            align = node && node.branch ? node.branch : align;\n            (align === 'Left') ? leftNodes.push(node) : rightNodes.push(node);\n        }\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        nameTable[layoutProp.fixedNode].offsetX = viewPortBounds.x + viewPortBounds.width / 2;\n        nameTable[layoutProp.fixedNode].offsetY = viewPortBounds.y + viewPortBounds.height / 2;\n        if (leftNodes.length) {\n            this.updateMindMapBranch(nodes, rightNodes, nameTable, layoutProp, viewPort, uniqueId, 'Left');\n        }\n        if (rightNodes.length) {\n            this.updateMindMapBranch(nodes, leftNodes, nameTable, layoutProp, viewPort, uniqueId, 'Right');\n        }\n    };\n    MindMap.prototype.checkRoot = function (nodes, layoutProp, uniqueId, root, nameTable) {\n        for (var _i = 0, nodes_2 = nodes; _i < nodes_2.length; _i++) {\n            var node = nodes_2[_i];\n            if (!node.excludeFromLayout) {\n                if (node.data && (node.data[uniqueId].toString() === root || node.data[uniqueId].toString()\n                    === layoutProp.root)) {\n                    return node.id;\n                }\n                else if (!node.data && node.id === layoutProp.root) {\n                    return node.id;\n                }\n            }\n        }\n        return '';\n    };\n    MindMap.prototype.updateMindMapBranch = function (nodes, excludeNodes, nameTable, layoutProp, viewPort, uniqueId, side) {\n        var layout;\n        layout = {\n            type: 'HierarchicalTree',\n            horizontalSpacing: layoutProp.verticalSpacing, verticalSpacing: layoutProp.horizontalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo),\n            layoutInfo: layoutProp.layoutInfo, margin: layoutProp.margin,\n            root: layoutProp.fixedNode\n        };\n        layout.orientation = (side === 'Left') ? 'LeftToRight' : 'RightToLeft';\n        this.excludeFromLayout(excludeNodes, nameTable, true);\n        var mapLayout = new HierarchicalTree();\n        mapLayout.updateLayout(nodes, nameTable, layout, viewPort, uniqueId);\n        this.excludeFromLayout(excludeNodes, nameTable, false);\n    };\n    MindMap.prototype.getBranch = function (obj, firstLevelNodes) {\n        var side;\n        var i = firstLevelNodes.indexOf(obj);\n        if (i % 2 === 0) {\n            side = 'Left';\n        }\n        else {\n            side = 'Right';\n        }\n        return side;\n    };\n    MindMap.prototype.excludeFromLayout = function (newCollection, nameTable, exclude) {\n        for (var _i = 0, newCollection_1 = newCollection; _i < newCollection_1.length; _i++) {\n            var newcol = newCollection_1[_i];\n            var node = nameTable[newcol.id];\n            node.excludeFromLayout = exclude;\n        }\n    };\n    MindMap.prototype.findFirstLevelNodes = function (node, layout, nameTable) {\n        var parentNode;\n        var fistLevelNodes = [];\n        if (node && node.outEdges.length) {\n            for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n                var outEdge = _a[_i];\n                fistLevelNodes.push(nameTable[nameTable[outEdge].targetID]);\n            }\n        }\n        return fistLevelNodes;\n    };\n    return MindMap;\n}());\nexport { MindMap };\n","/**\n * Radial Tree\n */\nvar RadialTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function RadialTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    RadialTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    RadialTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'RadialTree';\n    };\n    /**   @private  */\n    RadialTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {}, layoutNodes: [],\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, nameTable, viewport);\n    };\n    RadialTree.prototype.doLayout = function (layout, nodes, nameTable, viewport) {\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                if (!node.inEdges || !node.inEdges.length) {\n                    layout.firstLevelNodes.push(node);\n                }\n            }\n        }\n        if (layout.root && nameTable[layout.root]) {\n            layout.centerNode = nameTable[layout.root];\n        }\n        else if (layout.firstLevelNodes.length) {\n            layout.centerNode = layout.firstLevelNodes[0];\n            layout.root = layout.centerNode.id;\n        }\n        if (layout.centerNode) {\n            this.updateEdges(layout, layout.centerNode, 0, nameTable);\n            this.depthFirstAllignment(layout, layout.centerNode, 0, 0);\n            this.populateLevels(layout);\n            this.transformToCircleLayout(layout);\n            this.updateAnchor(layout, viewport);\n            this.updateNodes(layout, layout.centerNode, nameTable);\n        }\n    };\n    RadialTree.prototype.updateEdges = function (layout, node, depth, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        layout.layoutNodes.push(nodeInfo);\n        nodeInfo.level = depth;\n        nodeInfo.visited = true;\n        layout.maxLevel = Math.max(layout.maxLevel, depth);\n        for (var j = 0; j < node.outEdges.length; j++) {\n            var edge = nameTable[nameTable[node.outEdges[j]].targetID];\n            if (!edge.excludeFromLayout && !edge.visited) {\n                nodeInfo.children.push(edge);\n                this.updateEdges(layout, edge, depth + 1, nameTable);\n            }\n        }\n    };\n    RadialTree.prototype.depthFirstAllignment = function (layout, node, x, y) {\n        var newValue;\n        var nodeInfo = layout.graphNodes[node.id];\n        if (nodeInfo.children.length) {\n            y += 300;\n            for (var i = 0; i < nodeInfo.children.length; i++) {\n                newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                x = newValue.x;\n                y = newValue.y;\n            }\n            nodeInfo.children = nodeInfo.children.sort(function (obj1, obj2) {\n                return layout.graphNodes[obj1.id].x - layout.graphNodes[obj2.id].x;\n            });\n            var min = layout.graphNodes[nodeInfo.children[0].id].min;\n            var max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].max;\n            nodeInfo.x = min + (max - min) / 2;\n            x = max + layout.horizontalSpacing;\n            nodeInfo.segmentOffset = max + layout.horizontalSpacing;\n            nodeInfo.x -= nodeInfo.width / 2;\n            nodeInfo.y -= nodeInfo.height / 2;\n            nodeInfo.min = min;\n            nodeInfo.max = max;\n            if (nodeInfo.x < min && nodeInfo.visited) {\n                nodeInfo.x = min;\n                x = nodeInfo.x + nodeInfo.width / 2 - (max - min) / 2;\n                nodeInfo.visited = false;\n                for (var i = 0; i < nodeInfo.children.length; i++) {\n                    newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                }\n                nodeInfo.visited = true;\n                x = nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n            }\n            max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].segmentOffset;\n            x = x < max ? max : x;\n            y -= 300;\n            nodeInfo.y = y;\n        }\n        else {\n            nodeInfo.x = x;\n            nodeInfo.y = y;\n            nodeInfo.min = x;\n            nodeInfo.max = x + nodeInfo.width;\n            x += nodeInfo.width + layout.horizontalSpacing;\n        }\n        return { x: x, y: y };\n    };\n    RadialTree.prototype.populateLevels = function (layout) {\n        var stages = [];\n        var min = Math.min.apply(Math, layout.layoutNodes.map(function (nodeInfo) { return nodeInfo.x; }));\n        var max = Math.max.apply(Math, layout.layoutNodes.map(function (nodeInfo) {\n            return nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n        }));\n        var full = max - min;\n        layout.levels = [];\n        var _loop_1 = function (i) {\n            stages = layout.layoutNodes.filter(function (nodeInfo) {\n                if (nodeInfo.level === i) {\n                    return nodeInfo;\n                }\n                else {\n                    return null;\n                }\n            });\n            var newlevel = {};\n            stages = stages.sort(function (nodeInfo1, nodeInfo2) { return nodeInfo1.x - nodeInfo2.x; });\n            newlevel.min = stages[0].x;\n            newlevel.max = stages[stages.length - 1].x + stages[stages.length - 1].width + layout.horizontalSpacing;\n            newlevel.actualCircumference = 0;\n            newlevel.height = 0;\n            for (var k = 0; k < stages.length; k++) {\n                if (stages[k].height > newlevel.height) {\n                    newlevel.height = stages[k].height;\n                }\n                newlevel.actualCircumference += Math.max(stages[k].width, stages[k].height);\n                if (k !== stages.length - 1) {\n                    newlevel.actualCircumference += layout.horizontalSpacing;\n                }\n            }\n            newlevel.circumference = newlevel.max - newlevel.min;\n            if (newlevel.actualCircumference < newlevel.circumference) {\n                newlevel.circumference = (newlevel.circumference + newlevel.actualCircumference) / 2;\n            }\n            newlevel.radius = newlevel.circumference / (2 * Math.PI) + newlevel.height;\n            newlevel.nodes = [];\n            if (i > 1) {\n                if (layout.levels[i - 1].radius + layout.levels[i - 1].height >= newlevel.radius) {\n                    newlevel.radius = layout.levels[i - 1].radius + layout.levels[i - 1].height;\n                }\n            }\n            for (var j = 0; j < stages.length; j++) {\n                stages[j].ratio = Math.abs(stages[j].x + stages[j].width / 2 - min) / full;\n                newlevel.nodes.push(stages[j]);\n            }\n            layout.levels.push(newlevel);\n        };\n        for (var i = 0; i <= layout.maxLevel; i++) {\n            _loop_1(i);\n        }\n    };\n    RadialTree.prototype.transformToCircleLayout = function (layout) {\n        var root = layout.graphNodes[layout.centerNode.id];\n        root.x = 0;\n        root.y = 0;\n        for (var i = 1; i < layout.levels.length; i++) {\n            for (var j = 0; j < layout.levels[i].nodes.length; j++) {\n                var nodeInfo = layout.levels[i].nodes[j];\n                nodeInfo.x = Math.cos(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                nodeInfo.y = Math.sin(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                layout.anchorX = Math.min(layout.anchorX, nodeInfo.x);\n                layout.anchorY = Math.min(layout.anchorY, nodeInfo.y);\n            }\n        }\n    };\n    RadialTree.prototype.updateAnchor = function (layout, viewPort) {\n        layout.anchorX = layout.centerNode.offsetX || viewPort.x / 2;\n        layout.anchorY = layout.centerNode.offsetY || viewPort.y / 2;\n    };\n    RadialTree.prototype.updateNodes = function (layout, node, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        var offsetX = nodeInfo.x + layout.anchorX;\n        var offsetY = nodeInfo.y + layout.anchorY;\n        node.offsetX += offsetX;\n        node.offsetY += offsetY;\n        for (var i = 0; i < nodeInfo.children.length; i++) {\n            var childInfo = nodeInfo.children[i];\n            this.updateNodes(layout, nameTable[childInfo.id], nameTable);\n        }\n    };\n    RadialTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.name = item.id;\n        info.x = 0;\n        info.y = 0;\n        info.min = 0;\n        info.max = 0;\n        info.width = item.actualSize.width;\n        info.height = item.actualSize.height;\n        info.children = [];\n        info.level = 0;\n        info.ratio = 0;\n        info.visited = false;\n        return info;\n    };\n    return RadialTree;\n}());\nexport { RadialTree };\n","/**\n * Connects diagram objects with layout algorithm\n */\nvar ComplexHierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the hierarchical tree layout module\n     * @private\n     */\n    function ComplexHierarchicalTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the hierarchical tree module\n     * @return {void}\n     * @private\n     */\n    ComplexHierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ComplexHierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'ComplexHierarchicalTree';\n    };\n    /**   @private  */\n    ComplexHierarchicalTree.prototype.doLayout = function (nodes, nameTable, layout, viewPort) {\n        new HierarchicalLayoutUtil().doLayout(nodes, nameTable, layout, viewPort);\n    };\n    ComplexHierarchicalTree.prototype.getLayoutNodesCollection = function (nodes) {\n        var nodesCollection = [];\n        var node;\n        var parentId = 'parentId';\n        var processId = 'processId';\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if ((node.inEdges.length + node.outEdges.length > 0) && !node[parentId] && !node[processId]) {\n                nodesCollection.push(node);\n            }\n        }\n        return nodesCollection;\n    };\n    return ComplexHierarchicalTree;\n}());\nexport { ComplexHierarchicalTree };\n/**\n * Utility that arranges the nodes in hierarchical structure\n */\nvar HierarchicalLayoutUtil = /** @class */ (function () {\n    function HierarchicalLayoutUtil() {\n        this.nameTable = {};\n        this.crossReduction = new CrossReduction();\n    }\n    /**\n     * Defines a vertex that is equivalent to a node object\n     */\n    HierarchicalLayoutUtil.prototype.createVertex = function (node, value, x, y, width, height) {\n        var geometry = { x: x, y: y, width: width, height: height };\n        var vertex = {\n            value: value, geometry: geometry, name: value, vertex: true,\n            inEdges: node.inEdges.slice(), outEdges: node.outEdges.slice()\n        };\n        return vertex;\n    };\n    /**\n     * Initializes the edges collection of the vertices\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdges = function (node) {\n        var edges = [];\n        if (node) {\n            for (var i = 0; node.inEdges.length > 0 && i < node.inEdges.length; i++) {\n                edges.push(this.nameTable[node.inEdges[i]]);\n            }\n            for (var i = 0; node.outEdges.length > 0 && i < node.outEdges.length; i++) {\n                edges.push(this.nameTable[node.outEdges[i]]);\n            }\n        }\n        return edges;\n    };\n    /**\n     * Finds the root nodes of the layout\n     */\n    HierarchicalLayoutUtil.prototype.findRoots = function (vertices) {\n        var roots = [];\n        var best = null;\n        var maxDiff = -100000;\n        for (var _i = 0, _a = Object.keys(vertices); _i < _a.length; _i++) {\n            var i = _a[_i];\n            var cell = vertices[i];\n            var conns = this.getEdges(cell);\n            var outEdges = 0;\n            var inEdges = 0;\n            for (var k = 0; k < conns.length; k++) {\n                var src = this.getVisibleTerminal(conns[k], true);\n                if (src.name === cell.name) {\n                    outEdges++;\n                }\n                else {\n                    inEdges++;\n                }\n            }\n            if (inEdges === 0 && outEdges > 0) {\n                roots.push(cell);\n            }\n            var diff = outEdges - inEdges;\n            if (diff > maxDiff) {\n                maxDiff = diff;\n                best = cell;\n            }\n        }\n        if (roots.length === 0 && best != null) {\n            roots.push(best);\n        }\n        return roots;\n    };\n    /**\n     * Returns the source/target vertex of the given connector\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getVisibleTerminal = function (edge, source) {\n        var terminalCache = this.nameTable[edge.targetID];\n        if (source) {\n            terminalCache = this.nameTable[edge.sourceID];\n        }\n        for (var i = 0; i < this.vertices.length; i++) {\n            if (this.vertices[i].name === terminalCache.id) {\n                return this.vertices[i];\n            }\n        }\n        return null;\n    };\n    /**\n     * Traverses each sub tree, ensures there is no cycle in traversing\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.traverse = function (vertex, directed, edge, currentComp, hierarchyVertices, filledVertices) {\n        if (vertex != null) {\n            var vertexID = vertex.name;\n            if ((filledVertices == null ? true : filledVertices[vertexID] != null)) {\n                if (currentComp[vertexID] == null) {\n                    currentComp[vertexID] = vertex;\n                }\n                if (filledVertices != null) {\n                    delete filledVertices[vertexID];\n                }\n                var edges = this.getEdges(vertex);\n                var edgeIsSource = [];\n                for (var i = 0; i < edges.length; i++) {\n                    edgeIsSource[i] = this.getVisibleTerminal(edges[i], true) === vertex;\n                }\n                for (var i = 0; i < edges.length; i++) {\n                    if (!directed || edgeIsSource[i]) {\n                        var next = this.getVisibleTerminal(edges[i], !edgeIsSource[i]);\n                        var netCount = 1;\n                        for (var j = 0; j < edges.length; j++) {\n                            if (j === i) {\n                                continue;\n                            }\n                            else {\n                                var isSource2 = edgeIsSource[j];\n                                var otherTerm = this.getVisibleTerminal(edges[j], !isSource2);\n                                if (otherTerm === next) {\n                                    if (isSource2) {\n                                        netCount++;\n                                    }\n                                    else {\n                                        netCount--;\n                                    }\n                                }\n                            }\n                        }\n                        if (netCount >= 0) {\n                            currentComp = this.traverse(next, directed, edges[i], currentComp, hierarchyVertices, filledVertices);\n                        }\n                    }\n                }\n            }\n            else {\n                if (currentComp[vertexID] == null) {\n                    // We've seen this vertex before, but not in the current component This component and the one it's in need to be merged\n                    for (var i = 0; i < hierarchyVertices.length; i++) {\n                        var comp = hierarchyVertices[i];\n                        if (comp[vertexID] != null) {\n                            for (var _i = 0, _a = Object.keys(comp); _i < _a.length; _i++) {\n                                var key = _a[_i];\n                                currentComp[key] = comp[key];\n                            }\n                            // Remove the current component from the hierarchy set\n                            hierarchyVertices.splice(i, 1);\n                            return currentComp;\n                        }\n                    }\n                }\n            }\n        }\n        return currentComp;\n    };\n    /**\n     * Returns the bounds of the given vertices\n     */\n    HierarchicalLayoutUtil.prototype.getModelBounds = function (nodes) {\n        nodes = nodes.slice();\n        var rect = null;\n        var rect1 = null;\n        for (var i = 0; i < nodes.length; i++) {\n            rect = nodes[i].geometry;\n            if (rect1) {\n                var right = Math.max(rect1.x + rect1.width, rect.x + rect.width);\n                var bottom = Math.max(rect1.y + rect1.height, rect.y + rect.height);\n                rect1.x = Math.min(rect1.x, rect.x);\n                rect1.y = Math.min(rect1.y, rect.y);\n                rect1.width = right - rect1.x;\n                rect1.height = bottom - rect1.y;\n            }\n            else {\n                rect1 = { x: rect.x, y: rect.y, width: rect.width, height: rect.height };\n            }\n        }\n        return rect1;\n    };\n    /**\n     * Initializes the layouting process\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.doLayout = function (nodes, nameTable, layoutProp, viewPort) {\n        this.nameTable = nameTable;\n        var layout = {\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            orientation: layoutProp.orientation, marginX: layoutProp.margin.left, marginY: layoutProp.margin.top\n        };\n        this.vertices = [];\n        var filledVertexSet = {};\n        for (var i = 0; i < nodes.length; i++) {\n            var node = this.createVertex(nodes[i], nodes[i].id, 0, 0, nodes[i].actualSize.width, nodes[i].actualSize.height);\n            this.vertices.push(node);\n            filledVertexSet[node.name] = node;\n        }\n        var hierarchyVertices = [];\n        var candidateRoots;\n        candidateRoots = this.findRoots(filledVertexSet);\n        for (var i = 0; i < candidateRoots.length; i++) {\n            var vertexSet = {};\n            hierarchyVertices.push(vertexSet);\n            this.traverse(candidateRoots[i], true, null, vertexSet, hierarchyVertices, filledVertexSet);\n        }\n        var limit = { marginX: 0, marginY: 0 };\n        for (var i = 0; i < hierarchyVertices.length; i++) {\n            var vertexSet = hierarchyVertices[i];\n            var tmp = [];\n            for (var _i = 0, _a = Object.keys(vertexSet); _i < _a.length; _i++) {\n                var key = _a[_i];\n                tmp.push(vertexSet[key]);\n            }\n            var model = new MultiParentModel(this, tmp, candidateRoots, layout);\n            this.cycleStage(model);\n            this.layeringStage(model);\n            this.crossingStage(model);\n            limit = this.placementStage(model, limit.marginX, limit.marginY);\n        }\n        var modelBounds = this.getModelBounds(this.vertices);\n        this.updateMargin(layoutProp, layout, modelBounds, viewPort);\n        for (var i = 0; i < this.vertices.length; i++) {\n            var clnode = this.vertices[i];\n            if (clnode) { //Check what is node.source/node.target -  && !clnode.source && !clnode.target) {\n                var dnode = this.nameTable[clnode.name];\n                dnode.offsetX = 0;\n                dnode.offsetY = 0;\n                //initialize layout\n                var dx = (clnode.geometry.x - (dnode.offsetX - (dnode.actualSize.width / 2))) + layout.marginX;\n                var dy = (clnode.geometry.y - (dnode.offsetY - (dnode.actualSize.height / 2))) + layout.marginY;\n                var x = dx;\n                var y = dy;\n                if (layout.orientation === 'BottomToTop') {\n                    y = modelBounds.height - dy;\n                }\n                else if (layout.orientation === 'RightToLeft') {\n                    x = modelBounds.width - dx;\n                }\n                dnode.offsetX += x - dnode.offsetX;\n                dnode.offsetY += y - dnode.offsetY;\n            }\n        }\n        for (var i = 0; i < this.vertices.length; i++) {\n            this.isNodeOverLap(this.nameTable[this.vertices[i].name], layoutProp);\n        }\n    };\n    HierarchicalLayoutUtil.prototype.calculateRectValue = function (dnode) {\n        var rect = { x: 0, y: 0, right: 0, bottom: 0, height: 0, width: 0 };\n        rect.x = dnode.offsetX - dnode.actualSize.width / 2;\n        rect.right = dnode.offsetX + dnode.actualSize.width / 2;\n        rect.y = dnode.offsetY - dnode.actualSize.height / 2;\n        rect.bottom = dnode.offsetY + dnode.actualSize.height / 2;\n        return rect;\n    };\n    HierarchicalLayoutUtil.prototype.isNodeOverLap = function (dnode, layoutProp) {\n        var nodeRect = { x: 0, y: 0, right: 0, bottom: 0, height: 0, width: 0 };\n        for (var i = 0; i < this.vertices.length; i++) {\n            var rect = { x: 0, y: 0, width: 0, height: 0 };\n            var tempnode1 = void 0;\n            tempnode1 = this.nameTable[this.vertices[i].value];\n            if (dnode.id !== tempnode1.id && tempnode1.offsetX !== 0 && tempnode1.offsetY !== 0) {\n                nodeRect = this.calculateRectValue(dnode);\n                rect = this.calculateRectValue(tempnode1);\n                if (this.isIntersect(rect, nodeRect, layoutProp)) {\n                    if (layoutProp.orientation === 'TopToBottom' || layoutProp.orientation === 'BottomToTop') {\n                        dnode.offsetX += layoutProp.horizontalSpacing;\n                    }\n                    else {\n                        dnode.offsetY += layoutProp.verticalSpacing;\n                    }\n                    this.isNodeOverLap(dnode, layoutProp);\n                }\n            }\n        }\n    };\n    HierarchicalLayoutUtil.prototype.isIntersect = function (rect, nodeRect, layoutProp) {\n        if (!(rect.right + layoutProp.horizontalSpacing <= nodeRect.x || rect.x - layoutProp.horizontalSpacing >= nodeRect.right\n            || rect.y - layoutProp.verticalSpacing >= nodeRect.bottom\n            || rect.bottom + layoutProp.verticalSpacing <= nodeRect.y)) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    HierarchicalLayoutUtil.prototype.updateMargin = function (layoutProp, layout, modelBounds, viewPort) {\n        var viewPortBounds = { x: 0, y: 0, width: viewPort.x, height: viewPort.y };\n        var layoutBounds;\n        var bounds = {\n            x: modelBounds.x, y: modelBounds.y,\n            right: modelBounds.x + modelBounds.width,\n            bottom: modelBounds.y + modelBounds.height\n        };\n        layoutBounds = layoutProp.bounds ? layoutProp.bounds : viewPortBounds;\n        if (layout.orientation === 'TopToBottom' || layout.orientation === 'BottomToTop') {\n            switch (layoutProp.horizontalAlignment) {\n                case 'Auto':\n                case 'Left':\n                    layout.marginX = (layoutBounds.x - bounds.x) + layoutProp.margin.left;\n                    break;\n                case 'Right':\n                    layout.marginX = layoutBounds.x + layoutBounds.width - layoutProp.margin.right - bounds.right;\n                    break;\n                case 'Center':\n                    layout.marginX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                    break;\n            }\n            switch (layoutProp.verticalAlignment) {\n                case 'Top':\n                    var top_1;\n                    top_1 = layoutBounds.y + layoutProp.margin.top;\n                    layout.marginY = layout.orientation === 'TopToBottom' ? top_1 : -top_1;\n                    break;\n                case 'Bottom':\n                    var bottom = void 0;\n                    bottom = layoutBounds.y + layoutBounds.height - layoutProp.margin.bottom;\n                    layout.marginY = layout.orientation === 'TopToBottom' ? bottom - bounds.bottom : -(bottom - bounds.bottom);\n                    break;\n                case 'Auto':\n                case 'Center':\n                    var center = void 0;\n                    center = layoutBounds.y + layoutBounds.height / 2;\n                    layout.marginY = layout.orientation === 'TopToBottom' ?\n                        center - (bounds.y + bounds.bottom) / 2 : -center + (bounds.y + bounds.bottom) / 2;\n                    break;\n            }\n        }\n        else {\n            switch (layoutProp.horizontalAlignment) {\n                case 'Auto':\n                case 'Left':\n                    var left = void 0;\n                    left = layoutBounds.x + layoutProp.margin.left;\n                    layout.marginX = layout.orientation === 'LeftToRight' ? left : -left;\n                    break;\n                case 'Right':\n                    var right = void 0;\n                    right = layoutBounds.x + layoutBounds.width - layoutProp.margin.right;\n                    layout.marginX = layout.orientation === 'LeftToRight' ? right - bounds.right : bounds.right - right;\n                    break;\n                case 'Center':\n                    var center = void 0;\n                    center = layoutBounds.width / 2 + layoutBounds.x;\n                    layout.marginX = layout.orientation === 'LeftToRight' ?\n                        center - (bounds.y + bounds.bottom) / 2 : -center + (bounds.x + bounds.right) / 2;\n                    break;\n            }\n            switch (layoutProp.verticalAlignment) {\n                case 'Top':\n                    layout.marginY = layoutBounds.y + layoutProp.margin.top - bounds.x;\n                    break;\n                case 'Auto':\n                case 'Center':\n                    layout.marginY = layoutBounds.y + layoutBounds.height / 2 - (bounds.y + bounds.bottom) / 2;\n                    break;\n                case 'Bottom':\n                    layout.marginY = layoutBounds.y + layoutBounds.height - layoutProp.margin.bottom - bounds.bottom;\n                    break;\n            }\n        }\n    };\n    /**\n     * Handles positioning the nodes\n     */\n    HierarchicalLayoutUtil.prototype.placementStage = function (model, marginX, marginY) {\n        var placementStage = this.coordinateAssignment(marginX, marginY, parent, model);\n        placementStage.model = model;\n        placementStage.widestRankValue = null;\n        this.placementStageExecute(placementStage);\n        return {\n            marginX: placementStage.marginX + model.layout.horizontalSpacing,\n            marginY: placementStage.marginY + model.layout.verticalSpacing\n        };\n    };\n    /**\n     * Initializes the layout properties for positioning\n     */\n    HierarchicalLayoutUtil.prototype.coordinateAssignment = function (marginX, marginY, parent, model) {\n        var plalementChange = {};\n        if (model.layout.orientation === 'TopToBottom' || model.layout.orientation === 'BottomToTop') {\n            plalementChange.horizontalSpacing = model.layout.horizontalSpacing;\n            plalementChange.verticalSpacing = model.layout.verticalSpacing;\n        }\n        else {\n            plalementChange.horizontalSpacing = model.layout.verticalSpacing;\n            plalementChange.verticalSpacing = model.layout.horizontalSpacing;\n        }\n        plalementChange.orientation = 'north';\n        //Removed the conditions here. So check here in case of any issue\n        plalementChange.marginX = plalementChange.marginX = marginX;\n        plalementChange.marginY = plalementChange.marginY = marginY;\n        return plalementChange;\n    };\n    /**\n     * Calculate the largest size of the node either height or width depends upon the layoutorientation\n     */\n    HierarchicalLayoutUtil.prototype.calculateWidestRank = function (plalementChange, graph, model) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var offset = -plalementChange.verticalSpacing;\n        var lastRankMaxCellSize = 0.0;\n        plalementChange.rankSizes = [];\n        plalementChange.rankOffset = [];\n        for (var rankValue = model.maxRank; rankValue >= 0; rankValue--) {\n            var maxCellSize = 0.0;\n            var rank = model.ranks[rankValue];\n            var localOffset = isHorizontal ? plalementChange.marginY : plalementChange.marginX;\n            for (var i = 0; i < rank.length; i++) {\n                var node = rank[i];\n                if (this.crossReduction.isVertex(node)) {\n                    var vertex = node;\n                    if (vertex.cell && (vertex.cell.inEdges || vertex.cell.outEdges)) {\n                        var obj = this.nameTable[vertex.cell.name];\n                        vertex.width = obj.actualSize.width;\n                        vertex.height = obj.actualSize.height;\n                        maxCellSize = Math.max(maxCellSize, (isHorizontal ? vertex.width : vertex.height));\n                    }\n                }\n                else {\n                    if (node) {\n                        var edge = node;\n                        var numEdges = 1;\n                        if (edge.edges != null) {\n                            numEdges = edge.edges.length;\n                        }\n                        node.width = (numEdges - 1) * 10;\n                    }\n                }\n                if (isHorizontal) {\n                    if (!node.height) {\n                        node.height = 0;\n                    }\n                }\n                // Set the initial x-value as being the best result so far\n                localOffset += (isHorizontal ? node.height : node.width) / 2.0;\n                this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n                this.setTempVariable(node, rankValue, localOffset);\n                localOffset += ((isHorizontal ? node.height : node.width) / 2.0) + plalementChange.horizontalSpacing;\n                if (localOffset > plalementChange.widestRankValue) {\n                    plalementChange.widestRankValue = localOffset;\n                    plalementChange.widestRank = rankValue;\n                }\n                plalementChange.rankSizes[rankValue] = localOffset;\n            }\n            plalementChange.rankOffset[rankValue] = offset;\n            var distanceToNextRank = maxCellSize / 2.0 + lastRankMaxCellSize / 2.0 + plalementChange.verticalSpacing;\n            lastRankMaxCellSize = maxCellSize;\n            if (plalementChange.orientation === 'north' || plalementChange.orientation === 'west') {\n                offset += distanceToNextRank;\n            }\n            else {\n                offset -= distanceToNextRank;\n            }\n            for (var i = 0; i < rank.length; i++) {\n                var cell = rank[i];\n                this.setXY(cell, rankValue, offset, isHorizontal ? false : true);\n            }\n        }\n    };\n    /**\n     * Sets the temp position of the node on the layer\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setTempVariable = function (node, layer, value) {\n        if (this.crossReduction.isVertex(node)) {\n            node.temp[0] = value;\n        }\n        else {\n            node.temp[layer - node.minRank - 1] = value;\n        }\n    };\n    /**\n     * Sets the position of the vertex\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setXY = function (node, layer, value, isY) {\n        if (node && node.cell) {\n            if (node.cell.inEdges || node.cell.outEdges) {\n                if (isY) {\n                    node.y[0] = value;\n                }\n                else {\n                    node.x[0] = value;\n                }\n            }\n            else {\n                if (isY) {\n                    node.y[layer - node.minRank - 1] = value;\n                }\n                else {\n                    node.x[layer - node.minRank - 1] = value;\n                }\n            }\n        }\n    };\n    /**\n     * Sets geometry position of the layout node on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.rankCoordinates = function (stage, rankValue, graph, model) {\n        var isHorizontal = false;\n        if (stage.model.layout.orientation === 'LeftToRight' || stage.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var rank = model.ranks[rankValue];\n        var maxOffset = 0.0;\n        var localOffset = (isHorizontal ? stage.marginY : stage.marginX) + (stage.widestRankValue - stage.rankSizes[rankValue]) / 2;\n        for (var i = 0; i < rank.length; i++) {\n            var node = rank[i];\n            if (this.crossReduction.isVertex(node)) {\n                var obj = this.nameTable[node.cell.name];\n                node.width = obj.actualSize.width;\n                node.height = obj.actualSize.height;\n                maxOffset = Math.max(maxOffset, node.height);\n            }\n            else {\n                var edge = node;\n                var numEdges = 1;\n                if (edge.edges != null) {\n                    numEdges = edge.edges.length;\n                }\n                if (isHorizontal) {\n                    node.height = (numEdges - 1) * 10;\n                }\n                else {\n                    node.width = (numEdges - 1) * 10;\n                }\n            }\n            var size = (isHorizontal ? node.height : node.width) / 2.0;\n            localOffset += size;\n            this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n            this.setTempVariable(node, rankValue, localOffset);\n            localOffset += (size + stage.horizontalSpacing);\n        }\n    };\n    /**\n     * sets the layout in an initial positioning.it will arange all the ranks as much as possible\n     */\n    HierarchicalLayoutUtil.prototype.initialCoords = function (plalementChange, facade, model) {\n        this.calculateWidestRank(plalementChange, facade, model);\n        // Reverse sweep direction each time from widest rank \n        for (var i = plalementChange.widestRank; i >= 0; i--) {\n            if (i < model.maxRank) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n        for (var i = plalementChange.widestRank + 1; i <= model.maxRank; i++) {\n            if (i > 0) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n    };\n    /**\n     * Checks whether the given node is an ancestor\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.isAncestor = function (node, otherNode) {\n        // Firstly, the hash code of this node needs to be shorter than the other node\n        if (otherNode != null && node.hashCode != null && otherNode.hashCode != null\n            && node.hashCode.length < otherNode.hashCode.length) {\n            if (node.hashCode === otherNode.hashCode) {\n                return true;\n            }\n            if (node.hashCode == null || node.hashCode == null) {\n                return false;\n            }\n            for (var i = 0; i < node.hashCode.length; i++) {\n                if (node.hashCode[i] !== otherNode.hashCode[i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * initializes the sorter object\n     */\n    HierarchicalLayoutUtil.prototype.weightedCellSorter = function (cell, weightedValue) {\n        var weightedCellSorter = {};\n        weightedCellSorter.cell = cell ? cell : null;\n        weightedCellSorter.weightedValue = weightedValue ? weightedValue : 0;\n        weightedCellSorter.visited = false;\n        weightedCellSorter.rankIndex = null;\n        return weightedCellSorter;\n    };\n    /**\n     * Performs one node positioning in both directions\n     */\n    HierarchicalLayoutUtil.prototype.minNode = function (plalementChange, model) {\n        var nodeList = [];\n        var map = { map: {} };\n        var rank = [];\n        for (var i = 0; i <= model.maxRank; i++) {\n            rank[i] = model.ranks[i];\n            for (var j = 0; j < rank[i].length; j++) {\n                var node = rank[i][j];\n                var nodeWrapper = this.weightedCellSorter(node, i);\n                nodeWrapper.rankIndex = j;\n                nodeWrapper.visited = true;\n                nodeList.push(nodeWrapper);\n                model.setDictionaryForSorter(map, node, nodeWrapper, true);\n            }\n        }\n        var maxTries = nodeList.length * 10;\n        var count = 0;\n        var tolerance = 1;\n        while (nodeList.length > 0 && count <= maxTries) {\n            var cellWrapper = nodeList.shift();\n            var cell = cellWrapper.cell;\n            var rankValue = cellWrapper.weightedValue;\n            var rankIndex = cellWrapper.rankIndex;\n            var nextLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue);\n            var previousLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue, true);\n            var nextConnectedCount = nextLayerConnectedCells.length;\n            var prevConnectedCount = previousLayerConnectedCells.length;\n            var medianNextLevel = this.medianXValue(plalementChange, nextLayerConnectedCells, rankValue + 1);\n            var medianPreviousLevel = this.medianXValue(plalementChange, previousLayerConnectedCells, rankValue - 1);\n            var numConnectedNeighbours = nextConnectedCount + prevConnectedCount;\n            var currentPosition = this.crossReduction.getTempVariable(cell, rankValue);\n            var cellMedian = currentPosition;\n            if (numConnectedNeighbours > 0) {\n                cellMedian = (medianNextLevel * nextConnectedCount + medianPreviousLevel * prevConnectedCount) / numConnectedNeighbours;\n            }\n            if (nextConnectedCount === 1 && prevConnectedCount === 1) {\n                cellMedian = (medianPreviousLevel * prevConnectedCount) / prevConnectedCount;\n            }\n            else if (nextConnectedCount === 1) {\n                cellMedian = (medianNextLevel * nextConnectedCount) / nextConnectedCount;\n            }\n            var positionChanged = false;\n            var tempValue = undefined;\n            if (cellMedian < currentPosition - tolerance) {\n                if (rankIndex === 0) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var leftCell = rank[rankValue][rankIndex - 1];\n                    var leftLimit = this.crossReduction.getTempVariable(leftCell, rankValue);\n                    leftLimit = leftLimit + leftCell.width / 2 + plalementChange.intraCellSpacing + cell.width / 2;\n                    if (leftLimit < cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (leftLimit < this.crossReduction.getTempVariable(cell, rankValue) - tolerance) {\n                        tempValue = leftLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            else if (cellMedian > currentPosition + tolerance) {\n                var rankSize = rank[rankValue].length;\n                if (rankIndex === rankSize - 1) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var rightCell = rank[rankValue][rankIndex + 1];\n                    var rightLimit = this.crossReduction.getTempVariable(rightCell, rankValue);\n                    rightLimit = rightLimit - rightCell.width / 2 - plalementChange.intraCellSpacing - cell.width / 2;\n                    if (rightLimit > cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (rightLimit > this.crossReduction.getTempVariable(cell, rankValue) + tolerance) {\n                        tempValue = rightLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            if (positionChanged) {\n                this.setTempVariable(cell, rankValue, tempValue);\n                // Add connected nodes to map and list\n                this.updateNodeList(nodeList, map, nextLayerConnectedCells, model);\n                this.updateNodeList(nodeList, map, previousLayerConnectedCells, model);\n            }\n            if (this.crossReduction.isVertex(cellWrapper.cell)) {\n                cellWrapper.visited = false;\n            }\n            count++;\n        }\n    };\n    /**\n     * Updates the ndoes collection\n     */\n    HierarchicalLayoutUtil.prototype.updateNodeList = function (nodeList, map, collection, model) {\n        for (var i = 0; i < collection.length; i++) {\n            var connectedCell = collection[i];\n            var connectedCellWrapper = model.getDictionaryForSorter(map, connectedCell);\n            if (connectedCellWrapper != null) {\n                if (connectedCellWrapper.visited === false) {\n                    connectedCellWrapper.visited = true;\n                    nodeList.push(connectedCellWrapper);\n                }\n            }\n        }\n    };\n    /**\n     * Calculates the node position of the connected cell on the specified rank\n     */\n    HierarchicalLayoutUtil.prototype.medianXValue = function (plalementChange, connectedCells, rankValue) {\n        if (connectedCells.length === 0) {\n            return 0;\n        }\n        var medianValues = [];\n        for (var i = 0; i < connectedCells.length; i++) {\n            medianValues[i] = this.crossReduction.getTempVariable(connectedCells[i], rankValue);\n        }\n        medianValues.sort(function (a, b) {\n            return a - b;\n        });\n        if (connectedCells.length % 2 === 1) {\n            return medianValues[Math.floor(connectedCells.length / 2)];\n        }\n        else {\n            var medianPoint = connectedCells.length / 2;\n            var leftMedian = medianValues[medianPoint - 1];\n            var rightMedian = medianValues[medianPoint];\n            return ((leftMedian + rightMedian) / 2);\n        }\n    };\n    /**\n     * Updates the geometry of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.placementStageExecute = function (plalementChange) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        plalementChange.jettyPositions = {};\n        var model = plalementChange.model;\n        isHorizontal ? plalementChange.currentYDelta = 0.0 : plalementChange.currentXDelta = 0.0;\n        this.initialCoords(plalementChange, { model: model }, model);\n        this.minNode(plalementChange, model);\n        var bestOffsetDelta = 100000000.0;\n        if (!plalementChange.maxIterations) {\n            plalementChange.maxIterations = 8;\n        }\n        for (var i = 0; i < plalementChange.maxIterations; i++) {\n            // if the total offset is less for the current positioning, \n            //there are less heavily angled edges and so the current positioning is used\n            if ((isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta) < bestOffsetDelta) {\n                for (var j = 0; j < model.ranks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setXY(cell, j, this.crossReduction.getTempVariable(cell, j), isHorizontal ? true : false);\n                    }\n                }\n                bestOffsetDelta = isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta;\n            }\n            isHorizontal ? plalementChange.currentYDelta = 0 : plalementChange.currentXDelta = 0;\n        }\n        this.setCellLocations(plalementChange, model);\n    };\n    /**\n     * sets the cell position in the after the layout operation\n     */\n    HierarchicalLayoutUtil.prototype.setCellLocations = function (plalementChange, model) {\n        var vertices = this.getValues(model.vertexMapper);\n        for (var i = 0; i < vertices.length; i++) {\n            this.setVertexLocation(plalementChange, vertices[i]);\n        }\n    };\n    /**\n     * used to specify the geometrical position of the layout model cell\n     */\n    HierarchicalLayoutUtil.prototype.garphModelsetVertexLocation = function (plalementChange, cell, x, y) {\n        var model = plalementChange.model;\n        var geometry = cell.geometry;\n        var result = null;\n        if (geometry != null) {\n            result = { x: x, y: y, width: geometry.width, height: geometry.height };\n            if (geometry.x !== x || geometry.y !== y) {\n                cell.geometry = result;\n            }\n        }\n        return result;\n    };\n    /**\n     * set the position of the specified node\n     */\n    HierarchicalLayoutUtil.prototype.setVertexLocation = function (plalementChange, cell) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var realCell = cell.cell;\n        var positionX = cell.x[0] - cell.width / 2;\n        var positionY = cell.y[0] - cell.height / 2;\n        this.garphModelsetVertexLocation(plalementChange, realCell, positionX, positionY);\n        if (isHorizontal) {\n            if (!plalementChange.marginY) {\n                plalementChange.marginY = 0;\n            }\n            plalementChange.marginY = Math.max(plalementChange.marginY, positionY + cell.height);\n        }\n        else {\n            if (!plalementChange.marginX) {\n                plalementChange.marginX = 0;\n            }\n            plalementChange.marginX = Math.max(plalementChange.marginX, positionX + cell.width);\n        }\n    };\n    /**\n     * get the specific value from the key value pair\n     */\n    HierarchicalLayoutUtil.prototype.getValues = function (mapper) {\n        var list = [];\n        if (mapper.map) {\n            for (var _i = 0, _a = Object.keys(mapper.map); _i < _a.length; _i++) {\n                var key = _a[_i];\n                list.push(mapper.map[key]);\n            }\n        }\n        return list;\n    };\n    /**\n     * Checks and reduces the crosses in between line segments\n     */\n    HierarchicalLayoutUtil.prototype.crossingStage = function (model) {\n        this.crossReduction.execute(model);\n    };\n    /**\n     * Initializes the ranks of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.layeringStage = function (model) {\n        this.initialRank(model);\n        this.fixRanks(model);\n    };\n    /**\n     * determine the initial rank for the each vertex on the relevent direction\n     */\n    HierarchicalLayoutUtil.prototype.initialRank = function (model) {\n        var startNodes = model.startNodes;\n        var internalNodes = model.getDictionaryValues(model.vertexMapper);\n        var startNodesCopy = startNodes.slice();\n        while (startNodes.length > 0) {\n            var internalNode = startNodes[0];\n            var layerDeterminingEdges = internalNode.connectsAsTarget;\n            var edgesToBeMarked = internalNode.connectsAsSource;\n            var allEdgesScanned = true;\n            var minimumLayer = 100000000;\n            for (var i = 0; i < layerDeterminingEdges.length; i++) {\n                var internalEdge = layerDeterminingEdges[i];\n                if (internalEdge.temp[0] === 5270620) {\n                    // This edge has been scanned, get the layer of the node on the other end\n                    var otherNode = internalEdge.source;\n                    minimumLayer = Math.min(minimumLayer, otherNode.temp[0] - 1);\n                }\n                else {\n                    allEdgesScanned = false;\n                    break;\n                }\n            }\n            // If all edge have been scanned, assign the layer, mark all edges in the other direction and remove from the nodes list\n            if (allEdgesScanned) {\n                internalNode.temp[0] = minimumLayer;\n                if (!model.maxRank) {\n                    model.maxRank = 100000000;\n                }\n                model.maxRank = Math.min(model.maxRank, minimumLayer);\n                if (edgesToBeMarked != null) {\n                    for (var i = 0; i < edgesToBeMarked.length; i++) {\n                        var internalEdge = edgesToBeMarked[i];\n                        internalEdge.temp[0] = 5270620;\n                        // Add node on other end of edge to LinkedList of nodes to be analysed\n                        var otherNode = internalEdge.target;\n                        // Only add node if it hasn't been assigned a layer\n                        if (otherNode.temp[0] === -1) {\n                            startNodes.push(otherNode);\n                            // Mark this other node as neither being unassigned nor assigned \n                            //so it isn't added to this list again, but it's layer isn't used in any calculation.\n                            otherNode.temp[0] = -2;\n                        }\n                    }\n                }\n                startNodes.shift();\n            }\n            else {\n                // Not all the edges have been scanned, get to the back of the class and put the dunces cap on\n                var removedCell = startNodes.shift();\n                startNodes.push(internalNode);\n                if (removedCell === internalNode && startNodes.length === 1) {\n                    // This is an error condition, we can't get out of this loop. \n                    //It could happen for more than one node but that's a lot harder to detect. Log the error\n                    break;\n                }\n            }\n        }\n        for (var i = 0; i < internalNodes.length; i++) {\n            internalNodes[i].temp[0] -= model.maxRank;\n        }\n        for (var i = 0; i < startNodesCopy.length; i++) {\n            var internalNode = startNodesCopy[i];\n            var currentMaxLayer = 0;\n            var layerDeterminingEdges = internalNode.connectsAsSource;\n            for (var j = 0; j < layerDeterminingEdges.length; j++) {\n                var internalEdge = layerDeterminingEdges[j];\n                var otherNode = internalEdge.target;\n                internalNode.temp[0] = Math.max(currentMaxLayer, otherNode.temp[0] + 1);\n                currentMaxLayer = internalNode.temp[0];\n            }\n        }\n        model.maxRank = 100000000 - model.maxRank;\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     */\n    HierarchicalLayoutUtil.prototype.fixRanks = function (model) {\n        model.fixRanks();\n    };\n    /**\n     * used to determine any cyclic stage have been created on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.cycleStage = function (model) {\n        var seenNodes = {};\n        model.startNodes = [];\n        var unseenNodesArray = model.getDictionaryValues(model.vertexMapper);\n        var unseenNodes = [];\n        for (var i = 0; i < unseenNodesArray.length; i++) {\n            unseenNodesArray[i].temp[0] = -1;\n            unseenNodes[unseenNodesArray[i].id] = unseenNodesArray[i];\n        }\n        var rootsArray = null;\n        if (model.roots != null) {\n            var modelRoots = model.roots;\n            rootsArray = [];\n            for (var i = 0; i < modelRoots.length; i++) {\n                rootsArray[i] = model.getDictionary(model.vertexMapper, modelRoots[i]);\n                if (rootsArray[i] != null) {\n                    model.startNodes.push(rootsArray[i]);\n                }\n            }\n        }\n        model.visit('removeParentConnection', rootsArray, true, null, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n        var seenNodesCopy = model.clone(seenNodes, null, true);\n        model.visit('removeNodeConnection', unseenNodes, true, seenNodesCopy, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n    };\n    /**\n     * removes the edge from the given collection\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.remove = function (obj, array) {\n        var index = array.indexOf(obj);\n        if (index !== -1) {\n            array.splice(index, 1);\n        }\n        return obj;\n    };\n    /**\n     * Inverts the source and target of an edge\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.invert = function (connectingEdge, layer) {\n        var temp = connectingEdge.source;\n        connectingEdge.source = connectingEdge.target;\n        connectingEdge.target = temp;\n        connectingEdge.isReversed = !connectingEdge.isReversed;\n    };\n    /**\n     * used to get the edges between the given source and target\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdgesBetween = function (source, target, directed) {\n        directed = (directed != null) ? directed : false;\n        var edges = this.getEdges(source);\n        var result = [];\n        for (var i = 0; i < edges.length; i++) {\n            var src = this.getVisibleTerminal(edges[i], true);\n            var trg = this.getVisibleTerminal(edges[i], false);\n            if ((src === source && trg === target) || (!directed && src === target && trg === source)) {\n                result.push(edges[i]);\n            }\n        }\n        return result;\n    };\n    return HierarchicalLayoutUtil;\n}());\n/**\n * Handles position the objects in a hierarchical tree structure\n */\nvar MultiParentModel = /** @class */ (function () {\n    function MultiParentModel(layout, vertices, roots, dlayout) {\n        this.multiObjectIdentityCounter = 0;\n        //used to count the no of times the parent have been used\n        this.dfsCount = 0;\n        this.hierarchicalUtil = new HierarchicalLayoutUtil();\n        this.roots = roots;\n        this.vertexMapper = { map: {} };\n        var internalVertices = [];\n        this.layout = dlayout;\n        this.maxRank = 100000000;\n        this.hierarchicalLayout = layout;\n        this.createInternalCells(layout, vertices, internalVertices);\n        for (var i = 0; i < vertices.length; i++) {\n            var edges = internalVertices[i].connectsAsSource;\n            for (var j = 0; j < edges.length; j++) {\n                var internalEdge = edges[j];\n                var realEdges = internalEdge.edges;\n                if (realEdges != null && realEdges.length > 0) {\n                    var realEdge = realEdges[0];\n                    var targetCell = layout.getVisibleTerminal(realEdge, false);\n                    var internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    if (internalVertices[i] === internalTargetCell) {\n                        targetCell = layout.getVisibleTerminal(realEdge, true);\n                        internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    }\n                    if (internalTargetCell != null && internalVertices[i] !== internalTargetCell) {\n                        internalEdge.target = internalTargetCell;\n                        if (internalTargetCell.connectsAsTarget.length === 0) {\n                            internalTargetCell.connectsAsTarget = [];\n                        }\n                        if (internalTargetCell.connectsAsTarget.indexOf(internalEdge) < 0) {\n                            internalTargetCell.connectsAsTarget.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 1;\n        }\n    }\n    /**\n     * used to create the duplicate of the edges on the layout model\n     */\n    MultiParentModel.prototype.createInternalCells = function (layout, vertices, internalVertices) {\n        for (var i = 0; i < vertices.length; i++) {\n            internalVertices[i] = {\n                x: [], y: [], temp: [], cell: vertices[i],\n                id: vertices[i].name, connectsAsTarget: [], connectsAsSource: []\n            };\n            this.setDictionary(this.vertexMapper, vertices[i], internalVertices[i]);\n            var conns = layout.getEdges(vertices[i]);\n            internalVertices[i].connectsAsSource = [];\n            for (var j = 0; j < conns.length; j++) {\n                var cell = layout.getVisibleTerminal(conns[j], false);\n                if (cell !== vertices[i]) {\n                    var undirectedEdges = layout.getEdgesBetween(vertices[i], cell, false);\n                    var directedEdges = layout.getEdgesBetween(vertices[i], cell, true);\n                    if (undirectedEdges != null && undirectedEdges.length > 0 && directedEdges.length * 2 >= undirectedEdges.length) {\n                        var internalEdge = { x: [], y: [], temp: [], edges: undirectedEdges, ids: [] };\n                        for (var m = 0; m < undirectedEdges.length; m++) {\n                            internalEdge.ids.push(undirectedEdges[m].id);\n                        }\n                        internalEdge.source = internalVertices[i];\n                        if (!internalVertices[i].connectsAsSource) {\n                            internalVertices[i].connectsAsSource = [];\n                        }\n                        if (internalVertices[i].connectsAsSource.indexOf(internalEdge) < 0) {\n                            internalVertices[i].connectsAsSource.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 0;\n        }\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     * @private\n     */\n    MultiParentModel.prototype.fixRanks = function () {\n        var rankList = [];\n        this.ranks = [];\n        for (var i = 0; i < this.maxRank + 1; i++) {\n            rankList[i] = [];\n            this.ranks[i] = rankList[i];\n        }\n        var rootsArray = null;\n        if (this.roots != null) {\n            var oldRootsArray = this.roots;\n            rootsArray = [];\n            for (var i = 0; i < oldRootsArray.length; i++) {\n                var cell = oldRootsArray[i];\n                var internalNode = this.getDictionary(this.vertexMapper, cell);\n                rootsArray[i] = internalNode;\n            }\n        }\n        this.visit('updateMinMaxRank', rootsArray, false, null, { seenNodes: null, unseenNodes: null, rankList: rankList });\n    };\n    /**\n     * Updates the min/max rank of the layer\n     */\n    MultiParentModel.prototype.updateMinMaxRank = function (layer, seen, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var parent = data.parent;\n        var node = data.root;\n        var edge = data.edge;\n        var rankList = data.rankList;\n        if (!node.maxRank && node.maxRank !== 0) {\n            node.maxRank = -1;\n        }\n        if (!node.minRank && node.minRank !== 0) {\n            node.minRank = -1;\n        }\n        if (seen === 0 && node.maxRank < 0 && node.minRank < 0) {\n            rankList[node.temp[0]].push(node);\n            node.maxRank = node.temp[0];\n            node.minRank = node.temp[0];\n            node.temp[0] = rankList[node.maxRank].length - 1;\n        }\n        if (parent != null && edge != null) {\n            var parentToCellRankDifference = parent.maxRank - node.maxRank;\n            if (parentToCellRankDifference > 1) {\n                edge.maxRank = parent.maxRank;\n                edge.minRank = node.maxRank;\n                edge.temp = [];\n                edge.x = [];\n                edge.y = [];\n                for (var i = edge.minRank + 1; i < edge.maxRank; i++) {\n                    rankList[i].push(edge);\n                    this.hierarchicalUtil.setTempVariable(edge, i, rankList[i].length - 1);\n                }\n            }\n        }\n    };\n    /**\n     * used to store the value of th given key on the object\n     */\n    MultiParentModel.prototype.setDictionary = function (dic, key, value) {\n        var id = key.name;\n        if (!id) {\n            //  id = this._getDictionary(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to store the value of th given key on the object\n     * @private\n     */\n    MultiParentModel.prototype.setDictionaryForSorter = function (dic, key, value, flag) {\n        var id = key.id;\n        if (!id) {\n            //id = this._getDictionaryForSorter(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionary = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.name;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryForSorter = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.id;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get all the values of the dictionary object\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryValues = function (dic) {\n        var result = [];\n        for (var _i = 0, _a = Object.keys(dic.map); _i < _a.length; _i++) {\n            var key = _a[_i];\n            result.push(dic.map[key]);\n        }\n        return result;\n    };\n    /**\n     * used to visit all the entries on the given dictionary with given function\n     * @private\n     */\n    MultiParentModel.prototype.visit = function (visitor, dfsRoots, trackAncestors, seenNodes, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        // Run depth first search through on all roots\n        if (dfsRoots != null) {\n            for (var i = 0; i < dfsRoots.length; i++) {\n                var internalNode = dfsRoots[i];\n                if (internalNode != null) {\n                    if (seenNodes == null) {\n                        seenNodes = new Object();\n                    }\n                    data.parent = null;\n                    data.root = internalNode;\n                    data.edge = null;\n                    if (trackAncestors) {\n                        // Set up hash code for root\n                        internalNode.hashCode = [];\n                        internalNode.hashCode[0] = this.dfsCount;\n                        internalNode.hashCode[1] = i;\n                        this.extendedDfs(visitor, seenNodes, i, 0, data);\n                    }\n                    else {\n                        this.depthFirstSearch(visitor, seenNodes, 0, data);\n                    }\n                }\n            }\n            this.dfsCount++;\n        }\n    };\n    /**\n     * used to perform the depth fisrt search on the layout model\n     */\n    MultiParentModel.prototype.depthFirstSearch = function (visitor, seen, layer, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                // Copy the connects as source list so that visitors can change the original for edge direction inversions\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    // Root check is O(|roots|)\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.depthFirstSearch(visitor, seen, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * Updates the rank of the connection\n     */\n    MultiParentModel.prototype.updateConnectionRank = function (visitor, layer, seen, traversedList) {\n        var parent = traversedList.parent;\n        var root = traversedList.root;\n        var edge = traversedList.edge;\n        if (visitor === 'removeParentConnection' || visitor === 'removeNodeConnection') {\n            var remove = visitor === 'removeNodeConnection' ? true : false;\n            this.removeConnectionEdge(parent, root, edge, layer, traversedList, remove);\n        }\n        if (visitor === 'updateMinMaxRank') {\n            this.updateMinMaxRank(layer, seen, traversedList);\n        }\n    };\n    /**\n     * Removes the edge from the collection\n     */\n    MultiParentModel.prototype.removeConnectionEdge = function (parent, node, edge, layer, data, remove) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        if (this.hierarchicalUtil.isAncestor(node, parent)) {\n            this.hierarchicalUtil.invert(edge, 0);\n            this.hierarchicalUtil.remove(edge, parent.connectsAsSource);\n            if (remove) {\n                node.connectsAsSource.push(edge);\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n            }\n            else {\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n                node.connectsAsSource.push(edge);\n            }\n        }\n        seenNodes[node.id] = node;\n        delete unseenNodes[node.id];\n    };\n    /**\n     * the dfs extends the default version by keeping track of cells ancestors, but it should be only used when necessary\n     */\n    MultiParentModel.prototype.extendedDfs = function (visitor, seen, cHash, layer, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            if (parent != null) {\n                if (root.hashCode == null ||\n                    root.hashCode[0] !== parent.hashCode[0]) {\n                    var hashCodeLength = parent.hashCode.length + 1;\n                    root.hashCode = parent.hashCode.slice();\n                    root.hashCode[hashCodeLength - 1] = cHash;\n                }\n            }\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.extendedDfs(visitor, seen, i, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * used to clone the specified object ignoring all fieldnames in the given array of transient fields\n     * @private\n     */\n    MultiParentModel.prototype.clone = function (obj, transients, shallow) {\n        shallow = (shallow != null) ? shallow : false;\n        if (obj != null && typeof (obj.constructor) === 'function') {\n            var clonedObj = obj.constructor();\n            for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n                var i = _a[_i];\n                if (i !== 'layoutObjectId' && (transients == null || transients.indexOf(i) < 0)) {\n                    if (!shallow && typeof (obj[i]) === 'object') {\n                        //not used\n                        //  _clone[i] = $.extend(true, {}, obj[i]);\n                    }\n                    else {\n                        clonedObj[i] = obj[i];\n                    }\n                }\n            }\n            return clonedObj;\n        }\n        return null;\n    };\n    return MultiParentModel;\n}());\n/**\n * Defines how to reduce the crosses in between the line segments\n */\nvar CrossReduction = /** @class */ (function () {\n    function CrossReduction() {\n    }\n    /**\n     * used to calculate the number of edges crossing the layout model\n     * @param {MultiParentModel} model\n     */\n    CrossReduction.prototype.calculateCrossings = function (model) {\n        var numRanks = model.ranks.length;\n        var totalCrossings = 0;\n        for (var i = 1; i < numRanks; i++) {\n            totalCrossings += this.calculateRankCrossing(i, model);\n        }\n        return totalCrossings;\n    };\n    /**\n     * used to get the temp value specified for the node or connector\n     * @private\n     */\n    CrossReduction.prototype.getTempVariable = function (node, layer) {\n        if (node) {\n            if (this.isVertex(node)) {\n                return node.temp[0];\n            }\n            else {\n                return node.temp[layer - node.minRank - 1];\n            }\n        }\n        return 0;\n    };\n    /**\n     * used to specify the number of conenctors crossing between the specified rank and its below rank\n     */\n    CrossReduction.prototype.calculateRankCrossing = function (i, model) {\n        var totalCrossings = 0;\n        var rank = model.ranks[i];\n        var previousRank = model.ranks[i - 1];\n        var tmpIndices = [];\n        // Iterate over the top rank and fill in the connection information\n        for (var j = 0; j < rank.length; j++) {\n            var node = rank[j];\n            var rankPosition = this.getTempVariable(node, i);\n            var connectedCells = this.getConnectedCellsOnLayer(node, i, true);\n            ///#### \n            var nodeIndices = [];\n            for (var k = 0; k < connectedCells.length; k++) {\n                var connectedNode = connectedCells[k];\n                var otherCellRankPosition = this.getTempVariable(connectedNode, i - 1);\n                nodeIndices.push(otherCellRankPosition);\n            }\n            nodeIndices.sort(function (x, y) { return x - y; });\n            tmpIndices[rankPosition] = nodeIndices;\n        }\n        var indices = [];\n        for (var j = 0; j < tmpIndices.length; j++) {\n            indices = indices.concat(tmpIndices[j]);\n        }\n        var firstIndex = 1;\n        while (firstIndex < previousRank.length) {\n            firstIndex <<= 1;\n        }\n        var treeSize = 2 * firstIndex - 1;\n        firstIndex -= 1;\n        var tree = [];\n        for (var j = 0; j < treeSize; ++j) {\n            tree[j] = 0;\n        }\n        for (var j = 0; j < indices.length; j++) {\n            var index = indices[j];\n            var treeIndex = index + firstIndex;\n            ++tree[treeIndex];\n            while (treeIndex > 0) {\n                if (treeIndex % 2) {\n                    totalCrossings += tree[treeIndex + 1];\n                }\n                treeIndex = (treeIndex - 1) >> 1;\n                ++tree[treeIndex];\n            }\n        }\n        return totalCrossings;\n    };\n    /**\n     * Calculates and reduces the crosses between line segments\n     * @private\n     */\n    CrossReduction.prototype.execute = function (model) {\n        // Stores initial ordering \n        this.nestedBestRanks = [];\n        for (var i = 0; i < model.ranks.length; i++) {\n            this.nestedBestRanks[i] = model.ranks[i].slice();\n        }\n        var iterationsWithoutImprovement = 0;\n        var currentBestCrossings = this.calculateCrossings(model);\n        for (var i = 0; i < 24 && iterationsWithoutImprovement < 2; i++) {\n            this.weightedMedian(i, model);\n            var candidateCrossings = this.calculateCrossings(model);\n            if (candidateCrossings < currentBestCrossings) {\n                currentBestCrossings = candidateCrossings;\n                iterationsWithoutImprovement = 0;\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        var obj = this.nestedBestRanks[j][cell.temp[0]];\n                        var check = true;\n                        if (cell.edges && obj && !obj.edges) {\n                            check = false;\n                        }\n                        if (obj && check) {\n                            this.nestedBestRanks[j][cell.temp[0]] = cell;\n                        }\n                    }\n                }\n            }\n            else {\n                // Increase count of iterations\n                iterationsWithoutImprovement++;\n                // Restore the best values to the cells\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setTempVariable(cell, j, k);\n                    }\n                }\n            }\n            if (currentBestCrossings === 0) {\n                break;\n            }\n        }\n        // Store the best rankings but in the model\n        var ranks = [];\n        var rankList = [];\n        for (var i = 0; i < model.maxRank + 1; i++) {\n            rankList[i] = [];\n            ranks[i] = rankList[i];\n        }\n        for (var i = 0; i < this.nestedBestRanks.length; i++) {\n            for (var j = 0; j < this.nestedBestRanks[i].length; j++) {\n                rankList[i].push(this.nestedBestRanks[i][j]);\n            }\n        }\n        model.ranks = ranks;\n    };\n    /**\n     * check whether the object is vertext or edge on the layout model.\n     * @private\n     */\n    CrossReduction.prototype.isVertex = function (node) {\n        if (node && node.cell && (node.cell.inEdges || node.cell.outEdges)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * used to move up or move down the node position on the adjacent ranks\n     */\n    CrossReduction.prototype.weightedMedian = function (iteration, model) {\n        // Reverse sweep direction each time through this method\n        var downwardSweep = (iteration % 2 === 0);\n        if (downwardSweep) {\n            for (var j = model.maxRank - 1; j >= 0; j--) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n        else {\n            for (var j = 1; j < model.maxRank; j++) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n    };\n    /**\n     * used to get the node next(up) connected to the specified node or connector\n     * @private\n     */\n    CrossReduction.prototype.getConnectedCellsOnLayer = function (cell, layer, isPrevious) {\n        if (isPrevious === void 0) { isPrevious = false; }\n        var connectedlayer = 'nextLayerConnectedCells';\n        var connectedAs = 'connectsAsTarget';\n        if (isPrevious) {\n            connectedlayer = 'previousLayerConnectedCells';\n            connectedAs = 'connectsAsSource';\n        }\n        if (cell) {\n            if (this.isVertex(cell)) {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    cell[connectedlayer][0] = [];\n                    for (var i = 0; i < cell[connectedAs].length; i++) {\n                        var edge = cell[connectedAs][i];\n                        if (edge.maxRank === undefined) {\n                            edge.maxRank = -1;\n                        }\n                        if (edge.maxRank === -1 || (isPrevious ? (edge.minRank === layer - 1) : (edge.maxRank === layer + 1))) {\n                            // Either edge is not in any rank or no dummy nodes in edge, add node of other side of edge\n                            cell[connectedlayer][0].push(isPrevious ? edge.target : edge.source);\n                        }\n                        else {\n                            // Edge spans at least two layers, add edge\n                            cell[connectedlayer][0].push(edge);\n                        }\n                    }\n                }\n                return cell[connectedlayer][0];\n            }\n            else {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    for (var i = 0; i < cell.temp.length; i++) {\n                        cell[connectedlayer][i] = [];\n                        if (i === (isPrevious ? 0 : (cell.temp.length - 1))) {\n                            cell[connectedlayer][i].push(isPrevious ? cell.target : cell.source);\n                        }\n                        else {\n                            cell[connectedlayer][i].push(cell);\n                        }\n                    }\n                }\n                return cell[connectedlayer][layer - cell.minRank - 1];\n            }\n        }\n        return null;\n    };\n    /**\n     * calculates the rank elements on the specified rank\n     * @private\n     */\n    CrossReduction.prototype.medianValue = function (connectedCells, rankValue) {\n        var medianValues = [];\n        var arrayCount = 0;\n        for (var i = 0; i < connectedCells.length; i++) {\n            var cell = connectedCells[i];\n            medianValues[arrayCount++] = this.getTempVariable(cell, rankValue);\n        }\n        // sorts numerical order sort\n        medianValues.sort(function (a, b) { return a - b; });\n        if (arrayCount % 2 === 1) {\n            // For odd numbers of adjacent vertices return the median\n            return medianValues[Math.floor(arrayCount / 2)];\n        }\n        else if (arrayCount === 2) {\n            return ((medianValues[0] + medianValues[1]) / 2.0);\n        }\n        else {\n            var medianPoint = arrayCount / 2;\n            var leftMedian = medianValues[medianPoint - 1] - medianValues[0];\n            var rightMedian = medianValues[arrayCount - 1]\n                - medianValues[medianPoint];\n            return (medianValues[medianPoint - 1] * rightMedian + medianValues[medianPoint] * leftMedian) / (leftMedian + rightMedian);\n        }\n    };\n    /**\n     * get the temp value of the specified layer\n     * @private\n     */\n    CrossReduction.prototype.setTempVariable = function (cell, layer, value) {\n        if (cell) {\n            cell.temp[0] = value;\n        }\n    };\n    /**\n     * used to minimize the node position on this rank and one of its adjacent ranks\n     */\n    CrossReduction.prototype.medianRank = function (rankValue, downwardSweep) {\n        var numCellsForRank = this.nestedBestRanks[rankValue].length;\n        var medianValues = [];\n        var reservedPositions = [];\n        for (var i = 0; i < numCellsForRank; i++) {\n            var cell = this.nestedBestRanks[rankValue][i];\n            var sorterEntry = { medianValue: 0 };\n            sorterEntry.cell = cell;\n            // Flip whether or not equal medians are flipped on up and down sweeps \n            //TODO re-implement some kind of nudge medianValues[i].nudge = !downwardSweep;\n            var nextLevelConnectedCells = void 0;\n            if (downwardSweep) {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue);\n            }\n            else {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue, true);\n            }\n            var nextRankValue = void 0;\n            downwardSweep ? nextRankValue = rankValue + 1 : nextRankValue = rankValue - 1;\n            if (nextLevelConnectedCells != null && nextLevelConnectedCells.length !== 0) {\n                sorterEntry.medianValue = this.medianValue(nextLevelConnectedCells, nextRankValue);\n                medianValues.push(sorterEntry);\n            }\n            else {\n                // Nodes with no adjacent vertices are flagged in the reserved array to \n                //indicate they should be left in their current position.\n                reservedPositions[this.getTempVariable(cell, rankValue)] = true;\n            }\n        }\n        medianValues.sort(this.compare);\n        // Set the new position of each node within the rank using its temp variable\n        for (var i = 0; i < numCellsForRank; i++) {\n            if (reservedPositions[i] == null && medianValues.length > 0) {\n                var cell = medianValues.shift().cell;\n                this.setTempVariable(cell, rankValue, i);\n            }\n        }\n    };\n    /**\n     * compares two values, it sends the values to the compare function,\n     * and sorts the values according to the returned (negative, zero, positive) value\n     */\n    CrossReduction.prototype.compare = function (a, b) {\n        if (a != null && b != null) {\n            if (b.medianValue > a.medianValue) {\n                return -1;\n            }\n            else if (b.medianValue < a.medianValue) {\n                return 1;\n            }\n        }\n        return 0;\n    };\n    return CrossReduction;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, CollectionFactory, ChildProperty, Event } from '@syncfusion/ej2-base';\nimport { isBlazor } from '@syncfusion/ej2-base';\nimport { Browser, EventHandler, Draggable, Collection } from '@syncfusion/ej2-base';\nimport { remove } from '@syncfusion/ej2-base';\nimport { Accordion } from '@syncfusion/ej2-navigations';\nimport { Node, Connector, Shape, Size, Transform } from '../diagram/index';\nimport { DiagramRenderer, StackPanel, Margin } from '../diagram/index';\nimport { TextElement, Canvas } from '../diagram/index';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\nimport { parentsUntil, createSvgElement, createHtmlElement, createMeasureElements } from '../diagram/utility/dom-util';\nimport { removeElementsByClass, applyStyleAgainstCsp } from '../diagram/utility/dom-util';\nimport { scaleElement, arrangeChild, groupHasType, setUMLActivityDefaults, updateDefaultValues } from '../diagram/utility/diagram-util';\nimport { getFunction, randomId } from '../diagram/utility/base-util';\nimport { getOuterBounds } from '../diagram/utility/connector';\nimport { Point } from '../diagram/primitives/point';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nvar getObjectType = function (obj) {\n    var conn = obj;\n    if (conn.sourcePoint || conn.targetPoint || conn.sourceID || conn.targetID\n        || conn.sourcePortID || conn.targetPortID || conn.sourceDecorator || conn.targetDecorator) {\n        return Connector;\n    }\n    if (obj.shape && (obj.shape instanceof Shape || obj.shape.type)) {\n        return Node;\n    }\n    return Node;\n};\n/**\n * A palette allows to display a group of related symbols and it textually annotates the group with its header.\n */\nvar Palette = /** @class */ (function (_super) {\n    __extends(Palette, _super);\n    // tslint:disable-next-line:no-any\n    function Palette(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Palette.prototype, \"height\", void 0);\n    __decorate([\n        Property(true)\n    ], Palette.prototype, \"expanded\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"iconCss\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"title\", void 0);\n    __decorate([\n        CollectionFactory(getObjectType)\n    ], Palette.prototype, \"symbols\", void 0);\n    return Palette;\n}(ChildProperty));\nexport { Palette };\n/**\n * customize the drag size of the individual palette items.\n */\nvar SymbolDragSize = /** @class */ (function (_super) {\n    __extends(SymbolDragSize, _super);\n    function SymbolDragSize() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolDragSize.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolDragSize.prototype, \"height\", void 0);\n    return SymbolDragSize;\n}(ChildProperty));\nexport { SymbolDragSize };\n/**\n * customize the preview size and position of the individual palette items.\n */\nvar SymbolPreview = /** @class */ (function (_super) {\n    __extends(SymbolPreview, _super);\n    function SymbolPreview() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], SymbolPreview.prototype, \"offset\", void 0);\n    return SymbolPreview;\n}(ChildProperty));\nexport { SymbolPreview };\n/**\n * Represents the Symbol Palette Component.\n * ```html\n * <div id=\"symbolpalette\"></div>\n * <script>\n *  var palette = new SymbolPalatte({ allowDrag:true });\n *  palette.appendTo(\"#symbolpalette\");\n * </script>\n * ```\n */\n/**\n * The symbol palette control allows to predefine the frequently used nodes and connectors\n * and to drag and drop those nodes/connectors to drawing area\n */\nvar SymbolPalette = /** @class */ (function (_super) {\n    __extends(SymbolPalette, _super);\n    //region - protected methods \n    /**\n     * Constructor for creating the component\n     * @hidden\n     */\n    function SymbolPalette(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.symbolTable = {};\n        /**   @private  */\n        _this.childTable = {};\n        _this.info = 'info';\n        _this.oldObject = null;\n        _this.laneTable = {};\n        _this.isExpand = false;\n        _this.isExpandMode = false;\n        _this.isMethod = false;\n        _this.paletteid = 88123;\n        /**\n         * helper method for draggable\n         * @return {void}\n         * @private\n         */\n        _this.helper = function (e) {\n            var clonedElement;\n            var id = (_this.selectedSymbol && _this.selectedSymbol.id) || e.sender.target.id.split('_container')[0];\n            var symbol = _this.symbolTable[id];\n            if (symbol && _this.selectedSymbol) {\n                _this.selectedSymbols = _this.selectedSymbol.id === symbol.id ? symbol : _this.selectedSymbol;\n                var position = _this.getMousePosition(e.sender);\n                clonedElement = _this.getSymbolPreview(_this.selectedSymbols, e.sender, _this.element);\n                clonedElement.setAttribute('paletteId', _this.element.id);\n            }\n            return clonedElement;\n        };\n        var child;\n        var node;\n        for (var i = 0; _this && _this.palettes && i < _this.palettes.length; i++) {\n            for (var j = 0; j < _this.palettes[i].symbols.length; j++) {\n                child = _this.palettes[i].symbols[j];\n                node = options.palettes[i].symbols[j];\n                if (child && child.shape.type === 'UmlActivity') {\n                    setUMLActivityDefaults(node, child);\n                }\n                if (_this.nodeDefaults || _this.connectorDefaults) {\n                    updateDefaultValues(child, node, child instanceof Node ? _this.nodeDefaults : _this.connectorDefaults);\n                }\n            }\n        }\n        return _this;\n    }\n    /**\n     * Refreshes the panel when the symbol palette properties are updated\n     * @param {SymbolPaletteModel} newProp - Defines the new values of the changed properties\n     * @param {SymbolPaletteModel} oldProp - Defines the old values of the changed properties\n     */\n    SymbolPalette.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var refresh = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                    this.element.style.width = this.width.toString();\n                    break;\n                case 'height':\n                    this.element.style.height = this.height.toString();\n                    break;\n                case 'symbolPreview':\n                    break;\n                case 'symbolWidth':\n                case 'symbolHeight':\n                case 'getSymbolInfo':\n                    refresh = true;\n                    break;\n                case 'enableSearch':\n                    if (newProp.enableSearch) {\n                        this.createTextbox();\n                    }\n                    else {\n                        var divElement = document.getElementById(this.element.id + '_search');\n                        if (divElement) {\n                            divElement.parentNode.removeChild(divElement);\n                        }\n                    }\n                    break;\n                case 'palettes':\n                    for (var _b = 0, _c = Object.keys(newProp.palettes); _b < _c.length; _b++) {\n                        var i = _c[_b];\n                        var index = Number(i);\n                        if (!this.accordionElement.items[index]) {\n                            this.accordionElement.items[index] = {\n                                header: newProp.palettes[index].title || '',\n                                expanded: newProp.palettes[index].expanded,\n                                iconCss: newProp.palettes[index].iconCss || ''\n                            };\n                        }\n                        if (newProp.palettes[index].iconCss !== undefined) {\n                            this.accordionElement.items[index].iconCss = newProp.palettes[index].iconCss || '';\n                            refresh = true;\n                        }\n                        if (newProp.palettes[index].expanded !== undefined) {\n                            if (!this.palettes[index].isInteraction) {\n                                this.accordionElement.items[index].expanded = newProp.palettes[index].expanded;\n                                this.isExpand = true;\n                            }\n                            else {\n                                this.palettes[index].isInteraction = false;\n                            }\n                            if (!this.isExpandMode && !this.isMethod && !this.isExpand) {\n                                this.isExpand = true;\n                            }\n                        }\n                        if (isBlazor() && newProp.palettes[index].symbols === null) {\n                            this.updateBlazorProperties(newProp);\n                        }\n                    }\n                    break;\n                case 'enableAnimation':\n                    if (!this.enableAnimation) {\n                        this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n                    }\n                    else {\n                        this.accordionElement.animation = { expand: { duration: 400 }, collapse: { duration: 400 } };\n                    }\n                    break;\n                case 'expandMode':\n                    this.accordionElement.expandMode = this.expandMode;\n                    refresh = true;\n                    this.isExpandMode = true;\n                    break;\n                case 'allowDrag':\n                    this.allowDrag = newProp.allowDrag;\n                    if (!this.allowDrag) {\n                        this.draggable.helper = function () {\n                            return null;\n                        };\n                    }\n                    else {\n                        this.draggable.helper = this.helper;\n                    }\n                    break;\n            }\n        }\n        if (refresh) {\n            this.refreshPalettes();\n        }\n        if (this.isExpand && !refresh) {\n            this.refresh();\n            this.isExpand = false;\n            for (var p = 0; p < this.palettes.length; p++) {\n                var paletteElement = this.palettes[p].id;\n                if (window[paletteElement]) {\n                    if (window[paletteElement].length > 1) {\n                        window[paletteElement][1].parentNode.removeChild(window[paletteElement][1]);\n                        window[paletteElement][1] = null;\n                    }\n                }\n            }\n        }\n        this.isMethod = false;\n    };\n    /**\n     * @private\n     */\n    SymbolPalette.prototype.updateBlazorProperties = function (newProp) {\n        var blazorInterop = 'sfBlazor';\n        var blazor = 'Blazor';\n        if (window && window[blazor]) {\n            var palObj = { palette: newProp.palettes };\n            var obj = { 'methodName': 'UpdateBlazorProperties', 'paletteobj': palObj };\n            window[blazorInterop].updateBlazorProperties(obj, this);\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    SymbolPalette.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    SymbolPalette.prototype.preRender = function () {\n        var _this = this;\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-symbolpalette').length;\n            this.element.id = 'symbolpalette_' + this.paletteid + '_' + collection;\n        }\n        this.element.style.overflow = 'auto';\n        this.element.style.height = this.height.toString();\n        this.element.style.width = this.width.toString();\n        if (this.enableSearch) {\n            this.createTextbox();\n        }\n        //create accordion element\n        var accordionDiv = createHtmlElement('div', { id: this.element.id + '_container' });\n        this.accordionElement = new Accordion({\n            expandMode: this.expandMode\n        });\n        if (!this.enableAnimation) {\n            this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n        }\n        this.accordionElement.expanded = function (args) {\n            var index = _this.accordionElement.items.indexOf(args.item);\n            var isAllowDatabind = _this.allowServerDataBinding;\n            _this.allowServerDataBinding = false;\n            _this.palettes[index].expanded = args.isExpanded;\n            _this.palettes[index].isInteraction = true;\n            _this.allowServerDataBinding = isAllowDatabind;\n        };\n        this.element.appendChild(accordionDiv);\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        createMeasureElements();\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders nodes and connectors in the symbol palette\n     */\n    SymbolPalette.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.svgRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), true);\n        this.updatePalettes();\n        this.accordionElement.appendTo('#' + this.element.id + '_container');\n        this.renderComplete();\n    };\n    /**\n     * To get Module name\n     *  @private\n     */\n    SymbolPalette.prototype.getModuleName = function () {\n        return 'SymbolPalette';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    SymbolPalette.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        return modules;\n    };\n    /**\n     * To destroy the symbol palette\n     * @return {void}\n     */\n    SymbolPalette.prototype.destroy = function () {\n        if (this.allowDrag) {\n            this.draggable.destroy();\n            this.unWireEvents();\n            this.notify('destroy', {});\n            _super.prototype.destroy.call(this);\n            var content = document.getElementById(this.element.id + '_container');\n            if (content) {\n                this.element.removeChild(content);\n                var measureElemnt = 'measureElement';\n                if (window[measureElemnt]) {\n                    window[measureElemnt].usageCount -= 1;\n                    var measureElementCount = 'measureElementCount';\n                    window[measureElementCount]--;\n                    if (window[measureElementCount] === 0) {\n                        window[measureElemnt].parentNode.removeChild(window[measureElemnt]);\n                        window[measureElemnt] = null;\n                    }\n                }\n            }\n            content = document.getElementById(this.element.id + '_search');\n            if (content) {\n                content.parentNode.removeChild(content);\n            }\n            this.element.classList.remove('e-symbolpalette');\n        }\n    };\n    /**\n     * Add particular palettes to symbol palette at runtime\n     * @param { PaletteModel } palettes - Defines the collection of palettes to be added\n     * @blazorArgsType palettes|System.Collections.ObjectModel.ObservableCollection<SymbolPalettePalette>\n     */\n    SymbolPalette.prototype.addPalettes = function (palettes) {\n        var palette;\n        for (var i = 0; i < palettes.length; i++) {\n            var isEnableServerDatabind = this.allowServerDataBinding;\n            this.isProtectedOnChange = true;\n            this.allowServerDataBinding = false;\n            palette = new Palette(this, 'palettes', palettes[i], true);\n            this.palettes.push(palette);\n            this.initSymbols(palette);\n            this.allowServerDataBinding = isEnableServerDatabind;\n            this.isProtectedOnChange = false;\n            this.renderPalette(palette);\n        }\n        this.bulkChanges = {};\n        this.accordionElement.refresh();\n    };\n    /**\n     * @private\n     */\n    SymbolPalette.prototype.removePalette = function (paletteId) {\n        for (var i = 0; i < this.palettes.length; i++) {\n            if (this.palettes[i].id === paletteId) {\n                this.palettes.splice(i, 1);\n                this.accordionElement.items.splice(i, 1);\n                break;\n            }\n        }\n    };\n    /**\n     * Add particular palettes to symbol palette at runtime\n     * @param { PaletteModel } palettes - Defines the collection of palettes to be added\n     * @blazorArgsType palettes|string[]\n     */\n    SymbolPalette.prototype.removePalettes = function (palettes) {\n        var isEnableServerDatabind = this.allowServerDataBinding;\n        this.allowServerDataBinding = false;\n        for (var i = 0; i < palettes.length; i++) {\n            this.removePalette(palettes[i]);\n        }\n        this.accordionElement.refresh();\n        this.allowServerDataBinding = isEnableServerDatabind;\n    };\n    //end region - protected methods\n    //region - private methods to render symbols\n    /**\n     * Method to initialize the items in the symbols\n     */\n    SymbolPalette.prototype.initSymbols = function (symbolGroup) {\n        var group = [];\n        var laneHeight = 0;\n        var laneWidth = 0;\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (symbol.shape.type === 'SwimLane') {\n                var swimLaneObj = symbol;\n                var swimLaneShape = symbol.shape;\n                var isHorizontal = (swimLaneShape.orientation === 'Horizontal') ? true : false;\n                if (swimLaneShape.isLane) {\n                    laneHeight = isHorizontal ? this.symbolHeight - this.symbolHeight / 2 : this.symbolHeight - this.symbolHeight / 4;\n                    laneWidth = isHorizontal ? this.symbolWidth - this.symbolWidth / 4 : this.symbolWidth - this.symbolWidth / 2;\n                    this.laneTable[symbol.id] = { height: laneHeight, width: laneWidth };\n                    var header = swimLaneShape.lanes[0].header;\n                    var laneStyle = swimLaneShape.lanes[0].style;\n                    var headerStyle = header.style;\n                    var headerObj = {\n                        id: 'header' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? header.width : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : header.height,\n                        style: headerStyle,\n                        annotations: [{ content: header.annotation.content }]\n                    };\n                    headerObj.offsetX = headerObj.width / 2;\n                    headerObj.offsetY = headerObj.height / 2;\n                    this.addPaletteItem(symbolGroup.id, headerObj);\n                    var laneObj = {\n                        id: 'lane' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? (swimLaneObj.width - header.width) : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : (swimLaneObj.height - header.height),\n                        style: laneStyle\n                    };\n                    laneObj.offsetX = isHorizontal ? (headerObj.width + (laneObj.width / 2)) : laneObj.width / 2;\n                    laneObj.offsetY = isHorizontal ? laneObj.height / 2 : (headerObj.height + (laneObj.height / 2));\n                    this.addPaletteItem(symbolGroup.id, laneObj);\n                    swimLaneObj.children = [headerObj.id, laneObj.id];\n                }\n                else if (swimLaneShape.isPhase) {\n                    laneHeight = swimLaneObj.height ? swimLaneObj.height : this.symbolHeight;\n                    laneWidth = swimLaneObj.width ? swimLaneObj.width : this.symbolWidth;\n                    symbol.shape.type = 'Path';\n                    if (isHorizontal) {\n                        symbol.shape.data = 'M0,0 L' + laneWidth + ',' + '0';\n                    }\n                    else {\n                        symbol.shape.data = 'M0,0 L0,' + laneWidth;\n                    }\n                }\n            }\n            if (symbol instanceof Node) {\n                var getNodeDefaults = getFunction(this.getNodeDefaults);\n                if (getNodeDefaults) {\n                    getNodeDefaults(symbol, this);\n                }\n            }\n            else if (symbol instanceof Connector) {\n                var getConnectorDefaults = getFunction(this.getConnectorDefaults);\n                if (getConnectorDefaults) {\n                    getConnectorDefaults(symbol, this);\n                }\n            }\n            this.symbolTable[symbol.id] = symbol;\n            if (symbol instanceof Node && symbol.children) {\n                group.push(symbol);\n            }\n        }\n        for (var i = 0; i < group.length; i++) {\n            var node = void 0;\n            for (var j = 0; j < group[i].children.length; j++) {\n                node = (this.symbolTable[group[i].children[j]]);\n                if (node) {\n                    this.childTable[node.id] = node;\n                    node.parentId = group[i].id;\n                }\n            }\n        }\n        for (var _b = 0, _c = symbolGroup.symbols; _b < _c.length; _b++) {\n            var symbol = _c[_b];\n            if (!(symbol instanceof Node && symbol.children)) {\n                this.prepareSymbol(symbol);\n            }\n        }\n        for (var _d = 0, group_1 = group; _d < group_1.length; _d++) {\n            var symbol = group_1[_d];\n            this.prepareSymbol(symbol);\n        }\n    };\n    /**\n     * Method to create the palette\n     */\n    SymbolPalette.prototype.renderPalette = function (symbolGroup) {\n        var style = 'display:none;overflow:auto;';\n        if (symbolGroup.height) {\n            style += 'height:' + symbolGroup.height + 'px';\n        }\n        var paletteDiv = createHtmlElement('div', { 'id': symbolGroup.id, style: style, class: 'e-remove-palette' });\n        this.element.appendChild(paletteDiv);\n        var item = {\n            header: symbolGroup.title, expanded: symbolGroup.expanded,\n            content: '#' + symbolGroup.id, iconCss: symbolGroup.iconCss\n        };\n        this.accordionElement.items.push(item);\n        this.renderSymbols(symbolGroup, paletteDiv);\n    };\n    /**\n     * Used to add the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.addPaletteItem = function (paletteName, paletteSymbol) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                // tslint:disable-next-line:no-any \n                var param = [undefined, symbolPaletteGroup, 'symbols', {}, true];\n                // tslint:disable-next-line:no-any \n                var obj = new (Function.prototype.bind.apply(getObjectType(paletteSymbol), param));\n                for (var i_1 = 0; i_1 < Object.keys(paletteSymbol).length; i_1++) {\n                    var isEnableServerDatabind = this.allowServerDataBinding;\n                    this.allowServerDataBinding = false;\n                    obj[Object.keys(paletteSymbol)[i_1]] = paletteSymbol[Object.keys(paletteSymbol)[i_1]];\n                    this.allowServerDataBinding = isEnableServerDatabind;\n                }\n                updateDefaultValues(obj, paletteSymbol, obj instanceof Node ? this.nodeDefaults : this.connectorDefaults);\n                symbolPaletteGroup.symbols.push(obj);\n                if (!obj.children) {\n                    var isEnableServerDatabind = this.allowServerDataBinding;\n                    this.allowServerDataBinding = false;\n                    this.prepareSymbol(obj);\n                    this.allowServerDataBinding = isEnableServerDatabind;\n                }\n                this.symbolTable[obj.id] = obj;\n                var paletteDiv = document.getElementById(symbolPaletteGroup.id);\n                if (paletteDiv) {\n                    paletteDiv.appendChild(this.getSymbolContainer(obj, paletteDiv));\n                }\n                break;\n            }\n        }\n    };\n    /**\n     * Used to remove the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.removePaletteItem = function (paletteName, symbolId) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                for (var _i = 0, _a = symbolPaletteGroup.symbols; _i < _a.length; _i++) {\n                    var symbol = _a[_i];\n                    if (symbol.id.indexOf(symbolId) !== -1) {\n                        var index = symbolPaletteGroup.symbols.indexOf(symbol);\n                        symbolPaletteGroup.symbols.splice(index, 1);\n                        if (symbol.children) {\n                            var parentNode = symbol.children;\n                            for (var i_2 = 0; i_2 < parentNode.length; i_2++) {\n                                delete this.symbolTable[(parentNode[i_2])];\n                            }\n                        }\n                        delete this.symbolTable[symbol.id];\n                        var element = document.getElementById(symbol.id + '_container');\n                        element.parentNode.removeChild(element);\n                        refresh = true;\n                        break;\n                    }\n                }\n            }\n            if (refresh) {\n                break;\n            }\n        }\n    };\n    /**\n     * Method to create the symbols in canvas\n     */\n    SymbolPalette.prototype.prepareSymbol = function (symbol) {\n        var width;\n        var sw;\n        var height;\n        var sh;\n        var stackPanel = new StackPanel();\n        var obj = symbol;\n        var content;\n        var symbolContainer = new Canvas();\n        var container = (symbol instanceof Node) ? symbol.initContainer() : null;\n        if (container && !container.children) {\n            container.children = [];\n        }\n        //preparing objects\n        var getSymbolTemplate = getFunction(this.getSymbolTemplate);\n        if (getSymbolTemplate) {\n            content = getSymbolTemplate(symbol);\n        }\n        if (!content) {\n            if (obj.children) {\n                content = this.getContainer(obj, container);\n            }\n            else {\n                content = symbol.init(this);\n                if (symbol instanceof Node && symbol.parentId) {\n                    container.children.push(content);\n                }\n            }\n        }\n        if (!symbol.parentId) {\n            var symbolInfo = { width: this.symbolWidth, height: this.symbolHeight };\n            var getSymbolInfo = getFunction(this.getSymbolInfo);\n            if (getSymbolInfo) {\n                symbolInfo = getSymbolInfo(symbol);\n            }\n            symbolInfo = symbolInfo || this.symbolInfo || {};\n            if (symbol.shape && symbol.shape.isPhase) {\n                symbolInfo.width = symbolInfo.width || this.symbolWidth;\n                symbolInfo.height = symbolInfo.height || this.symbolHeight;\n            }\n            //defining custom templates\n            content.relativeMode = 'Object';\n            content.horizontalAlignment = content.verticalAlignment = 'Center';\n            symbolContainer.style.strokeColor = symbolContainer.style.fill = 'none';\n            symbolContainer.children = [content];\n            content.measure(new Size());\n            content.arrange(content.desiredSize);\n            width = symbolInfo.width = symbolInfo.width ||\n                (obj.width !== undefined ? content.actualSize.width : undefined) || this.symbolWidth;\n            height = symbolInfo.height = symbolInfo.height ||\n                (obj.height !== undefined ? content.actualSize.height : undefined) || this.symbolHeight;\n            if (width !== undefined && height !== undefined) {\n                var actualWidth = width;\n                var actualHeight = height;\n                var isLane = symbol.shape.isLane ? true : false;\n                var isPhase = symbol.shape.isPhase ? true : false;\n                if (this.symbolWidth !== undefined) {\n                    actualWidth = this.symbolWidth - this.symbolMargin.left - this.symbolMargin.right;\n                }\n                else {\n                    width += obj.style.strokeWidth;\n                }\n                if (this.symbolHeight !== undefined) {\n                    actualHeight = this.symbolHeight - this.symbolMargin.top - this.symbolMargin.bottom;\n                }\n                else {\n                    height += obj.style.strokeWidth;\n                }\n                if (symbolInfo.description && symbolInfo.description.text !== '') {\n                    actualHeight -= 20; // default height of the text have been reduced from the container.\n                }\n                sw = actualWidth / ((!isPhase && content.width) || width);\n                sh = actualHeight / ((!isPhase && content.height) || height);\n                if (symbolInfo.fit) {\n                    sw = actualWidth / symbolInfo.width;\n                    sh = actualHeight / symbolInfo.height;\n                }\n                width = actualWidth;\n                height = actualHeight;\n                sw = sh = Math.min(sw, sh);\n                symbolContainer.width = width;\n                symbolContainer.height = height;\n                content.width = symbolInfo.width;\n                content.height = symbolInfo.height;\n                this.scaleSymbol(symbol, symbolContainer, sw, sh, width, height);\n            }\n            else {\n                var outerBounds = void 0;\n                if (symbol instanceof Connector) {\n                    outerBounds = getOuterBounds(symbol);\n                }\n                content.width = symbol.width || (outerBounds) ? outerBounds.width : content.actualSize.width;\n                content.height = symbol.height || (outerBounds) ? outerBounds.height : content.actualSize.height;\n            }\n            symbol.wrapper = stackPanel;\n            stackPanel.children = [symbolContainer];\n            content.pivot = stackPanel.pivot = { x: 0, y: 0 };\n            stackPanel.id = content.id + '_symbol';\n            stackPanel.style.fill = stackPanel.style.strokeColor = 'transparent';\n            if (symbol instanceof Node) {\n                stackPanel.offsetX = symbol.style.strokeWidth / 2;\n                stackPanel.offsetY = symbol.style.strokeWidth / 2;\n            }\n            else {\n                stackPanel.offsetX = 0.5;\n                stackPanel.offsetY = 0.5;\n            }\n            //symbol description-textElement\n            this.getSymbolDescription(symbolInfo, width, stackPanel);\n            stackPanel.measure(new Size());\n            stackPanel.arrange(stackPanel.desiredSize);\n            symbolInfo.width = symbolInfo.width || content.actualSize.width;\n            symbolInfo.height = symbolInfo.height || content.actualSize.height;\n            symbol[this.info] = symbolInfo;\n        }\n        if (symbol.parentId) {\n            container.measure(new Size(obj.width, obj.height));\n            container.arrange(container.desiredSize);\n        }\n    };\n    SymbolPalette.prototype.getContainer = function (obj, container) {\n        container.measureChildren = false;\n        var bounds;\n        var child = obj.children;\n        container.children = [];\n        for (var i = 0; i < child.length; i++) {\n            if (this.symbolTable[child[i]]) {\n                container.children.push(this.symbolTable[child[i]].wrapper);\n            }\n        }\n        container.measure(new Size(obj.width, obj.height));\n        container.arrange(container.desiredSize);\n        if (container.bounds.x !== 0 || container.bounds.y !== 0) {\n            bounds = container.bounds;\n            arrangeChild(obj, bounds.x, bounds.y, this.symbolTable, false, this);\n            container = this.getContainer(obj, container);\n        }\n        return container;\n    };\n    /**\n     * Method to get the symbol text description\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolDescription = function (symbolInfo, width, parent) {\n        if (symbolInfo && symbolInfo.description && symbolInfo.description.text) {\n            var textElement = new TextElement();\n            //symbol description-textElement\n            symbolInfo.description.overflow = symbolInfo.description.overflow || 'Ellipsis';\n            symbolInfo.description.wrap = symbolInfo.description.wrap || 'WrapWithOverflow';\n            textElement.id = parent.id + '_text';\n            textElement.content = symbolInfo.description.text;\n            textElement.width = width;\n            textElement.height = 20;\n            textElement.style.strokeColor = 'transparent';\n            textElement.style.fill = 'transparent';\n            textElement.style.strokeWidth = 0;\n            textElement.style.textWrapping = symbolInfo.description.wrap;\n            textElement.style.textOverflow = symbolInfo.description.overflow;\n            textElement.margin = { left: 0, right: 0, top: 0, bottom: 5 };\n            parent.children.push(textElement);\n        }\n    };\n    /**\n     * Method to renders the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.renderSymbols = function (symbolGroup, parentDiv) {\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (!symbol.parentId) {\n                this.getSymbolContainer(symbol, parentDiv);\n            }\n        }\n    };\n    /**\n     * Method to clone the symbol for previewing the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolPreview = function (symbol, evt, parentDiv) {\n        this.allowServerDataBinding = false;\n        var canvas;\n        var sw;\n        var sh;\n        var symbolPreviewWidth = symbol.wrapper.children[0].desiredSize.width + symbol.style.strokeWidth;\n        var symbolPreviewHeight = symbol.wrapper.children[0].desiredSize.height + symbol.style.strokeWidth;\n        var content = symbol.wrapper.children[0].children[0];\n        var symbolPreview = symbol.previewSize;\n        if ((symbol && (symbolPreview.width || symbolPreview.height)) ||\n            this.symbolPreview.width !== undefined || this.symbolPreview.height !== undefined) {\n            symbolPreviewWidth = (symbolPreview.width || this.symbolPreview.width || symbolPreviewWidth) - symbol.style.strokeWidth;\n            symbolPreviewHeight = (symbolPreview.height || this.symbolPreview.height || symbolPreviewHeight) - symbol.style.strokeWidth;\n            sw = symbolPreviewWidth / content.actualSize.width;\n            sh = symbolPreviewHeight / content.actualSize.height;\n            sw = sh = Math.min(sw, sh);\n            var symbolWidth = content.actualSize.width * sw;\n            var symbolHeight = content.actualSize.height * sh;\n            symbol.wrapper.children[0].width = symbolPreviewWidth;\n            symbol.wrapper.children[0].height = symbolPreviewHeight;\n            this.measureAndArrangeSymbol(content, symbol instanceof Node);\n            this.scaleSymbol(symbol, symbol.wrapper.children[0], sw, sh, symbolWidth, symbolHeight, true);\n            symbolPreviewWidth = symbolWidth;\n            symbolPreviewHeight = symbolHeight;\n        }\n        var prevPosition = { x: content.offsetX, y: content.offsetY };\n        content.offsetX = content.offsetY = symbol.style.strokeWidth / 2;\n        content.pivot = { x: 0, y: 0 };\n        this.measureAndArrangeSymbol(content, symbol instanceof Node);\n        var previewContainer = createHtmlElement('div', { 'draggable': 'true', 'class': 'e-dragclone', 'style': 'pointer-events:none' });\n        var div;\n        document.body.appendChild(previewContainer);\n        var style = 'margin:5px;';\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id + '_preview',\n                width: Math.ceil(symbolPreviewWidth) + 1,\n                height: Math.ceil(symbolPreviewHeight) + 1\n            });\n            var gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            previewContainer.appendChild(canvas);\n            this.svgRenderer.renderElement(content, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, previewContainer, symbolPreviewHeight, symbolPreviewWidth, true);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, previewContainer, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, true);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id + '_preview', (Math.ceil(symbolPreviewWidth) + symbol.style.strokeWidth + 1) * 2, (Math.ceil(symbolPreviewHeight) + symbol.style.strokeWidth + 1) * 2);\n                previewContainer.appendChild(canvas);\n                // BLAZ-3223: translate applied only for Basic and Flow now and need to add for remaining shapes in future \n                if (symbol.shape.type === 'Basic' || symbol.shape.type === 'Flow') {\n                    style += 'transform: scale(0.5) translate(-' + canvas.width / 2 + 'px, -' + canvas.height / 2 + 'px);';\n                }\n                else {\n                    style += 'transform:scale(0.5);';\n                }\n                canvas.setAttribute('transform-origin', '0 0');\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(content, canvas, undefined);\n            }\n        }\n        applyStyleAgainstCsp(((div && (symbol.shape.type === 'HTML' || symbol.children\n            && symbol.children.length > 0)) ? div : canvas), style);\n        content.offsetX = prevPosition.x;\n        content.offsetY = prevPosition.y;\n        this.allowServerDataBinding = true;\n        return previewContainer;\n    };\n    SymbolPalette.prototype.measureAndArrangeSymbol = function (content, isNode) {\n        if (content.children && !isNode) {\n            content.children[0].transform = Transform.Self;\n        }\n        content.measure(new Size());\n        content.arrange(content.desiredSize);\n        if (content.children) {\n            content.children[0].transform = Transform.Parent;\n        }\n    };\n    SymbolPalette.prototype.updateSymbolSize = function (symbol, width, height) {\n        var element = symbol.wrapper.children[0].children[0];\n        var strokeWidth = symbol.style.strokeWidth;\n        element.width = (width || element.width) - (strokeWidth + 1);\n        element.height = (height || element.height) - (strokeWidth + 1);\n        symbol.wrapper.measure(new Size());\n        symbol.wrapper.arrange(symbol.wrapper.desiredSize);\n    };\n    /**\n     * Method to create canvas and render the symbol\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolContainer = function (symbol, parentDiv, preview) {\n        var symbolInfo = this.symbolTable[symbol.id][this.info];\n        var size = this.getSymbolSize(symbol, symbolInfo);\n        var width = size.width + 1;\n        var height = size.height + 1;\n        var container = createHtmlElement('div', {\n            id: symbol.id + '_container',\n            style: 'width:' + width + 'px;height:' + height + 'px;float:left;overflow:hidden',\n            title: symbolInfo.tooltip ? symbolInfo.tooltip : symbol.id\n        });\n        parentDiv.appendChild(container);\n        var canvas;\n        var gElement;\n        var div;\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id,\n                width: Math.ceil(symbol.wrapper.actualSize.width) + 1,\n                height: Math.ceil(symbol.wrapper.actualSize.height) + 1\n            });\n            gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            container.appendChild(canvas);\n            this.updateSymbolSize(symbol);\n            this.svgRenderer.renderElement(symbol.wrapper, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n                container.appendChild(canvas);\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(symbol.wrapper, gElement || canvas, undefined, undefined, undefined, undefined, true, undefined, true);\n            }\n        }\n        if (!preview) {\n            var actualWidth = symbol.wrapper.actualSize.width + symbol.style.strokeWidth;\n            var actualHeight = symbol.wrapper.actualSize.height + symbol.style.strokeWidth;\n            var style = 'pointer-events:none;transform-origin:0 0;overflow:hidden;';\n            if (symbol.shape.isPhase) {\n                if (symbol.shape.orientation === 'Horizontal') {\n                    style += 'margin-left:' +\n                        Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                        + 'px;margin-top:' + size.height / 2\n                        + 'px;';\n                }\n                else {\n                    style += 'margin-left:' +\n                        size.width / 2\n                        + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                        + 'px;';\n                }\n            }\n            else {\n                style += 'margin-left:' +\n                    Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                    + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                    + 'px;';\n            }\n            if (canvas instanceof HTMLCanvasElement) {\n                style += 'transform:scale(.5,.5);';\n            }\n            applyStyleAgainstCsp(((div && (symbol.shape.type === 'HTML' || symbol.children &&\n                symbol.children.length > 0)) ? div : canvas), style);\n            container.classList.add('e-symbol-draggable');\n            return container;\n        }\n        return canvas;\n    };\n    SymbolPalette.prototype.getGroupParent = function (item, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', { 'id': item.id + (isPreview ? '_html_div_preview' : '_html_div') });\n        var htmlLayer = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas((isPreview ? (item.id + '_preview') : item.id), Math.ceil(width) + 1, Math.ceil(height) + 1);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(item.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getHtmlSymbol = function (symbol, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_html_div_preview' : '_html_div')\n        });\n        var htmlLayer = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n        container.appendChild(canvas);\n        canvas.getContext('2d').setTransform(2, 0, 0, 2, 0, 0);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(symbol.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getSymbolSize = function (symbol, symbolInfo) {\n        var width = symbol.wrapper.actualSize.width;\n        var height = symbol.wrapper.actualSize.height;\n        if (!this.symbolWidth && !this.symbolHeight) {\n            width += this.symbolMargin.left + this.symbolMargin.right + symbol.style.strokeWidth;\n            height += this.symbolMargin.top + this.symbolMargin.bottom + symbol.style.strokeWidth;\n        }\n        else {\n            width = this.symbolWidth;\n            height = Math.max(this.symbolHeight, height);\n        }\n        return new Size(width, height);\n    };\n    //end region - rendering symbols\n    //region event handlers\n    SymbolPalette.prototype.getMousePosition = function (e) {\n        var offsetY;\n        var offsetX;\n        var touchArg;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            var pageY = touchArg.changedTouches[0].clientY;\n            var pageX = touchArg.changedTouches[0].clientX;\n            offsetY = pageY - this.element.offsetTop;\n            offsetX = pageX - this.element.offsetLeft;\n        }\n        else {\n            offsetY = e.clientY - this.element.offsetTop;\n            offsetX = e.clientX - this.element.offsetLeft;\n        }\n        return { x: offsetX, y: offsetY };\n    };\n    SymbolPalette.prototype.mouseMove = function (e, touches) {\n        if (this.highlightedSymbol && (!this.selectedSymbol\n            || this.selectedSymbol.id + '_container' !== this.highlightedSymbol.id)) {\n            this.highlightedSymbol.classList.remove('e-symbol-hover');\n            this.highlightedSymbol.style.backgroundColor = '';\n            this.highlightedSymbol = null;\n        }\n        var id = e.target.id.split('_container')[0];\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-hover');\n            this.highlightedSymbol = container;\n        }\n        e.preventDefault();\n    };\n    SymbolPalette.prototype.mouseUp = function (evt) {\n        this.isMethod = true;\n        if (evt && evt.target) {\n            if (evt.srcElement.id === 'iconSearch') {\n                var element = document.getElementById('iconSearch');\n                if (element.classList.contains('e-clear-searchtext')) {\n                    element.className = 'e-input-group-icon e-search e-icons';\n                    document.getElementById('textEnter').value = '';\n                    this.searchPalette('');\n                }\n            }\n            else {\n                var id = evt.target.id.split('_container')[0];\n                if (id && this.selectedSymbol) {\n                    var args = { oldValue: this.oldObject, newValue: id };\n                    var event_1 = 'paletteSelectionChange';\n                    this.trigger(event_1, args);\n                    this.oldObject = id;\n                    evt.preventDefault();\n                }\n            }\n        }\n    };\n    SymbolPalette.prototype.keyUp = function (evt) {\n        var _this = this;\n        if (this.enableSearch) {\n            var palette_1 = this;\n            var element = document.getElementById('iconSearch');\n            element.className = 'e-input-group-icon e-clear-searchtext e-icons';\n            if (evt && (evt.key === 'Enter' || evt.keyCode === 13)) {\n                if (evt.target instanceof HTMLInputElement) {\n                    this.searchPalette(evt.target.value);\n                }\n            }\n            else {\n                if (this.timer) {\n                    clearTimeout(this.timer);\n                }\n                this.timer = setTimeout(function () {\n                    if (evt.target instanceof HTMLInputElement) {\n                        palette_1.searchPalette(evt.target.value);\n                        _this.timer = null;\n                    }\n                }, 500);\n            }\n        }\n    };\n    SymbolPalette.prototype.mouseDown = function (evt) {\n        var id = evt.target.id.split('_container')[0];\n        if (this.selectedSymbol) {\n            var oldSymbol = document.getElementById(this.selectedSymbol.id + '_container');\n            if (id !== this.selectedSymbol.id && oldSymbol) {\n                oldSymbol.classList.remove('e-symbol-selected');\n            }\n            var container = document.getElementById(this.selectedSymbol.id + '_container');\n            if (container) {\n                container.style.backgroundColor = '';\n            }\n            this.selectedSymbol = null;\n        }\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-selected');\n            this.selectedSymbol = this.symbolTable[id];\n            evt.preventDefault();\n        }\n    };\n    SymbolPalette.prototype.keyDown = function (evt) {\n        var palette = this;\n        var helperElement = 'helperElement';\n        var intDestroy = 'intDestroy';\n        if (evt && (evt.key === 'Escape')) {\n            var element = palette.draggable[helperElement];\n            if (element && element.parentNode) {\n                element.parentNode.removeChild(element);\n                palette.draggable[intDestroy]();\n            }\n        }\n    };\n    //end region - event handlers\n    // region - draggable\n    SymbolPalette.prototype.initDraggable = function () {\n        if (this.allowDrag) {\n            var drag = void 0;\n            this.draggable = new Draggable(this.element, {\n                dragTarget: '.e-symbol-draggable',\n                helper: this.helper,\n                dragStart: this.dragStart,\n                preventDefault: false,\n                dragStop: this.dragStop,\n                drag: function (args) {\n                    var target = 'target';\n                    var parent = parentsUntil(args[target], 'e-droppable');\n                    if (parent && parent.classList.contains('e-diagram')) {\n                        var e2eInstance = 'ej2_instances';\n                        parent[e2eInstance][0].droppable.over(args);\n                    }\n                },\n                cursorAt: { left: this.symbolPreview.offset.x, top: this.symbolPreview.offset.y }\n            });\n        }\n    };\n    SymbolPalette.prototype.dragStart = function (e) {\n        var element = this.helper[0];\n        if (element) {\n            element.setAttribute('paletteId', this.element.id);\n        }\n        if (isBlazor()) {\n            e.bindEvents(e.dragElement);\n        }\n    };\n    SymbolPalette.prototype.dragStop = function (e) {\n        if (!parentsUntil(e.target, 'e-diagram')) {\n            remove(e.helper);\n        }\n    };\n    //end region - draggable \n    //region - helper methods\n    SymbolPalette.prototype.scaleSymbol = function (symbol, symbolContainer, sw, sh, width, height, preview) {\n        if (symbol instanceof Connector) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer.children[0];\n            var point = symbol.scale(sw, sh, width, height, symbolContainer.children[0]);\n            var difX = width / 2 - symbolContainer.children[0].children[0].offsetX + point.x / 2;\n            var difY = height / 2 - symbolContainer.children[0].children[0].offsetY + point.y / 2;\n            for (var _i = 0, _a = symbolContainer.children[0].children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.offsetX += difX;\n                child.offsetY += difY;\n                child.staticSize = false;\n            }\n            symbol.wrapper = wrapper;\n        }\n        else if (symbol.shape.type === 'Bpmn' && this.bpmnModule) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer;\n            symbolContainer.children[0].width = width;\n            symbolContainer.children[0].height = height;\n            this.bpmnModule.updateBPMN({ width: width, height: height }, symbol, symbol, null);\n            symbol.wrapper = wrapper;\n        }\n        else {\n            if (symbol.children) {\n                var parentNode = symbol.children;\n                var w = 0;\n                var h = 0;\n                if (!preview) {\n                    var node = void 0;\n                    var container = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        container = symbolContainer.children[0].children[i];\n                        if (container) {\n                            if (container.children[0].children) {\n                                this.measureChild(container);\n                            }\n                            node = this.symbolTable[container.id];\n                            container.width = node.width;\n                            container.height = node.height;\n                            container.measure(new Size());\n                            container.arrange(container.children[0].desiredSize);\n                        }\n                    }\n                }\n                w = width / symbolContainer.children[0].desiredSize.width;\n                h = height / symbolContainer.children[0].desiredSize.height;\n                symbolContainer.children[0].measure(new Size());\n                symbolContainer.children[0].arrange(symbolContainer.children[0].desiredSize);\n                if (!preview) {\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, w, h, symbol);\n                            }\n                            this.scaleGroup(children, w, h, symbol);\n                        }\n                    }\n                }\n                if (preview) {\n                    var node = void 0;\n                    var scaleWidth = void 0;\n                    var scaleHeight = void 0;\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        node = this.symbolTable[parentNode[i]];\n                        scaleWidth = width / symbol.wrapper.children[0].desiredSize.width;\n                        scaleHeight = height / symbol.wrapper.children[0].desiredSize.height;\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, scaleWidth, scaleHeight, symbol, true);\n                            }\n                            this.scaleGroup(children, scaleWidth, scaleHeight, symbol, true);\n                        }\n                    }\n                    symbol.wrapper.children[0].measure(new Size());\n                    symbol.wrapper.children[0].arrange(symbol.wrapper.children[0].desiredSize);\n                }\n            }\n            else {\n                scaleElement(symbolContainer.children[0], sw, sh, symbolContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleChildren = function (container, w, h, symbol, preview) {\n        var child;\n        for (var i = 0; i < container.children.length; i++) {\n            child = container.children[i];\n            if (!child.children[0].children) {\n                this.scaleGroup(child, w, h, symbol, preview);\n            }\n            else {\n                this.scaleChildren(child, w, h, symbol, preview);\n            }\n        }\n    };\n    SymbolPalette.prototype.measureChild = function (container) {\n        var childContainer;\n        var node;\n        for (var i = 0; i < container.children.length; i++) {\n            childContainer = container.children[i];\n            if (!childContainer.children[0].children) {\n                node = this.symbolTable[childContainer.id];\n                childContainer.width = node.width;\n                childContainer.height = node.height;\n                childContainer.measure(new Size());\n                childContainer.arrange(childContainer.children[0].desiredSize);\n            }\n            else {\n                this.measureChild(childContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleGroup = function (child, w, h, symbol, preview) {\n        child.width = child.width * w;\n        child.height = (child.height * h);\n        child.offsetX = preview ? (child.offsetX * w) - symbol.style.strokeWidth : (child.offsetX * w) + symbol.style.strokeWidth / 2;\n        child.offsetY = preview ? (child.offsetY * h) - symbol.style.strokeWidth : (child.offsetY * h) + symbol.style.strokeWidth / 2;\n        child.measure(new Size());\n        child.arrange(child.children[0].desiredSize);\n    };\n    SymbolPalette.prototype.refreshPalettes = function () {\n        this.accordionElement.items = [];\n        removeElementsByClass('e-remove-palette', this.element.id);\n        this.updatePalettes();\n        this.accordionElement.dataBind();\n    };\n    SymbolPalette.prototype.updatePalettes = function () {\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symGroup = this.palettes[i];\n            this.initSymbols(symGroup);\n            this.renderPalette(symGroup);\n        }\n    };\n    SymbolPalette.prototype.createTextbox = function () {\n        var searchDiv = createHtmlElement('div', { id: this.element.id + '_search' });\n        applyStyleAgainstCsp(searchDiv, 'backgroundColor:white;height:30px');\n        //  searchDiv.setAttribute('style', 'backgroundColor:white;height:30px');\n        searchDiv.className = 'e-input-group';\n        this.element.appendChild(searchDiv);\n        var textBox = createHtmlElement('input', {});\n        textBox.placeholder = 'Search Shapes';\n        textBox.id = 'textEnter';\n        applyStyleAgainstCsp(textBox, 'width:100%;height:auto');\n        //textBox.setAttribute('style', 'width:100%;height:auto');\n        textBox.className = 'e-input';\n        searchDiv.appendChild(textBox);\n        var span = createHtmlElement('span', { id: 'iconSearch', className: 'e-input-group-icon e-search e-icons' });\n        searchDiv.appendChild(span);\n    };\n    SymbolPalette.prototype.getFilterSymbol = function (symbol) {\n        var items = [];\n        for (var i = 0; i < symbol.length; i++) {\n            for (var j = 0; j < this.ignoreSymbolsOnSearch.length; j++) {\n                if (this.ignoreSymbolsOnSearch[j] !== symbol[i].id) {\n                    items.push(symbol[0]);\n                }\n            }\n        }\n        return items;\n    };\n    SymbolPalette.prototype.searchPalette = function (value) {\n        var symbolGroup = [];\n        var element = document.getElementById('SearchPalette');\n        var paletteDiv;\n        //remove the existing child in palette\n        if (element) {\n            for (var k = element.children.length - 1; k >= 0; k--) {\n                element.removeChild(element.children[k]);\n            }\n        }\n        //add the searched item in array collection\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            for (var j = 0; j < symbolPaletteGroup.symbols.length; j++) {\n                var item = symbolPaletteGroup.symbols[j];\n                if (value !== '' && item.id.toLowerCase().indexOf(value.toLowerCase()) !== -1) {\n                    symbolGroup.push(item);\n                }\n            }\n        }\n        var filterSymbols = getFunction(this.filterSymbols);\n        if (filterSymbols) {\n            symbolGroup = filterSymbols(symbolGroup) || [];\n        }\n        if (this.ignoreSymbolsOnSearch && this.ignoreSymbolsOnSearch.length > 0) {\n            symbolGroup = this.getFilterSymbol(symbolGroup);\n        }\n        //create a palette collection\n        if (!element) {\n            paletteDiv = this.createSearchPalette(paletteDiv);\n            element = paletteDiv;\n        }\n        //add the symbols into search palette\n        if (symbolGroup.length > 0) {\n            for (var _i = 0, symbolGroup_1 = symbolGroup; _i < symbolGroup_1.length; _i++) {\n                var symbol = symbolGroup_1[_i];\n                this.getSymbolContainer(symbol, element);\n            }\n        }\n        else if (value !== '') {\n            var emptyDiv = createHtmlElement('div', { 'id': 'EmptyDiv', 'style': 'text-align:center;font-style:italic' });\n            emptyDiv.innerHTML = 'No Items To Display';\n            element.appendChild(emptyDiv);\n        }\n        else {\n            var element_1 = document.getElementById('iconSearch');\n            element_1.className = 'e-input-group-icon e-search e-icons';\n            this.accordionElement.removeItem(0);\n            var searchPalette = document.getElementById('SearchPalette');\n            if (searchPalette) {\n                searchPalette.remove();\n            }\n        }\n    };\n    SymbolPalette.prototype.createSearchPalette = function (paletteDiv) {\n        paletteDiv = createHtmlElement('div', { 'id': 'SearchPalette', 'style': 'display:none;overflow:auto;' });\n        this.element.appendChild(paletteDiv);\n        var paletteCollection = {\n            header: 'Search Results', expanded: true,\n            content: '#SearchPalette',\n        };\n        this.accordionElement.addItem(paletteCollection, 0);\n        return paletteDiv;\n    };\n    /**\n     * Method to bind events for the symbol palette\n     */\n    SymbolPalette.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.add(this.element, startEvent, this.mouseDown, this);\n        EventHandler.add(this.element, moveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, stopEvent, this.mouseUp, this);\n        EventHandler.add(this.element, keyEvent, this.keyUp, this);\n        EventHandler.add(document, keyDownEvent, this.keyDown, this);\n        // initialize the draggable component\n        this.initDraggable();\n    };\n    /**\n     * Method to unbind events for the symbol palette\n     */\n    SymbolPalette.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.remove(this.element, startEvent, this.mouseDown);\n        EventHandler.remove(this.element, moveEvent, this.mouseMove);\n        EventHandler.remove(this.element, stopEvent, this.mouseUp);\n        EventHandler.remove(this.element, keyEvent, this.keyUp);\n        EventHandler.remove(document, keyDownEvent, this.keyDown);\n    };\n    __decorate([\n        Property('S')\n    ], SymbolPalette.prototype, \"accessKey\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"height\", void 0);\n    __decorate([\n        Collection([], Palette)\n    ], SymbolPalette.prototype, \"palettes\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"filterSymbols\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"ignoreSymbolsOnSearch\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolTemplate\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolWidth\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolHeight\", void 0);\n    __decorate([\n        Complex({ left: 10, right: 10, top: 10, bottom: 10 }, Margin)\n    ], SymbolPalette.prototype, \"symbolMargin\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"allowDrag\", void 0);\n    __decorate([\n        Complex({}, SymbolPreview)\n    ], SymbolPalette.prototype, \"symbolPreview\", void 0);\n    __decorate([\n        Complex({}, SymbolDragSize)\n    ], SymbolPalette.prototype, \"symbolDragSize\", void 0);\n    __decorate([\n        Property(false)\n    ], SymbolPalette.prototype, \"enableSearch\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('Multiple')\n    ], SymbolPalette.prototype, \"expandMode\", void 0);\n    __decorate([\n        Event()\n    ], SymbolPalette.prototype, \"paletteSelectionChange\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"nodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"connectorDefaults\", void 0);\n    return SymbolPalette;\n}(Component));\nexport { SymbolPalette };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DiagramRenderer } from '../diagram/rendering/renderer';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nimport { Component, Property, Browser, EventHandler, Event } from '@syncfusion/ej2-base';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement, getHTMLLayer } from '../diagram/utility/dom-util';\nimport { createSvgElement, getNativeLayer, hasClass } from '../diagram/utility/dom-util';\nimport { Rect } from '../diagram/primitives/rect';\nimport { Size } from '../diagram/primitives/size';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\n/**\n * Overview control allows you to see a preview or an overall view of the entire content of a Diagram.\n * This helps you to look at the overall picture of a large Diagram\n * To navigate, pan, or zoom, on a particular position of the page.\n * ```html\n * <div id='diagram'/>\n * <div id=\"overview\"></div>\n * ```\n * ```typescript\n * let overview: Overview;\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * let options: OverviewModel = {};\n * options.sourceID = 'diagram';\n * options.width = '250px';\n * options.height = '500px';\n * overview = new Overview(options);\n * overview.appendTo('#overview');\n * ```\n */\nvar Overview = /** @class */ (function (_super) {\n    __extends(Overview, _super);\n    function Overview(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.mode = 'Canvas';\n        /** @private */\n        _this.id = 'overview';\n        _this.actionName = '';\n        _this.startPoint = null;\n        _this.currentPoint = null;\n        _this.prevPoint = null;\n        _this.scale = null;\n        _this.inAction = false;\n        _this.viewPortRatio = 1;\n        _this.horizontalOffset = 0;\n        _this.verticalOffset = 0;\n        _this.model = {};\n        _this.event = true;\n        _this.overviewid = 88123;\n        _this.model = { width: _this.width, height: _this.height };\n        return _this;\n    }\n    /**\n     * Updates the overview control when the objects are changed\n     * @param {OverviewModel} newProp - Lists the new values of the changed properties\n     * @param {OverviewModel} oldProp - Lists the old values of the changed properties\n     */\n    Overview.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var objectArray = [];\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'sourceID':\n                    this.setParent(newProp.sourceID);\n                    break;\n                case 'width':\n                case 'height':\n                    this.renderCanvas();\n                    this.setParent(this.sourceID);\n                    break;\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Overview.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Overview.prototype.preRender = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-overview').length;\n            this.element.id = 'overview_' + this.overviewid + '_' + collection;\n        }\n        this.element.style.background = 'transparent';\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    Overview.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.renderCanvas();\n        this.setParent(this.sourceID);\n        this.renderComplete();\n    };\n    Overview.prototype.getSizeValue = function (real) {\n        var text;\n        if (real.toString().indexOf('px') > 0 || real.toString().indexOf('%') > 0) {\n            text = real.toString();\n        }\n        else {\n            text = real.toString() + 'px';\n        }\n        return text;\n    };\n    Overview.prototype.renderCanvas = function (options) {\n        var canvas = document.getElementById(this.element.id + '_canvas');\n        if (!canvas) {\n            canvas = createHtmlElement('div', {});\n            this.element.appendChild(canvas);\n        }\n        var attribute = {\n            'id': this.element.id + '_canvas', 'class': 'drawing',\n            'style': 'position:relative; margin-top:6px; height:' + this.getSizeValue(this.model.height) + '; width:' +\n                this.getSizeValue(this.model.width) +\n                ';style:-ms-touch-action: none;touch-action: none;'\n        };\n        setAttributeHtml(canvas, attribute);\n        this.element.setAttribute('tabindex', String(0));\n        this.element.style.overflow = 'hidden';\n        this.element.style.height = String(this.model.height);\n        this.element.style.width = String(this.model.width);\n        this.canvas = canvas;\n    };\n    Overview.prototype.setParent = function (id) {\n        var element = document.getElementById(id);\n        var instance = 'ej2_instances';\n        if (this.parent) {\n            var oldparent = this.parent;\n            this.parent = null;\n            oldparent.setOverview(null, this.element.id);\n            this.removeDocument(this);\n        }\n        this.parent = this.getDiagram(element, instance);\n        if (this.parent) {\n            this.parent.setOverview(this);\n        }\n    };\n    Overview.prototype.getDiagram = function (element, instance) {\n        var diagram;\n        var n = element[instance].length;\n        for (var i = 0; i < n; i++) {\n            if (hasClass(element[instance][i].element, 'e-diagram')) {\n                diagram = element[instance][i];\n                break;\n            }\n        }\n        return diagram;\n    };\n    Overview.prototype.unWireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var move = Browser.touchMoveEvent;\n        var evnt;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stop = Browser.touchEndEvent;\n        EventHandler.remove(this.element, start, this.mouseDown);\n        EventHandler.remove(this.element, move, this.mouseMove);\n        EventHandler.remove(this.element, stop, this.mouseUp);\n        EventHandler.remove(this.element, cancel, this.documentMouseUp);\n        EventHandler.remove(window, 'resize', this.windowResize);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.remove(container, 'scroll', this.scrolled);\n        }\n    };\n    Overview.prototype.wireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.element, start, this.mouseDown, this);\n        EventHandler.add(this.element, move, this.mouseMove, this);\n        EventHandler.add(this.element, stop, this.mouseUp, this);\n        EventHandler.add(this.element, cancel, this.documentMouseUp, this);\n        EventHandler.add(window, 'resize', this.windowResize, this);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.add(container, 'scroll', this.scrolled, this);\n        }\n    };\n    /**\n     * @private\n     */\n    /**\n     * @private\n     */\n    Overview.prototype.renderDocument = function (view) {\n        view.canvas = this.canvas;\n        var g = document.getElementById(this.canvas.id + '_svg');\n        if (g) {\n            g.parentNode.removeChild(g);\n        }\n        var attr = {\n            id: this.canvas.id + '_svg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'class': 'overview_svg'\n        };\n        var svg = createSvgElement('svg', attr);\n        this.svg = svg;\n        view.svg = svg;\n        view.canvas.appendChild(svg);\n        var ovw = document.getElementById(this.element.id);\n        var element = ovw;\n        var eWidth = element.clientWidth;\n        var eHeight = element.clientHeight;\n        var bRect = element.getBoundingClientRect();\n        // Check for the window resize\n        var screenX = (window.screenX < 0) ? window.screenX * -1 : window.screenX;\n        var screenY = (window.screenY < 0) ? window.screenY * -1 : window.screenY;\n        if (eWidth === 0) {\n            var widthValue = Math.floor(((window.innerWidth - screenX) - Math.floor(bRect.left)));\n            eWidth = widthValue > 0 ? widthValue : Math.floor(window.innerWidth);\n        }\n        if (eHeight === 0) {\n            var heightValue = Math.floor(((window.innerHeight - screenY) - Math.floor(bRect.top)));\n            eHeight = heightValue > 0 ? heightValue : Math.floor(window.innerHeight);\n        }\n        if (eWidth > 0) {\n            svg.setAttribute('width', String(eWidth));\n            this.model.height = eHeight;\n        }\n        if (eHeight > 0) {\n            svg.setAttribute('height', String(eHeight));\n            this.model.width = eWidth;\n        }\n        var attributes;\n        if (!view.diagramLayerDiv) {\n            view.diagramLayerDiv = createHtmlElement('div', {});\n            var container = document.getElementById(this.element.id);\n            view.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagramLayer', this.model.width, this.model.height);\n            view.diagramLayer.setAttribute('style', 'position:absolute; left:0px;  top:0px ');\n            view.diagramLayerDiv.appendChild(view.diagramLayer);\n            view.canvas.appendChild(view.diagramLayerDiv);\n        }\n        attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + this.model.width + 'px; height:' + this.model.height + 'px;position:absolute;top:0px;left:0px'\n        };\n        setAttributeHtml(view.diagramLayerDiv, attributes);\n        this.renderHtmlLayer(view.canvas);\n        this.renderNativeLayer(view.canvas, view);\n        this.addOverviewRectPanel(view);\n    };\n    /** @private */\n    Overview.prototype.removeDocument = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_svg');\n        this.canvas.removeChild(svg);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        this.canvas.removeChild(htmlLayer);\n        var diagramLayer = document.getElementById(this.element.id + '_diagramLayer_div');\n        this.canvas.removeChild(diagramLayer);\n        view.diagramLayerDiv = null;\n        view.diagramLayer = null;\n    };\n    Overview.prototype.renderHtmlLayer = function (canvas) {\n        var htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer', 'class': 'e-html-layer',\n            'style': 'pointer-events:none;position:absolute;top:0px;left:0px;'\n        });\n        var options = {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;'\n        };\n        var htmlDiv = createHtmlElement('div', options);\n        htmlLayer.appendChild(htmlDiv);\n        canvas.appendChild(htmlLayer);\n        return htmlLayer;\n    };\n    Overview.prototype.renderNativeLayer = function (canvas, view) {\n        if (!document.getElementById(this.element.id + '_nativeLayer_svg')) {\n            var nativeLayerSvg = this.parent.createSvg(this.element.id + '_nativeLayer_svg', this.model.width, this.model.height);\n            var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer' });\n            nativeLayerSvg.appendChild(nativeLayer);\n            view.diagramLayerDiv.appendChild(nativeLayerSvg);\n            setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer' });\n        }\n    };\n    Overview.prototype.addOverviewRectPanel = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_overviewsvg');\n        if (svg) {\n            svg.parentNode.removeChild(svg);\n        }\n        var attr = ({\n            id: this.canvas.id + '_overviewsvg',\n            class: 'overviewsvg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'style': 'position:absolute;left:0px;top:0px; aria-label:Specifies overview',\n            width: this.model.width,\n            height: this.model.height\n        });\n        svg = createSvgElement('svg', attr);\n        view.canvas.appendChild(svg);\n        var ovw = createSvgElement('g', { 'id': this.element.id + '_overviewlayer', 'style': 'pointer-events:none' });\n        svg.appendChild(ovw);\n        var rect = createSvgElement('rect', {\n            'fill': 'transparent', 'width': '100%', 'height': '100%', 'class': 'overviewbackrect',\n            'id': this.canvas.id + 'overviewbackrect'\n        });\n        rect.setAttribute('style', ' pointer-events: none; ');\n        ovw.appendChild(rect);\n        var svgDocument = (ovw);\n        var g = createSvgElement('g', { 'id': this.canvas.id + 'overviewhandle', 'style': 'pointer-events:all' });\n        ovw.appendChild(g);\n        var innerrect = createSvgElement('rect', { 'id': this.canvas.id + 'overviewrect', 'fill': 'transparent' });\n        g.appendChild(innerrect);\n        this.renderOverviewCorner('left', g);\n        this.renderOverviewCorner('right', g);\n        this.renderOverviewCorner('top', g);\n        this.renderOverviewCorner('bottom', g);\n        this.renderOverviewCorner('topleft', g);\n        this.renderOverviewCorner('topright', g);\n        this.renderOverviewCorner('bottomleft', g);\n        this.renderOverviewCorner('bottomright', g);\n    };\n    Overview.prototype.renderOverviewCorner = function (name, parent) {\n        var svg = this.svg;\n        var shape;\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            shape = 'rect';\n        }\n        else {\n            shape = 'circle';\n        }\n        var innerrect = createSvgElement(shape, { 'id': this.canvas.id + 'visible' + name });\n        parent.appendChild(innerrect);\n        var transrect = createSvgElement(shape, {\n            'id': this.canvas.id + name, 'class': 'overviewresizer', 'fill': 'transparent'\n        });\n        parent.appendChild(transrect);\n    };\n    Overview.prototype.updateOverviewRectangle = function () {\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var size = new Size();\n        size.width = 0;\n        size.height = 0;\n        var x = 0;\n        var y = 0;\n        var w;\n        var h;\n        switch (this.resizeDirection) {\n            case 'left':\n                size.width -= difx;\n                size.height -= difx / this.viewPortRatio;\n                x = difx;\n                y = difx / this.viewPortRatio;\n                y /= 2;\n                break;\n            case 'right':\n                size.width += difx;\n                size.height += difx / this.viewPortRatio;\n                y = difx / this.viewPortRatio;\n                y /= -2;\n                break;\n            case 'top':\n                size.height -= dify;\n                size.width -= dify * this.viewPortRatio;\n                y = dify;\n                x = dify * this.viewPortRatio;\n                x /= 2;\n                break;\n            case 'bottom':\n                size.height += dify;\n                size.width += dify * this.viewPortRatio;\n                x = dify * this.viewPortRatio;\n                x /= -2;\n                break;\n            case 'topleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width -= difx;\n                size.height -= dify;\n                x = difx;\n                y = dify;\n                break;\n            case 'topright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -(difx / this.viewPortRatio);\n                }\n                y = dify;\n                size.width += difx;\n                size.height -= dify;\n                break;\n            case 'bottomleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -difx / this.viewPortRatio;\n                }\n                x = difx;\n                size.width -= difx;\n                size.height += dify;\n                break;\n            case 'bottomright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width += difx;\n                size.height += dify;\n                break;\n        }\n        this.updateHelper(x, y, size, w, h);\n    };\n    Overview.prototype.updateHelper = function (difx, dify, size, width, height) {\n        var x;\n        var y;\n        var bounds;\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var rect = svg.getElementById('helper');\n        if (size) {\n            bounds = rect.getBBox();\n            x = bounds.x + difx;\n            y = bounds.y + dify;\n            width = bounds.width + size.width;\n            height = bounds.height + size.height;\n        }\n        else {\n            var difx_1;\n            if (this.currentPoint.x > this.startPoint.x) {\n                difx_1 = this.currentPoint.x - this.prevPoint.x;\n            }\n            else {\n                difx_1 = this.prevPoint.x - this.currentPoint.x;\n            }\n            var dify_1;\n            if (this.currentPoint.y > this.startPoint.y) {\n                dify_1 = this.currentPoint.y - this.prevPoint.y;\n            }\n            else {\n                dify_1 = this.prevPoint.y - this.currentPoint.y;\n            }\n            var w = void 0;\n            var h = void 0;\n            if (Math.abs(dify_1) > Math.abs(difx_1)) {\n                difx_1 = this.viewPortRatio * dify_1;\n                h = true;\n                w = false;\n            }\n            else {\n                dify_1 = difx_1 / this.viewPortRatio;\n                w = true;\n                h = false;\n            }\n            bounds = rect.getBBox();\n            x = ((this.startPoint.x > this.currentPoint.x) ?\n                bounds.x - difx_1 : bounds.x);\n            y = ((this.startPoint.y > this.currentPoint.y) ? bounds.y - dify_1 : bounds.y);\n            width = bounds.width + difx_1;\n            height = bounds.height + dify_1;\n        }\n        setAttributeSvg(this.helper, {\n            'id': this.helper.id, 'x': x, 'y': y,\n            'width': Math.max(0, width), 'height': Math.max(0, height)\n        });\n    };\n    Overview.prototype.updateOverviewrect = function (x, y, width, height) {\n        var rect = document.getElementById(this.canvas.id + 'overviewrect');\n        var attr = { x: x, y: y, width: Math.max(1, width), height: Math.max(1, height) };\n        setAttributeHtml(rect, attr);\n        this.updateOverviewCorner('top', x + 8, y + 1, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('bottom', x + 8, y + height + 3, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('left', x - 2, y + 11, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('right', x + width, y + 11, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('topleft', x, y + 3, 5, 5);\n        this.updateOverviewCorner('topright', x + width, y + 3, 5, 5);\n        this.updateOverviewCorner('bottomleft', x, y + height + 3, 5, 5);\n        this.updateOverviewCorner('bottomright', x + width, y + height + 3, 5, 5);\n    };\n    Overview.prototype.updateOverviewCorner = function (name, x, y, width, height) {\n        var attr;\n        var transattr;\n        var rectname = 'visible' + name;\n        var rect = document.getElementById(this.canvas.id + rectname);\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            attr = { x: x, y: y, width: width, height: height, fill: '#ED1C24' };\n            transattr = { x: x - 2, y: y - 2, width: width === 2 ? 4 : width, height: height === 2 ? 4 : height };\n        }\n        else {\n            attr = { cx: x, cy: y, 'r': 4, fill: '#ED1C24' };\n            transattr = { cx: x, cy: y, 'r': 6, fill: 'transparent' };\n        }\n        setAttributeHtml(rect, attr);\n        var transrect = document.getElementById(this.canvas.id + name);\n        setAttributeHtml(transrect, transattr);\n    };\n    Overview.prototype.translateOverviewRectangle = function () {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var viewPort;\n        var zoom = Math.min(this.parent.scroller.viewPortWidth / offwidth, this.parent.scroller.viewPortHeight / offheight);\n        var svg = this.element.getElementsByClassName('overviewsvg')[0];\n        var panel = svg.getElementById(this.canvas.id\n            + 'overviewrect');\n        var bounds = panel.getBBox();\n        var x = bounds.x + difx;\n        var y = bounds.y + dify;\n        var width = bounds.width;\n        var height = bounds.height;\n        this.updateOverviewrect(x, y, width, height);\n        this.updateParentView(this.parent.scroller.currentZoom, x, y, width, height, null);\n    };\n    Overview.prototype.renderOverviewRect = function (x, y, width, height) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var viewPort;\n        var viewwidth = (width / offwidth) * this.contentWidth;\n        var viewheight = (height / offheight) * this.contentHeight;\n        var zoom = Math.max(this.parent.scroller.viewPortWidth / viewwidth, this.parent.scroller.viewPortHeight / viewheight);\n        if (zoom >= 0.25 && zoom <= 30) {\n            var point = { x: 0, y: 0 };\n            this.updateParentView(zoom, x, y, width, height, point);\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            if (this.helper) {\n                var panel = this.element.getElementsByTagName('rect')[10];\n                var svgRect = panel.getBBox();\n                bounds.x = svgRect.x;\n                bounds.y = svgRect.y;\n            }\n            this.updateOverviewrect(bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.scrollOverviewRect = function (hoffset, voffset, currentZoom, scaled) {\n        if (!(this.actionName) || scaled) {\n            var offwidth = Number(this.model.width);\n            var offheight = Number(this.model.height);\n            var scale = Math.min(this.contentWidth / offwidth, this.contentHeight / offheight);\n            var bounds = new Rect();\n            var x = bounds.x = (hoffset / currentZoom) / scale;\n            var y = bounds.y = (voffset / currentZoom) / scale;\n            var viewPort = void 0;\n            var width = bounds.width = (this.parent.scroller.viewPortWidth / currentZoom) / scale;\n            var height = bounds.height = (this.parent.scroller.viewPortHeight / currentZoom) / scale;\n            var ratio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n            if (scaled) {\n                var rect = new Rect();\n                rect.x = x;\n                rect.y = y;\n                rect.width = width;\n                rect.height = height;\n                return rect;\n            }\n            this.updateOverviewrect(-x, -y, width, height);\n        }\n        return null;\n    };\n    Overview.prototype.updateParentView = function (zoom, x, y, width, height, focusPoint) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scalex = this.contentWidth / offwidth;\n        var scaley = this.contentHeight / offheight;\n        var hoffset = x * scalex * zoom;\n        var voffset = y * scaley * zoom;\n        var delx;\n        var dely;\n        var bounds = this.parent.scroller.getPageBounds();\n        if (zoom !== 1 || this.actionName === 'pan') {\n            delx = -hoffset - this.parent.scroller.horizontalOffset;\n            dely = -voffset - this.parent.scroller.verticalOffset;\n        }\n        if (this.actionName === 'scale' || this.actionName === 'draw') {\n            this.parent.scroller.zoom(zoom / this.parent.scroller.currentZoom, delx, dely, focusPoint);\n        }\n        else {\n            this.parent.pan(delx, dely, focusPoint);\n        }\n    };\n    Overview.prototype.updateHtmlLayer = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        var bounds = this.parent.scroller.getPageBounds(true);\n        var width = bounds.width;\n        var height = bounds.height;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        var scale = Math.min(Number(this.model.width) / w, Number(this.model.height) / h);\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + this.parent.scroller.transform.tx + 'px,'\n            + (this.parent.scroller.transform.ty) + 'px)';\n    };\n    /** @private */\n    Overview.prototype.updateView = function (view) {\n        var width;\n        var height;\n        var bounds = this.parent.scroller.getPageBounds();\n        var diagramBoundsWidth = this.parent.scroller.viewPortWidth / this.parent.scroller.currentZoom;\n        var diagramBoundsHeight = this.parent.scroller.viewPortHeight / this.parent.scroller.currentZoom;\n        var transformWidth = 0;\n        var transformHeight = 0;\n        if (this.parent.scroller.currentZoom < 1 && diagramBoundsWidth > bounds.width && diagramBoundsHeight > bounds.height) {\n            transformWidth = (diagramBoundsWidth - bounds.width) / 2;\n            transformHeight = (diagramBoundsHeight - bounds.height) / 2;\n        }\n        width = bounds.width;\n        height = bounds.height;\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scale;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        this.contentWidth = w = Math.max(w, (offwidth / offheight) * h);\n        this.contentHeight = h = Math.max(h, (offheight / offwidth) * w);\n        scale = Math.min(offwidth / w, offheight / h);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        htmlLayer.style.webkitTransform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + ((-(bounds.x)) + transformWidth) + 'px,'\n            + (((-bounds.y) + transformHeight)) + 'px)';\n        var ovw = document.getElementById(this.element.id + '_overviewlayer');\n        ovw.setAttribute('transform', 'translate(' + (-bounds.x * scale) + ',' + (-bounds.y * scale) + ')');\n        this.horizontalOffset = bounds.x * scale;\n        this.verticalOffset = bounds.y * scale;\n        var canvas = document.getElementById(this.element.id + '_diagramLayer');\n        var nativeLayer = getNativeLayer(this.element.id);\n        var context = canvas.getContext('2d');\n        var widthratio = (Number(this.model.width) / this.contentWidth);\n        var heightratio = (Number(this.model.height) / this.contentHeight);\n        widthratio = Math.min(widthratio, heightratio);\n        nativeLayer.setAttribute('transform', 'translate('\n            + (0) + ',' + (0) + '),scale('\n            + widthratio + ')');\n        context.setTransform(widthratio, 0, 0, widthratio, 0, 0);\n        context.fillStyle = 'red';\n        this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom);\n    };\n    // region - Event Handlers\n    Overview.prototype.scrolled = function (evt) {\n        if (this.event) {\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            this.updateOverviewrect(-bounds.x, -bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.updateCursor = function (evt) {\n        if (hasClass(evt.target, ('overviewresizer'))) {\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.canvas.style.cursor = 'w-resize';\n                    break;\n                case this.canvas.id + 'right':\n                    this.canvas.style.cursor = 'e-resize';\n                    break;\n                case this.canvas.id + 'top':\n                    this.canvas.style.cursor = 'n-resize';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.canvas.style.cursor = 's-resize';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.canvas.style.cursor = 'nw-resize';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.canvas.style.cursor = 'ne-resize';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.canvas.style.cursor = 'sw-resize';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.canvas.style.cursor = 'se-resize';\n                    break;\n            }\n        }\n        else {\n            this.canvas.style.cursor = 'default';\n        }\n    };\n    Overview.prototype.mouseMove = function (evt) {\n        this.event = false;\n        this.updateCursor(evt);\n        this.currentPoint = this.mousePosition(evt);\n        if (this.actionName) {\n            switch (this.actionName) {\n                case 'draw':\n                    if (!this.inAction && (this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    if (this.inAction) {\n                        this.updateHelper();\n                    }\n                    break;\n                case 'scale':\n                    if (!this.inAction) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    this.updateOverviewRectangle();\n                    break;\n                case 'pan':\n                    if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y === this.currentPoint.y) || this.inAction) {\n                        this.inAction = true;\n                        this.translateOverviewRectangle();\n                    }\n                    break;\n            }\n        }\n        this.prevPoint = this.currentPoint;\n    };\n    Overview.prototype.documentMouseUp = function (evt) {\n        this.inAction = false;\n        this.actionName = '';\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            var element = document.getElementById(_this.element.id);\n            var bRect = element.getBoundingClientRect();\n            _this.model.width = bRect.width > 0 ? bRect.width : _this.model.width;\n            _this.model.height = bRect.height > 0 ? bRect.height : _this.model.height;\n            _this.renderCanvas();\n            _this.setParent(_this.sourceID);\n        }, 10);\n        return false;\n    };\n    /** @private */\n    Overview.prototype.mouseDown = function (evt) {\n        if (evt.target.id === this.canvas.id + '_overviewsvg') {\n            this.actionName = 'draw';\n        }\n        if (evt.target.id === this.canvas.id + 'overviewrect') {\n            this.actionName = 'pan';\n        }\n        if (hasClass(evt.target, 'overviewresizer')) {\n            this.actionName = 'scale';\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.resizeDirection = 'left';\n                    break;\n                case this.canvas.id + 'right':\n                    this.resizeDirection = 'right';\n                    break;\n                case this.canvas.id + 'top':\n                    this.resizeDirection = 'top';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.resizeDirection = 'bottom';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.resizeDirection = 'topleft';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.resizeDirection = 'topright';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.resizeDirection = 'bottomleft';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.resizeDirection = 'bottomright';\n                    break;\n            }\n        }\n        this.startPoint = this.prevPoint = this.mousePosition(evt);\n        this.viewPortRatio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n        var overViewHandle = document.getElementById(this.canvas.id + 'overviewhandle');\n        overViewHandle.style.pointerEvents = 'none';\n    };\n    Overview.prototype.mouseUp = function (evt) {\n        this.currentPoint = this.mousePosition(evt);\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        if (this.actionName) {\n            if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                if (this.actionName === 'pan') {\n                    var i = 0;\n                }\n                else {\n                    if (this.helper) {\n                        var bounds = (this.element.getElementsByTagName('rect')[10]).getBBox();\n                        this.resizeDirection = this.resizeDirection || '';\n                        var x = bounds.x;\n                        var y = bounds.y;\n                        var width = bounds.width;\n                        var height = bounds.height;\n                        var adjust = this.resizeDirection === 'topleft' || this.resizeDirection === 'topright' ||\n                            this.resizeDirection === 'bottomleft' || this.resizeDirection === 'bottomright';\n                        this.renderOverviewRect(x, y, width, height);\n                    }\n                }\n            }\n            else {\n                if (evt.target.id === this.canvas.id + '_overviewsvg' || evt.target.id === 'helper') {\n                    var svg = this.element.getElementsByTagName('svg')[2];\n                    var g = svg.getElementById(this.canvas.id\n                        + 'overviewrect');\n                    var bounds = g.getBBox();\n                    var width = bounds.width;\n                    var height = bounds.height;\n                    this.inAction = true;\n                    this.actionName = 'pan';\n                    this.renderOverviewRect(this.currentPoint.x - width / 2, this.currentPoint.y - height / 2, width, height);\n                    this.inAction = false;\n                }\n            }\n        }\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.actionName = '';\n        this.startPoint = null;\n        this.currentPoint = null;\n        this.prevPoint = null;\n        this.helper = null;\n        this.viewPortRatio = 1;\n        this.resizeDirection = '';\n        this.inAction = false;\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.initHelper = function () {\n        var g = this.element.getElementsByTagName('svg')[2];\n        var scale = this.parent.scroller.currentZoom;\n        var x = this.startPoint.x;\n        var y = this.startPoint.y;\n        var width = 1;\n        var height = 1;\n        if (this.actionName === 'scale') {\n            var rect = g.\n                getElementById(this.canvas.id + 'overviewrect');\n            var bounds = rect.getBBox();\n            x = bounds.x;\n            y = bounds.y;\n            width = bounds.width;\n            height = bounds.height;\n        }\n        var selectionRect = createSvgElement('rect', {\n            'id': 'helper', x: x, y: y, width: width, height: height,\n            'fill': 'transparent', 'stroke': 'gray', 'stroke-dasharray': '2 2', 'shape-rendering': 'crispEdges'\n        });\n        var overviewLayer = g.getElementById(this.element.id + '_overviewlayer');\n        overviewLayer.appendChild(selectionRect);\n        this.helper = selectionRect;\n    };\n    Overview.prototype.mousePosition = function (evt) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (evt.type.indexOf('touch') !== -1) {\n            touchArg = evt;\n            var pageX = touchArg.changedTouches[0].clientX;\n            var pageY = touchArg.changedTouches[0].clientY;\n            offsetX = pageX - this.element.offsetLeft;\n            offsetY = pageY - this.element.offsetTop;\n        }\n        else {\n            offsetX = evt.clientX;\n            offsetY = evt.clientY;\n        }\n        var boundingRect = this.element.getBoundingClientRect();\n        offsetX = offsetX - boundingRect.left;\n        offsetY = offsetY - boundingRect.top;\n        return { x: offsetX + this.horizontalOffset, y: offsetY + this.verticalOffset };\n    };\n    // end region - Event handlers\n    /**\n     * To destroy the Overview\n     * @return {void}\n     * @private\n     */\n    Overview.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-overview');\n            var content = document.getElementById(this.element.id + '_canvas');\n            if (content) {\n                this.element.removeChild(content);\n            }\n        }\n        this.parent.views.splice(this.parent.views.indexOf(this.element.id), 1);\n        this.diagramLayerDiv = null;\n        this.canvas = null;\n        this.parent = null;\n    };\n    /**\n     * Get module name.\n     */\n    Overview.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Overview';\n    };\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], Overview.prototype, \"sourceID\", void 0);\n    __decorate([\n        Event()\n    ], Overview.prototype, \"created\", void 0);\n    return Overview;\n}(Component));\nexport { Overview };\n"],"names":["processPathData","data","j","collection","arrayCollection","parsePathData","length","i","ob","char","toLowerCase","push","command","x","y","x1","y1","x2","y2","r1","r2","angle","largeArc","sweep","tokenizer","current","commands","match","lastIndex","isExponential","exec","substring","Number","getRectanglePath","cornerRadius","height","width","point2","next","path","points","corners","corner","getPolygonPath","seg","pathSegmentCollection","x0","y0","segments","prev","ctrl","cpt2","newSeg","transformPath","arr","sX","sY","s","bX","bY","iX","iY","undefined","scalePathData","toFixed","updatedSegment","getPathString","segment","obj","isScale","val","scaleFactor","oldOffset","newOffset","splitArrayCollection","test","getNewString","getString","string","cmd","ang","l","identityMatrix","Matrix","MatrixTypes","Identity","transformPointByMatrix","matrix","point","pt","type","Translation","offsetX","offsetY","Scaling","m11","m22","num","m21","num2","m12","multiplyPoint","Math","round","transformPointsByMatrix","transformedPoints","_i","points_1","rotateMatrix","centerX","centerY","multiplyMatrix","result","sin","cos","Unknown","setMatrix","createRotationRadians","scaleMatrix","scaleX","scaleY","createScaling","translateMatrix","matrix1","matrix2","type2","assignMatrix","mat","getBasicShape","shape","basicShapes","toString","getPortShape","portShapes","getDecoratorShape","decorator","pathData","decoratorShapes","getIconShape","icon","getFlowShape","flowShapes","findConnectorPoints","element","layoutOrientation","intermeditatePoints","sourcePoint","sourceWrapper","center","srcPoint","sourcePortWrapper","srcPort","srcNode","getPortDirection","cornersPointsBeforeRotation","bounds","sourceID","targetWrapper","sPoint","tPoint","getIntersection","getSourcePoint","tarPoint","sourceCorners","targetCorners","sourceNode","targetNode","sourcePort","targetPort","targetPortWrapper","source","srcCorner","direction","srcDir","margin","left","right","bottom","top","target","tarCorner","tarDir","port","tarPortPt","getDirection","abs","id","equals","containsPoint","topCenter","ele","sPt","tPt","refPoint","sourceEle","targetEle","tarPort","srcCor","tarCor","srcBounds","swapBounds","tarBounds","isInterSect","connector","sourceSegment","createSegmentsCollection","sourcePadding","targetSegment","targetPadding","srcSegment","tarSegmet","intersect3","enabled","checkSourceAndTargetIntersect","addPaddingToConnector","findPoint","getOppositeDirection","first","checkLastSegmentasTerminal","Point","isEmptyPoint","vector1","distance","value","max","transform","vector2","intermeditatePointsForStraight","removeSegment","checkConsectiveSegmentAsSame","updateSegmentPoints","checkSourcePointInTarget","nodeOrPortToNode","pointToPort","checkPreviousSegment","splice","checkPortdirection","returnIntermeditatePoints","findIntermeditatePoints","OrthogonalSegment","extra","swap","getSwapping","swapPoints","pts","diffY","min","NoOfSegments","One","Three","Five","getRightToLeftSegmentCount","sourceObj","targetObj","diffX","middleRight","getRightToRightSegmentCount","Two","Four","getRightToTopSegmentCount","bottomCenter","getRightToBottomSegmentCount","getBottomToTopSegmentCount","difX","getBottomToBottomSegmentCount","bottomLeft","middleLeft","getBottomToLeftSegmentCount","getLeftToLeftSegmentCount","getLeftToTopSegmentCount","bottomRight","getTopToTopSegmentCount","segLength","src","tar","adjustSegmentLength","orthoConnection2Segment","orthoConnection3Segment","prevDir","orthoConnection4Segment","segmentValue","sLeft","sRight","sBottom","sTop","tLeft","tRight","tBottom","tTop","addLineSegment","orthoConnection5Segment","addOrthoSegments","findOrthoSegments","defaultOrthoConnection","node","fixedPoint","nodeMargin","nodeConnectingPoint","nodeDirection","source_1","target_1","findDirection","segmentPoint","connectToOneEnd","seg_1","lastSegment","pointToNode","pointToPoint","findPointToPointOrtho","terminateConnection","targetPoint","setLineEndPoint","segPoint","portdirection","length_1","findSourceDirection","addPoints","update","portDir","findSegmentDirection","endPoint","isTarget","reverse","pointsFromNodeToPoint","tPoints","actualSegment","actualLastPoint","distancePoints","padding","paddingPort","rect","Rect","actualSize","segmentPoints","topLeft","topRight","thisSegment","getIntersectionPoints","getPoints","createLineSegment","object","outerBounds","rectBounds","rotateAngle","parentTransform","dir","BezierSegment","StraightSegment","length_3","lastPoint","nodeCorners","top_1","shortes","MAX_VALUE","findAngle","e","r","re","findLength","es","asin","PI","cor","isTar","child","wrapper","sPt1","rotatePoint","tPt1","angle_2","angle_3","PathElement","split","minimal","intersection","intersectSegment","isNaN","intersect","dist","segment1","segment2","a1","a2","b1","b2","c1","c2","r3","r4","denom","offset","x3","y3","x4","y4","sameSign","a","b","point1","allow","temp","diffx","diffy","interPt","getLeftLength","getRightLength","preDir","getTopLength","getBottomLength","getOrtho3Seg","orientation","point3","gap","closeEdge","boundsValue","one","two","three","four","fourty5","one35","two25","three15","getOuterBounds","children","sourceDecorator","uniteRect","targetDecorator","initTooltip","diagram","tooltipOption","Tooltip","updateTooltipContent","tooltip","beforeCollision","beforeOpen","cssClass","opensOn","appendTo","close","args","this","content","style","display","collidedPosition","position","updateTooltip","tooltipObject","showTipPointer","animation","effect","excludeBounds","part","isEmptyVector","getBezierPoints","getBezierBounds","startPoint","controlPoint1","controlPoint2","minx","miny","maxx","maxy","t","bezierPoints","renderRuler","isHorizontal","div","document","getElementById","rulerSize","getRulerSize","rulerGeometry","getRulerGeometry","createHtmlElement","insertBefore","firstChild","diagramRuler","rulerSettings","horizontalRuler","verticalRuler","ruler","Ruler","segmentWidth","hRuler","vRuler","rulerObj","updateRuler","hOffset","scroller","horizontalOffset","vOffset","verticalOffset","showRulers","updateRulerDimension","removeRulerElements","removeElement","thickness","Size","viewPortHeight","viewPortWidth","clientWidth","clientHeight","updateRulerDiv","updateRulerSpace","scale","currentZoom","arrangeTick","getFunction","dataBind","marginLeft","hRulerOffset","marginTop","vRulerOffset","canSelect","ShapeAnnotation","PathAnnotation","constraints","AnnotationConstraints","Select","Connector","ConnectorConstraints","NodeConstraints","canMove","Drag","Selector","canEnablePointerEvents","PointerEvents","canDragSourceEnd","DragSourceEnd","canDragTargetEnd","DragTargetEnd","canDragSegmentThumb","DragSegmentThumb","canRotate","Rotate","canShadow","Shadow","canInConnect","Node","InConnect","canPortInConnect","PortConstraints","None","canOutConnect","OutConnect","canPortOutConnect","canResize","returnValue","Resize","ResizeSouthEast","ResizeEast","ResizeNorthEast","ResizeSouth","ResizeNorth","ResizeSouthWest","ResizeWest","ResizeNorthWest","canAllowDrop","AllowDrop","canVitualize","DiagramConstraints","Virtualization","canSingleSelect","model","tool","DiagramTools","SingleSelect","canMultiSelect","MultipleSelect","canZoomPan","ZoomPan","canContinuousDraw","ContinuousDraw","canDrawOnce","DrawOnce","defaultTool","canUserInteract","UserInteraction","canZoomTextEdit","ZoomTextEdit","canPageEditable","ApiUpdate","canApiInteract","diagramActions","DiagramAction","ToolAction","canDraw","Draw","canDrag","canDrawThumbs","rendererActions","RendererAction","DrawSelectorBorder","avoidDrawSelector","PreventRenderSelector","getUMLActivityShape","umlActivityShapes","updateCanvasBounds","isBoundsUpdate","container","groupAction","checkParentAsContainer","protectPropertyChange","nameTable","parentId","parentWrapper","parent_1","updateLaneBoundsAfterAddChild","parent_2","shape_1","rowIndex","columns","updateColumnWidth","columnIndex","phaseSize","updatePhaseMaxWidth","updateHeaderMaxWidth","drag","updateRowHeight","select","updateConnectorsProperties","removeChildInContainer","propertyChangeValue","AllowMovingOutsideLane","undoObj","cloneObject","clearSelection","removeChildrenInLane","entry","category","undoObject","redoObject","addHistoryEntry","commandHandler","isContainer","endGroupAction","findBounds","isHeader","rows","cells","createHelper","newObj","_a","Object","keys","prop","getObjectType","initObject","updateDiagramObject","renderContainerHelper","enableServerDataBinding","nodes","isBlazor","selectedObject","helperObject","selectedItems","connectors","actualObject","currentSymbol","isLane","canLaneInterchange","LineRouting","minWidth","minHeight","maxWidth","maxHeight","strokeDashArray","fill","strokeColor","strokeWidth","isChild","parentNode","checkChildNodeInContainer","nodePropertyChange","measure","arrange","desiredSize","prevParentNode","swimlane","canvasId","slice","prevParentId","lanes","lane","deleteChild","addChildToContainer","parent","isUndo","historyAction","getObject","indexOf","swimLaneBounds","parentBounds","laneHeaderId","removeElements","addChild","currentParentId","parentObj","Diagram","UndoRedo","swimLane","isUpdateRow","isGroupAction","containerBounds","containerOuterBounds","nodeBounds","grid","size","startGroupAction","swimLaneMeasureAndArrange","checkPhaseOffset","checkLaneSize","columnDefinitions","rowDefinitions","canvas","laneHeader","Canvas","childNode","considerSwimLanePadding","updateDiagramElementQuad","renderStackHighlighter","isVertical","isUml","isSwimlane","adornerSvg","getAdornerLayerSvg","diagramRenderer","moveChildInStack","action","sourceParent","targetIndex","sourceIndex","undoElement","initSwimLane","phases","row","index","header","hasHeader","createRow","totalHeight","phaseHeight","phaseOffset","initGridRow","cols","k","totalWidth","createColumn","initGridColumns","setDefinitions","randomId","annotations","annotation","addObjectToGrid","addObject","headerDefine","phaseDefine","laneCollection","isPhase","HideThumbs","DiagramElement","isCalculateDesiredSize","TextElement","canConsiderBounds","isLaneOrientation","refreshTextElement","indexValue","phaseIndex","rowValue","colValue","phaseObject","laneIndex","laneNode","gridCell","childWrapper","phaseCount","Default","ReadOnly","RowDefinition","ColumnDefinition","getConnectors","isRowUpdate","edges","conn","i_1","inEdges","outEdges","concat","GridPanel","isMeasure","ChangeLaneIndex","startRowIndex","subChild","cell","arrangeChildNodesInSwimLane","rowvalue","columnValue","col","addChildToLane","k_1","findStartLaneIndex","updateChildOuterBounds","checkLaneChildrenOffset","phaseRow","phase","gridRowIndex","lineRoutingModule","renderVirtualRegion","refreshConnectorSegments","connectorPropertyChange","targetID","laneInterChanged","sourceLaneIndex","targetLaneIndex","updateRowIndex","changeHeaderIndex","columnSpan","updateColumnIndex","updateSwimLaneChildPosition","updateSwimLaneObject","helperWidth","helperHeight","objWidth","objHeight","findLaneIndex","laneObj","headerNode","addLane","count","redoObj","orientation_1","Lane","cause","state","cancel","triggerEvent","DiagramEvent","collectionChange","rowDef","addRow","colDef","addColumn","changeType","addChildNodeToNewLane","addPhase","newPhase","phaseNode","previousPhase","nextPhase","laneHeaderSize","phasesCollection","orientation_2","nextCol","addPhase_1","nextRow","addPhase_2","historyManager","currentEntry","isLastPhase","prevPhase","prevOffset","addPhase_3","addPhase_4","addLastPhase","phaseObj","Phase","fristRow","i_2","nextCell","prevCell","addSwimlanePhases","addHorizontalPhase","nextPhaseNode","prevRow","addVerticalPhase","desiredCellWidth","desiredCellHeight","changeCell","zIndex","arrangeChildInGrid","swimLaneSelection","pasteSwimLane","clipboardData","cloneLane","childX","childY","ranId","nodeX","nodeY","childTable","pasteIndex","add","i_3","mode","refreshDiagramLayer","gridSelection","selectorModel","isSymbolDrag","targetnode","swimLaneId","removeLaneChildNode","swimLaneNode","currentObj","isChildNode","preventHistory","lanenode","removeDependentConnector","remove","getGridChildren","deleteNode","removeFromAQuad","removeObjectsFromLayer","removeLane","removeChildren","removeRow","removeColumn","removePhase","swimLanePhases","findPhaseIndex","phaseLength","actualChild","prevCanvas","prevChild_1","prevNode","object_1","prevWidth","removeHorizontalPhase","prevChild","phaseRowIndex","prevHeight","removeVerticalPhase","findLane","completeRegion","region","selectedObjects","containsRect","findNodeByName","name","findObjectType","drawingObject","setSwimLaneDefaults","getSpaceValue","intervals","isLine","space","getInterval","newInterval","setUMLActivityDefaults","umlActivityShape","umlActivityFlow","flow","setConnectorDefaults","bpmnFlow","hasRelation","relationship","findNearestPoint","reference","start","end","shortestPoint","angleBWStAndEnd","angleBWStAndRef","vaAngle","isDiagramChild","htmlLayer","parentElement","hasClass","groupHasType","updateDefaultValues","actualNode","plainValue","defaultValue","property","oldKey","keyObj","key","Array","isArray","createObject","PointPort","ports","updateLayoutValue","assitants","assistants","hasSubTree","canEnableSubTree","layoutInfo","isPointOverConnector","intermediatePoints","bezierPoint1","bezierPoint2","pointsForBezier","toBounds","Inflate","hitPadding","intersectinPt","intersectDetails","intersectPt","rect_1","lineUtil1","lineUtil2","l1","l2","d","na","nb","ua","ub","intersect2","start1","end1","start2","end2","line3","getLineSegment","line","getTooltipOffset","mousePosition","inheritTooltip","InheritTooltip","objectTooltip","isMouseBased","getBoundingClientRect","offsetPoint","tooltipOffset","relativeMode","bound","sort","objects","option","getBounds","getAnnotationPosition","getloop","getOffsetOfConnector","alignednumber","getAlignedPosition","offsetLength","prevLength","kCount","lengths","cnst","alignment","alignLabelOnSegments","vAlign","hAlign","getBezierDirection","removeChildNodes","getChild","serialize","removeNodes","getSwimLaneChildren","clonedObject","getCustomProperty","serializationSettings","preventDefaults","removeUnnecessaryNodes","JSON","stringify","defaultObject","isNodeShape","constructor","Path","Native","Html","Image","Text","BasicShape","FlowShape","BpmnShape","UmlActivityShape","UmlClassifierShape","SwimLane","Header","BpmnGateway","BpmnDataObject","BpmnEvent","BpmnSubEvent","BpmnActivity","BpmnAnnotation","MethodArguments","UmlClassAttribute","UmlClassMethod","UmlClass","UmlInterface","UmlEnumerationMember","UmlEnumeration","ChildContainer","Stop","UserHandle","Command","getConstructor","properties","properties_1","every","isSameArray","preventArrayDefaults","deserialize","clear","map","dataSourceSettings","doBinding","nodeTemp","setNodeTemplate","getDescription","commandManager","execute","canExecute","arrangeTickHorizontal","arrangeTickVertical","getLayoutInfo","layout","getBranch","nodeDefaults","getNodeDefaults","connectorDefaults","getConnectorDefaults","dataObj","parse","upgrade","contextMenuSettings","bridgeDirection","pageSettings","addInfo","scrollSettings","layers","_b","_c","backgroundColor","basicElements","snapSettings","isLoading","component","views","refresh","classList","version","nodes_1","updateStyle","changedObject","textElement","canApplyStyle","StrokeStyle","textOverflow","opacity","bold","color","textWrapping","fontFamily","fontSize","italic","textAlign","whiteSpace","textDecoration","gradient","changedGradient","targetGradient","cx","cy","fx","fy","stops","updateGradient","updateHyperlink","actualAnnotation","hyperlink","link","labelStyle","updateShapeContent","horizontalAlignment","verticalAlignment","visible","elementId","updateShape","oldObject","pathContent","imageContent","ImageElement","imageAlign","align","imageScale","basicShape","flowShapeElement","flowShape","nativeContent","DiagramNativeElement","htmlContent","DiagramHtmlElement","updateContent","newValues","nativeElement","getDiagramElement","removeChild","appendChild","getContent","htmlElement","flowshapedata","updateUmlActivityNode","basicShapeData","canMeasurePath","umlActivityShapeData","getUMLFinalNode","finalNodeShape","innerFinalNode","outerFinalNode","getUMLActivityShapes","removeGradient","svgId","removeItem","array","item","updateConnector","anglePoint","srcDecorator","tarDecorator","updateSegmentElement","firstSegment","clipDecorators","updateDecoratorElement","updateShapeElement","getUserHandlePosition","selectorItem","handle","pivot","side","connectorOffset","getPointloop","canResizeCorner","selectorConstraints","thumbsConstraints","SelectorConstraints","ThumbsConstraints","canShowCorner","checkPortRestriction","portVisibility","visibility","findAnnotation","annotationId","findPort","portId","getInOutConnectPorts","isInConnect","findObjectIndex","getObjectFromCollection","scaleElement","sw","sh","refObject","Container","newPosition","arrangeChild","drop","initContainer","init","insertObject","low","high","mid","floor","getElement","diagramElement","diagramId","instance","symbolPalette","palettes","symbols","getPaletteSymbols","nodeId","getAnnotation","enterObject","enterTable","getCollectionChangeEventArguements","args1","cloneBlazorObject","getDropEventArguements","arg","getPoint","w","h","cornerPoint","trans","checkBrowserInfo","navigator","platform","Browser","info","canMeasureDecoratorPath","getULMClassifierShapes","classifier","textWrap","classShape","enumerationShape","interfaceShape","member","members","addSeparator","memberText","getStyle","isSeparator","attributes","attributeText","text","attribute","scope","getClassNodes","methods","argumentText","methodText","method","parameters","getClassMembers","borderColor","stack","lineObject","newStyle","getChildNode","childNodes","nodeType","measurePath","measureElement","window","setAttribute","getBBox","svgBounds","wrapSvgText","textValue","laneWidth","txtValue","bounds1","breakWord","bBoxText","dy","ceil","words","newText","existingWidth","existingText","wrap","eachLine","wordWrapping","measureHtmlText","fontWeight","fontStyle","textContent","whiteSpaceToString","wordBreak","wordBreakToString","body","offsetWidth","offsetHeight","measureText","wrapBounds","options","stroke","pivotX","pivotY","dashArray","shadow","description","doWrap","textAlignToString","getTextOptions","txtWidth","wrapSvgTextAlign","updatePath","bBox","newPathString","getDiagramLayerSvg","elementcoll","getElementsByClassName","contentId","querySelector","CSS","escape","getDomIndex","viewId","layer","postId","getNativeLayer","getHTMLLayer","diagramLayerSvg","getDiagramLayer","childElement","getSelectorElement","getAdornerLayer","getNativeLayerSvg","getGridLayerSvg","getBackgroundLayerSvg","getBackgroundLayer","elementType","createElement","setAttributeHtml","createSvgElement","createElementNS","setAttributeSvg","parentsUntil","elem","selector","isID","className","animVal","addTouchPointer","touchList","touches","pageX","clientX","pageY","clientY","pointerId","isHtml","nodeObject","sentNode","isTemplate","compiledString","getNodeTemplate","template","compile","cloneNode","svg","applyStyleAgainstCsp","trim","createMeasureElements","usageCount","divElement","imageElement","createTextNode","tSpan","setAttributeNS","measureElementCount","setChildPosition","getTemplateContent","annotationcontent","annotationTemplate","chars","crypto","Uint16Array","msCrypto","getRandomValues","random","getIndex","comp","templateCompiler","querySelectorAll","baseTemplateComplier","innerHTML","additionalProp","cloneBlazorProp","newObject","sourceObject","customProperties","propAdditional","internalProp","getInternalProperties","Decorator","Shape","IconShape","BpmnTask","BpmnSubProcess","Port","Annotation","Margin","TextStyle","ShapeStyle","updateCloneProp","hasOwnProperty","cloneArray","HTMLElement","innerHtml","propName","sourceArray","clonedArray","extendObject","childObject","extendeArray","extendArray","extendedObject","childArray","reset","middleElement","overFlow","middle","substr","rotateSize","minX","minY","maxX","maxY","getOffset","getValue","findToolToActivate","touchStart","touchMove","hasSelection","userHandles","obj_1","contains","paddedBounds","selectorBnds","hasSingleConnection","conn_1","sourcePaddingValue","targetPaddingValue","connectorEditingToolModule","allowDrag","checkForConnectorSegment","ten","rotateThumb","labelSelection","labelRotate","forty","checkResizeHandleForContainer","checkForResizeHandles","checkResizeHandles","findPortToolToActivate","isSelected","PortVisibility","Hover","Visible","sourcePortID","currentDrawingObject","firstLevel","getCursor","cursor","cursors","getBpmnShapePathData","bpmnShapes","getBpmnTriggerShapePathData","bpmnTriggerShapes","getBpmnGatewayShapePathData","bpmnGatewayShapes","getBpmnTaskShapePathData","bpmnTaskShapes","getBpmnLoopShapePathData","bpmnLoopShapes","getGraphBounds","collectionContains","coll","prototype","isEmpty","clone","__extends","extendStatics","setPrototypeOf","__proto__","p","__","create","__decorate","decorators","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","_super","apply","sqrt","pow","atan2","pt1","pt2","getLengthFromListOfPoints","adjustPoint","isStart","getClassName","Property","ChildProperty","get","enumerable","configurable","rect1","rect2","NaN","unitePoint","intersects","empty","MIN_VALUE","getGradientType","DiagramGradient","LinearGradient","RadialGradient","Thickness","Gradient","Collection","ComplexFactory","DiagramShapeStyle","BlazorAction","SnapConstraints","ElementAction","Transform","RenderMode","KeyModifiers","Keys","RealAction","contextMenuClick","contextMenuOpen","contextMenuBeforeItemRender","isDirt","isExport","exportScaleValue","exportScaleOffset","flip","Self","Parent","preventContainer","isSvgRender","staticSize","isRectElement","flipOffset","elementActions","unitMode","float","floatingBounds","setOffsetWithRespectToBounds","getAbsolutePosition","set","availableSize","callback","validateDesiredSize","updateBounds","_this","desiredBounds","measureChildren","prevRotateAngle","hasChildren","childBounds","desired","force","GetChildrenBounds","offsetPt","newPoint","stretchChildren","ElementIsGroup","applyPadding","findChildOffsetFromCenter","childSize","call","canMeasure","textNodes","textWrapBounds","leftMargin","topMargin","isStack","alignChildBasedOnParent","alignChildBasedOnaPoint","parentSize","Rectangle","Ellipse","Hexagon","Parallelogram","Triangle","Plus","Star","Pentagon","Heptagon","Octagon","Trapezoid","Decagon","RightTriangle","Cylinder","Diamond","absolutePath","absoluteBounds","pointTimer","setTimeout","sample","sampleLength","pathNode","pathLength","getTotalLength","getPointAtLength","findSegmentPoints","translatedPts","translatePoints","imageSource","stretch","contentSize","onload","event","loadedImage","currentTarget","measureImage","nativeSVG","measureNativeContent","templatePosition","getAvailableSize","measureNativeSvg","Complex","Connect","Hyperlink","InheritReadOnly","X","Circle","Square","OpenArrow","Fletch","OpenFetch","IndentedArrow","OutdentedArrow","DoubleArrow","Arrow","Process","Decision","Document","PreDefinedProcess","Terminator","PaperTap","DirectData","SequentialData","Sort","MultiDocument","Collate","SummingJunction","Or","InternalStorage","Extract","ManualOperation","Merge","OffPageReference","SequentialAccessStorage","Annotation2","Data","Card","Delay","Preparation","Display","ManualInput","LoopLimit","StoredData","DiagramTooltip","NodeBase","nodeTemplate","templateFn","SymbolSize","getConnectorType","DiagramConnectorShape","BpmnFlow","ActivityFlow","RelationShip","ConnectorShape","getSegmentType","DiagramConnectorSegment","Vector","ConnectorSegment","MultiplicityLabel","ClassifierMultiplicity","bridges","status","bpmnElement","getSegmentElement","getConnectorPoints","getBpmnSequenceFlow","getBpmnAssociationFlow","getBpmnMessageFlow","updateShapePosition","getUMLObjectFlow","getUMLExceptionFlow","getConnectorRelation","anglePoints","getDecoratorElement","wrapperContent","getAnnotationElement","associationType","lower","upper","text1","sourceText","targetText","multiplicity","lowerBounds","upperBounds","optional","pathseq","updatePathElement","midPt","xDist","yDist","fractionOfTotal","midPt2","midPt1","segmentMessage","findDistance","findPath","sourcePt","targetPt","textele","annotationType","updateAnnotation","canRefresh","pivotPoint","segmentAngle","horizor","verzor","displacement","newPoints","clipDecorator","isSource","diagramAction","len","DecoratorPropertyChange","segmentPath","getSegmentPath","connectorSegment","segmentElement","flipConnector","adjacentPoint","decEle","bridgePath","pointIndex","n","bridge","rendered","segmentPointIndex","getPath","getPt","st","m","j_1","j_2","targetPortID","j_3","tx","ty","connWidth","connHeight","CollectionFactory","preRender","unWireEvents","wireEvents","render","updateRulerGeometry","renderComplete","getModuleName","destroy","notify","getPersistData","addOnPersist","onPropertyChanged","newProp","oldProp","renderRulerSpace","getRulerSVG","Infinity","unitLength","unitOffset","updateSegments","run","rulerSegment","getNewSegment","updateSegment","segWidth","updateSegmentWidth","startValue","label","defStartValue","updateTickLabel","translate","lastChild","isRightOrBottom","tickAlignment","attr","createNewTicks","createTickLabel","tick","tickInterval","g","class","interval","createTick","getLinePoint","linePoint","tickLength","stroke-width","multiples","log","createMarkerLine","rulerSvg","drawRulerMarker","currentPoint","diff","rulerSvgElements","getElementsByTagName","markerColor","move","rulerSpace","Component","Action","MergeNode","InitialNode","ForkNode","JoinNode","TimeEvent","AcceptingEvent","SendSignal","ReceiveSignal","StructuredNode","Note","KeyGesture","CommandManager","ContextMenuSettings","cellStyle","desiredRowHeight","rowDefns","colDefns","rowId","columnId","rowSpan","GridCellItem","addObjectToCell","updateProperties","rowDefn","GridRow","defaultCell","columns_1","addCellInRow","colDefn","GridCell","calculateSize","calculateHeight","calculateWidth","isConsiderChild","setTextRefresh","calculateCellHeightBasedOnChildren","calculateCellHeight","colId","calculateCellWidthBasedOnChildren","calculateCellWidth","colIndex","calculateCellSizeBasedOnChildren","maxSize","maxBounds","column","currentIndex","newIndex","tempRow","tempSize","tempCol","_d","_e","cellIndex","_f","_g","isChange","cellX","cellWidth","cellHeight","z","removeCell","updatePortEdges","portContent","alignElement","updateConnectorEdges","cloneSelectedObjects","isEnableServerDatabind","allowServerDataBinding","clonedSelectedItems","pathseqData","pathElement","checkPort","beginningpoint","transferpt","startpoint","endpoint","StackPanel","updateSize","updateHorizontalStack","updateVerticalStack","measureStackPanel","arrangeHorizontalStack","arrangeVerticalStack","arrangeStackPanel","applyChildMargin","updatePosition","rotatedSize","parenBounds","LayoutInfo","getShapeType","DiagramShape","BpmnTransactionSubProcess","trigger","isCanvasUpdate","processId","umlIndex","nodeDefault","textStyle","basicshape","basicshapedata","flowshape","bpmnModule","initBPMNContent","subProcess","activity","processes","children_1","collapsed","updateElementVisibility","bpmnShape","borderWidth","initPorts","accessibilityContent","initPortWrapper","ElementIsPort","contentAccessibility","getIconOffet","initIcons","isExpanded","expandIcon","collapseIcon","iconContainer","initIconSymbol","initAnnotations","virtualize","initAnnotationWrapper","pathdata","initIconContainer","iconContent","iconContentBounds","getWrapper","All","CanvasRenderer","getContext","setCanvasSize","renderGradient","ctx","grd","linear","createLinearGradient","radial","createRadialGradient","stop_1","addColorStop","fillStyle","renderShadow","save","beginPath","strokeStyle","globalAlpha","transX","transY","rotateContext","renderPath","fillRect","closePath","restore","createCanvas","canvasObj","setStyle","lineWidth","parseDashArray","setLineDash","rotate","setFontStyle","font","dashes","separator","splittedDashes_1","drawRectangle","drawPath","segs","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","curr","rx","ry","xAxisRotation","cp","currp","cpp","centp","u","v","ad","ra","sx","sy","arc","drawText","parentSvg","ariaLabel","scaleValue","labelAlign","fillText","startPointX","startPointY","endPointX","endPointY","loadImage","image","drawImage","fromPalette","ctx_1","pivotX_1","pivotY_1","imageObj","alignOptions","srcWidth","srcHeight","destinationW","destinationH","resultWidth","resultHeight","xalign","yalign","getSliceOffset","sWidth","sHeight","dWidth","dHeight","canvas1","srcRatio","destRatio","getMeetOffset","res","dest","acos","labelX","labelY","pointx","pointy","SvgRenderer","shadowElement","tX","tY","svgContainer","onlyRect","isSelector","aria-label","setSvgStyle","updateSelectionRegion","gElement","createGElement","drawLine","drawCircle","enableSelector","circle","classval","radius","setSvgFontStyle","textNode","tspanElement","childNodesHeight","innerHtmlTextElement","svgLabelAlign","setText","isHorizontalLane","parentOffsetX","parentOffsetY","text-decoration","imgAlign","aspectRatio","charAt","preserveAspectRatio","drawHTMLContent","parentHtmlElement","drawNativeContent","clipPath","setNativTransform","drawClipPath","contentWidth","contentHeight","group","clipWidth","clipHeight","location","href","defs","offset_1","stopElement","lineargradient","radialgradient","wrapBound","pos","pointX","pointY","DiagramRenderer","svgRender","isSvgMode","renderer","svgRenderer","setCursor","setLayers","iconSvgLayer","adornerSvgLayer","nativeSvgLayer","diagramSvgLayer","getParentSvg","targetElement","getParentElement","defaultParent","svgElement","layerGElement","groupElement","getGroupElement","nativeSvg","renderElement","createParent","isPreviewNode","renderContainer","renderImageElement","renderPathElement","renderTextElement","renderNativeElement","renderHTMLElement","renderRect","drawSelectionRectangle","adornerLayer","renderHighlighter","renderResizeHandle","canMask","enableNode","nodeConstraints","renderPivotLine","renderRotateThumb","renderBorder","nodeWidth","nodeHeight","renderCircularHandle","renderEndPointHandle","connectedSource","connectedTarget","isSegmentEditing","ConnectorSource","ConnectorTarget","renderOrthogonalThumbs","segment_1","bezierPoint","renderBezierLine","renderOrthogonalThumb","getBaseAttributes","connected","isBorderTickness","renderUserHandler","disableConnectors","disableNodes","pathSize","newData","pathColor","handleContent","element_1","sourceWidth","sourceHeight","pathBounds","renderSvgGridlines","gridSvg","pattern","ShowHorizontalLines","ShowVerticalLines","hWidth","hHeight","hSegmentwidth","vSegmentwidth","isRulerGrid","gridType","verticalLineIntervals","verticalGridlines","lineIntervals","dotIntervals","horizontalLineIntervals","horizontalGridlines","dynamicGrid","scaledIntervals","scaleSnapInterval","patternUnits","horizontalSvgGridlines","verticalSvgGridlines","hLine","lineDashArray","updateLineIntervals","lineColor","renderDotGrid","spacey","vLine","updateGrid","svgGrid","snapIntervals","gridlines","parentWidth","parentHeight","templateWidth","templateHeight","nativeLayer","imageWidth","imageHeight","widthRatio","heightRatio","ratio","svgParent","hasNativeParent","svgNativeParent","svgParent_1","parentG","renderFlipElement","posX","posY","drawRect","renderSvgBackGroundImage","background","bgimageLayer","getBackgroundImageLayer","transformLayers","svgMode","domTable","expandCollapse","getGridLayer","updateNode","diagramElementsLayer","insertIndex","Background","FitOptions","PageSettings","ScrollSettings","ServiceLocator","services","register","getService","Gridlines","SnapSettings","DiagramRuler","RulerSettings","DataMappingItems","CrudAction","ConnectionDataSource","DataSource","Layout","PortDraw","ConnectorSourceEnd","ConnectorTargetEnd","BezierSourceThumb","BezierTargetThumb","OrthoThumb","SegmentEnd","Pan","PortDrag","LabelSelect","LabelDrag","LabelRotate","LabelResizeWest","LabelResizeEast","LabelResizeSouth","LabelResizeNorth","LabelResizeNorthEast","LabelResizeNorthWest","LabelResizeSouthEast","LabelResizeSouthWest","DeepDiffMapper","valueCreated","valueUpdated","valueDeleted","valueUnchanged","newNodeObject","newConnectorObject","diagramObject","updateObjectCollection","getOldObject","isNode","oldNodeObjects","oldConnectorObjects","changeSegments","removeNullValues","newSegments","removeNullObjectValues","newSegObject","getDifferenceValues","labelDrag","diffValue","frameObject","removeEmptyValues","getDiagramObjects","getLayerObject","oldDiagram","diffLayers","newDiagram","sfIndex","tempObject","objectValue","removeArrayValues","newValue","frame","obj1","obj2","arrayName","isFunction","isValue","compareValues","ss","value2","kk","value1","isDate","getTime","isObject","final","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","done","then","__generator","verb","op","f","TypeError","_","ops","pop","trys","sent","throw","return","Symbol","iterator","ToolBase","protectChange","deepDiffer","inAction","isProtectChange","currentElement","blocked","isTooltipVisible","checkProperty","undoParentElement","startAction","mouseDown","enableCloneObject","ismouseEvents","startPosition","currentPosition","prevPosition","checkPropertyValue","startTransaction","mouseMove","mouseUp","endTransaction","getBlazorOldValues","LabelDragTool","endAction","closeTooltip","mouseWheel","mouseLeave","initialBounds","horizontalsnap","snapped","verticalsnap","difx","dify","snapEnabled","snappingModule","canSnap","snapLine","getLayer","deltaWidth","deltaHeight","snapLeft","snapRight","snapTop","snapBottom","getPivot","SelectTool","clearSelectedItems","isUserHandle","doRubberBandSelection","arrayNodes","getSelectedObject","ctrlKey","clickCount","unSelect","updateBlazorSelector","selectObjects","labelSelect","ConnectTool","isConnected","temparg","segmentpoint1","segmentpoint2","oldConnector","oldValue","connectorTargetValue","connectorEnd","connectionChange","tempArgs","canCancel","ConnectorDrawingTool","selectedSegment","nodeEndId","portEndId","oldValues","targetPortName","targetNodeNode","connectorSourceValue","updateConnectorValue","updateSelector","removeSnap","changeAnnotationDrag","findTarget","sourcePointChange","targetPointChange","removeTerminalSegment","inPort","outPort","snapConnectorEnd","targetPortId","targetNodeId","dragConnectorEnds","canDisconnect","disConnect","connect","checkConnect","canEnableDefaultTooltip","getTooltipContent","showTooltip","MoveTool","objType","objectType","getSubProcess","initialOffset","targetPosition","allowDrop","isPreventHistory","blazorArgs","historyAdded","entry_1","isEndGroup","positionChange","dragSelectedObjects","getBlazorPositionChangeEventArgs","snapPoint","removeHighlighter","isDroppable","isParentAsContainer","dropChildToContainer","dropAnnotation","objectId","isSame","dragOverElement","oldValues_1","snappedPoint","removeChildFromBPmn","arg_1","mouseOver","removeStackHighlighter","drawHighlighter","portDrag","RotateTool","getAllDescendants","cloneChild","object_2","rotateChange","rotatePropertyChnage","oldValue_1","arg_2","snapAngle","arg1","rotateSelectedItems","ResizeTool","checkSelection","blazarArgs","scaleWidth","scaleHeight","deltaValues","entry_2","sizeChange","scaleSelectedItems","scaleObjects","changes","getChanges","change","AspectRatio","NodeDrawingTool","setFocus","checkBoundaryConstraints","drawObject","updateNodeDimension","addObjectToDiagram","TextDrawingTool","drawingNode","addText","ZoomPanTool","zoom","zooming","moveTouches","startTouch0","startTouches","startTouch1","moveTouch0","moveTouch1","getDistance","focusPoint","updateTouch","difY","scroll","touch1","touch2","startTouch","moveTouch","ExpandTool","initExpand","LabelTool","open","focus","PolygonDrawingTool","dblClickArgs","PolyLineDrawingTool","updateConnectorPoints","redoValue","entryValue","LabelResizeTool","resizeObject","labelResize","LabelRotateTool","redoEntry","entryObject","ConnectorEditing","edit","segmentIndex","dragOrthogonalSegment","dragControlPoint","shiftKey","addOrRemoveSegment","updateLastSegment","removePrevSegment","removeNextSegment","updateEndPoint","removeSegments","segmentCollectionChange","last","updateSeg","previous","findIndex","newseg","intersectingSegs","addSegments","insertFirstSegment","addTerminalSegment","updateAdjacentSegments","segmentDirection","segValues","insertseg","nextseg","isNextUpdate","updatePreviousSegment","nextSegment","updateNextSegment","sec","lastseg","updatePortSegment","isSourceNode","updateFirstSegment","changeSegmentDirection","insertfirst","removeCurrentPrev","nextNext","line1Start","line1End","line2Start","line2End","firstSegPoint","lastSegPoint","DiagramEventHandler","currentAction","previousAction","isBlocked","isMouseDown","doingAutoScroll","objectFinder","eventArgs","keyArgs","ObjectFinder","diagramCanvas","TextEdit","getMousePosition","touchArg","changedTouches","boundingRect","scrollLeft","scrollTop","windowResize","evt","resizeTo","clearTimeout","updateViewPortSize","setViewPortSize","getSizeValue","setSize","canHideResizers","updateCursor","list","isForeignObject","isTextBox","foreignobject","isMetaKey","metaKey","renderUmlHighLighter","findObjectsUnderMouse","findObjectUnderMouse","isDeleteKey","isMouseOnScrollBar","scrollHeight","scrollWidth","updateVirtualization","removeObjectInterval","setInterval","removeVirtualObjects","deleteVirtualObject","checkPreviousAction","checkUserHandleEvent","onUserHandleMouseLeave","eventName","onUserHandleMouseUp","onUserHandleMouseEnter","onUserHandleMouseDown","userHandleObject","isScrolling","preventDefault","oldSelectedObjects","checkEditBoxAsTarget","updatePortVisibility","hoverElement","button","buttons","getMouseEventArgs","textEditing","endEdit","sourceElement","findElementUnderMouse","findActionToBeDone","getTool","initialEventArgs","touchStartList","mouseMoveExtend","canAutoScroll","checkAutoScroll","hoverNode","checkAction","isSwimlaneElements","drawRulerMarkers","touchMoveList","content_1","openOn","elementLeave","canResetElement","elementEnter","mouseEvents","getConnectorPadding","Interactions","autoScrollPosition","startAutoScroll","clearInterval","timeOutValue","diagram_1","doAutoScroll","previousSelectedObject","removeConstraints","detail","which","isMultipleSelect","PreventClearSelection","canPreventClearSelection","history_1","updateContainerProperties","addUmlNode","updateContainerBounds","checkMenu","userAgent","contextMenuModule","contextMenu","hasStack","updateSelectedNodeProperties","renderSelector","click","getBlazorClickEventArgs","targetObject","selectedConnector","ConnectToNearByPort","connectionPadding","addSwimLaneObject","selectedNode","swimlaneNode","canInsert","actualShape","clearSelectorLayer","addPhases","addLanes","swimLaneobj","marker","markers","removeRulerMarkers","blazorActions","interaction","up","wheelDelta","isTriggerEvent","activeLabel","startTextEdit","keyDown","keyCode","keycode","gesture","keyModifiers","altKey","altKeyPressed","shiftKeyPressed","ctrlKeyPressed","keyDownEventArgs","KeyboardEvent","parameter","droppable","draggable","addConstraints","commandExecute","getKeyModifier","getlabel","Control","Shift","Alt","Meta","keyUp","movingPosition","autoScrollBorder","delay","autoScroll","targets","mouseEnter","getBlazorCollectionObject","lastObjectUnderMouse","elementOver","isPrivateTooltip","canEnableToolTip","keyModifier","scrolled","updateScrollOffset","doubleClick","getObjectLayer","lock","itemClick","actualTarget","inputChange","fontsize","textWrapper","textBounds","transforms","editTextBox","editTextBoxDiv","isAddTextNode","focusOut","textAnnotationConnectors","findTargetObjectUnderMouse","currentConnector","ConnectToNearByNode","resetTool","findElementUnderSelectedItem","findTargetUnderMouse","isAfterMouseUp","boundsUpdate","isChangeProperties","hasGroup","history","laneId","firstlane","updateContainerPropertiesExtend","realActions","EnableGroupAction","updateLaneChildNode","innerNode","actions","layerTarger","endPadding","layerObjTable","objArray_1","spatialSearch","findObjects","pointInBounds","actualTarget_1","portElement","eventArg","eventHandler","findTargetElement","portElement_2","objj1","portElement_1","selected","Layer","objectZIndex","zIndexTable","CommandHandler","newSelectedObjects","connectorsTable","processTable","parentTable","layoutAnimateModule","backup","pointerEvents","toolName","duration","openDelay","closeDelay","setTooltipTemplate","ToolTip","newChanges","oldChanges","connectionEnd","dragOverArg","dragOver","returnargs","checkBlazor","insertValue","connectionEventChange","connectedNode","argsTarget","connection","transaction","success","failure","portEnd","clonedNode","annotationNode","annotationObj","checkAndRemoveAnnotations","refreshCanvasLayers","addTextAnnotation","oldNodeId","oldPortId","cut","undoRedoModule","clipObject","copyObjects","UpdateBlazorDiagramModelLayers","updatedModel","methodName","diagramobj","updateBlazorProperties","addLayer","isClone","layerZIndexTable","activeLayer","objectName","layerName","removeLayer","layerId","layerObject","moveObjects","targetLayer","setActiveLayer","targerNodes","objects_1","cloneLayer","cloneObject_1","newlayer","paste","copy","copyProcesses","tempNode","connectorsList","selectedItems_1","sortByZIndex","processes_1","protectedChange","Group","unGroup","removePorts","removeLabels","removeNode","copiedItems","getNewObject","multiSelect","objectTable","keyTable","copiedItems_1","copiedObject","isServerUpdate","clonedObj","cloneConnector","newNode","edges_1","edge","newConnector","edges_2","UpdateBlazorDiagramModelCollection","newobjs","translateObject","groupnodeID","process","checkAnnotation","cloneGroup","cloneSubProcesses","currentAnnotation","innerChild","addProcess","connector_1","connectorTable","newChildren","connectorObj","oldID","childObj","oldProtectPropertyChangeValue","getProtectPropertyChangeValue","enable","updateArgsObject","argValue","updateSelectionChangeEventArgs","argOldValue","argNewValue","multipleSelection","canDoMultipleSelection","canDoSingleSelection","selectionChange","findParent","selectGroup","selectProcesses","selectBpmnSubProcesses","updateBlazorSelectorModel","hasProcesses","preventUpdate","hasLayer","getObjectCollectionId","oldItemsCollection","oldItems","newItems","updateDiagramCollection","objArray","selectormodel","getChildElements","moveSvgNode","diagramDiv","backNode","sendLayerBackward","currentLayerObject","currentLayerObject_1","bringLayerForward","targetLayerObjects_1","sendToBack","layerNum","updateNativeNodeIndex","bringToFront","tabelLength","diagramLayer","lastChildNode","nextSibling","nodeArray","sortID","orderCommands","isRedo","sendBackward","sendForward","startZIndex","endZIndex","layerIndex","undoObject_1","layer_2","moveObject","layer_3","sourceId","targetId","intersectArray","temp_1","overlapObject","currentObject","temp_2","redo","historyEntry","temp_3","temp_4","initSelectorWrapper","clearSelectionRectangle","selArray","rubberArray","getNodesConnectors","rubberBandSelectionMode","checkBezierThumb","dragSourceEnd","dragTargetEnd","isObjectInteraction","canEnableBlazorObject","updateLayerObject","getDiagramOldValues","oldNodeObject","oldConnectorObject","getObjectChanges","previousObject","changedNodes","triggerAction","isTriggered","selectNodes","selectedNodes","selectedConnectors","highlighter","symbolDrag","parentObject","isGroupDragging","updateInnerParentProperties","hasEnds","connectorSegmentChange","existingInnerBounds","isRotate","segmentChange","secondSegment","isDragSource","changeSegmentLength","sequence","updatePathElementOffset","translateBezierPoints","AnimationClick","second","secPoint","nextDirection","changeSourceEndToNode","changeSourceEndToPort","segValues1","isTerminal","changeTerminal","sourcePoint2","boundaryConstraints","segmentNumber","pivotValue","rotateObjects","includeParent","objects_2","getChildrenBound","updateSubProcessess","getChildren","rotatePoints","SnapToLines","innerParents","isOutsideBoundary","refWrapper","scaleObject","updateGroupOffset","innerParent","parentNodes","isResize","oldleft","oldtop","parent_3","scaleConnector","changedvalues","getPortChanges","getAnnotationChanges","updatePathAnnotationOffset","intersectingOffset","pointLength","totalLength","intersetingPts","getInterceptWithSegment","dragLimit","minDistance","getRelativeOffset","updateLabelMargin","dragLimitValue","tempPt","contentDimension","curZoomfactor","annotationWrtapper","draggableBounds","line1","lineIntersects_1","boundsInterSects","cursorLimit","polyLine","self","polyLine2","polyLine1","pre","found","deg","conPoints","tarAngle","srcAngle","maxLength","intercepts","imgLine","segemnt","angleAdd","labelWrapper","newMat","offsetx","offsety","selectorBounds","top_2","PreventZIndexOnDragging","DragUsingMouse","preventNodesUpdate","PreventIconsUpdate","view","refreshCanvasDiagramLayer","expandNode","expand","preventConnectorsUpdate","fixedNode","enableAnimation","organizationalChartModule","isAnimation","doLayout","expandStateChange","resetSegments","getparentexpand","boolean","previousNode","previousNodeObject","previousConnectorObject","updateNodeObject","updateConnectorObject","changeNodes","changeConnectors","newTarget","oldTarget","nodeCollection","removeChildFromBPMN","targetNodes","connectHighlighter","tgt","tgtWrap","towardsLeft","towardsTop","SnapToObject","removeGuidelines","dropBPMNchild","objectBounds","storeObject","distribute","top_3","btt","undoSelectorObj","redoSelectorObj","sameSize","selectorObject","scrollX","scrollY","panx","PanX","canPanX","pany","PanY","canPanY","pan","clearHighlighter","child_1","DiagramScroller","oldCollectionObjects","removeCollection","vPortWidth","vPortHeight","currentZoomFActor","hScrollSize","vScrollSize","hScrollbarMoved","vScrollbarMoved","updateScrollOffsets","pageBounds","getPageBounds","setOffset","setScrollOffset","viewWidth","viewHeight","newX","actualRight","currentRight","newY","actualBottom","currentBottom","getObjects","coll1","coll2","isExist","virtualizeElements","oObjects","oObjectsID","newObjects","removeObjects","updateVirtualObjects","scrollerWidth","oldWidth","diagramWidth","oldHeight","diagramHeight","overflow","hasPadding","negwidth","negheight","multiplePage","origin","scrollpadding","getPageBreak","widthCount","heightCount","factor","deltaX","deltaY","Zoom","canZoom","canPan","minZoom","maxZoom","targetMatrix","applyScrollLimit","fitToPage","canZoomIn","customBounds","zoomFactor","bringIntoView","hoffset","voffset","bringToCenter","actualbounds","scrollLimit","scrollableBounds","scrollableArea","allowedRight","allowed","allowedBottom","Quad","spatialSearching","findQuads","currentViewPort","quads","isIntersect","third","fourth","selectQuad","quadSet","getQuad","halfWidth","halfHeight","xCenter","yCenter","childRight","childBottom","newQuad","childTop","childLeft","isContained","addIntoAQuad","quadAddition","setCurrentNode","quad","isAdded","parentQuad","newParent","isempty","newWidth","newHeight","SpatialSearch","quadSize","pageLeft","pageRight","pageTop","pageBottom","quadTable","objectIndex","updateQuad","nodBounds","isWithinPageBounds","leftElement","topElement","rightElement","bottomElement","modified","findLeft","findTop","findBottom","findRight","quads_1","originX","originY","SerializationSettings","CustomCursorAction","oldDiagramObject","groupTable","isGroup","callBlazorModel","selectionConnectorsList","changedConnectorCollection","changedNodesCollection","previousNodeCollection","previousConnectorCollection","crudDeleteNodes","diagramid","renderTimer","canCloneObject","dataSource","ignoreCollectionWatch","updateAnnotationText","defaultConnector","defaultPropChanges","bulkChanges","join","callFromServer","isOutEdge","loadDiagram","clearCollection","isConnector","clearObjects","isPropertyChanged","refreshLayout","refereshColelction","Render","updateView","changedProp","excludeFromLayout","propertyChange","updateBridging","intOffPageBackground","validatePageSize","updatePage","updateSnapSettings","initCommands","initObjects","updateRulerSettings","updateLayer","updateScrollSettings","locale","PreventDataInit","showCustomMenuOnly","show","items","_h","_j","canLogChange","modelChanged","resetDiagramActions","scrollAlone","_k","_l","updateHtmlLayer","resetTemplate","renderRulers","initializePrivateVariables","isProtectedOnChange","serviceLocator","initializeServices","setCulture","initDiagram","initViews","defaultLocale","Copy","Cut","Paste","Undo","Redo","SelectAll","Grouping","UnGroup","Order","BringToFront","MoveForward","SendToBack","SendBackward","layerZIndex","pathTable","localeObj","L10n","collapsedNode","changedConnectors","blazorInterop","blazor","crudAction","read","renderInitialCrud","initHistory","initLayers","initializeDiagramLayers","isLayout","lineRouting","renderPageBreaks","isDevice","updateTemplate","updateFitToPage","fitOptions","canFit","pathAnnotation","updateBlazorTemplate","htmlNode","templateAnnotation","resetBlazorTemplate","tempObj","Ajax","onSuccess","dataManager","send","connectionDataSource","requiredModules","modules","tooltipelement","startEvent","touchStartEvent","stopEvent","touchEndEvent","moveEvent","touchMoveEvent","cancelEvent","isPointer","isIE11Pointer","wheelEvent","EventHandler","initDroppables","selectAll","getObjectsOfLayer","updateViewPort","getZoomingAttribute","updateBlazorDiagramProperties","cutCommand","removeProcess","pasteCommand","copyCommand","insertBlazorDiagramObjects","layerObjectUpdate","leyerObject","moveForward","getNodeObject","getConnectorObject","getActiveLayer","nudgeCommand","nudge","updateAnnotationDrag","updateConnectorProperties","getCustomTool","active","getCustomCursor","customCursor","historyChangeTrigger","addCustomHistoryEntry","sourceValue","historyChange","undo","getBlazorDiagramObjects","PublicMethod","canCall","focusedPoint","zoomTo","updateEventValue","addNodeToLane","hideTooltip","addNode","addChildToGroup","getHistoryStack","isUndoStack","undoStack","redoStack","stackLimit","getEdges","getParentId","addConnector","multiSelectDelete","removalIndexCollection","updatedModelCollection","connectorModelCollection","removalIndex","objectTypeCollection","dgmObj","nodeObj","ObjectType","isMultipleObjects","annotationIndex","UpdateBlazorDiagramModel","annotationNodeIndex","Clear","addBlazorDiagramObjects","nodesCollection","connectorCollection","dataBindingModule","removeNodeEdges","isOutEdges","PreventCollectionChangeOnDragOver","updateEdges","getTextAnnotationConn","initConnectors","updateDocks","updateBlazorCollectionChange","PreventHistory","updateSvgNodes","updateTextElementValue","updateProcesses","moveNode","isAdding","processes_2","addAnnotation","spliceConnectorEdges","objIndex","removeElement_1","nodeIndex","removeCommand","removeSwimLane","Delete","canDelete","isStackChild","deleteGroup","removeBpmnProcesses","updateNodeEdges","parentnode","check","isstack","updateStackProperty","startEditCommad","bpmnAnnotation","getTextAnnotationWrapper","addLabels","enumValue","enableReadOnly","textArea","toLocaleLowerCase","lineHeight","focusOutEdit","updateNodeExpand","updateConnectorAnnotation","annotationWrapper","removeChildrenFromLayout","propChange","viewPort","updateLayout","rootNode","mindMapChartModule","root","radialTreeModule","symmetricalLayoutModule","maxIteration","springLength","springFactor","complexHierarchicalTreeModule","getLayoutNodesCollection","updatedNodes","updatedNodes_1","updateIcon","updateDefaultLayoutIcons","saveDiagram","getDiagramContent","styleSheets","printandExportModule","exportImage","exportImages","printImage","printOptions","setStackLimit","applyLimit","clearHistory","getDiagramBounds","exportDiagram","print","addPorts","constraintsType","constraintsValue","addNodeLabels","labels","addConnectorLabels","removelabelExtension","removePortsExtenion","real","overlap","renderOverlapElement","tabindex","renderBackgroundLayer","commonStyle","bgLayer","createSvg","backgroundImage","renderGridLayer","svgGridSvg","renderDiagramLayer","diagramLayerDiv","diagramSvg","transformationLayer","scrollerSize","outer","widthNoScroll","inner","widthWithScroll","getScrollerWidth","renderHTMLLayer","renderPortsExpandLayer","renderNativeLayer","renderAdornerLayer","svgAdornerSvg","svgSelector","svgPortsSvg","svgPortsLayer","svgExpandLayer","htmlLayerDiv","nativeLayerSvg","svgObj","updateBazorShape","isLoad","initData","initLayerObjects","hasLayers","tempTabel","bpmnTable","groups","addToLayer","initNodes","_m","groups_1","_o","connectors_1","_p","_q","obj_2","_r","_s","obj_3","setZIndex","layerObject_1","hPan","vPan","VerticalOffset","HorizontalOffset","ViewportHeight","ViewportWidth","CurrentZoom","scrollChange","generateData","url","initSource","makeData","fields","sourcePointX","sourcePointY","targetPointX","targetPointY","customFields","independentObj","currentLayer","initObjectExtend","getDefaults","defaults","initNode","getConnectedPort","findInOutConnectPorts","getEndNodeWrapper","isWidth","PreventDrag","updateDefaultLayoutIcon","iconWrapper","isUpdateSize","node1","PreventScale","portContainer","childCollection","onLoadImageSize","bind","updateChildPosition","onImageLoad","newCommands","C","V","delete","A","Z","Y","nudgeUp","Up","nudgeRight","Right","nudgeDown","Down","nudgeLeft","Left","startEdit","F2","endEditCommand","Escape","focusToNextItem","Tab","focusToPreviousItem","selectFocusedItem","Enter","initCommandManager","overrideCommands","newCommand","updateIconVisibility","updateDiagramContainerVisibility","isInEdges","portEdges","refreshDiagram","isRootInverse","isProtectedChange","renderDocument","renderNodes","updateCanupdateStyle","getZindexPosition","canIgnoreIndex","isUpdateObject","updateGridContainer","objectArray","objectArray_1","refreshSvgDiagramLayer","view_1","renderBasicElement","refreshElements","isDestroyed","clearCanvas","setTransform","renderDiagramElements","transformOrigin","inverse","changed","clearIntervalVal","tCollection","fromExport","isOverView","renderNode","transformValue","verticalValue","status_1","bridgingModule","pathSegment","clearRect","getPortLayerSvg","adornerSVG","gridLayer","removePageBreaks","backgroundLayer","showPageBreaks","setOverview","overview","updateThumbConstraints","canInitialize","hideRotate","hideResize","thumbConstraints","isSwimLane","isProtectedOnChangeValue","selectorElement","renderSelectorForAnnotation","selectorEle","stackPanel","symbolBorder","selectionRect","getPortContainer","containsMargin","annotation_1","phaseHeader","textEdit","getBlazorTextEditArgs","isBpmnTextAnnotation","updateTextAnnotationContent","nodeAnnotation","connectorAnnotation","isAction","tempNode_1","updateObject","oldNode","actualSourcePoint","actualTargetPoint","nodePropertyChangeExtend","updateShadow","swimLaneNodePropertyChange","oldShape","oldObjects","newLane","childNodeIndex","node_1","id_1","oldSelectConstraints","newSelectConstraints","node_2","existingBounds","offsetX_1","updateFlipOffset","offsetY_1","updatePorts","updateMargin","updateBPMN","updateUMLActivity","actualPort","updatePort","updateTextAnnotationProp","checkSelectedItem","parent_4","updateGroupSize","portWrapper","connectorProprtyChangeExtend","updateBPMNConnector","disableBridging","removePortEdges","oldSource","updateAnnotations","triggerPropertyChange","getpropertyChangeArgs","isInconnect","updateNodeProperty","selItems","canUpdateSize","updateAnnotationContent","updateAnnotationWrapper","String","iconRect","iconShape","nodeShadow","changedShadow","entryTable","Droppable","over","dragDataHelper","dragData","helper","selectedSymbol","paletteId","getAttribute","nodeDragSize","nodePreviewSize","paletteDragSize","ej2_instances","selectedSymbols","dragSize","previewSize","palettePreview","getBlazorDragEventArgs","dragEnter","swimLaneObj","child1","child2","findChild","getDropEventArgs","removeChildInNodes","addChildNodes","droppedElement","out","args_1","getBlazorDragLeaveEventArgs","dragLeave","moveObjectsUp","insertData","crudOperation","getNewUpdateNodes","updateData","removeData","getDeletedNodes","crud","getNodesCollection","parameterMap","raiseAjaxPost","processCrudCollection","nodeCrudAction","connectorCrudAction","mappingObj","name_1","Event","PrintAndExport","fileType","buffers","fileName","format","setCanvas","diagramAsSvg","buffer","XMLSerializer","serializeToString","blob","Blob","msSaveOrOpenBlob","pom","download","URL","createObjectURL","createEvent","initMouseEvent","dispatchEvent","setScaleValueforCanvas","diagramAsCanvas","scaleOffsetX","scaleOffsetY","toDataURL","canvasMultiplePage","images","pageHeight","pageWidth","pageOrientation","img_1","getMultipleImage","image1","replace","byteString","atob","ArrayBuffer","intArray","Uint8Array","charCodeAt","_loop_1","htmlElement_1","urlLink","mouseEvent_1","getObjectsBound","nodebounds","backimage","backRect","diagramLayerSVG","bgColor","context","bgImg","proportionX","proportionY","exportable","isImageExportable","proportion","brColor","brWidth","strokeRect","updateObjectValue","updateWrapper","getPrintCanvasStyle","img","imageArray","pageSize","mLeft","mTop","mRight","mBottom","drawnX","drawnY","imgHeight","imgWidth","pageWidth_1","pageHeight_1","pageSize_1","innerDiv","printImages","printWind","write","scrollerX","scrollerY","oldZoom","oldHorizontalOffset","oldVerticalOffset","snapConstraints","ShowLines","styleSheetRef","htmlData","DataBinding","dataTable","json","applyDataSource","mapper","DataManager","query","defaultQuery","Query","executeQuery","firstNode","nextLevel","rootNodes","updateMultipleRootNodes","applyNodeTemplate","renderChildNodes","parents","nodeModel","dataMapSettings","arrayProperty","innerProperty","splitString","field","rtNodes","canBreak","containsConnector","applyConnectorTemplate","sNode","tNode","connModel","menuClass","grouping","order","DiagramContextMenu","service","defaultItems","disableItems","hiddenItems","localeText","setLocaleKey","addEventListener","on","removeEventListener","off","l10n","Menu","getMenuItems","enableRtl","enablePersistence","contextMenuItemClick","contextMenuBeforeOpen","onOpen","beforeItemRender","BeforeItemRender","onClose","contextMenuOnClose","animationSettings","menuItems","orderItems","groupItems","getDefaultItems","buildDefaultItems","orderGroup","customItem","isOpen","getKeyFromId","updateItemStatus","getLocaleText","getConstant","showItems","enableItems","ensureItems","ensureTarget","diagramArgs","newItem","hidden","contextItems","hideItems","selectedLength","canUndo","canRedo","generateID","menuItem","iconCss","bringToFrontOrder","moveForwardOrder","sendToBackOrder","sendBackwardOrder","BpmnDiagrams","annotationObjects","getSize","getBPMNEventShape","getBPMNGatewayShape","getBPMNDataObjectShape","getBPMNShapes","getBPMNActivityShape","renderBPMNTextAnnotation","getBPMNTextAnnotation","bpmnShapeData","gatewayshape","gatewayNode","gatewayTypeNode","gatewayTypeNodeShapeData","shapeType","gateway","setSizeForBPMNGateway","dataObjectshape","dataObject","dataobjNode","dataobjTypeNode","dataobjCollectionNode","getBPMNTaskShape","task","taskShapes","taskNode","childCount","getTaskChildCount","childSpace","area","taskTypeNodeData","taskTypeNode","taskTypeNodeService","childNode2data","loopType","loop","taskLoopNode","taskCompNode","getBPMNCompensationShape","compensation","subEvent","sub","eventshape","shapeEvent","shapeActivity","innerEvtNode","outerEvtNode","triggerNode","triggerNodeData","setSizeForBPMNEvents","setEventVisibility","setSubProcessVisibility","eventLength","events","elementWrapper","adhoc","getBPMNSubProcessShape","subProcessShapes","subprocessAdhoc","subProcessLoopShapes","subChildCount","getSubprocessChildCount","subprocessNode","getBPMNSubProcessTransaction","collapsedShape","getBPMNSubEvent","getBPMNSubProcessLoopShape","subChildSpace","boundary","getBPMNAdhocShape","subprocessComp","eventContainer","getBPMNSubprocessEvent","shapeWidth","shapeHeight","innerRect","transactionEvents","subprocessLoopData","subprocessLoop","redoElement","sources","processTable_1","processIndex","excludeChild","compensationNode","subProcessEventsShapes","annot","adhocNode","annotationContainer","annotationPath","setAnnotationPath","annotationConnector","annotationsContainer","textObject","annotationObject","bpmnShapeContent","clearAnnotations","removeAnnotationObjects","nodeContent","getAnnotationPathAngle","parentNodeId","newShape","sizeChanged","updateBPMNGateway","updateBPMNDataObject","updateBPMNActivity","updateBPMNEvent","updateBPMNStyle","bpmnshapeGatewaydata","elementWrapperChild1","elementWrapperChild2","setSizeForBPMNDataObjects","getEvent","child0","updateEventVisibility","event_1","elementWrapperChild0","updateBPMNEventTrigger","bpmnshapeTriggerdata","actualObjectProp","updateBPMNActivityTask","updateBPMNActivityTaskLoop","updateBPMNActivitySubProcess","setSizeForBPMNActivity","bpmnshapeTaskdata","bpmnshapeLoopdata","updateChildMargin","updateBPMNSubProcessEvent","updateBPMNSubProcessAdhoc","updateBPMNSubProcessBoundary","updateBPMNSubProcessCollapsed","updateBPMNSubProcessCompensation","updateBPMNSubProcessLoop","updateBPMNSubProcessTransaction","eventIndex","eventWrapper","actualEvent","updateBPMNSubEvent","newEvent","eventType","getEventSize","wrapperChild","currentNode","flowType","getSequence","association","getAssociation","message","getMessage","offLength","eventNode","Message","SubProcess","Timer","Error","Escalation","Cancel","Compensation","Conditional","Link","Signal","Terminate","Multiple","Parallel","Exclusive","Inclusive","EventBased","ExclusiveEventBased","ParallelEventBased","Service","Receive","Send","InstantiatingReceive","Manual","BusinessRule","User","Script","Standard","ParallelMultiInstance","SequenceMultiInstance","ConnectorBridging","lastBridge","Bridging","InheritBridging","canBridge","points1","bridgeSpacing","bridgeSpace","bgedir","q","connector1","points2","intersectsRect","intersectPts","getLengthAtFractionPoint","lengthFractionIndex","fullLength","stBridge","enBridge","angleCalculation","fix","lengthCalculation","var1","insertAt","arcSeg","paths","createSegment","bridgeStartPoint","arcs","bgseg","stPoints","firstBridge","bridgeList","subBridge","createBridgeSegment","sweepDirection","startPt","endPt","angle1","zOrder","inter1","checkForHorizontalLine","roundedAngle","pointAt","confirm","lengthAtFractionPt","previouspt2","suspect","getSlope","delX","delY","lhs","rhs","isFinite","xDiff","yDiff","Snapping","delta","horizontallysnapped","verticallysnapped","snapObject","roundedRight","roundedLeft","roundedTop","roundedBottom","currentright","currentbottom","SnapToVerticalLines","SnapToHorizontalLines","cutoff","bal","horizontalSnap","verticalSnap","ended","lengthY","hTarget","vTarget","lengthX","objectsAtLeft","objectsAtRight","objectsAtTop","objectsAtBottom","snapObjDistance","snapObjectDistance","hIntersectRect","vIntersectRect","targetBounds","findNodes","canBeTarget","canConsider","createSnapObject","createGuidelines","createHSpacingLines","createVSpacingLines","snapSize","sameWidth","sameHeight","hintersectedrect","vintersectedrect","nodesInView","targetBounds_1","targetBounds_2","difference","actualDiff","addSameWidthLines","addSameHeightLines","initialBoundsT","actualTop","initialBound","initialBoundsB","actualLeft","initialRect","renderAlignmentLines","sortByDistance","nearestleft","nearestright","equaldistance","equallySpaced","findEquallySpacedNodesAtLeft","adjustablevalue","findEquallySpacedNodesAtRight","addHSpacingLines","deltaHorizontal","nearesttop","nearestbottom","findEquallySpacedNodesAtTop","findEquallySpacedNodesAtBottom","addVSpacingLines","deltaVertical","crnt","renderSpacingLines","equallySpacedObjects","sameWidths","sameSizes","sameHeights","snap","nd","ascending","equalDistance","prevBounds","actualDistance","groupUndo","historyCount","groupCount","Function","canLog","setEntryLimit","getHistoryList","limitHistory","limitHistoryStack","hList","removeFromStack","entyList","getUndoEntry","endGroupActionCount","undoEntry","undoGroupAction","entryType","getHistoryChangeEvent","blazorHistoryEntryType","historyStateChange","shapeAnnotation","pointPortModel","currEntry","getHistroyObject","recordPositionChanged","recordSizeChanged","recordRotationChanged","recordConnectionChanged","recordPropertyChanged","recordCollectionChanged","recordLabelCollectionChanged","recordPortCollectionChanged","recordSegmentChanged","recordPortChanged","recordAnnotationChanged","recordChildCollectionChanged","recordStackPositionChanged","recordGridSizeChanged","recordLanePositionChanged","recordLaneOrPhaseCollectionChanged","recordOrderCommandChanged","checkNodeObject","getnodeDefaults","updateSelection","undoNode_1","knownNode","ignoreProperty","getProperty","oldElement","undoChanges","isRow","segmentChanged","positionChanged","connectionChanged","selectorObj","rotationChanged","getRedoEntry","startGroupActionCount","redoGroupAction","redovalue","entryCurrent","LayoutAnimation","setIntervalObject","layoutAnimation","opacity_1","setIntervalObjects_1","updateOpacity","objValue","layoutTimer","stop","differenceX","differenceY","animationComplete","gridCollection","startArray","targetGridCollection","sourceGridCollection","considerWalkable","isUpdate","extraBounds","diagramStartX","diagramStartY","noOfRows","noOfCols","gridX","gridY","walkable","tested","updateNodesInVirtualRegion","diagramNodes","rectangle","intersectRect","findEndPoint","isPortBounds","portDirection","startNode","sourceTop","sourceBottom","sourceLeft","sourceRight","targetRight","targetTop","targetBottom","targetLeft","InheritLineRouting","canEnableRouting","startGrid","targetGrid","previousDistance","afterDistance","totalDistance","findEdgeBoundary","checkObstacles","startGridNode","getIntermediatePoints","updateConnectorSegments","portID","neigbours","findNearestNeigbours","resetGridColl","neigbour","currentdirection","prevDirection","lastSeg","intermediatePoint","findIntermediatePoints","octile","manhattan","sorting","tmp","SQRT2","dx","isWalkable","nearGrid","grid_1","isparent","neigbourGridX","neigbourGridY","startGridX","startGridY","endGridX","endGridY","neigbourGrid","HierarchicalTree","layoutProp","viewport","uniqueId","anchorX","anchorY","firstLevelNodes","centerNode","levels","maxLevel","graphNodes","horizontalSpacing","verticalSpacing","setUpLayoutInfo","tree","updateTree","rootInfo","updateAnchor","updateNodes","updateConnectors","level","dontupdate","dimensions","lev","hasChild","getDimensions","treeBounds","levelBounds","asstBounds","setDepthSpaceForAssitants","updateHorizontalTreeWithMultipleRows","updateVerticalTree","updateHorizontalTree","setBreadthSpaceForAssistants","canMoveBy","treeWidth","translateInfo","shapeBounds","dim","translateSubTree","subTreeTranslation","updateLeafNode","enableRouting","asstDif","firstChildInfo","findIntersectingLevels","actualLevel","treeIntersect","spaceLeftFromPrevSubTree","translated","shiftSubordinates","rBounds","updateRearBounds","bnds","lastLevel","isLastLeaf","findLevel","vSpace","asstHeight","asstElement","asst","asstWidth","uniteRects","shape1","childWidth","childHeight","actBounds","oldActBounds","childInfo","canMoveValue","translateSibilingsBy","leftCenter","rightCenter","minTranslation","splitChildrenInRows","unique","leftTree","rightTree","splitRows","treeInfo","rightMost","updateLeftTree","rightX","rightBounds","alignRowsToCenter","leftBounds","centered","centerObjct","childDimension","centeredX","centeredY","updateRearBoundsOfTree","childBnds","half","dontUpdate","oddBounds","evenBounds","oddLevels","findOffset","canMoveBy_1","extend","dummy","treeType","dif","intersectingLevels","getParentNode","depth","layoutBounds","mod","yValue","viewPortBounds","visited","getConnectorSegments","get3Points","updateSegmentsForHorizontalOrientation","updateSegmentsForBalancedTree","get5Points","relative","getSegmentsForMultipleRows","startingPoint","getSegmentsFromPoints","point_1","MindMap","isRoot","checkRoot","fistLevelNodes","findFirstLevelNodes","leftNodes","rightNodes","getMindmapBranch","fistLevelNodes_1","branch","updateMindMapBranch","nodes_2","excludeNodes","newCollection","exclude","newCollection_1","outEdge","RadialTree","layoutNodes","depthFirstAllignment","populateLevels","transformToCircleLayout","nodeInfo","segmentOffset","stages","full","newlevel","filter","nodeInfo1","nodeInfo2","actualCircumference","circumference","GraphForceNode","gnNode","velocityX","velocityY","graphNode","applyChanges","SymmetricLayout","cdCOEF","cfMAXVELOCITY","cnMAXITERACTION","cnSPRINGLENGTH","mszMaxForceVelocity","doGraphLayout","graphLayoutManager","graph","Bounds","getModelBounds","lstGraphNodes","GraphNodes","lstNodes","convertGraphNodes","preLayoutNodes","nLenght","makeSymmetricLayout","appendForces","resetGraphPosition","rcBounds","fMaxSize","ptCenter","dRotateAngle","dAngle","getForceNode","forceNode","gnChild","calcNodesForce","vtx1","vtx2","normalDistance","calcRelatesForce","updateNeigbour","gfnNode","ptPoint","szMin","ptLocation","lstToReturn","keys_1","tag","vtSource","vtTarget","pointDistance","lineAngle","calcForce","radians","vx","vy","atan","symmetricLayout","GraphLayoutManager","minDist","fOffset","visitedStack","cycleEdgesCollection","graphObjects","passedNodes","selectionList","mhelperSelectedNode","nodeCollection_1","nodeGraphObject","graphType","connectorGraphObject","updateLayout1","modelBounds","trnsX","lNodes","nodesToLayout","detectCyclesInGraph","nodesCount","cycleConnColln","nodeSymbols","isCycleEdge","dictionaryLength","getNodesToPosition","nodeGraph","exploreGraphEdge","isConnectedToAnotherNode","LeftMargin","TopMargin","selectConnectedNodes","nodeName","dictionaryContains","Added","getConnectedRelatives","exploreRelatives","addGraphNode","exploreRelatives1","relativesToExplore","fromNode","toNode","getConnectedParents","getConnectedChildren","gnNodeChildren","setNode","findNode","nIndex","fullName","nLength","nodeHelper","bFoundConnectedNode","searchEdgeCollection","edgesToSearchThrough","connectionDirection","nodeLink","nodeToAdd","collectionToAdd","vertex","currentStack","getUnVisitedChildNodes","currentEdge","con","ComplexHierarchicalTree","HierarchicalLayoutUtil","crossReduction","CrossReduction","createVertex","geometry","findRoots","vertices","roots","best","maxDiff","conns","getVisibleTerminal","terminalCache","traverse","directed","currentComp","hierarchyVertices","filledVertices","vertexID","edgeIsSource","netCount","isSource2","marginX","marginY","filledVertexSet","candidateRoots","vertexSet","limit","MultiParentModel","cycleStage","layeringStage","crossingStage","placementStage","clnode","dnode","isNodeOverLap","calculateRectValue","nodeRect","tempnode1","coordinateAssignment","widestRankValue","placementStageExecute","plalementChange","calculateWidestRank","lastRankMaxCellSize","rankSizes","rankOffset","rankValue","maxRank","maxCellSize","rank","ranks","localOffset","isVertex","numEdges","setXY","setTempVariable","widestRank","distanceToNextRank","minRank","isY","rankCoordinates","stage","maxOffset","initialCoords","facade","isAncestor","otherNode","hashCode","weightedCellSorter","weightedValue","rankIndex","minNode","nodeList","nodeWrapper","setDictionaryForSorter","maxTries","cellWrapper","shift","nextLayerConnectedCells","getConnectedCellsOnLayer","previousLayerConnectedCells","nextConnectedCount","prevConnectedCount","medianNextLevel","medianXValue","medianPreviousLevel","numConnectedNeighbours","getTempVariable","cellMedian","tempValue","leftCell","leftLimit","intraCellSpacing","rightCell","rightLimit","updateNodeList","connectedCell","connectedCellWrapper","getDictionaryForSorter","connectedCells","medianValues","medianPoint","jettyPositions","currentYDelta","currentXDelta","bestOffsetDelta","maxIterations","setCellLocations","getValues","vertexMapper","setVertexLocation","garphModelsetVertexLocation","realCell","positionX","positionY","initialRank","fixRanks","startNodes","internalNodes","getDictionaryValues","startNodesCopy","layerDeterminingEdges","internalNode","connectsAsTarget","edgesToBeMarked","connectsAsSource","allEdgesScanned","minimumLayer","internalEdge","removedCell","currentMaxLayer","seenNodes","unseenNodesArray","unseenNodes","rootsArray","modelRoots","getDictionary","visit","seenNodesCopy","invert","connectingEdge","isReversed","getEdgesBetween","trg","dlayout","multiObjectIdentityCounter","dfsCount","hierarchicalUtil","internalVertices","hierarchicalLayout","createInternalCells","realEdges","realEdge","targetCell","internalTargetCell","setDictionary","undirectedEdges","directedEdges","ids","rankList","oldRootsArray","updateMinMaxRank","seen","dic","flag","layoutObjectId","visitor","dfsRoots","trackAncestors","extendedDfs","depthFirstSearch","rootId","updateConnectionRank","outgoingEdges","traversedList","removeConnectionEdge","cHash","hashCodeLength","transients","shallow","calculateCrossings","numRanks","totalCrossings","calculateRankCrossing","previousRank","tmpIndices","rankPosition","nodeIndices","otherCellRankPosition","indices","firstIndex","treeSize","treeIndex","nestedBestRanks","iterationsWithoutImprovement","currentBestCrossings","weightedMedian","candidateCrossings","iteration","downwardSweep","medianRank","isPrevious","connectedlayer","connectedAs","medianValue","arrayCount","leftMedian","rightMedian","numCellsForRank","reservedPositions","sorterEntry","nextLevelConnectedCells","nextRankValue","compare","Palette","SymbolDragSize","SymbolPreview","SymbolPalette","symbolTable","laneTable","isExpand","isExpandMode","isMethod","paletteid","clonedElement","sender","symbol","getSymbolPreview","enableSearch","createTextbox","accordionElement","title","expanded","isInteraction","collapse","expandMode","refreshPalettes","paletteElement","paletteobj","palette","accordionDiv","Accordion","isAllowDatabind","updatePalettes","measureElemnt","addPalettes","initSymbols","renderPalette","removePalette","removePalettes","symbolGroup","laneHeight","swimLaneShape","symbolHeight","symbolWidth","laneStyle","headerStyle","headerObj","addPaletteItem","prepareSymbol","group_1","paletteDiv","renderSymbols","paletteName","paletteSymbol","symbolPaletteGroup","param","getSymbolContainer","removePaletteItem","symbolId","symbolContainer","getSymbolTemplate","getContainer","symbolInfo","getSymbolInfo","actualWidth","actualHeight","symbolMargin","fit","scaleSymbol","getSymbolDescription","parentDiv","symbolPreviewWidth","symbolPreviewHeight","symbolPreview","measureAndArrangeSymbol","previewContainer","getHtmlSymbol","getGroupParent","updateSymbolSize","preview","getSymbolSize","HTMLCanvasElement","isPreview","offsetTop","offsetLeft","highlightedSymbol","srcElement","searchPalette","palette_1","timer","HTMLInputElement","oldSymbol","initDraggable","Draggable","dragTarget","dragStart","dragStop","cursorAt","bindEvents","dragElement","measureChild","scaleChildren","scaleGroup","childContainer","elements","removeElementsByClass","symGroup","searchDiv","textBox","placeholder","span","getFilterSymbol","ignoreSymbolsOnSearch","filterSymbols","createSearchPalette","symbolGroup_1","emptyDiv","addItem","Overview","actionName","prevPoint","viewPortRatio","overviewid","setParent","renderCanvas","oldparent","removeDocument","getDiagram","documentMouseUp","xlink","eWidth","eHeight","bRect","screenX","screenY","widthValue","innerWidth","heightValue","innerHeight","renderHtmlLayer","addOverviewRectPanel","htmlDiv","ovw","innerrect","renderOverviewCorner","transrect","updateOverviewRectangle","resizeDirection","updateHelper","difx_1","dify_1","updateOverviewrect","updateOverviewCorner","transattr","rectname","translateOverviewRectangle","offwidth","offheight","updateParentView","renderOverviewRect","viewwidth","viewheight","scrollOverviewRect","svgRect","scaled","delx","dely","diagramBoundsWidth","diagramBoundsHeight","transformWidth","transformHeight","webkitTransform","widthratio","heightratio","initHelper","stroke-dasharray","shape-rendering"],"mappings":"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"}